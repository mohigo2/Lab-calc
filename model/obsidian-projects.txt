├── .github
    ├── ISSUE_TEMPLATE
    │   ├── bug-report.yml
    │   └── feature-request.yml
    ├── release.yml
    └── workflows
    │   ├── ci.yml
    │   ├── release.yml
    │   └── stale.yml
├── .gitignore
├── .prettierignore
├── .prettierrc.json
├── CODE_OF_CONDUCT.md
├── CONTRIBUTING.md
├── LICENSE
├── README.md
├── css
    ├── config.scss
    ├── styles.scss
    └── views
    │   ├── _board.scss
    │   └── _gallery.scss
├── esbuild.config.mjs
├── eslint.config.mjs
├── images
    ├── dark.svg
    └── light.svg
├── jest.config.js
├── manifest-beta.json
├── manifest.json
├── obsidian-projects-types
    ├── .gitignore
    ├── README.md
    ├── index.ts
    ├── package.json
    └── tsconfig.json
├── package-lock.json
├── package.json
├── project.inlang
    ├── project_id
    └── settings.json
├── scripts
    └── generate-test-files.py
├── src
    ├── __mocks__
    │   └── obsidian.ts
    ├── customViewApi.ts
    ├── events.ts
    ├── global.d.ts
    ├── lib
    │   ├── dataApi.ts
    │   ├── dataframe
    │   │   ├── README.md
    │   │   └── dataframe.ts
    │   ├── datasources
    │   │   ├── README.md
    │   │   ├── dataview
    │   │   │   ├── datasource.ts
    │   │   │   ├── schema.ts
    │   │   │   └── standardize.ts
    │   │   ├── folder
    │   │   │   └── datasource.ts
    │   │   ├── frontmatter
    │   │   │   ├── datasource.ts
    │   │   │   ├── standardize.test.ts
    │   │   │   └── standardize.ts
    │   │   ├── helpers.test.ts
    │   │   ├── helpers.ts
    │   │   ├── index.ts
    │   │   └── tag
    │   │   │   └── datasource.ts
    │   ├── filesystem
    │   │   ├── README.md
    │   │   ├── filesystem.ts
    │   │   ├── inmem
    │   │   │   └── filesystem.ts
    │   │   └── obsidian
    │   │   │   └── filesystem.ts
    │   ├── helpers.ts
    │   ├── metadata
    │   │   ├── README.md
    │   │   ├── decode.test.ts
    │   │   ├── decode.ts
    │   │   ├── encode.test.ts
    │   │   ├── encode.ts
    │   │   └── index.ts
    │   ├── obsidian.ts
    │   ├── stores
    │   │   ├── README.md
    │   │   ├── api.ts
    │   │   ├── capabilities.ts
    │   │   ├── customViews.ts
    │   │   ├── dataframe.ts
    │   │   ├── events.ts
    │   │   ├── fileSystem.ts
    │   │   ├── i18n.ts
    │   │   ├── obsidian.ts
    │   │   ├── settings.ts
    │   │   └── translations
    │   │   │   ├── en.json
    │   │   │   ├── uk.json
    │   │   │   └── zh-CN.json
    │   ├── templates
    │   │   ├── README.md
    │   │   ├── interpolate.test.ts
    │   │   └── interpolate.ts
    │   └── viewApi.ts
    ├── main.ts
    ├── obsidianProjects.d.ts
    ├── settings
    │   ├── base
    │   │   └── settings.ts
    │   ├── settings.test.ts
    │   ├── settings.ts
    │   ├── v1
    │   │   ├── settings.test.ts
    │   │   └── settings.ts
    │   └── v2
    │   │   ├── settings.test.ts
    │   │   └── settings.ts
    ├── ui
    │   ├── app
    │   │   ├── App.svelte
    │   │   ├── DataFrameProvider.svelte
    │   │   ├── View.svelte
    │   │   ├── filterFunctions.ts
    │   │   ├── onboarding
    │   │   │   ├── Onboarding.svelte
    │   │   │   ├── TabContainer.svelte
    │   │   │   ├── demoProject.ts
    │   │   │   └── onboardingModal.ts
    │   │   ├── toolbar
    │   │   │   ├── ProjectSelect.svelte
    │   │   │   ├── ShadowViewItem.svelte
    │   │   │   ├── Toolbar.svelte
    │   │   │   ├── ViewItem.svelte
    │   │   │   ├── ViewSelect.svelte
    │   │   │   └── viewOptions
    │   │   │   │   ├── PopoverButton.svelte
    │   │   │   │   ├── ProjectViewOptions.svelte
    │   │   │   │   ├── color
    │   │   │   │       ├── ColorOptions.svelte
    │   │   │   │       ├── ColorOptionsButton.svelte
    │   │   │   │       └── helpers.ts
    │   │   │   │   ├── filter
    │   │   │   │       ├── FilterOptions.svelte
    │   │   │   │       ├── FilterOptionsButton.svelte
    │   │   │   │       └── helpers.ts
    │   │   │   │   ├── helpers.ts
    │   │   │   │   └── sort
    │   │   │   │       ├── SortOptions.svelte
    │   │   │   │       ├── SortOptionsButton.svelte
    │   │   │   │       └── helpers.ts
    │   │   ├── useView.ts
    │   │   ├── viewSort.test.ts
    │   │   └── viewSort.ts
    │   ├── components
    │   │   ├── Accordion
    │   │   │   ├── Accordion.svelte
    │   │   │   ├── AccordionItem.svelte
    │   │   │   └── index.ts
    │   │   ├── Box
    │   │   │   ├── Box.svelte
    │   │   │   └── index.ts
    │   │   ├── CardMetadata
    │   │   │   ├── CardMetadata.svelte
    │   │   │   ├── Checkbox.svelte
    │   │   │   ├── Date.svelte
    │   │   │   ├── Datetime.svelte
    │   │   │   ├── Number.svelte
    │   │   │   ├── Tags.svelte
    │   │   │   └── Text.svelte
    │   │   ├── ColorItem
    │   │   │   └── ColorItem.svelte
    │   │   ├── DateInput.svelte
    │   │   ├── DatetimeInput.svelte
    │   │   ├── Field
    │   │   │   ├── Field.svelte
    │   │   │   └── index.ts
    │   │   ├── FieldControl
    │   │   │   ├── FieldControl.svelte
    │   │   │   └── index.ts
    │   │   ├── FileListInput
    │   │   │   ├── FileListInput.svelte
    │   │   │   └── index.ts
    │   │   ├── Flair
    │   │   │   ├── Flair.svelte
    │   │   │   └── index.ts
    │   │   ├── HorizontalGroup
    │   │   │   ├── HorizontalGroup.svelte
    │   │   │   └── index.ts
    │   │   ├── InternalLink.svelte
    │   │   ├── Layout
    │   │   │   ├── ViewContent.svelte
    │   │   │   ├── ViewHeader.svelte
    │   │   │   ├── ViewLayout.svelte
    │   │   │   ├── ViewToolbar.svelte
    │   │   │   └── index.ts
    │   │   ├── MultiTextInput
    │   │   │   └── MultiTextInput.svelte
    │   │   ├── TagList
    │   │   │   ├── RichTextTag.svelte
    │   │   │   ├── TagList.svelte
    │   │   │   └── index.ts
    │   │   └── TagsInput
    │   │   │   ├── Tag
    │   │   │       ├── Tag.svelte
    │   │   │       └── index.ts
    │   │   │   ├── TagInput
    │   │   │       ├── TagInput.svelte
    │   │   │       └── index.ts
    │   │   │   ├── TagsInput.svelte
    │   │   │   └── index.ts
    │   ├── modals
    │   │   ├── addViewModal.ts
    │   │   ├── components
    │   │   │   ├── AddView.svelte
    │   │   │   ├── CenterBox.svelte
    │   │   │   ├── ConfigureField.svelte
    │   │   │   ├── ConfirmDialog.svelte
    │   │   │   ├── CreateField.svelte
    │   │   │   ├── CreateNote.svelte
    │   │   │   ├── CreateProject.svelte
    │   │   │   ├── EditNote.svelte
    │   │   │   ├── InputDialog.svelte
    │   │   │   └── Inspector.svelte
    │   │   ├── configureField.ts
    │   │   ├── confirmDialog.ts
    │   │   ├── createFieldModal.ts
    │   │   ├── createNoteModal.ts
    │   │   ├── createProjectModal.ts
    │   │   ├── editNoteModal.ts
    │   │   ├── inputDialog.ts
    │   │   └── inspector.ts
    │   ├── settings
    │   │   ├── Archives.svelte
    │   │   ├── Projects.svelte
    │   │   └── settings.ts
    │   └── views
    │   │   ├── Board
    │   │       ├── BoardOptions.svelte
    │   │       ├── BoardOptionsProvider.svelte
    │   │       ├── BoardView.svelte
    │   │       ├── board.ts
    │   │       ├── boardView.ts
    │   │       ├── components
    │   │       │   ├── Board
    │   │       │   │   ├── Board.svelte
    │   │       │   │   ├── BoardColumn.svelte
    │   │       │   │   ├── CardList.svelte
    │   │       │   │   ├── ColumnHeader.svelte
    │   │       │   │   ├── NewColumn.svelte
    │   │       │   │   ├── boardHelpers.test.ts
    │   │       │   │   ├── boardHelpers.ts
    │   │       │   │   ├── index.ts
    │   │       │   │   └── types.ts
    │   │       │   └── index.ts
    │   │       ├── index.ts
    │   │       ├── settings
    │   │       │   ├── BoardSettings.svelte
    │   │       │   └── settingsModal.ts
    │   │       └── types.ts
    │   │   ├── Calendar
    │   │       ├── CalendarView.svelte
    │   │       ├── calendar.ts
    │   │       ├── calendarView.ts
    │   │       ├── components
    │   │       │   ├── Calendar
    │   │       │   │   ├── Calendar.svelte
    │   │       │   │   ├── ColorPill.svelte
    │   │       │   │   ├── Date.svelte
    │   │       │   │   ├── Day.svelte
    │   │       │   │   ├── Ellipsis.svelte
    │   │       │   │   ├── Event.svelte
    │   │       │   │   ├── EventList.svelte
    │   │       │   │   ├── Week.svelte
    │   │       │   │   ├── WeekHeader.svelte
    │   │       │   │   └── Weekday.svelte
    │   │       │   └── Navigation
    │   │       │   │   └── Navigation.svelte
    │   │       ├── index.ts
    │   │       └── types.ts
    │   │   ├── Developer
    │   │       ├── DeveloperView.svelte
    │   │       ├── developerView.ts
    │   │       └── index.ts
    │   │   ├── Gallery
    │   │       ├── GalleryOptionsProvider.svelte
    │   │       ├── GalleryView.svelte
    │   │       ├── components
    │   │       │   ├── Card
    │   │       │   │   ├── Card.svelte
    │   │       │   │   ├── CardContent.svelte
    │   │       │   │   ├── CardMedia.svelte
    │   │       │   │   └── index.ts
    │   │       │   ├── Grid
    │   │       │   │   └── Grid.svelte
    │   │       │   └── Image
    │   │       │   │   └── Image.svelte
    │   │       ├── gallery.ts
    │   │       ├── galleryView.ts
    │   │       ├── helpers.test.ts
    │   │       ├── helpers.ts
    │   │       ├── index.ts
    │   │       ├── settings
    │   │       │   ├── GallerySettings.svelte
    │   │       │   └── settingsModal.ts
    │   │       └── types.ts
    │   │   ├── Table
    │   │       ├── TableView.svelte
    │   │       ├── components
    │   │       │   ├── DataGrid
    │   │       │   │   ├── DataGrid.svelte
    │   │       │   │   ├── GridCell
    │   │       │   │   │   ├── GridBooleanCell
    │   │       │   │   │   │   ├── GridBooleanCell.svelte
    │   │       │   │   │   │   └── index.ts
    │   │       │   │   │   ├── GridCell.svelte
    │   │       │   │   │   ├── GridDateCell
    │   │       │   │   │   │   ├── GridDateCell.svelte
    │   │       │   │   │   │   └── index.ts
    │   │       │   │   │   ├── GridDatetimeCell
    │   │       │   │   │   │   ├── GridDatetimeCell.svelte
    │   │       │   │   │   │   └── index.ts
    │   │       │   │   │   ├── GridListCell
    │   │       │   │   │   │   ├── GridListCell.svelte
    │   │       │   │   │   │   └── index.ts
    │   │       │   │   │   ├── GridNumberCell
    │   │       │   │   │   │   ├── GridNumberCell.svelte
    │   │       │   │   │   │   ├── NumberInput.svelte
    │   │       │   │   │   │   ├── NumberLabel.svelte
    │   │       │   │   │   │   └── index.ts
    │   │       │   │   │   ├── GridTextCell
    │   │       │   │   │   │   ├── GridTextCell.svelte
    │   │       │   │   │   │   ├── TextLabel.svelte
    │   │       │   │   │   │   └── index.ts
    │   │       │   │   │   ├── GridTypedCell.svelte
    │   │       │   │   │   ├── Resizer.svelte
    │   │       │   │   │   └── index.ts
    │   │       │   │   ├── GridCellGroup.svelte
    │   │       │   │   ├── GridHeader
    │   │       │   │   │   ├── GridColumnHeader.svelte
    │   │       │   │   │   └── GridHeader.svelte
    │   │       │   │   ├── GridRow.svelte
    │   │       │   │   ├── dataGrid.ts
    │   │       │   │   └── index.ts
    │   │       │   └── SwitchSelect
    │   │       │   │   ├── SwitchSelect.svelte
    │   │       │   │   └── index.ts
    │   │       ├── helpers.test.ts
    │   │       ├── helpers.ts
    │   │       ├── index.ts
    │   │       ├── tableView.ts
    │   │       └── types.ts
    │   │   └── helpers.ts
    └── view.ts
├── styles.css
├── tsconfig.json
├── version-beta-manifest.mjs
├── version-bump.mjs
└── versions.json


/.github/ISSUE_TEMPLATE/bug-report.yml:
--------------------------------------------------------------------------------
 1 | name: Bug Report
 2 | description: Report a bug encountered while using the Projects plugin
 3 | labels: ["kind/bug", "needs-triage"]
 4 | body:
 5 |   - type: textarea
 6 |     id: problem
 7 |     attributes:
 8 |       label: What happened?
 9 |       description: |
10 |         Please provide as much info as possible.
11 |     validations:
12 |       required: true
13 | 
14 |   - type: textarea
15 |     id: expected
16 |     attributes:
17 |       label: What did you expect to happen?
18 |     validations:
19 |       required: true
20 | 
21 |   - type: textarea
22 |     id: repro
23 |     attributes:
24 |       label: How can we reproduce it (as minimally and precisely as possible)?
25 |     validations:
26 |       required: true
27 | 
28 |   - type: textarea
29 |     id: additional
30 |     attributes:
31 |       label: Anything else we need to know?
32 | 
33 |   - type: input
34 |     id: pluginVersion
35 |     attributes:
36 |       label: Plugin version
37 |       description: You can find the version under Settings -> Community plugins -> Installed plugins -> Projects.
38 |     validations:
39 |       required: true
40 | 
41 |   - type: input
42 |     id: obsidianVersion
43 |     attributes:
44 |       label: Obsidian version
45 |       description: You can find the version under Settings -> General -> Current version.
46 |     validations:
47 |       required: true
48 | 
49 |   - type: dropdown
50 |     id: os
51 |     attributes:
52 |       label: OS
53 |       multiple: true
54 |       options:
55 |         - Windows
56 |         - macOS
57 |         - Linux
58 |         - Other
59 |     validations:
60 |       required: true
61 | 


--------------------------------------------------------------------------------
/.github/ISSUE_TEMPLATE/feature-request.yml:
--------------------------------------------------------------------------------
 1 | name: Feature Request
 2 | description: Suggest a new feature
 3 | labels: ["kind/feature", "needs-triage"]
 4 | body:
 5 |   - type: textarea
 6 |     id: feature
 7 |     attributes:
 8 |       label: What would you like to be added?
 9 |     validations:
10 |       required: true
11 | 
12 |   - type: textarea
13 |     id: rationale
14 |     attributes:
15 |       label: Why is this needed?
16 |     validations:
17 |       required: true
18 | 


--------------------------------------------------------------------------------
/.github/release.yml:
--------------------------------------------------------------------------------
 1 | changelog:
 2 |   exclude:
 3 |     labels:
 4 |       - ignore-for-release
 5 | 
 6 |   categories:
 7 |     - title: New Features 🎉
 8 |       labels:
 9 |         - kind/feature
10 |     - title: Improvements 🛠️
11 |       labels:
12 |         - kind/enhancement
13 |     - title: Bug Fixes 🐞
14 |       labels:
15 |         - kind/bug
16 |     - title: Other Changes
17 |       labels:
18 |         - "*"
19 | 


--------------------------------------------------------------------------------
/.github/workflows/ci.yml:
--------------------------------------------------------------------------------
 1 | name: Node.js CI
 2 | 
 3 | on:
 4 |   push:
 5 |     branches: [main]
 6 |   pull_request:
 7 |     branches: [main]
 8 | 
 9 | jobs:
10 |   build:
11 |     runs-on: ubuntu-latest
12 | 
13 |     steps:
14 |       - uses: actions/checkout@v3
15 |       - name: Use Node.js
16 |         uses: actions/setup-node@v3
17 |         with:
18 |           node-version: "18.x"
19 | 
20 |       - name: Install dependencies
21 |         run: npm install
22 | 
23 |       - name: Build plugin
24 |         run: npm run build
25 | 
26 |       - name: Test plugin
27 |         run: npm run test
28 | 
29 |       - name: Lint plugin (ESLint)
30 |         run: npm run lint
31 | 
32 |       - name: Check plugin (Svelte)
33 |         run: npm run svelte-check
34 | 
35 |       - name: Update manifest-beta.json
36 |         if: github.ref_name == 'main'
37 |         run: |
38 |           node version-beta-manifest.mjs ${{github.run_number}}
39 |           cp manifest-beta.json manifest.json
40 | 
41 |       - name: Create release
42 |         if: github.ref_name == 'main'
43 |         env:
44 |           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
45 |         run: |
46 |           tag="0.0.0-${{ github.run_number }}"
47 | 
48 |           gh release create "$tag" \
49 |             --title="$tag" \
50 |             --prerelease \
51 |             main.js manifest.json styles.css
52 | 
53 |       - name: Publish build
54 |         if: github.ref_name == 'main'
55 |         run: |
56 |           git config --global user.name 'github-actions[bot]'
57 |           git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
58 |           git add manifest-beta.json
59 |           git commit -m "Bump beta version [skip ci]"
60 |           git push
61 | 


--------------------------------------------------------------------------------
/.github/workflows/release.yml:
--------------------------------------------------------------------------------
 1 | name: Release Obsidian plugin
 2 | 
 3 | on:
 4 |   push:
 5 |     tags:
 6 |       - "*"
 7 | 
 8 | jobs:
 9 |   build:
10 |     runs-on: ubuntu-latest
11 | 
12 |     steps:
13 |       - uses: actions/checkout@v3
14 | 
15 |       - name: Use Node.js
16 |         uses: actions/setup-node@v3
17 |         with:
18 |           node-version: "18.x"
19 | 
20 |       - name: Build plugin
21 |         run: |
22 |           npm install
23 |           npm run build
24 | 
25 |       - name: Create release
26 |         env:
27 |           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
28 |         run: |
29 |           tag="${GITHUB_REF#refs/tags/}"
30 | 
31 |           gh release create "$tag" \
32 |             --title="$tag" \
33 |             --generate-notes \
34 |             --draft \
35 |             main.js manifest.json styles.css
36 | 


--------------------------------------------------------------------------------
/.github/workflows/stale.yml:
--------------------------------------------------------------------------------
 1 | name: Mark stale issues and pull requests
 2 | 
 3 | on:
 4 |   schedule:
 5 |     - cron: "0 0 * * 1"
 6 |   workflow_dispatch:
 7 | 
 8 | permissions:
 9 |   contents: read
10 | 
11 | jobs:
12 |   stale:
13 |     permissions:
14 |       issues: write # for actions/stale to close stale issues
15 |       pull-requests: write # for actions/stale to close stale PRs
16 |     runs-on: ubuntu-latest
17 | 
18 |     steps:
19 |       - uses: actions/stale@v6
20 |         with:
21 |           repo-token: ${{ secrets.GITHUB_TOKEN }}
22 |           stale-issue-message:
23 |             "This bot triages issues and PRs according to the following rules:
24 |             - After 60d of inactivity, lifecycle/stale is applied.
25 |             - After 30d of inactivity since lifecycle/stale was applied, lifecycle/rotten is applied and the issue is closed.
26 |             You can:
27 |             - Make a comment to remove the stale label and show your support. The 60 days reset.
28 |             - If an issue has lifecycle/rotten and is closed, comment and ask maintainers if they'd be interested in reopening"
29 | 
30 |           stale-pr-message:
31 |             "This bot triages issues and PRs according to the following rules:
32 |             - After 60d of inactivity, lifecycle/stale is applied.
33 |             - After 30d of inactivity since lifecycle/stale was applied, lifecycle/rotten is applied and the PR is closed.
34 |             You can:
35 |             - Make a comment to remove the stale label and show your support. The 60 days reset.
36 |             - If a PR has lifecycle/rotten and is closed, comment and ask maintainers if they'd be interested in reopening."
37 | 
38 |           days-before-stale: 60
39 |           days-before-close: 30
40 |           stale-issue-label: "lifecycle/stale"
41 |           stale-pr-label: "lifecycle/stale"
42 |           exempt-issue-labels: "lifecycle/frozen,triage/confirmed"
43 |           exempt-pr-labels: "lifecycle/frozen"
44 |           close-issue-label: "lifecycle/rotten"
45 |           close-pr-label: "lifecycle/rotten"
46 | 


--------------------------------------------------------------------------------
/.gitignore:
--------------------------------------------------------------------------------
 1 | # vscode
 2 | .vscode
 3 | .history/
 4 | 
 5 | # npm
 6 | node_modules
 7 | 
 8 | # Don't include the compiled main.js file in the repo.
 9 | # They should be uploaded to GitHub releases instead.
10 | main.js
11 | 
12 | # Exclude sourcemaps
13 | *.map
14 | 
15 | # obsidian
16 | data.json
17 | 
18 | # Exclude macOS Finder (System Explorer) View States
19 | .DS_Store
20 | 
21 | yarn-error.log
22 | 


--------------------------------------------------------------------------------
/.prettierignore:
--------------------------------------------------------------------------------
 1 | # vscode
 2 | .vscode
 3 | 
 4 | # npm
 5 | node_modules
 6 | 
 7 | # Don't include the compiled main.js file in the repo.
 8 | # They should be uploaded to GitHub releases instead.
 9 | main.js
10 | 
11 | # Exclude sourcemaps
12 | *.map
13 | 
14 | # obsidian
15 | data.json
16 | 
17 | # Exclude macOS Finder (System Explorer) View States
18 | .DS_Store
19 | 
20 | yarn-error.log
21 | 


--------------------------------------------------------------------------------
/.prettierrc.json:
--------------------------------------------------------------------------------
1 | {
2 |   "trailingComma": "es5",
3 |   "tabWidth": 2,
4 |   "semi": true
5 | }
6 | 


--------------------------------------------------------------------------------
/CODE_OF_CONDUCT.md:
--------------------------------------------------------------------------------
  1 | # Contributor Covenant Code of Conduct
  2 | 
  3 | ## Our Pledge
  4 | 
  5 | We as members, contributors, and leaders pledge to make participation in our
  6 | community a harassment-free experience for everyone, regardless of age, body
  7 | size, visible or invisible disability, ethnicity, sex characteristics, gender
  8 | identity and expression, level of experience, education, socio-economic status,
  9 | nationality, personal appearance, race, religion, or sexual identity
 10 | and orientation.
 11 | 
 12 | We pledge to act and interact in ways that contribute to an open, welcoming,
 13 | diverse, inclusive, and healthy community.
 14 | 
 15 | ## Our Standards
 16 | 
 17 | Examples of behavior that contributes to a positive environment for our
 18 | community include:
 19 | 
 20 | * Demonstrating empathy and kindness toward other people
 21 | * Being respectful of differing opinions, viewpoints, and experiences
 22 | * Giving and gracefully accepting constructive feedback
 23 | * Accepting responsibility and apologizing to those affected by our mistakes,
 24 |   and learning from the experience
 25 | * Focusing on what is best not just for us as individuals, but for the
 26 |   overall community
 27 | 
 28 | Examples of unacceptable behavior include:
 29 | 
 30 | * The use of sexualized language or imagery, and sexual attention or
 31 |   advances of any kind
 32 | * Trolling, insulting or derogatory comments, and personal or political attacks
 33 | * Public or private harassment
 34 | * Publishing others' private information, such as a physical or email
 35 |   address, without their explicit permission
 36 | * Other conduct which could reasonably be considered inappropriate in a
 37 |   professional setting
 38 | 
 39 | ## Enforcement Responsibilities
 40 | 
 41 | Community leaders are responsible for clarifying and enforcing our standards of
 42 | acceptable behavior and will take appropriate and fair corrective action in
 43 | response to any behavior that they deem inappropriate, threatening, offensive,
 44 | or harmful.
 45 | 
 46 | Community leaders have the right and responsibility to remove, edit, or reject
 47 | comments, commits, code, wiki edits, issues, and other contributions that are
 48 | not aligned to this Code of Conduct, and will communicate reasons for moderation
 49 | decisions when appropriate.
 50 | 
 51 | ## Scope
 52 | 
 53 | This Code of Conduct applies within all community spaces, and also applies when
 54 | an individual is officially representing the community in public spaces.
 55 | Examples of representing our community include using an official e-mail address,
 56 | posting via an official social media account, or acting as an appointed
 57 | representative at an online or offline event.
 58 | 
 59 | ## Enforcement
 60 | 
 61 | Instances of abusive, harassing, or otherwise unacceptable behavior may be
 62 | reported to the community leaders responsible for enforcement at
 63 | coc@marcus.se.net.
 64 | All complaints will be reviewed and investigated promptly and fairly.
 65 | 
 66 | All community leaders are obligated to respect the privacy and security of the
 67 | reporter of any incident.
 68 | 
 69 | ## Enforcement Guidelines
 70 | 
 71 | Community leaders will follow these Community Impact Guidelines in determining
 72 | the consequences for any action they deem in violation of this Code of Conduct:
 73 | 
 74 | ### 1. Correction
 75 | 
 76 | **Community Impact**: Use of inappropriate language or other behavior deemed
 77 | unprofessional or unwelcome in the community.
 78 | 
 79 | **Consequence**: A private, written warning from community leaders, providing
 80 | clarity around the nature of the violation and an explanation of why the
 81 | behavior was inappropriate. A public apology may be requested.
 82 | 
 83 | ### 2. Warning
 84 | 
 85 | **Community Impact**: A violation through a single incident or series
 86 | of actions.
 87 | 
 88 | **Consequence**: A warning with consequences for continued behavior. No
 89 | interaction with the people involved, including unsolicited interaction with
 90 | those enforcing the Code of Conduct, for a specified period of time. This
 91 | includes avoiding interactions in community spaces as well as external channels
 92 | like social media. Violating these terms may lead to a temporary or
 93 | permanent ban.
 94 | 
 95 | ### 3. Temporary Ban
 96 | 
 97 | **Community Impact**: A serious violation of community standards, including
 98 | sustained inappropriate behavior.
 99 | 
100 | **Consequence**: A temporary ban from any sort of interaction or public
101 | communication with the community for a specified period of time. No public or
102 | private interaction with the people involved, including unsolicited interaction
103 | with those enforcing the Code of Conduct, is allowed during this period.
104 | Violating these terms may lead to a permanent ban.
105 | 
106 | ### 4. Permanent Ban
107 | 
108 | **Community Impact**: Demonstrating a pattern of violation of community
109 | standards, including sustained inappropriate behavior,  harassment of an
110 | individual, or aggression toward or disparagement of classes of individuals.
111 | 
112 | **Consequence**: A permanent ban from any sort of public interaction within
113 | the community.
114 | 
115 | ## Attribution
116 | 
117 | This Code of Conduct is adapted from the [Contributor Covenant][homepage],
118 | version 2.0, available at
119 | https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.
120 | 
121 | Community Impact Guidelines were inspired by [Mozilla's code of conduct
122 | enforcement ladder](https://github.com/mozilla/diversity).
123 | 
124 | [homepage]: https://www.contributor-covenant.org
125 | 
126 | For answers to common questions about this code of conduct, see the FAQ at
127 | https://www.contributor-covenant.org/faq. Translations are available at
128 | https://www.contributor-covenant.org/translations.
129 | 


--------------------------------------------------------------------------------
/CONTRIBUTING.md:
--------------------------------------------------------------------------------
  1 | # Contribute to Projects
  2 | 
  3 | Thank you for considering contributing to Projects! On this page, you'll learn how you can help make Projects even better!
  4 | 
  5 | ## Voting for features
  6 | 
  7 | Since the release of Projects, users have requested more features than we have resources to implement. Your voice matters, and we need your help understand what's most important.
  8 | 
  9 | Help prioritize work by adding a :+1: reaction to issues that are important to you ([see the most requested issues](https://github.com/marcusolsson/obsidian-projects/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc)).
 10 | 
 11 | To see what's being working on, check out the [roadmap](https://github.com/users/marcusolsson/projects/4/views/14).
 12 | 
 13 | ## Testing
 14 | 
 15 | Help find bugs and unexpected behavior when using the plugin. Help me find sources of annoyance and frustration before others do. Even reporting small things like losing focus, or a glitchy UI, help improve the overall quality of the plugin. No issues are too small to reports.
 16 | 
 17 | ## Submitting a pull request
 18 | 
 19 | You can work on any issue with the `lifecycle/backlog` label. Before you start working, please announce that you want to do so by commenting on the issue. I'll add the `lifecycle/active` label to let others know that it's being actively worked on by someone.
 20 | 
 21 | ## Translations
 22 | 
 23 | [![inlang status badge](https://badge.inlang.com/?url=github.com/marcusolsson/obsidian-projects)](https://fink.inlang.com/github.com/marcusolsson/obsidian-projects)
 24 | 
 25 | Help make the Projects display text available in your language!
 26 | 
 27 | If you’re interested in adding a new translation, here’s how you can do it:
 28 | 
 29 | 1. Navigate to `src/lib/stores/i18n.ts.`
 30 | 2. Register your language code in the `resources` field.
 31 | 3. Create a corresponding `.json` file in the `src/lib/stores/translations` directory.
 32 | 
 33 | Once the language is already registered, you can contribute in either way:
 34 | 
 35 | - Directly push the updated `.json` resource.
 36 | - Use the `inlang` platform for a more user-friendly interface by clicking the badge above.
 37 | 
 38 | ## Triaging issues
 39 | 
 40 | You can contribute by helping an issue move forward. Depending on the labels on the issue, you can help in different ways:
 41 | 
 42 | - Vote for issues that are important to you.
 43 | - Help figuring out how to reproduce bugs.
 44 | - Provide support for ideas by sharing your use case.
 45 | - Find issues that are duplicates of already existing issues.
 46 | 
 47 | ## Understanding labels
 48 | 
 49 | Projects uses labels for issues to organize work. This section lists all the labels used by the project and what they mean.
 50 | 
 51 | ### Kind
 52 | 
 53 | `kind/*` describes the type of issue. All issues **must** have a `kind/*` label.
 54 | 
 55 | | Label | Description |
 56 | | ----- | ----------- |
 57 | | `kind/bug` | Something isn't working. |
 58 | | `kind/feature` | New feature request. |
 59 | | `kind/documentation` | Improvements or additions to documentation. |
 60 | | `kind/cleanup` | Cleaning up code, configuration, or technical debt. |
 61 | | `kind/epic` | Issues that contain other issues and design discussions for big changes. |
 62 | | `kind/support` | (Deprecated) Use [Discussions](https://github.com/marcusolsson/obsidian-projects/discussions/categories/help) for support questions. |
 63 | 
 64 | ### Triage
 65 | 
 66 | When a user creates an issue, it needs to be reviewed, or _triaged_, to be able to label it correctly.
 67 | 
 68 | `triage/*` describes the triage status for an issue.
 69 | 
 70 | | Label | Description |
 71 | | ----- | ----------- |
 72 | | `triage/confirmed` | Issue is well-defined and understood. Needs to have a `priority/*` label. |
 73 | | `triage/duplicate` | Issue is a duplicate of another issue. |
 74 | | `triage/needs-information` | Issue needs more information in order to work on it. |
 75 | | `triage/needs-investigation` | Issue needs investigation before it can be confirmed. |
 76 | | `triage/not-reproducible` | Issue can't be reproduced as described. |
 77 | 
 78 | ### Lifecycle
 79 | 
 80 | `lifecycle/*` describes how close the issue is from being resolved.
 81 | 
 82 | | Label | Description |
 83 | | ----- | ----------- |
 84 | | `lifecycle/idea` | Possibly useful, but not yet enough support to actually get it done. |
 85 | | `lifecycle/backlog` | Issues that are ready to be worked on. |
 86 | | `lifecycle/active` | Issues is actively being worked on. |
 87 | | `lifecycle/stale` | Issues hasn't seen any activity for 60 days. |
 88 | | `lifecycle/rotten` | Issues hasn't seen any activity for 30 days after being marked as stale. |
 89 | | `lifecycle/frozen` | Frozen issues can't become stale or rotten. |
 90 | 
 91 | ### Priority
 92 | 
 93 | `priority/*` describes how important the issue is. Higher priority means the issue is more likely to be fixed.
 94 | 
 95 | | Label | Description |
 96 | | ----- | ----------- |
 97 | | `priority/critical` | Must be must be worked on before anything else. |
 98 | 
 99 | ### Area
100 | 
101 | `area/*` describes what part of the plugin the issue relates to.
102 | 
103 | | Label | Description |
104 | | ----- | ----------- |
105 | | `area/core` | Issues related to the core platform. |
106 | | `area/views` | Issues related to views in general, or for new views.|
107 | | `area/view/*` | Issues related to a specific view, for example `area/view/table`. |
108 | | `area/datasources` | Issues related to data sources in general, or for new data sources.|
109 | | `area/datasource/*` | Issues related to a specific data source, for example `area/datasource/dataview`. |
110 | | `area/integrations` | Issues related to integrating other tools and plugins with Projects. |
111 | 
112 | ### Operating system
113 | 
114 | `os/*` gets added to issues related to a specific operating system.
115 | 
116 | | Label | Description |
117 | | ----- | ----------- |
118 | | `os/android` | Issues related to Android devices. |
119 | | `os/ios` | Issues related to iOS devices. |
120 | | `os/macos` | Issues related to macOS. |
121 | | `os/windows` | Issues related to Windows. .|
122 | | `os/linux` | Issues related to Linux. |
123 | 
124 | ### Miscellanous
125 | 
126 | Various labels that don't fit in anywhere else.
127 | 
128 | | Label | Description |
129 | | ----- | ----------- |
130 | | `good first issue` | Issues suitable for first-time contributors. |
131 | | `help wanted` | Issues that are blocked due to lack of technology or expertise. |
132 | | `ignore-for-release` | Used for pull requests to avoid listing them in the changelog. |
133 | 
134 | ## Still have questions?
135 | 
136 | If this document didn't answer your questions on how to contribute to Projects, feel free to ask it in [Discussions](https://github.com/marcusolsson/obsidian-projects/discussions/new?category=help).
137 | 


--------------------------------------------------------------------------------
/LICENSE:
--------------------------------------------------------------------------------
  1 |                                  Apache License
  2 |                            Version 2.0, January 2004
  3 |                         http://www.apache.org/licenses/
  4 | 
  5 |    TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
  6 | 
  7 |    1. Definitions.
  8 | 
  9 |       "License" shall mean the terms and conditions for use, reproduction,
 10 |       and distribution as defined by Sections 1 through 9 of this document.
 11 | 
 12 |       "Licensor" shall mean the copyright owner or entity authorized by
 13 |       the copyright owner that is granting the License.
 14 | 
 15 |       "Legal Entity" shall mean the union of the acting entity and all
 16 |       other entities that control, are controlled by, or are under common
 17 |       control with that entity. For the purposes of this definition,
 18 |       "control" means (i) the power, direct or indirect, to cause the
 19 |       direction or management of such entity, whether by contract or
 20 |       otherwise, or (ii) ownership of fifty percent (50%) or more of the
 21 |       outstanding shares, or (iii) beneficial ownership of such entity.
 22 | 
 23 |       "You" (or "Your") shall mean an individual or Legal Entity
 24 |       exercising permissions granted by this License.
 25 | 
 26 |       "Source" form shall mean the preferred form for making modifications,
 27 |       including but not limited to software source code, documentation
 28 |       source, and configuration files.
 29 | 
 30 |       "Object" form shall mean any form resulting from mechanical
 31 |       transformation or translation of a Source form, including but
 32 |       not limited to compiled object code, generated documentation,
 33 |       and conversions to other media types.
 34 | 
 35 |       "Work" shall mean the work of authorship, whether in Source or
 36 |       Object form, made available under the License, as indicated by a
 37 |       copyright notice that is included in or attached to the work
 38 |       (an example is provided in the Appendix below).
 39 | 
 40 |       "Derivative Works" shall mean any work, whether in Source or Object
 41 |       form, that is based on (or derived from) the Work and for which the
 42 |       editorial revisions, annotations, elaborations, or other modifications
 43 |       represent, as a whole, an original work of authorship. For the purposes
 44 |       of this License, Derivative Works shall not include works that remain
 45 |       separable from, or merely link (or bind by name) to the interfaces of,
 46 |       the Work and Derivative Works thereof.
 47 | 
 48 |       "Contribution" shall mean any work of authorship, including
 49 |       the original version of the Work and any modifications or additions
 50 |       to that Work or Derivative Works thereof, that is intentionally
 51 |       submitted to Licensor for inclusion in the Work by the copyright owner
 52 |       or by an individual or Legal Entity authorized to submit on behalf of
 53 |       the copyright owner. For the purposes of this definition, "submitted"
 54 |       means any form of electronic, verbal, or written communication sent
 55 |       to the Licensor or its representatives, including but not limited to
 56 |       communication on electronic mailing lists, source code control systems,
 57 |       and issue tracking systems that are managed by, or on behalf of, the
 58 |       Licensor for the purpose of discussing and improving the Work, but
 59 |       excluding communication that is conspicuously marked or otherwise
 60 |       designated in writing by the copyright owner as "Not a Contribution."
 61 | 
 62 |       "Contributor" shall mean Licensor and any individual or Legal Entity
 63 |       on behalf of whom a Contribution has been received by Licensor and
 64 |       subsequently incorporated within the Work.
 65 | 
 66 |    2. Grant of Copyright License. Subject to the terms and conditions of
 67 |       this License, each Contributor hereby grants to You a perpetual,
 68 |       worldwide, non-exclusive, no-charge, royalty-free, irrevocable
 69 |       copyright license to reproduce, prepare Derivative Works of,
 70 |       publicly display, publicly perform, sublicense, and distribute the
 71 |       Work and such Derivative Works in Source or Object form.
 72 | 
 73 |    3. Grant of Patent License. Subject to the terms and conditions of
 74 |       this License, each Contributor hereby grants to You a perpetual,
 75 |       worldwide, non-exclusive, no-charge, royalty-free, irrevocable
 76 |       (except as stated in this section) patent license to make, have made,
 77 |       use, offer to sell, sell, import, and otherwise transfer the Work,
 78 |       where such license applies only to those patent claims licensable
 79 |       by such Contributor that are necessarily infringed by their
 80 |       Contribution(s) alone or by combination of their Contribution(s)
 81 |       with the Work to which such Contribution(s) was submitted. If You
 82 |       institute patent litigation against any entity (including a
 83 |       cross-claim or counterclaim in a lawsuit) alleging that the Work
 84 |       or a Contribution incorporated within the Work constitutes direct
 85 |       or contributory patent infringement, then any patent licenses
 86 |       granted to You under this License for that Work shall terminate
 87 |       as of the date such litigation is filed.
 88 | 
 89 |    4. Redistribution. You may reproduce and distribute copies of the
 90 |       Work or Derivative Works thereof in any medium, with or without
 91 |       modifications, and in Source or Object form, provided that You
 92 |       meet the following conditions:
 93 | 
 94 |       (a) You must give any other recipients of the Work or
 95 |           Derivative Works a copy of this License; and
 96 | 
 97 |       (b) You must cause any modified files to carry prominent notices
 98 |           stating that You changed the files; and
 99 | 
100 |       (c) You must retain, in the Source form of any Derivative Works
101 |           that You distribute, all copyright, patent, trademark, and
102 |           attribution notices from the Source form of the Work,
103 |           excluding those notices that do not pertain to any part of
104 |           the Derivative Works; and
105 | 
106 |       (d) If the Work includes a "NOTICE" text file as part of its
107 |           distribution, then any Derivative Works that You distribute must
108 |           include a readable copy of the attribution notices contained
109 |           within such NOTICE file, excluding those notices that do not
110 |           pertain to any part of the Derivative Works, in at least one
111 |           of the following places: within a NOTICE text file distributed
112 |           as part of the Derivative Works; within the Source form or
113 |           documentation, if provided along with the Derivative Works; or,
114 |           within a display generated by the Derivative Works, if and
115 |           wherever such third-party notices normally appear. The contents
116 |           of the NOTICE file are for informational purposes only and
117 |           do not modify the License. You may add Your own attribution
118 |           notices within Derivative Works that You distribute, alongside
119 |           or as an addendum to the NOTICE text from the Work, provided
120 |           that such additional attribution notices cannot be construed
121 |           as modifying the License.
122 | 
123 |       You may add Your own copyright statement to Your modifications and
124 |       may provide additional or different license terms and conditions
125 |       for use, reproduction, or distribution of Your modifications, or
126 |       for any such Derivative Works as a whole, provided Your use,
127 |       reproduction, and distribution of the Work otherwise complies with
128 |       the conditions stated in this License.
129 | 
130 |    5. Submission of Contributions. Unless You explicitly state otherwise,
131 |       any Contribution intentionally submitted for inclusion in the Work
132 |       by You to the Licensor shall be under the terms and conditions of
133 |       this License, without any additional terms or conditions.
134 |       Notwithstanding the above, nothing herein shall supersede or modify
135 |       the terms of any separate license agreement you may have executed
136 |       with Licensor regarding such Contributions.
137 | 
138 |    6. Trademarks. This License does not grant permission to use the trade
139 |       names, trademarks, service marks, or product names of the Licensor,
140 |       except as required for reasonable and customary use in describing the
141 |       origin of the Work and reproducing the content of the NOTICE file.
142 | 
143 |    7. Disclaimer of Warranty. Unless required by applicable law or
144 |       agreed to in writing, Licensor provides the Work (and each
145 |       Contributor provides its Contributions) on an "AS IS" BASIS,
146 |       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
147 |       implied, including, without limitation, any warranties or conditions
148 |       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
149 |       PARTICULAR PURPOSE. You are solely responsible for determining the
150 |       appropriateness of using or redistributing the Work and assume any
151 |       risks associated with Your exercise of permissions under this License.
152 | 
153 |    8. Limitation of Liability. In no event and under no legal theory,
154 |       whether in tort (including negligence), contract, or otherwise,
155 |       unless required by applicable law (such as deliberate and grossly
156 |       negligent acts) or agreed to in writing, shall any Contributor be
157 |       liable to You for damages, including any direct, indirect, special,
158 |       incidental, or consequential damages of any character arising as a
159 |       result of this License or out of the use or inability to use the
160 |       Work (including but not limited to damages for loss of goodwill,
161 |       work stoppage, computer failure or malfunction, or any and all
162 |       other commercial damages or losses), even if such Contributor
163 |       has been advised of the possibility of such damages.
164 | 
165 |    9. Accepting Warranty or Additional Liability. While redistributing
166 |       the Work or Derivative Works thereof, You may choose to offer,
167 |       and charge a fee for, acceptance of support, warranty, indemnity,
168 |       or other liability obligations and/or rights consistent with this
169 |       License. However, in accepting such obligations, You may act only
170 |       on Your own behalf and on Your sole responsibility, not on behalf
171 |       of any other Contributor, and only if You agree to indemnify,
172 |       defend, and hold each Contributor harmless for any liability
173 |       incurred by, or claims asserted against, such Contributor by reason
174 |       of your accepting any such warranty or additional liability.
175 | 
176 |    END OF TERMS AND CONDITIONS
177 | 
178 |    APPENDIX: How to apply the Apache License to your work.
179 | 
180 |       To apply the Apache License to your work, attach the following
181 |       boilerplate notice, with the fields enclosed by brackets "[]"
182 |       replaced with your own identifying information. (Don't include
183 |       the brackets!)  The text should be enclosed in the appropriate
184 |       comment syntax for the file format. We also recommend that a
185 |       file or class name and description of purpose be included on the
186 |       same "printed page" as the copyright notice for easier
187 |       identification within third-party archives.
188 | 
189 |    Copyright 2022 Marcus Olsson
190 | 
191 |    Licensed under the Apache License, Version 2.0 (the "License");
192 |    you may not use this file except in compliance with the License.
193 |    You may obtain a copy of the License at
194 | 
195 |        http://www.apache.org/licenses/LICENSE-2.0
196 | 
197 |    Unless required by applicable law or agreed to in writing, software
198 |    distributed under the License is distributed on an "AS IS" BASIS,
199 |    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
200 |    See the License for the specific language governing permissions and
201 |    limitations under the License.
202 | 


--------------------------------------------------------------------------------
/README.md:
--------------------------------------------------------------------------------
  1 | <picture>
  2 |   <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/marcusolsson/obsidian-projects/main/images/dark.svg">
  3 |   <source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/marcusolsson/obsidian-projects/main/images/light.svg">
  4 |   <img alt="Projects logo" src="https://raw.githubusercontent.com/marcusolsson/obsidian-projects/main/images/light.svg">
  5 | </picture>
  6 | 
  7 | [![Build Obsidian plugin](https://github.com/marcusolsson/obsidian-projects/actions/workflows/ci.yml/badge.svg)](https://github.com/marcusolsson/obsidian-projects/actions/workflows/ci.yml)
  8 | [![Release Obsidian plugin](https://github.com/marcusolsson/obsidian-projects/actions/workflows/release.yml/badge.svg)](https://github.com/marcusolsson/obsidian-projects/actions/workflows/release.yml)
  9 | ![Obsidian Downloads](https://img.shields.io/badge/dynamic/json?logo=obsidian&color=%23483699&label=downloads&query=%24%5B%22obsidian-projects%22%5D.downloads&url=https%3A%2F%2Fraw.githubusercontent.com%2Fobsidianmd%2Fobsidian-releases%2Fmaster%2Fcommunity-plugin-stats.json)
 10 | [![Buy me a coffee](https://img.shields.io/badge/-buy_me_a%C2%A0coffee-gray?logo=buy-me-a-coffee)](https://www.buymeacoffee.com/marcusolsson)
 11 | [![Maintenance Status](https://img.shields.io/badge/maintenance-status-brightgreen)](https://github.com/marcusolsson/obsidian-projects/discussions)
 12 | 
 13 | Projects is a plugin for [Obsidian](https://obsidian.md) that lets you manage and visualize notes for project management.
 14 | 
 15 | - Create projects from folders and Dataview queries.
 16 | - Switch between four different views: _Table_, _Board_, _Calendar_, and _Gallery_.
 17 | - Configure note templates for each project.
 18 | 
 19 | For example, if you're a content manager, Projects can help you manage your content calendar. Create drafts, keep track of their status, and when they are scheduled to be published.
 20 | 
 21 | If you have any questions, or want to stay updated, join our [Discussions](https://github.com/marcusolsson/obsidian-projects/discussions).
 22 | 
 23 | > [!IMPORTANT]
 24 | > As of May 2025, I've decided to discontinue this plugin. I created Obsidian Projects because I wanted to scratch my own itch. Unfortunately, I'm no longer using Obsidian, nor following the development of the plugin eco-system. That being said, if there's an interest from the Obsidian community to take over the plugin, I'd be more than happy to facilitate the changes necessary.
 25 | >
 26 | > _Edit 2025-07-18:_ It's come to my attention that the plugin has been removed from the community plugin list. If you'd like to keep using the plugin, you can install it with the [BRAT](https://github.com/TfTHacker/obsidian42-brat) plugin.
 27 | 
 28 | ## Installation
 29 | 
 30 | > [!Note]  
 31 | > You must turn off **Restricted mode** to use Projects.
 32 | 
 33 | 1. In Obsidian, open **Settings**.
 34 | 1. Under **Community plugins**, select **Browse**.
 35 | 1. Search for "Projects" by Marcus Olsson, and then select it.
 36 | 1. Select **Install**.
 37 | 
 38 | To get started using Projects, press **Ctrl+P** (or **Cmd+P** on macOS) to open the **Command palette**, and then select **Projects: Show projects**.
 39 | 
 40 | ## Design Philosophy
 41 | 
 42 | When developing any software, you are often faced with difficult choices. To help guide design decisions, this project adheres to the following principles:
 43 | 
 44 | - **Leave no trace:** The plugin must not leave any plugin-specific configuration in the notes, such as custom front matter properties. Notes may be shared with colleagues and teams who don't use Obsidian. If the user stops using this plugin, they shouldn't have to clean up all their notes.
 45 | - **Keep it native:** The plugin should look and feel like it's native to Obsidian. The plugin should also prefer native Web APIs over custom components whenever possible.
 46 | - **Stability over features:** This plugin is geared towards professionals with high demands on reliability. Any bug reports and usability issues will be prioritized over new features.
 47 | 
 48 | ## Roadmap
 49 | 
 50 | If you're curious about what we're working on, check out the roadmap:
 51 | 
 52 | - [Active issues](https://github.com/marcusolsson/obsidian-projects/issues?q=is%3Aopen+is%3Aissue+sort%3Areactions-%2B1-desc+label%3Alifecycle%2Factive): Issues that are actively being worked on.
 53 | - [Prioritized backlog](https://github.com/marcusolsson/obsidian-projects/issues?q=is%3Aopen+is%3Aissue+label%3Apriority%2Fhigh+sort%3Areactions-%2B1-desc+): Issues we'll be working on next.
 54 | - [Backlog](https://github.com/marcusolsson/obsidian-projects/issues?q=is%3Aopen+is%3Aissue+label%3Alifecycle%2Fbacklog+sort%3Areactions-%2B1-desc): Issues anyone can start working on (please let us know before you do).
 55 | - [Ideas](https://github.com/marcusolsson/obsidian-projects/issues?q=is%3Aopen+is%3Aissue+label%3Alifecycle%2Fidea+sort%3Areactions-%2B1-desc): Promising issues that haven't made it to the backlog yet.
 56 | 
 57 | To vote for a feature, react to the issue with a :+1:.
 58 | 
 59 | - [Most requested issues](https://github.com/marcusolsson/obsidian-projects/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc)
 60 | 
 61 | ## Contribute
 62 | 
 63 | For more information on how to contribute to Projects, check out [CONTRIBUTING.md](https://github.com/marcusolsson/obsidian-projects/blob/main/CONTRIBUTING.md). We appreciate bug reports, feature suggestions, PRs for features or translations, and help with issue triage.
 64 | 
 65 | ## Learn More
 66 | 
 67 | If you'd like to see Projects in action, check out any of these amazing resources made by users.
 68 | 
 69 | ### Videos
 70 | 
 71 | - 2024-12-09: [How to use Obsidian: Project vs Trello](https://www.youtube.com/watch?v=kWpIz0CJXoE) by [+1creator](https://www.youtube.com/@plus1creator)
 72 | - 2024-06-07: [How To Use Obsidian: Project Management (NEW & IMPROVED!)](https://www.youtube.com/watch?v=tYC7n-sDApU) by [+1creator](https://www.youtube.com/@plus1creator)
 73 | - 2023-11-21: [Obsidian Projects - How To Manage Your Projects in Obsidian](https://youtu.be/aFfREf9IQ7Q?t=452) by [Marco Serafini](https://www.youtube.com/@Marco_Mindstone)
 74 | - 2023-11-14: [How To Use Obsidian: Project Management](https://www.youtube.com/watch?v=-ZTo6rcH0a8) by [Jonathan Pritchard](https://www.youtube.com/@zavant)
 75 | - 2023-10-10: [Obsidian Library: How To Keep Track of Your Books in Obsidian](https://youtu.be/_3MSwW51BhU?t=405) by [Marco Serafini](https://www.youtube.com/@Marco_Mindstone)
 76 | - 2023-06-28: [Obsidian Office Hours: First Look at Obsidian Projects](https://www.youtube.com/watch?v=DU7V69n5tIQ) by [@BenCodeZen](https://www.youtube.com/@BenCodeZen)
 77 | - 2023-04-20: [You all NEED these Obsidian community plugins](https://www.youtube.com/watch?v=Yzi1o-BH6QQ&t=1022s) by [@christianlempa](https://www.youtube.com/@christianlempa)
 78 | - 2022-12-10: [Use Obsidian for Content Creation | Build Notion-like Database Views](https://www.youtube.com/watch?v=Ds-VPz7jIwM) by [@amyjuanli](https://www.youtube.com/@amyjuanli)
 79 | - 2022-12-06: [Créer un calendrier éditorial dans Obsidian : Le plugin Projects](https://www.youtube.com/watch?v=Wmx2EoQYrTI) by [@cerveaunumeriquefr](https://www.youtube.com/@cerveaunumeriquefr)
 80 | - 2022-11-23: [Obsidian For Content Creators](https://www.youtube.com/watch?v=jovUqLbqS1Y) by [@FromSergio](https://www.youtube.com/@FromSergio)
 81 | - 2022-11-18: [Notion-like content calendar in Obsidian](https://www.youtube.com/watch?v=ny8lksaQ5A8) by [@nicolevdh](https://www.youtube.com/@nicolevdh)
 82 | - 2022-11-13: [Obsidian Projects: How to Manage Your Note-based Projects in Obsidian](https://www.youtube.com/watch?v=9d9ibSC1TXU) by [@beingpax](https://www.youtube.com/@beingpax)
 83 | - 2022-11-07: [Notion database views in Obsidian Projects plugin](https://www.youtube.com/watch?v=LdaMe2rzAW8) by [@nicolevdh](https://www.youtube.com/@nicolevdh) (interview)
 84 | - 2022-11-07: [Visualiza la base de datos como en Notion dentro de Obsidian](https://www.youtube.com/watch?v=vReObPVS2oo) by [@SniferL4bs](https://www.youtube.com/@SniferL4bs)
 85 | 
 86 | ### Articles
 87 | 
 88 | - 2023-06-02: [Obsidian Library — How to keep track of your books with Book Search and Projects plugins](https://medium.com/obsidian-observer/obsidian-library-how-to-keep-track-of-your-books-with-book-search-and-projects-plugins-716599633715) by [Marco Serafini](https://medium.com/@marco.ith)
 89 | - 2023-03-16: [The Obsidian Projects Plugin: My Secret Weapon for Staying Organized and Focused](https://www.jordanrobison.net/the-obsidian-projects-plugin-my-secret-weapon-for-staying-organized-and-focused/) by [Jordan Robison](https://www.jordanrobison.net/)
 90 | - 2022-11-19: [Obsidian Projects: A Better Way to Manage Text-Based Projects in Obsidian](https://beingpax.medium.com/obsidian-projects-a-better-way-to-manage-text-based-projects-in-obsidian-18c2a991069c) by [Prakash Joshi Pax](https://beingpax.medium.com/)
 91 | - [How to Set up and Maintain Your Academic Reading List in Obsidian](https://nataliekraneiss.com/your-academic-reading-list-in-obsidian/) by [Natalie Kraneiß](https://nataliekraneiss.com/)
 92 | 
 93 | _Did I miss any? Let me know and I'll add them to the list!_
 94 | 
 95 | ## Support
 96 | 
 97 | If Projects has been useful to you, consider [buying me a book](https://www.buymeacoffee.com/marcusolsson) to show your support.
 98 | 
 99 | ## License
100 | 
101 | Projects is distributed under [Apache License 2.0](LICENSE).
102 | 


--------------------------------------------------------------------------------
/css/config.scss:
--------------------------------------------------------------------------------
1 | $prefix: "projects";
2 | 


--------------------------------------------------------------------------------
/css/styles.scss:
--------------------------------------------------------------------------------
 1 | @use "views/board";
 2 | @use "views/gallery";
 3 | 
 4 | .workspace-leaf-content[data-type="obsidian-projects"] .view-content {
 5 |   padding: 0;
 6 | }
 7 | 
 8 | .sortable-drag {
 9 |   opacity: 0 !important;
10 | }
11 | 


--------------------------------------------------------------------------------
/css/views/_board.scss:
--------------------------------------------------------------------------------
 1 | @use "../config" as *;
 2 | 
 3 | $view: "board";
 4 | 
 5 | .#{$prefix}--#{$view} {
 6 |   display: grid;
 7 |   column-gap: 8px;
 8 |   align-items: flex-start;
 9 |   margin: 8px;
10 | }
11 | 
12 | .#{$prefix}--#{$view}--column {
13 |   border: 1px solid var(--background-modifier-border);
14 |   border-radius: var(--radius-m);
15 |   background-color: var(--background-primary-alt);
16 |   display: flex;
17 |   gap: var(--size-4-2);
18 |   flex-direction: column;
19 |   padding: var(--size-4-2);
20 | }
21 | 
22 | .#{$prefix}--#{$view}--card {
23 |   background-color: var(--background-primary);
24 |   border-radius: var(--radius-s);
25 |   border: 1px solid var(--background-modifier-border);
26 |   padding: var(--size-4-2);
27 | 
28 |   &:hover {
29 |     border: 1px solid var(--background-modifier-border-hover);
30 |   }
31 | }
32 | 
33 | .#{$prefix}--#{$view}--card-list {
34 |   display: flex;
35 |   flex-direction: column;
36 |   gap: var(--size-4-2);
37 |   min-height: 35px;
38 |   transition: all 150ms ease-in-out;
39 | }
40 | 


--------------------------------------------------------------------------------
/css/views/_gallery.scss:
--------------------------------------------------------------------------------
 1 | @use "../config" as *;
 2 | 
 3 | $view: "gallery";
 4 | 
 5 | $card-radius: var(--radius-s);
 6 | 
 7 | .#{$prefix}--#{$view}--grid {
 8 |   display: grid;
 9 |   gap: 24px;
10 | }
11 | 
12 | .#{$prefix}--#{$view}--card {
13 |   background-color: var(--background-primary-alt);
14 |   border-radius: #{$card-radius};
15 |   border: 1px solid var(--background-modifier-border);
16 |   padding: 0;
17 |   margin: 0;
18 | 
19 |   &:hover {
20 |     border: 1px solid var(--background-modifier-border-hover);
21 |   }
22 | }
23 | 
24 | .#{$prefix}--#{$view}--card__body {
25 |   padding: 8px;
26 | }
27 | 
28 | .#{$prefix}--#{$view}--card__media {
29 |   height: 180px;
30 |   border-top-left-radius: #{$card-radius};
31 |   border-top-right-radius: #{$card-radius};
32 |   display: flex;
33 |   align-items: center;
34 |   justify-content: center;
35 |   border-bottom: 1px solid var(--background-modifier-border);
36 | 
37 |   & img {
38 |     width: 100%;
39 |     height: 100%;
40 |     border-top-left-radius: #{$card-radius};
41 |     border-top-right-radius: #{$card-radius};
42 |   }
43 | }
44 | 


--------------------------------------------------------------------------------
/esbuild.config.mjs:
--------------------------------------------------------------------------------
 1 | import esbuild from "esbuild";
 2 | import process from "process";
 3 | import builtins from "builtin-modules";
 4 | import esbuildSvelte from "esbuild-svelte";
 5 | import sveltePreprocess from "svelte-preprocess";
 6 | import { replace } from "esbuild-plugin-replace";
 7 | 
 8 | const banner = `/*
 9 | THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
10 | if you want to view the source, please visit the github repository of this plugin
11 | */
12 | `;
13 | 
14 | const prod = process.argv[2] === "production";
15 | 
16 | esbuild
17 |   .build({
18 |     plugins: [
19 |       esbuildSvelte({
20 |         compilerOptions: { css: true },
21 |         preprocess: sveltePreprocess(),
22 |       }),
23 |       replace({
24 |         include: /svelte-dnd-action.*$/,
25 |         delimiters: ["", ""],
26 |         values: {
27 |           "window.": `activeWindow.`,
28 |           "document.": `activeDocument.`,
29 |         },
30 |       }),
31 |     ],
32 |     banner: {
33 |       js: banner,
34 |     },
35 |     entryPoints: ["./src/main.ts"],
36 |     bundle: true,
37 |     external: [
38 |       "obsidian",
39 |       "electron",
40 |       "@codemirror/autocomplete",
41 |       "@codemirror/closebrackets",
42 |       "@codemirror/collab",
43 |       "@codemirror/commands",
44 |       "@codemirror/comment",
45 |       "@codemirror/fold",
46 |       "@codemirror/gutter",
47 |       "@codemirror/highlight",
48 |       "@codemirror/history",
49 |       "@codemirror/language",
50 |       "@codemirror/lint",
51 |       "@codemirror/matchbrackets",
52 |       "@codemirror/panel",
53 |       "@codemirror/rangeset",
54 |       "@codemirror/rectangular-selection",
55 |       "@codemirror/search",
56 |       "@codemirror/state",
57 |       "@codemirror/stream-parser",
58 |       "@codemirror/text",
59 |       "@codemirror/tooltip",
60 |       "@codemirror/view",
61 |       ...builtins,
62 |     ],
63 |     format: "cjs",
64 |     watch: !prod,
65 |     target: "es2016",
66 |     logLevel: "info",
67 |     sourcemap: prod ? false : "inline",
68 |     treeShaking: true,
69 |     minify: prod,
70 |     outfile: "main.js",
71 |   })
72 |   .catch(() => process.exit(1));
73 | 


--------------------------------------------------------------------------------
/eslint.config.mjs:
--------------------------------------------------------------------------------
 1 | import typescriptEslint from "@typescript-eslint/eslint-plugin";
 2 | import tsdoc from "eslint-plugin-tsdoc";
 3 | import globals from "globals";
 4 | import tsParser from "@typescript-eslint/parser";
 5 | import path from "node:path";
 6 | import { fileURLToPath } from "node:url";
 7 | import js from "@eslint/js";
 8 | import { FlatCompat } from "@eslint/eslintrc";
 9 | 
10 | const __filename = fileURLToPath(import.meta.url);
11 | const __dirname = path.dirname(__filename);
12 | const compat = new FlatCompat({
13 |     baseDirectory: __dirname,
14 |     recommendedConfig: js.configs.recommended,
15 |     allConfig: js.configs.all
16 | });
17 | 
18 | export default [{
19 |     ignores: ["**/npm node_modules", "**/build"],
20 | }, ...compat.extends("eslint:recommended", "plugin:@typescript-eslint/recommended"), {
21 |     plugins: {
22 |         "@typescript-eslint": typescriptEslint,
23 |         tsdoc,
24 |     },
25 | 
26 |     languageOptions: {
27 |         globals: {
28 |             ...globals.node,
29 |         },
30 | 
31 |         parser: tsParser,
32 |         ecmaVersion: 5,
33 |         sourceType: "module",
34 |     },
35 | 
36 |     rules: {
37 |         "@typescript-eslint/ban-ts-comment": "off",
38 |         "@typescript-eslint/no-explicit-any": "off",
39 |         "@typescript-eslint/no-empty-interface": "off",
40 |         "@typescript-eslint/no-empty-function": "off",
41 |         "@typescript-eslint/no-unused-vars": "off",
42 |         "no-useless-escape": "off",
43 |         "tsdoc/syntax": "warn",
44 |     },
45 | }];


--------------------------------------------------------------------------------
/images/dark.svg:
--------------------------------------------------------------------------------
 1 | <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 2 | <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
 3 | <svg width="100%" height="100%" viewBox="0 0 1280 640" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;">
 4 |     <rect id="Artboard1" x="0" y="0" width="1280" height="640" style="fill:none;"/>
 5 |     <g id="Artboard11" serif:id="Artboard1">
 6 |         <g transform="matrix(0.542568,0,0,0.542568,140.484,59.0057)">
 7 |             <path d="M535.659,248.701L535.659,178.883L563.177,178.883C568.477,178.883 572.991,179.889 576.718,181.903C580.445,183.917 583.293,186.703 585.261,190.262C587.229,193.821 588.213,197.91 588.213,202.528C588.213,207.173 587.215,211.267 585.217,214.808C583.219,218.348 580.328,221.11 576.544,223.092C572.76,225.074 568.186,226.064 562.823,226.064L545.259,226.064L545.259,214.228L560.422,214.228C563.259,214.228 565.606,213.734 567.462,212.745C569.319,211.756 570.71,210.383 571.635,208.624C572.56,206.864 573.023,204.833 573.023,202.528C573.023,200.21 572.56,198.184 571.635,196.45C570.71,194.716 569.315,193.368 567.449,192.406C565.583,191.445 563.222,190.964 560.368,190.964L550.414,190.964L550.414,248.701L535.659,248.701Z" style="fill:white;fill-rule:nonzero;"/>
 8 |             <path d="M596.341,248.701L596.341,196.337L610.413,196.337L610.413,205.474L610.958,205.474C611.913,202.228 613.514,199.771 615.762,198.103C618.01,196.435 620.6,195.601 623.532,195.601C624.259,195.601 625.042,195.643 625.88,195.727C626.719,195.811 627.454,195.93 628.086,196.085L628.086,208.991C627.418,208.773 626.482,208.587 625.277,208.433C624.073,208.278 622.963,208.201 621.95,208.201C619.827,208.201 617.928,208.661 616.253,209.582C614.578,210.502 613.259,211.779 612.295,213.413C611.332,215.047 610.85,216.937 610.85,219.083L610.85,248.701L596.341,248.701Z" style="fill:white;fill-rule:nonzero;"/>
 9 |             <path d="M654.077,249.71C648.777,249.71 644.202,248.581 640.352,246.325C636.502,244.068 633.532,240.913 631.441,236.861C629.35,232.809 628.304,228.092 628.304,222.71C628.304,217.31 629.35,212.579 631.441,208.518C633.532,204.456 636.502,201.297 640.352,199.041C644.202,196.784 648.777,195.655 654.077,195.655C659.377,195.655 663.952,196.784 667.802,199.041C671.652,201.297 674.623,204.456 676.713,208.518C678.804,212.579 679.85,217.31 679.85,222.71C679.85,228.092 678.804,232.809 676.713,236.861C674.623,240.913 671.652,244.068 667.802,246.325C663.952,248.581 659.377,249.71 654.077,249.71ZM654.159,238.474C656.55,238.474 658.556,237.785 660.179,236.408C661.802,235.03 663.027,233.148 663.854,230.762C664.682,228.376 665.095,225.664 665.095,222.628C665.095,219.578 664.682,216.859 663.854,214.47C663.027,212.081 661.802,210.194 660.179,208.808C658.556,207.421 656.55,206.728 654.159,206.728C651.713,206.728 649.666,207.421 648.016,208.808C646.366,210.194 645.127,212.081 644.3,214.47C643.472,216.859 643.059,219.578 643.059,222.628C643.059,225.664 643.472,228.376 644.3,230.762C645.127,233.148 646.366,235.03 648.016,236.408C649.666,237.785 651.713,238.474 654.159,238.474Z" style="fill:white;fill-rule:nonzero;"/>
10 |             <path d="M687.705,196.337L702.213,196.337L702.213,251.292C702.213,255.337 701.417,258.61 699.824,261.11C698.23,263.61 695.954,265.439 692.995,266.599C690.036,267.758 686.5,268.337 682.386,268.337C681.868,268.337 681.38,268.33 680.924,268.317C680.467,268.303 679.973,268.283 679.441,268.255L679.441,256.91C679.822,256.937 680.158,256.958 680.446,256.971C680.735,256.985 681.036,256.992 681.35,256.992C683.681,256.992 685.324,256.495 686.276,255.502C687.228,254.509 687.705,253.023 687.705,251.046L687.705,196.337ZM694.931,189.573C692.777,189.573 690.929,188.855 689.388,187.419C687.847,185.983 687.077,184.256 687.077,182.237C687.077,180.219 687.847,178.492 689.388,177.055C690.929,175.619 692.777,174.901 694.931,174.901C697.1,174.901 698.951,175.619 700.485,177.055C702.019,178.492 702.786,180.219 702.786,182.237C702.786,184.256 702.019,185.983 700.485,187.419C698.951,188.855 697.1,189.573 694.931,189.573Z" style="fill:white;fill-rule:nonzero;"/>
11 |             <path d="M734.313,249.71C728.941,249.71 724.315,248.618 720.435,246.434C716.555,244.25 713.571,241.141 711.483,237.107C709.394,233.073 708.35,228.292 708.35,222.765C708.35,217.374 709.398,212.644 711.493,208.576C713.589,204.508 716.536,201.337 720.336,199.064C724.136,196.792 728.604,195.655 733.741,195.655C737.204,195.655 740.429,196.205 743.416,197.305C746.402,198.405 749.013,200.061 751.25,202.272C753.486,204.484 755.232,207.253 756.486,210.581C757.741,213.908 758.368,217.796 758.368,222.246L758.368,226.228L714.159,226.228L714.159,217.228L744.705,217.228C744.691,215.146 744.228,213.298 743.317,211.682C742.406,210.066 741.149,208.795 739.546,207.87C737.944,206.945 736.091,206.482 733.986,206.482C731.79,206.482 729.845,206.993 728.149,208.013C726.454,209.033 725.128,210.389 724.171,212.08C723.214,213.771 722.722,215.651 722.695,217.719L722.695,226.282C722.695,228.874 723.181,231.112 724.154,232.999C725.127,234.885 726.499,236.337 728.272,237.355C730.045,238.374 732.14,238.883 734.559,238.883C736.182,238.883 737.66,238.653 738.994,238.194C740.328,237.735 741.477,237.055 742.441,236.152C743.405,235.25 744.132,234.142 744.623,232.828L758.04,233.701C757.359,236.937 755.97,239.754 753.875,242.152C751.779,244.55 749.076,246.409 745.765,247.729C742.453,249.05 738.636,249.71 734.313,249.71Z" style="fill:white;fill-rule:nonzero;"/>
12 |             <path d="M790.032,249.71C784.659,249.71 780.05,248.568 776.204,246.284C772.359,243.999 769.407,240.827 767.348,236.766C765.288,232.704 764.259,228.019 764.259,222.71C764.259,217.365 765.3,212.659 767.382,208.593C769.464,204.527 772.425,201.354 776.266,199.075C780.107,196.795 784.677,195.655 789.977,195.655C794.532,195.655 798.528,196.484 801.967,198.141C805.405,199.797 808.122,202.129 810.118,205.136C812.113,208.143 813.209,211.664 813.404,215.701L799.713,215.701C799.318,213.096 798.301,210.99 796.663,209.384C795.024,207.777 792.868,206.974 790.195,206.974C787.959,206.974 786.002,207.582 784.325,208.797C782.647,210.013 781.343,211.779 780.411,214.095C779.479,216.411 779.013,219.219 779.013,222.519C779.013,225.855 779.475,228.693 780.397,231.032C781.32,233.37 782.62,235.155 784.297,236.384C785.975,237.614 787.941,238.229 790.195,238.229C791.863,238.229 793.359,237.889 794.682,237.209C796.004,236.529 797.103,235.538 797.978,234.236C798.853,232.934 799.432,231.355 799.713,229.501L813.404,229.501C813.181,233.505 812.1,237.027 810.159,240.066C808.218,243.104 805.542,245.471 802.13,247.167C798.719,248.862 794.686,249.71 790.032,249.71Z" style="fill:white;fill-rule:nonzero;"/>
13 |             <path d="M847.823,196.337L847.823,207.246L816.268,207.246L816.268,196.337L847.823,196.337ZM823.441,183.792L837.95,183.792L837.95,232.596C837.95,233.942 838.159,234.986 838.577,235.729C838.995,236.473 839.572,236.991 840.309,237.284C841.045,237.577 841.895,237.724 842.859,237.724C843.554,237.724 844.244,237.662 844.928,237.54C845.612,237.417 846.131,237.315 846.486,237.233L848.777,248.06C848.054,248.292 847.03,248.56 845.705,248.865C844.38,249.169 842.777,249.355 840.895,249.424C837.395,249.56 834.332,249.095 831.704,248.029C829.077,246.964 827.036,245.301 825.581,243.042C824.127,240.783 823.413,237.946 823.441,234.533L823.441,183.792Z" style="fill:white;fill-rule:nonzero;"/>
14 |             <path d="M897.486,211.255L884.205,212.073C883.968,210.951 883.477,209.928 882.732,209.005C881.986,208.083 881.003,207.345 879.783,206.793C878.562,206.24 877.109,205.964 875.422,205.964C873.172,205.964 871.275,206.435 869.729,207.376C868.184,208.317 867.418,209.564 867.431,211.119C867.418,212.383 867.91,213.444 868.908,214.303C869.905,215.162 871.622,215.855 874.059,216.383L883.55,218.292C888.64,219.333 892.432,221.011 894.926,223.327C897.419,225.643 898.672,228.692 898.686,232.474C898.672,235.91 897.664,238.923 895.662,241.511C893.66,244.1 890.91,246.113 887.412,247.552C883.914,248.99 879.9,249.71 875.368,249.71C868.432,249.71 862.91,248.264 858.803,245.374C854.697,242.483 852.3,238.537 851.614,233.537L865.877,232.773C866.318,234.896 867.364,236.509 869.017,237.611C870.669,238.713 872.795,239.265 875.395,239.265C877.931,239.265 879.98,238.767 881.542,237.772C883.103,236.776 883.891,235.501 883.905,233.946C883.891,232.619 883.34,231.53 882.251,230.68C881.162,229.83 879.477,229.173 877.195,228.71L868.141,226.91C863.018,225.896 859.211,224.126 856.72,221.599C854.23,219.071 852.991,215.851 853.004,211.937C852.991,208.573 853.901,205.677 855.735,203.247C857.569,200.818 860.153,198.945 863.487,197.629C866.822,196.313 870.718,195.655 875.177,195.655C881.79,195.655 887.003,197.051 890.814,199.842C894.626,202.632 896.85,206.437 897.486,211.255Z" style="fill:white;fill-rule:nonzero;"/>
15 |             <path d="M958.168,196.337L958.168,205.883L927.213,205.883L927.213,196.337L958.168,196.337ZM934.959,248.701L934.959,191.401C934.959,187.874 935.691,184.942 937.154,182.605C938.618,180.269 940.588,178.519 943.066,177.355C945.543,176.192 948.295,175.61 951.323,175.61C953.464,175.61 955.361,175.778 957.016,176.114C958.67,176.451 959.9,176.755 960.705,177.028L958.223,186.601C957.704,186.437 957.049,186.269 956.255,186.096C955.462,185.924 954.582,185.837 953.614,185.837C951.309,185.837 949.683,186.389 948.735,187.494C947.788,188.599 947.314,190.174 947.314,192.219L947.314,248.701L934.959,248.701Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
16 |             <path d="M986.941,249.737C981.832,249.737 977.401,248.61 973.649,246.355C969.896,244.101 966.992,240.949 964.935,236.898C962.878,232.848 961.85,228.128 961.85,222.737C961.85,217.319 962.878,212.578 964.935,208.515C966.992,204.451 969.896,201.292 973.649,199.037C977.401,196.783 981.832,195.655 986.941,195.655C992.05,195.655 996.48,196.783 1000.23,199.037C1003.99,201.292 1006.89,204.451 1008.95,208.515C1011,212.578 1012.03,217.319 1012.03,222.737C1012.03,228.128 1011,232.848 1008.95,236.898C1006.89,240.949 1003.99,244.101 1000.23,246.355C996.48,248.61 992.05,249.737 986.941,249.737ZM986.995,239.837C989.786,239.837 992.109,239.071 993.963,237.54C995.818,236.008 997.206,233.946 998.129,231.355C999.052,228.765 999.513,225.874 999.513,222.683C999.513,219.483 999.052,216.583 998.129,213.983C997.206,211.383 995.818,209.31 993.963,207.765C992.109,206.219 989.786,205.446 986.995,205.446C984.168,205.446 981.818,206.219 979.945,207.765C978.073,209.31 976.675,211.383 975.752,213.983C974.829,216.583 974.368,219.483 974.368,222.683C974.368,225.874 974.829,228.765 975.752,231.355C976.675,233.946 978.073,236.008 979.945,237.54C981.818,239.071 984.168,239.837 986.995,239.837Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
17 |             <path d="M1021.36,248.701L1021.36,196.337L1033.33,196.337L1033.33,205.064L1033.88,205.064C1034.83,202.037 1036.47,199.698 1038.81,198.048C1041.14,196.398 1043.8,195.573 1046.8,195.573C1047.49,195.573 1048.25,195.605 1049.11,195.669C1049.96,195.733 1050.68,195.824 1051.25,195.942L1051.25,207.274C1050.71,207.106 1049.88,206.945 1048.76,206.793C1047.63,206.641 1046.55,206.564 1045.52,206.564C1043.26,206.564 1041.24,207.047 1039.46,208.013C1037.68,208.979 1036.28,210.316 1035.25,212.022C1034.23,213.729 1033.71,215.692 1033.71,217.91L1033.71,248.701L1021.36,248.701Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
18 |             <path d="M1147.03,213.792C1147.03,221.319 1145.63,227.758 1142.83,233.108C1140.02,238.458 1136.2,242.553 1131.36,245.394C1126.53,248.235 1121.06,249.655 1114.96,249.655C1108.84,249.655 1103.37,248.23 1098.53,245.38C1093.7,242.53 1089.89,238.431 1087.09,233.081C1084.29,227.731 1082.89,221.301 1082.89,213.792C1082.89,206.264 1084.29,199.826 1087.09,194.476C1089.89,189.126 1093.7,185.03 1098.53,182.189C1103.37,179.349 1108.84,177.928 1114.96,177.928C1121.06,177.928 1126.53,179.349 1131.36,182.189C1136.2,185.03 1140.02,189.126 1142.83,194.476C1145.63,199.826 1147.03,206.264 1147.03,213.792ZM1134.32,213.792C1134.32,208.492 1133.5,204.019 1131.85,200.374C1130.2,196.728 1127.92,193.967 1125.01,192.09C1122.1,190.213 1118.75,189.274 1114.96,189.274C1111.17,189.274 1107.82,190.213 1104.91,192.09C1101.99,193.967 1099.71,196.728 1098.07,200.374C1096.42,204.019 1095.6,208.492 1095.6,213.792C1095.6,219.092 1096.42,223.565 1098.07,227.21C1099.71,230.855 1101.99,233.617 1104.91,235.494C1107.82,237.371 1111.17,238.31 1114.96,238.31C1118.75,238.31 1122.1,237.371 1125.01,235.494C1127.92,233.617 1130.2,230.855 1131.85,227.21C1133.5,223.565 1134.32,219.092 1134.32,213.792Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
19 |             <path d="M1157.72,248.701L1157.72,178.883L1170.08,178.883L1170.08,204.982L1170.6,204.982C1171.22,203.728 1172.12,202.377 1173.28,200.929C1174.44,199.482 1176.01,198.241 1177.98,197.207C1179.96,196.172 1182.49,195.655 1185.57,195.655C1189.6,195.655 1193.24,196.685 1196.51,198.744C1199.78,200.803 1202.37,203.837 1204.29,207.846C1206.21,211.855 1207.17,216.774 1207.17,222.601C1207.17,228.346 1206.23,233.232 1204.35,237.257C1202.46,241.282 1199.89,244.35 1196.64,246.461C1193.39,248.573 1189.7,249.628 1185.6,249.628C1182.6,249.628 1180.1,249.129 1178.12,248.132C1176.14,247.134 1174.55,245.923 1173.36,244.498C1172.16,243.072 1171.24,241.719 1170.6,240.437L1169.86,240.437L1169.86,248.701L1157.72,248.701ZM1169.83,222.519C1169.83,225.91 1170.31,228.879 1171.28,231.427C1172.24,233.974 1173.64,235.958 1175.47,237.379C1177.3,238.799 1179.53,239.51 1182.16,239.51C1184.87,239.51 1187.14,238.777 1188.99,237.311C1190.83,235.845 1192.23,233.831 1193.17,231.27C1194.12,228.709 1194.6,225.792 1194.6,222.519C1194.6,219.274 1194.13,216.391 1193.19,213.87C1192.26,211.35 1190.87,209.37 1189.03,207.932C1187.18,206.493 1184.89,205.774 1182.16,205.774C1179.51,205.774 1177.26,206.466 1175.43,207.85C1173.6,209.234 1172.21,211.18 1171.26,213.686C1170.31,216.193 1169.83,219.137 1169.83,222.519Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
20 |             <path d="M1258.17,210.192L1246.9,211.419C1246.6,210.269 1246.05,209.195 1245.26,208.197C1244.47,207.2 1243.42,206.392 1242.1,205.774C1240.79,205.156 1239.18,204.847 1237.28,204.847C1234.71,204.847 1232.56,205.404 1230.82,206.52C1229.08,207.636 1228.21,209.087 1228.22,210.874C1228.21,212.383 1228.78,213.617 1229.93,214.576C1231.08,215.535 1232.99,216.319 1235.64,216.928L1244.56,218.837C1249.51,219.91 1253.2,221.607 1255.63,223.927C1258.06,226.247 1259.28,229.278 1259.29,233.019C1259.28,236.31 1258.32,239.212 1256.41,241.726C1254.51,244.239 1251.88,246.203 1248.52,247.617C1245.17,249.031 1241.3,249.737 1236.92,249.737C1230.52,249.737 1225.36,248.387 1221.46,245.687C1217.55,242.987 1215.22,239.228 1214.45,234.41L1226.5,233.265C1227.04,235.619 1228.2,237.398 1229.98,238.603C1231.76,239.808 1234.06,240.41 1236.89,240.41C1239.84,240.41 1242.2,239.811 1243.98,238.613C1245.76,237.415 1246.65,235.923 1246.66,234.137C1246.65,232.646 1246.07,231.411 1244.92,230.432C1243.77,229.452 1242,228.705 1239.6,228.192L1230.65,226.31C1225.64,225.255 1221.93,223.486 1219.52,221.002C1217.11,218.518 1215.91,215.369 1215.92,211.556C1215.91,208.328 1216.8,205.526 1218.58,203.149C1220.36,200.771 1222.84,198.928 1226.03,197.619C1229.22,196.31 1232.91,195.655 1237.11,195.655C1243.25,195.655 1248.08,196.965 1251.61,199.583C1255.14,202.201 1257.33,205.737 1258.17,210.192Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
21 |             <path d="M1266.95,248.701L1266.95,196.337L1279.3,196.337L1279.3,248.701L1266.95,248.701ZM1273.17,188.919C1271.21,188.919 1269.53,188.262 1268.13,186.948C1266.72,185.634 1266.02,184.054 1266.02,182.209C1266.02,180.364 1266.73,178.785 1268.13,177.471C1269.53,176.158 1271.21,175.501 1273.17,175.501C1275.14,175.501 1276.82,176.158 1278.22,177.472C1279.62,178.786 1280.31,180.365 1280.31,182.21C1280.31,184.055 1279.62,185.635 1278.22,186.949C1276.82,188.262 1275.14,188.919 1273.17,188.919Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
22 |             <path d="M1309.17,249.628C1305.06,249.628 1301.38,248.573 1298.12,246.461C1294.87,244.35 1292.3,241.282 1290.42,237.257C1288.54,233.232 1287.6,228.346 1287.6,222.601C1287.6,216.774 1288.55,211.855 1290.47,207.846C1292.39,203.837 1294.98,200.803 1298.25,198.744C1301.52,196.685 1305.17,195.655 1309.19,195.655C1312.28,195.655 1314.81,196.172 1316.78,197.207C1318.76,198.241 1320.32,199.482 1321.49,200.929C1322.65,202.377 1323.54,203.728 1324.17,204.982L1324.69,204.982L1324.69,178.883L1337.04,178.883L1337.04,248.701L1324.9,248.701L1324.9,240.437L1324.17,240.437C1323.52,241.719 1322.6,243.072 1321.41,244.498C1320.21,245.923 1318.62,247.134 1316.64,248.132C1314.66,249.129 1312.17,249.628 1309.17,249.628ZM1312.6,239.51C1315.23,239.51 1317.46,238.799 1319.29,237.379C1321.12,235.958 1322.52,233.974 1323.49,231.427C1324.45,228.879 1324.93,225.91 1324.93,222.519C1324.93,219.137 1324.46,216.193 1323.51,213.686C1322.56,211.18 1321.17,209.234 1319.33,207.85C1317.5,206.466 1315.26,205.774 1312.6,205.774C1309.87,205.774 1307.58,206.493 1305.74,207.932C1303.89,209.37 1302.5,211.35 1301.57,213.87C1300.63,216.391 1300.17,219.274 1300.17,222.519C1300.17,225.792 1300.64,228.709 1301.59,231.27C1302.54,233.831 1303.93,235.845 1305.78,237.311C1307.62,238.777 1309.89,239.51 1312.6,239.51Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
23 |             <path d="M1349.31,248.701L1349.31,196.337L1361.67,196.337L1361.67,248.701L1349.31,248.701ZM1355.54,188.919C1353.58,188.919 1351.89,188.262 1350.49,186.948C1349.09,185.634 1348.39,184.054 1348.39,182.209C1348.39,180.364 1349.09,178.785 1350.49,177.471C1351.89,176.158 1353.58,175.501 1355.53,175.501C1357.5,175.501 1359.18,176.158 1360.58,177.472C1361.98,178.786 1362.68,180.365 1362.68,182.21C1362.68,184.055 1361.98,185.635 1360.58,186.949C1359.18,188.262 1357.5,188.919 1355.54,188.919Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
24 |             <path d="M1387.17,249.765C1383.84,249.765 1380.85,249.166 1378.21,247.968C1375.56,246.77 1373.47,245.002 1371.94,242.663C1370.4,240.325 1369.63,237.437 1369.63,234.001C1369.63,231.055 1370.18,228.613 1371.28,226.675C1372.38,224.736 1373.87,223.187 1375.76,222.028C1377.65,220.869 1379.78,219.993 1382.15,219.4C1384.52,218.807 1386.97,218.374 1389.51,218.101C1392.6,217.764 1395.09,217.465 1397,217.204C1398.9,216.943 1400.29,216.535 1401.16,215.98C1402.03,215.426 1402.47,214.56 1402.47,213.383L1402.47,213.164C1402.47,210.601 1401.71,208.614 1400.19,207.205C1398.68,205.796 1396.48,205.092 1393.6,205.092C1390.58,205.092 1388.19,205.753 1386.43,207.076C1384.67,208.399 1383.48,209.955 1382.86,211.746L1371.35,210.11C1372.26,206.928 1373.76,204.263 1375.85,202.116C1377.95,199.968 1380.5,198.354 1383.52,197.275C1386.54,196.195 1389.89,195.655 1393.55,195.655C1396.06,195.655 1398.57,195.95 1401.07,196.538C1403.58,197.127 1405.87,198.101 1407.94,199.46C1410.01,200.819 1411.67,202.658 1412.93,204.976C1414.19,207.294 1414.82,210.187 1414.82,213.655L1414.82,248.701L1402.96,248.701L1402.96,241.501L1402.55,241.501C1401.8,242.965 1400.75,244.326 1399.39,245.585C1398.03,246.844 1396.34,247.855 1394.31,248.619C1392.29,249.383 1389.9,249.765 1387.17,249.765ZM1390.36,240.683C1392.84,240.683 1394.99,240.189 1396.81,239.203C1398.63,238.217 1400.04,236.908 1401.03,235.276C1402.03,233.644 1402.52,231.855 1402.52,229.91L1402.52,223.746C1402.12,224.074 1401.46,224.373 1400.55,224.643C1399.64,224.913 1398.61,225.152 1397.47,225.359C1396.32,225.566 1395.19,225.748 1394.08,225.904C1392.96,226.061 1392,226.196 1391.18,226.31C1389.34,226.565 1387.7,226.975 1386.24,227.541C1384.79,228.107 1383.65,228.895 1382.81,229.907C1381.97,230.918 1381.55,232.219 1381.55,233.81C1381.55,236.069 1382.38,237.779 1384.04,238.94C1385.69,240.102 1387.8,240.683 1390.36,240.683Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
25 |             <path d="M1438.58,218.019L1438.58,248.701L1426.22,248.701L1426.22,196.337L1438.03,196.337L1438.03,205.228L1438.66,205.228C1439.85,202.305 1441.77,199.979 1444.42,198.25C1447.07,196.52 1450.35,195.655 1454.26,195.655C1457.87,195.655 1461.02,196.427 1463.71,197.97C1466.4,199.513 1468.49,201.752 1469.98,204.686C1471.47,207.62 1472.21,211.183 1472.2,215.374L1472.2,248.701L1459.85,248.701L1459.85,217.283C1459.86,213.778 1458.96,211.038 1457.14,209.064C1455.33,207.089 1452.83,206.101 1449.65,206.101C1447.49,206.101 1445.58,206.569 1443.91,207.506C1442.25,208.442 1440.94,209.799 1440,211.576C1439.06,213.353 1438.59,215.501 1438.58,218.019Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
26 |         </g>
27 |         <g transform="matrix(1,0,0,1,86.8063,26.5532)">
28 |             <path d="M348.403,358.032L348.403,288.214L375.921,288.214C381.221,288.214 385.734,289.22 389.462,291.234C393.189,293.248 396.037,296.034 398.005,299.593C399.973,303.152 400.957,307.241 400.957,311.859C400.957,316.504 399.958,320.598 397.961,324.138C395.963,327.679 393.072,330.441 389.288,332.423C385.504,334.404 380.93,335.395 375.566,335.395L358.003,335.395L358.003,323.559L373.166,323.559C376.003,323.559 378.35,323.065 380.206,322.076C382.063,321.087 383.454,319.713 384.379,317.954C385.304,316.195 385.767,314.163 385.767,311.859C385.767,309.541 385.304,307.514 384.379,305.78C383.454,304.046 382.058,302.699 380.192,301.737C378.327,300.776 375.966,300.295 373.112,300.295L363.157,300.295L363.157,358.032L348.403,358.032Z" style="fill:url(#_Linear1);fill-rule:nonzero;"/>
29 |             <rect x="409.085" y="288.214" width="14.509" height="69.818" style="fill:url(#_Linear2);fill-rule:nonzero;"/>
30 |             <path d="M446.775,359.013C443.444,359.013 440.47,358.431 437.854,357.265C435.238,356.099 433.176,354.361 431.667,352.052C430.157,349.743 429.403,346.864 429.403,343.414C429.403,340.495 429.933,338.051 430.992,336.081C432.051,334.11 433.501,332.523 435.342,331.318C437.183,330.114 439.281,329.2 441.638,328.577C443.995,327.954 446.471,327.518 449.066,327.268C452.098,326.968 454.547,326.676 456.413,326.392C458.279,326.108 459.634,325.681 460.48,325.11C461.326,324.54 461.748,323.695 461.748,322.577L461.748,322.386C461.748,320.223 461.069,318.55 459.71,317.368C458.351,316.186 456.439,315.595 453.976,315.595C451.362,315.595 449.281,316.167 447.733,317.31C446.186,318.453 445.166,319.891 444.675,321.623L431.23,320.532C431.912,317.35 433.252,314.594 435.249,312.265C437.247,309.935 439.832,308.14 443.005,306.878C446.178,305.617 449.853,304.986 454.03,304.986C456.952,304.986 459.746,305.328 462.409,306.012C465.073,306.697 467.444,307.751 469.521,309.176C471.598,310.601 473.24,312.433 474.447,314.671C475.654,316.91 476.257,319.591 476.257,322.714L476.257,358.032L462.484,358.032L462.484,350.777L462.075,350.777C461.23,352.404 460.106,353.838 458.704,355.079C457.302,356.32 455.609,357.286 453.625,357.977C451.641,358.668 449.358,359.013 446.775,359.013ZM450.948,349.005C453.08,349.005 454.963,348.577 456.597,347.723C458.231,346.868 459.512,345.711 460.439,344.252C461.367,342.793 461.83,341.15 461.83,339.323L461.83,333.759C461.394,334.045 460.779,334.309 459.986,334.55C459.193,334.791 458.311,335.007 457.34,335.197C456.37,335.388 455.397,335.559 454.422,335.709C453.447,335.859 452.562,335.991 451.767,336.104C450.057,336.35 448.565,336.746 447.29,337.294C446.015,337.842 445.024,338.576 444.317,339.496C443.611,340.417 443.257,341.559 443.257,342.923C443.257,344.914 443.98,346.425 445.425,347.457C446.871,348.489 448.712,349.005 450.948,349.005Z" style="fill:url(#_Linear3);fill-rule:nonzero;"/>
31 |             <path d="M485.994,358.032L485.994,305.668L500.503,305.668L500.503,358.032L485.994,358.032ZM493.286,298.904C491.124,298.904 489.273,298.186 487.732,296.749C486.191,295.312 485.421,293.585 485.421,291.567C485.421,289.549 486.192,287.822 487.735,286.386C489.278,284.95 491.125,284.232 493.275,284.232C495.443,284.232 497.294,284.95 498.829,286.387C500.363,287.824 501.13,289.551 501.13,291.569C501.13,293.587 500.363,295.314 498.829,296.75C497.294,298.186 495.447,298.904 493.286,298.904Z" style="fill:url(#_Linear4);fill-rule:nonzero;"/>
32 |             <path d="M523.275,327.759L523.275,358.032L508.767,358.032L508.767,305.668L522.594,305.668L522.594,314.914L523.193,314.914C524.366,311.859 526.315,309.441 529.04,307.659C531.765,305.877 535.071,304.986 538.957,304.986C542.598,304.986 545.772,305.783 548.479,307.376C551.185,308.969 553.288,311.236 554.785,314.177C556.283,317.118 557.025,320.618 557.012,324.677L557.012,358.032L542.503,358.032L542.503,327.268C542.516,324.068 541.697,321.563 540.045,319.754C538.393,317.945 536.112,317.041 533.203,317.041C531.248,317.041 529.524,317.464 528.031,318.312C526.538,319.16 525.375,320.382 524.543,321.98C523.712,323.578 523.289,325.504 523.275,327.759Z" style="fill:url(#_Linear5);fill-rule:nonzero;"/>
33 |             <path d="M619.794,305.668L619.794,316.577L588.239,316.577L588.239,305.668L619.794,305.668ZM595.412,293.123L609.921,293.123L609.921,341.927C609.921,343.272 610.13,344.317 610.548,345.06C610.966,345.803 611.543,346.322 612.28,346.615C613.016,346.908 613.866,347.054 614.83,347.054C615.525,347.054 616.215,346.993 616.899,346.87C617.583,346.748 618.103,346.646 618.457,346.564L620.748,357.391C620.025,357.623 619.001,357.891 617.676,358.196C616.351,358.5 614.748,358.686 612.866,358.755C609.366,358.891 606.303,358.426 603.675,357.36C601.048,356.294 599.007,354.632 597.553,352.373C596.098,350.113 595.384,347.277 595.412,343.864L595.412,293.123Z" style="fill:url(#_Linear6);fill-rule:nonzero;"/>
34 |             <path d="M650.148,359.041C644.775,359.041 640.149,357.949 636.27,355.765C632.39,353.581 629.406,350.472 627.317,346.438C625.229,342.404 624.185,337.623 624.185,332.095C624.185,326.704 625.232,321.975 627.328,317.907C629.423,313.839 632.371,310.668 636.171,308.395C639.971,306.123 644.439,304.986 649.575,304.986C653.039,304.986 656.264,305.536 659.251,306.636C662.237,307.736 664.848,309.392 667.085,311.603C669.321,313.815 671.066,316.584 672.321,319.911C673.576,323.239 674.203,327.127 674.203,331.577L674.203,335.559L629.994,335.559L629.994,326.559L660.539,326.559C660.525,324.477 660.063,322.628 659.152,321.012C658.24,319.397 656.984,318.126 655.381,317.201C653.779,316.276 651.925,315.813 649.821,315.813C647.625,315.813 645.68,316.324 643.984,317.344C642.289,318.364 640.963,319.72 640.006,321.411C639.049,323.102 638.557,324.982 638.53,327.05L638.53,335.613C638.53,338.204 639.016,340.443 639.989,342.33C640.962,344.216 642.334,345.668 644.107,346.686C645.88,347.704 647.975,348.214 650.394,348.214C652.016,348.214 653.495,347.984 654.829,347.525C656.163,347.066 657.312,346.385 658.276,345.483C659.239,344.581 659.967,343.473 660.457,342.159L673.875,343.032C673.193,346.268 671.805,349.085 669.71,351.483C667.614,353.881 664.911,355.74 661.599,357.06C658.288,358.38 654.471,359.041 650.148,359.041Z" style="fill:url(#_Linear7);fill-rule:nonzero;"/>
35 |             <path d="M692.993,305.668L702.594,323.968L712.439,305.668L727.357,305.668L712.166,331.85L727.766,358.032L712.93,358.032L702.594,339.923L692.421,358.032L677.421,358.032L692.994,331.85L677.994,305.668L692.993,305.668Z" style="fill:url(#_Linear8);fill-rule:nonzero;"/>
36 |             <path d="M760.521,305.668L760.521,316.577L728.966,316.577L728.966,305.668L760.521,305.668ZM736.139,293.123L750.648,293.123L750.648,341.927C750.648,343.272 750.857,344.317 751.275,345.06C751.693,345.803 752.271,346.322 753.007,346.615C753.744,346.908 754.594,347.054 755.557,347.054C756.253,347.054 756.943,346.993 757.627,346.87C758.31,346.748 758.83,346.646 759.185,346.564L761.476,357.391C760.753,357.623 759.729,357.891 758.404,358.196C757.079,358.5 755.475,358.686 753.594,358.755C750.094,358.891 747.03,358.426 744.403,357.36C741.775,356.294 739.734,354.632 738.28,352.373C736.825,350.113 736.112,347.277 736.139,343.864L736.139,293.123Z" style="fill:url(#_Linear9);fill-rule:nonzero;"/>
37 |             <path d="M193.221,473.668L193.221,401.668L207.539,401.668L207.539,410.477L208.166,410.477C208.812,409.05 209.741,407.605 210.955,406.144C212.169,404.683 213.759,403.458 215.728,402.469C217.696,401.481 220.139,400.986 223.057,400.986C226.893,400.986 230.422,401.979 233.642,403.966C236.863,405.952 239.44,408.941 241.374,412.932C243.308,416.923 244.275,421.913 244.275,427.904C244.275,433.75 243.336,438.677 241.456,442.686C239.576,446.695 237.031,449.729 233.82,451.788C230.608,453.847 227.012,454.877 223.03,454.877C220.212,454.877 217.822,454.41 215.86,453.476C213.899,452.542 212.294,451.367 211.047,449.951C209.799,448.535 208.839,447.105 208.166,445.659L207.73,445.659L207.73,473.668L193.221,473.668ZM207.43,427.85C207.43,430.959 207.863,433.671 208.729,435.987C209.594,438.304 210.845,440.104 212.479,441.388C214.113,442.672 216.094,443.314 218.421,443.314C220.803,443.314 222.811,442.66 224.445,441.354C226.079,440.047 227.32,438.231 228.168,435.906C229.015,433.581 229.439,430.895 229.439,427.85C229.439,424.823 229.02,422.16 228.181,419.862C227.343,417.564 226.106,415.771 224.472,414.483C222.838,413.194 220.821,412.549 218.421,412.549C216.075,412.549 214.085,413.176 212.451,414.428C210.817,415.68 209.572,417.451 208.715,419.739C207.858,422.028 207.43,424.732 207.43,427.85Z" style="fill:white;fill-rule:nonzero;"/>
38 |             <path d="M251.721,454.032L251.721,401.668L265.793,401.668L265.793,410.804L266.339,410.804C267.293,407.559 268.894,405.102 271.142,403.434C273.39,401.766 275.98,400.932 278.912,400.932C279.639,400.932 280.422,400.974 281.261,401.058C282.099,401.142 282.834,401.261 283.466,401.416L283.466,414.322C282.798,414.104 281.862,413.918 280.657,413.763C279.453,413.609 278.344,413.532 277.33,413.532C275.207,413.532 273.308,413.992 271.633,414.912C269.958,415.833 268.639,417.11 267.675,418.744C266.712,420.378 266.23,422.268 266.23,424.414L266.23,454.032L251.721,454.032Z" style="fill:white;fill-rule:nonzero;"/>
39 |             <path d="M309.457,455.041C304.157,455.041 299.582,453.912 295.732,451.655C291.882,449.399 288.912,446.244 286.821,442.192C284.73,438.14 283.685,433.423 283.685,428.041C283.685,422.641 284.73,417.91 286.821,413.849C288.912,409.787 291.882,406.628 295.732,404.371C299.582,402.115 304.157,400.986 309.457,400.986C314.757,400.986 319.332,402.115 323.182,404.371C327.032,406.628 330.003,409.787 332.094,413.849C334.185,417.91 335.23,422.641 335.23,428.041C335.23,433.423 334.185,438.14 332.094,442.192C330.003,446.244 327.032,449.399 323.182,451.655C319.332,453.912 314.757,455.041 309.457,455.041ZM309.539,443.804C311.93,443.804 313.937,443.116 315.56,441.738C317.182,440.361 318.407,438.479 319.235,436.093C320.062,433.707 320.476,430.995 320.476,427.959C320.476,424.909 320.062,422.19 319.235,419.801C318.407,417.412 317.182,415.525 315.56,414.138C313.937,412.752 311.93,412.059 309.539,412.059C307.094,412.059 305.046,412.752 303.396,414.138C301.746,415.525 300.507,417.412 299.68,419.801C298.853,422.19 298.439,424.909 298.439,427.959C298.439,430.995 298.853,433.707 299.68,436.093C300.507,438.479 301.746,440.361 303.396,441.738C305.046,443.116 307.094,443.804 309.539,443.804Z" style="fill:white;fill-rule:nonzero;"/>
40 |             <path d="M343.085,401.668L357.594,401.668L357.594,456.623C357.594,460.668 356.797,463.941 355.204,466.441C353.611,468.941 351.335,470.77 348.376,471.929C345.417,473.089 341.88,473.668 337.767,473.668C337.248,473.668 336.761,473.661 336.304,473.648C335.847,473.634 335.353,473.613 334.821,473.586L334.821,462.241C335.203,462.268 335.538,462.289 335.827,462.302C336.115,462.316 336.416,462.323 336.73,462.323C339.062,462.323 340.704,461.826 341.656,460.833C342.609,459.84 343.085,458.354 343.085,456.377L343.085,401.668ZM350.312,394.904C348.157,394.904 346.309,394.186 344.769,392.75C343.228,391.314 342.457,389.586 342.457,387.568C342.457,385.55 343.228,383.822 344.769,382.386C346.309,380.95 348.157,380.232 350.312,380.232C352.48,380.232 354.331,380.95 355.865,382.386C357.399,383.822 358.166,385.55 358.166,387.568C358.166,389.586 357.399,391.314 355.865,392.75C354.331,394.186 352.48,394.904 350.312,394.904Z" style="fill:white;fill-rule:nonzero;"/>
41 |             <path d="M389.693,455.041C384.321,455.041 379.695,453.949 375.815,451.765C371.936,449.581 368.952,446.472 366.863,442.438C364.774,438.404 363.73,433.623 363.73,428.095C363.73,422.704 364.778,417.975 366.873,413.907C368.969,409.839 371.917,406.668 375.716,404.395C379.516,402.123 383.984,400.986 389.121,400.986C392.585,400.986 395.81,401.536 398.796,402.636C401.782,403.736 404.394,405.392 406.63,407.603C408.866,409.815 410.612,412.584 411.866,415.911C413.121,419.239 413.748,423.127 413.748,427.577L413.748,431.559L369.539,431.559L369.539,422.559L400.085,422.559C400.071,420.477 399.608,418.628 398.697,417.012C397.786,415.397 396.529,414.126 394.927,413.201C393.324,412.276 391.471,411.813 389.366,411.813C387.171,411.813 385.225,412.324 383.53,413.344C381.834,414.364 380.508,415.72 379.551,417.411C378.595,419.102 378.103,420.982 378.075,423.05L378.075,431.613C378.075,434.204 378.562,436.443 379.534,438.33C380.507,440.216 381.88,441.668 383.652,442.686C385.425,443.704 387.521,444.214 389.939,444.214C391.562,444.214 393.04,443.984 394.375,443.525C395.709,443.066 396.858,442.385 397.821,441.483C398.785,440.581 399.512,439.473 400.003,438.159L413.421,439.032C412.739,442.268 411.35,445.085 409.255,447.483C407.16,449.881 404.456,451.74 401.145,453.06C397.833,454.38 394.016,455.041 389.693,455.041Z" style="fill:white;fill-rule:nonzero;"/>
42 |             <path d="M445.412,455.041C440.039,455.041 435.43,453.899 431.585,451.614C427.739,449.33 424.787,446.158 422.728,442.096C420.669,438.035 419.639,433.35 419.639,428.041C419.639,422.695 420.68,417.99 422.762,413.924C424.844,409.858 427.805,406.685 431.646,404.405C435.487,402.126 440.057,400.986 445.358,400.986C449.912,400.986 453.908,401.815 457.347,403.471C460.785,405.128 463.502,407.46 465.498,410.467C467.494,413.473 468.589,416.995 468.784,421.032L455.094,421.032C454.698,418.427 453.681,416.321 452.043,414.715C450.404,413.108 448.248,412.304 445.575,412.304C443.339,412.304 441.382,412.912 439.705,414.128C438.028,415.344 436.723,417.11 435.791,419.426C434.859,421.742 434.394,424.55 434.394,427.85C434.394,431.186 434.855,434.024 435.778,436.362C436.7,438.701 438,440.485 439.678,441.715C441.355,442.945 443.321,443.559 445.575,443.559C447.244,443.559 448.739,443.22 450.062,442.54C451.384,441.86 452.483,440.869 453.358,439.567C454.234,438.265 454.812,436.686 455.094,434.832L468.784,434.832C468.562,438.836 467.48,442.358 465.539,445.397C463.598,448.435 460.922,450.802 457.511,452.498C454.099,454.193 450.066,455.041 445.412,455.041Z" style="fill:white;fill-rule:nonzero;"/>
43 |             <path d="M503.203,401.668L503.203,412.577L471.648,412.577L471.648,401.668L503.203,401.668ZM478.821,389.123L493.33,389.123L493.33,437.927C493.33,439.272 493.539,440.317 493.957,441.06C494.375,441.803 494.952,442.322 495.689,442.615C496.426,442.908 497.275,443.054 498.239,443.054C498.935,443.054 499.624,442.993 500.308,442.87C500.992,442.748 501.512,442.646 501.866,442.564L504.157,453.391C503.434,453.623 502.41,453.891 501.085,454.196C499.761,454.5 498.157,454.686 496.275,454.755C492.775,454.891 489.712,454.426 487.085,453.36C484.457,452.294 482.416,450.632 480.962,448.373C479.507,446.113 478.794,443.277 478.821,439.864L478.821,389.123Z" style="fill:white;fill-rule:nonzero;"/>
44 |             <path d="M537.267,473.668L537.267,401.668L551.584,401.668L551.584,410.477L552.212,410.477C552.857,409.05 553.786,407.605 555,406.144C556.214,404.683 557.805,403.458 559.773,402.469C561.741,401.481 564.184,400.986 567.103,400.986C570.939,400.986 574.467,401.979 577.688,403.966C580.908,405.952 583.486,408.941 585.42,412.932C587.354,416.923 588.321,421.913 588.321,427.904C588.321,433.75 587.381,438.677 585.502,442.686C583.622,446.695 581.076,449.729 577.865,451.788C574.654,453.847 571.057,454.877 567.075,454.877C564.257,454.877 561.867,454.41 559.906,453.476C557.944,452.542 556.34,451.367 555.092,449.951C553.844,448.535 552.884,447.105 552.212,445.659L551.775,445.659L551.775,473.668L537.267,473.668ZM551.475,427.85C551.475,430.959 551.908,433.671 552.774,435.987C553.64,438.304 554.89,440.104 556.524,441.388C558.158,442.672 560.139,443.314 562.466,443.314C564.848,443.314 566.856,442.66 568.49,441.354C570.124,440.047 571.365,438.231 572.213,435.906C573.061,433.581 573.484,430.895 573.484,427.85C573.484,424.823 573.065,422.16 572.227,419.862C571.388,417.564 570.152,415.771 568.518,414.483C566.884,413.194 564.866,412.549 562.466,412.549C560.121,412.549 558.131,413.176 556.497,414.428C554.863,415.68 553.617,417.451 552.76,419.739C551.903,422.028 551.475,424.732 551.475,427.85Z" style="fill:white;fill-rule:nonzero;"/>
45 |             <rect x="595.767" y="384.214" width="14.509" height="69.818" style="fill:white;fill-rule:nonzero;"/>
46 |             <path d="M633.457,455.013C630.126,455.013 627.152,454.431 624.536,453.265C621.92,452.099 619.857,450.361 618.348,448.052C616.839,445.743 616.085,442.864 616.085,439.414C616.085,436.495 616.614,434.051 617.673,432.081C618.733,430.11 620.183,428.523 622.024,427.318C623.864,426.114 625.963,425.2 628.32,424.577C630.677,423.954 633.153,423.518 635.748,423.268C638.78,422.968 641.229,422.676 643.095,422.392C644.961,422.108 646.316,421.681 647.162,421.11C648.007,420.54 648.43,419.695 648.43,418.577L648.43,418.386C648.43,416.223 647.751,414.55 646.392,413.368C645.033,412.186 643.121,411.595 640.657,411.595C638.044,411.595 635.963,412.167 634.415,413.31C632.868,414.453 631.848,415.891 631.357,417.623L617.912,416.532C618.594,413.35 619.933,410.594 621.931,408.265C623.929,405.935 626.514,404.14 629.687,402.878C632.86,401.617 636.535,400.986 640.712,400.986C643.634,400.986 646.427,401.328 649.091,402.012C651.755,402.697 654.125,403.751 656.203,405.176C658.28,406.601 659.922,408.433 661.129,410.671C662.336,412.91 662.939,415.591 662.939,418.714L662.939,454.032L649.166,454.032L649.166,446.777L648.757,446.777C647.912,448.404 646.788,449.838 645.386,451.079C643.984,452.32 642.29,453.286 640.306,453.977C638.322,454.668 636.039,455.013 633.457,455.013ZM637.63,445.005C639.762,445.005 641.645,444.577 643.279,443.723C644.913,442.868 646.194,441.711 647.121,440.252C648.048,438.793 648.512,437.15 648.512,435.323L648.512,429.759C648.076,430.045 647.461,430.309 646.668,430.55C645.875,430.791 644.993,431.007 644.022,431.197C643.052,431.388 642.079,431.559 641.104,431.709C640.129,431.859 639.244,431.991 638.448,432.104C636.739,432.35 635.247,432.746 633.972,433.294C632.697,433.842 631.706,434.576 630.999,435.496C630.292,436.417 629.939,437.559 629.939,438.923C629.939,440.914 630.662,442.425 632.107,443.457C633.553,444.489 635.394,445.005 637.63,445.005Z" style="fill:white;fill-rule:nonzero;"/>
47 |             <path d="M687.185,423.759L687.185,454.032L672.676,454.032L672.676,401.668L686.503,401.668L686.503,410.914L687.103,410.914C688.275,407.859 690.224,405.441 692.949,403.659C695.674,401.877 698.98,400.986 702.866,400.986C706.507,400.986 709.681,401.783 712.388,403.376C715.094,404.969 717.197,407.236 718.694,410.177C720.192,413.118 720.934,416.618 720.921,420.677L720.921,454.032L706.412,454.032L706.412,423.268C706.425,420.068 705.606,417.563 703.954,415.754C702.302,413.945 700.021,413.041 697.112,413.041C695.157,413.041 693.433,413.464 691.94,414.312C690.447,415.16 689.284,416.382 688.453,417.98C687.621,419.578 687.198,421.504 687.185,423.759Z" style="fill:white;fill-rule:nonzero;"/>
48 |             <path d="M743.366,423.759L743.366,454.032L728.858,454.032L728.858,401.668L742.685,401.668L742.685,410.914L743.284,410.914C744.457,407.859 746.406,405.441 749.131,403.659C751.856,401.877 755.162,400.986 759.048,400.986C762.689,400.986 765.863,401.783 768.569,403.376C771.276,404.969 773.379,407.236 774.876,410.177C776.374,413.118 777.116,416.618 777.103,420.677L777.103,454.032L762.594,454.032L762.594,423.268C762.607,420.068 761.788,417.563 760.136,415.754C758.483,413.945 756.203,413.041 753.294,413.041C751.339,413.041 749.615,413.464 748.122,414.312C746.629,415.16 745.466,416.382 744.634,417.98C743.803,419.578 743.38,421.504 743.366,423.759Z" style="fill:white;fill-rule:nonzero;"/>
49 |             <path d="M785.039,454.032L785.039,401.668L799.548,401.668L799.548,454.032L785.039,454.032ZM792.331,394.904C790.17,394.904 788.319,394.186 786.778,392.749C785.237,391.312 784.466,389.585 784.466,387.567C784.466,385.549 785.238,383.822 786.781,382.386C788.324,380.95 790.17,380.232 792.321,380.232C794.489,380.232 796.34,380.95 797.874,382.387C799.408,383.824 800.175,385.551 800.175,387.569C800.175,389.587 799.408,391.314 797.874,392.75C796.34,394.186 794.492,394.904 792.331,394.904Z" style="fill:white;fill-rule:nonzero;"/>
50 |             <path d="M822.321,423.759L822.321,454.032L807.812,454.032L807.812,401.668L821.639,401.668L821.639,410.914L822.239,410.914C823.411,407.859 825.36,405.441 828.085,403.659C830.811,401.877 834.116,400.986 838.003,400.986C841.643,400.986 844.817,401.783 847.524,403.376C850.231,404.969 852.333,407.236 853.831,410.177C855.328,413.118 856.071,416.618 856.057,420.677L856.057,454.032L841.548,454.032L841.548,423.268C841.562,420.068 840.742,417.563 839.09,415.754C837.438,413.945 835.157,413.041 832.248,413.041C830.294,413.041 828.57,413.464 827.077,414.312C825.583,415.16 824.421,416.382 823.589,417.98C822.757,419.578 822.334,421.504 822.321,423.759Z" style="fill:white;fill-rule:nonzero;"/>
51 |             <path d="M887.585,474.759C882.88,474.759 878.847,474.115 875.486,472.826C872.125,471.537 869.456,469.792 867.481,467.59C865.506,465.387 864.225,462.913 863.639,460.168L877.084,458.368C877.484,459.418 878.125,460.396 879.007,461.3C879.889,462.204 881.063,462.933 882.529,463.485C883.995,464.038 885.789,464.314 887.912,464.314C891.062,464.314 893.667,463.55 895.729,462.023C897.79,460.495 898.821,457.932 898.821,454.332L898.821,444.759L898.221,444.759C897.576,446.204 896.614,447.578 895.337,448.881C894.06,450.183 892.426,451.244 890.435,452.065C888.444,452.885 886.057,453.296 883.275,453.296C879.348,453.296 875.777,452.377 872.561,450.541C869.345,448.704 866.786,445.898 864.883,442.12C862.981,438.343 862.03,433.55 862.03,427.741C862.03,421.804 862.997,416.852 864.931,412.884C866.865,408.916 869.443,405.941 872.663,403.959C875.884,401.977 879.412,400.986 883.248,400.986C886.167,400.986 888.614,401.481 890.592,402.469C892.569,403.458 894.169,404.683 895.392,406.144C896.614,407.605 897.548,409.05 898.194,410.477L898.767,410.477L898.767,401.668L913.166,401.668L913.166,454.55C913.166,459.009 912.074,462.735 909.89,465.728C907.706,468.721 904.689,470.975 900.839,472.488C896.989,474.002 892.571,474.759 887.585,474.759ZM887.885,442.386C890.212,442.386 892.192,441.801 893.827,440.631C895.461,439.46 896.711,437.779 897.577,435.585C898.443,433.392 898.876,430.759 898.876,427.686C898.876,424.622 898.447,421.958 897.59,419.692C896.734,417.426 895.488,415.669 893.854,414.421C892.22,413.173 890.23,412.549 887.885,412.549C885.484,412.549 883.467,413.192 881.833,414.476C880.199,415.76 878.963,417.54 878.124,419.815C877.286,422.09 876.866,424.714 876.866,427.686C876.866,430.695 877.29,433.299 878.138,435.496C878.986,437.694 880.226,439.392 881.86,440.59C883.494,441.788 885.503,442.386 887.885,442.386Z" style="fill:white;fill-rule:nonzero;"/>
52 |         </g>
53 |         <path d="M401.191,152.056L408.313,152.056L408.313,204.597L355.772,204.597L355.772,197.423L362.919,197.423L362.919,197.449L401.165,197.449L401.165,197.423L401.191,197.423L401.191,152.056ZM387.849,159.204L362.919,159.204L362.919,184.081L355.798,184.081L355.798,152.056L387.849,152.056L387.849,159.204Z" style="fill:white;"/>
54 |         <g transform="matrix(0.476503,0,0,0.476503,-313.435,-17.3498)">
55 |             <path d="M1493.23,444.227L1382.97,444.227L1382.97,333.964L1493.23,333.964L1493.23,444.227ZM1478.23,348.964L1397.97,348.964L1397.97,429.227L1478.23,429.227L1478.23,348.964Z" style="fill:white;"/>
56 |         </g>
57 |     </g>
58 |     <defs>
59 |         <linearGradient id="_Linear1" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
60 |         <linearGradient id="_Linear2" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
61 |         <linearGradient id="_Linear3" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
62 |         <linearGradient id="_Linear4" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
63 |         <linearGradient id="_Linear5" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
64 |         <linearGradient id="_Linear6" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
65 |         <linearGradient id="_Linear7" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
66 |         <linearGradient id="_Linear8" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
67 |         <linearGradient id="_Linear9" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
68 |     </defs>
69 | </svg>
70 | 


--------------------------------------------------------------------------------
/images/light.svg:
--------------------------------------------------------------------------------
 1 | <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 2 | <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
 3 | <svg width="100%" height="100%" viewBox="0 0 1280 640" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;">
 4 |     <g transform="matrix(1,0,0,1,-1330,0)">
 5 |         <rect id="Artboard2" x="1330" y="0" width="1280" height="640" style="fill:none;"/>
 6 |         <g id="Artboard21" serif:id="Artboard2">
 7 |             <g transform="matrix(0.542568,0,0,0.542568,1470.48,59.0057)">
 8 |                 <path d="M535.659,248.701L535.659,178.883L563.177,178.883C568.477,178.883 572.991,179.889 576.718,181.903C580.445,183.917 583.293,186.703 585.261,190.262C587.229,193.821 588.213,197.91 588.213,202.528C588.213,207.173 587.215,211.267 585.217,214.808C583.219,218.348 580.328,221.11 576.544,223.092C572.76,225.074 568.186,226.064 562.823,226.064L545.259,226.064L545.259,214.228L560.422,214.228C563.259,214.228 565.606,213.734 567.462,212.745C569.319,211.756 570.71,210.383 571.635,208.624C572.56,206.864 573.023,204.833 573.023,202.528C573.023,200.21 572.56,198.184 571.635,196.45C570.71,194.716 569.315,193.368 567.449,192.406C565.583,191.445 563.222,190.964 560.368,190.964L550.414,190.964L550.414,248.701L535.659,248.701Z" style="fill-rule:nonzero;"/>
 9 |                 <path d="M596.341,248.701L596.341,196.337L610.413,196.337L610.413,205.474L610.958,205.474C611.913,202.228 613.514,199.771 615.762,198.103C618.01,196.435 620.6,195.601 623.532,195.601C624.259,195.601 625.042,195.643 625.88,195.727C626.719,195.811 627.454,195.93 628.086,196.085L628.086,208.991C627.418,208.773 626.482,208.587 625.277,208.433C624.073,208.278 622.963,208.201 621.95,208.201C619.827,208.201 617.928,208.661 616.253,209.582C614.578,210.502 613.259,211.779 612.295,213.413C611.332,215.047 610.85,216.937 610.85,219.083L610.85,248.701L596.341,248.701Z" style="fill-rule:nonzero;"/>
10 |                 <path d="M654.077,249.71C648.777,249.71 644.202,248.581 640.352,246.325C636.502,244.068 633.532,240.913 631.441,236.861C629.35,232.809 628.304,228.092 628.304,222.71C628.304,217.31 629.35,212.579 631.441,208.518C633.532,204.456 636.502,201.297 640.352,199.041C644.202,196.784 648.777,195.655 654.077,195.655C659.377,195.655 663.952,196.784 667.802,199.041C671.652,201.297 674.623,204.456 676.713,208.518C678.804,212.579 679.85,217.31 679.85,222.71C679.85,228.092 678.804,232.809 676.713,236.861C674.623,240.913 671.652,244.068 667.802,246.325C663.952,248.581 659.377,249.71 654.077,249.71ZM654.159,238.474C656.55,238.474 658.556,237.785 660.179,236.408C661.802,235.03 663.027,233.148 663.854,230.762C664.682,228.376 665.095,225.664 665.095,222.628C665.095,219.578 664.682,216.859 663.854,214.47C663.027,212.081 661.802,210.194 660.179,208.808C658.556,207.421 656.55,206.728 654.159,206.728C651.713,206.728 649.666,207.421 648.016,208.808C646.366,210.194 645.127,212.081 644.3,214.47C643.472,216.859 643.059,219.578 643.059,222.628C643.059,225.664 643.472,228.376 644.3,230.762C645.127,233.148 646.366,235.03 648.016,236.408C649.666,237.785 651.713,238.474 654.159,238.474Z" style="fill-rule:nonzero;"/>
11 |                 <path d="M687.705,196.337L702.213,196.337L702.213,251.292C702.213,255.337 701.417,258.61 699.824,261.11C698.23,263.61 695.954,265.439 692.995,266.599C690.036,267.758 686.5,268.337 682.386,268.337C681.868,268.337 681.38,268.33 680.924,268.317C680.467,268.303 679.973,268.283 679.441,268.255L679.441,256.91C679.822,256.937 680.158,256.958 680.446,256.971C680.735,256.985 681.036,256.992 681.35,256.992C683.681,256.992 685.324,256.495 686.276,255.502C687.228,254.509 687.705,253.023 687.705,251.046L687.705,196.337ZM694.931,189.573C692.777,189.573 690.929,188.855 689.388,187.419C687.847,185.983 687.077,184.256 687.077,182.237C687.077,180.219 687.847,178.492 689.388,177.055C690.929,175.619 692.777,174.901 694.931,174.901C697.1,174.901 698.951,175.619 700.485,177.055C702.019,178.492 702.786,180.219 702.786,182.237C702.786,184.256 702.019,185.983 700.485,187.419C698.951,188.855 697.1,189.573 694.931,189.573Z" style="fill-rule:nonzero;"/>
12 |                 <path d="M734.313,249.71C728.941,249.71 724.315,248.618 720.435,246.434C716.555,244.25 713.571,241.141 711.483,237.107C709.394,233.073 708.35,228.292 708.35,222.765C708.35,217.374 709.398,212.644 711.493,208.576C713.589,204.508 716.536,201.337 720.336,199.064C724.136,196.792 728.604,195.655 733.741,195.655C737.204,195.655 740.429,196.205 743.416,197.305C746.402,198.405 749.013,200.061 751.25,202.272C753.486,204.484 755.232,207.253 756.486,210.581C757.741,213.908 758.368,217.796 758.368,222.246L758.368,226.228L714.159,226.228L714.159,217.228L744.705,217.228C744.691,215.146 744.228,213.298 743.317,211.682C742.406,210.066 741.149,208.795 739.546,207.87C737.944,206.945 736.091,206.482 733.986,206.482C731.79,206.482 729.845,206.993 728.149,208.013C726.454,209.033 725.128,210.389 724.171,212.08C723.214,213.771 722.722,215.651 722.695,217.719L722.695,226.282C722.695,228.874 723.181,231.112 724.154,232.999C725.127,234.885 726.499,236.337 728.272,237.355C730.045,238.374 732.14,238.883 734.559,238.883C736.182,238.883 737.66,238.653 738.994,238.194C740.328,237.735 741.477,237.055 742.441,236.152C743.405,235.25 744.132,234.142 744.623,232.828L758.04,233.701C757.359,236.937 755.97,239.754 753.875,242.152C751.779,244.55 749.076,246.409 745.765,247.729C742.453,249.05 738.636,249.71 734.313,249.71Z" style="fill-rule:nonzero;"/>
13 |                 <path d="M790.032,249.71C784.659,249.71 780.05,248.568 776.204,246.284C772.359,243.999 769.407,240.827 767.348,236.766C765.288,232.704 764.259,228.019 764.259,222.71C764.259,217.365 765.3,212.659 767.382,208.593C769.464,204.527 772.425,201.354 776.266,199.075C780.107,196.795 784.677,195.655 789.977,195.655C794.532,195.655 798.528,196.484 801.967,198.141C805.405,199.797 808.122,202.129 810.118,205.136C812.113,208.143 813.209,211.664 813.404,215.701L799.713,215.701C799.318,213.096 798.301,210.99 796.663,209.384C795.024,207.777 792.868,206.974 790.195,206.974C787.959,206.974 786.002,207.582 784.325,208.797C782.647,210.013 781.343,211.779 780.411,214.095C779.479,216.411 779.013,219.219 779.013,222.519C779.013,225.855 779.475,228.693 780.397,231.032C781.32,233.37 782.62,235.155 784.297,236.384C785.975,237.614 787.941,238.229 790.195,238.229C791.863,238.229 793.359,237.889 794.682,237.209C796.004,236.529 797.103,235.538 797.978,234.236C798.853,232.934 799.432,231.355 799.713,229.501L813.404,229.501C813.181,233.505 812.1,237.027 810.159,240.066C808.218,243.104 805.542,245.471 802.13,247.167C798.719,248.862 794.686,249.71 790.032,249.71Z" style="fill-rule:nonzero;"/>
14 |                 <path d="M847.823,196.337L847.823,207.246L816.268,207.246L816.268,196.337L847.823,196.337ZM823.441,183.792L837.95,183.792L837.95,232.596C837.95,233.942 838.159,234.986 838.577,235.729C838.995,236.473 839.572,236.991 840.309,237.284C841.045,237.577 841.895,237.724 842.859,237.724C843.554,237.724 844.244,237.662 844.928,237.54C845.612,237.417 846.131,237.315 846.486,237.233L848.777,248.06C848.054,248.292 847.03,248.56 845.705,248.865C844.38,249.169 842.777,249.355 840.895,249.424C837.395,249.56 834.332,249.095 831.704,248.029C829.077,246.964 827.036,245.301 825.581,243.042C824.127,240.783 823.413,237.946 823.441,234.533L823.441,183.792Z" style="fill-rule:nonzero;"/>
15 |                 <path d="M897.486,211.255L884.205,212.073C883.968,210.951 883.477,209.928 882.732,209.005C881.986,208.083 881.003,207.345 879.783,206.793C878.562,206.24 877.109,205.964 875.422,205.964C873.172,205.964 871.275,206.435 869.729,207.376C868.184,208.317 867.418,209.564 867.431,211.119C867.418,212.383 867.91,213.444 868.908,214.303C869.905,215.162 871.622,215.855 874.059,216.383L883.55,218.292C888.64,219.333 892.432,221.011 894.926,223.327C897.419,225.643 898.672,228.692 898.686,232.474C898.672,235.91 897.664,238.923 895.662,241.511C893.66,244.1 890.91,246.113 887.412,247.552C883.914,248.99 879.9,249.71 875.368,249.71C868.432,249.71 862.91,248.264 858.803,245.374C854.697,242.483 852.3,238.537 851.614,233.537L865.877,232.773C866.318,234.896 867.364,236.509 869.017,237.611C870.669,238.713 872.795,239.265 875.395,239.265C877.931,239.265 879.98,238.767 881.542,237.772C883.103,236.776 883.891,235.501 883.905,233.946C883.891,232.619 883.34,231.53 882.251,230.68C881.162,229.83 879.477,229.173 877.195,228.71L868.141,226.91C863.018,225.896 859.211,224.126 856.72,221.599C854.23,219.071 852.991,215.851 853.004,211.937C852.991,208.573 853.901,205.677 855.735,203.247C857.569,200.818 860.153,198.945 863.487,197.629C866.822,196.313 870.718,195.655 875.177,195.655C881.79,195.655 887.003,197.051 890.814,199.842C894.626,202.632 896.85,206.437 897.486,211.255Z" style="fill-rule:nonzero;"/>
16 |                 <path d="M958.168,196.337L958.168,205.883L927.213,205.883L927.213,196.337L958.168,196.337ZM934.959,248.701L934.959,191.401C934.959,187.874 935.691,184.942 937.154,182.605C938.618,180.269 940.588,178.519 943.066,177.355C945.543,176.192 948.295,175.61 951.323,175.61C953.464,175.61 955.361,175.778 957.016,176.114C958.67,176.451 959.9,176.755 960.705,177.028L958.223,186.601C957.704,186.437 957.049,186.269 956.255,186.096C955.462,185.924 954.582,185.837 953.614,185.837C951.309,185.837 949.683,186.389 948.735,187.494C947.788,188.599 947.314,190.174 947.314,192.219L947.314,248.701L934.959,248.701Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
17 |                 <path d="M986.941,249.737C981.832,249.737 977.401,248.61 973.649,246.355C969.896,244.101 966.992,240.949 964.935,236.898C962.878,232.848 961.85,228.128 961.85,222.737C961.85,217.319 962.878,212.578 964.935,208.515C966.992,204.451 969.896,201.292 973.649,199.037C977.401,196.783 981.832,195.655 986.941,195.655C992.05,195.655 996.48,196.783 1000.23,199.037C1003.99,201.292 1006.89,204.451 1008.95,208.515C1011,212.578 1012.03,217.319 1012.03,222.737C1012.03,228.128 1011,232.848 1008.95,236.898C1006.89,240.949 1003.99,244.101 1000.23,246.355C996.48,248.61 992.05,249.737 986.941,249.737ZM986.995,239.837C989.786,239.837 992.109,239.071 993.963,237.54C995.818,236.008 997.206,233.946 998.129,231.355C999.052,228.765 999.513,225.874 999.513,222.683C999.513,219.483 999.052,216.583 998.129,213.983C997.206,211.383 995.818,209.31 993.963,207.765C992.109,206.219 989.786,205.446 986.995,205.446C984.168,205.446 981.818,206.219 979.945,207.765C978.073,209.31 976.675,211.383 975.752,213.983C974.829,216.583 974.368,219.483 974.368,222.683C974.368,225.874 974.829,228.765 975.752,231.355C976.675,233.946 978.073,236.008 979.945,237.54C981.818,239.071 984.168,239.837 986.995,239.837Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
18 |                 <path d="M1021.36,248.701L1021.36,196.337L1033.33,196.337L1033.33,205.064L1033.88,205.064C1034.83,202.037 1036.47,199.698 1038.81,198.048C1041.14,196.398 1043.8,195.573 1046.8,195.573C1047.49,195.573 1048.25,195.605 1049.11,195.669C1049.96,195.733 1050.68,195.824 1051.25,195.942L1051.25,207.274C1050.71,207.106 1049.88,206.945 1048.76,206.793C1047.63,206.641 1046.55,206.564 1045.52,206.564C1043.26,206.564 1041.24,207.047 1039.46,208.013C1037.68,208.979 1036.28,210.316 1035.25,212.022C1034.23,213.729 1033.71,215.692 1033.71,217.91L1033.71,248.701L1021.36,248.701Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
19 |                 <path d="M1147.03,213.792C1147.03,221.319 1145.63,227.758 1142.83,233.108C1140.02,238.458 1136.2,242.553 1131.36,245.394C1126.53,248.235 1121.06,249.655 1114.96,249.655C1108.84,249.655 1103.37,248.23 1098.53,245.38C1093.7,242.53 1089.89,238.431 1087.09,233.081C1084.29,227.731 1082.89,221.301 1082.89,213.792C1082.89,206.264 1084.29,199.826 1087.09,194.476C1089.89,189.126 1093.7,185.03 1098.53,182.189C1103.37,179.349 1108.84,177.928 1114.96,177.928C1121.06,177.928 1126.53,179.349 1131.36,182.189C1136.2,185.03 1140.02,189.126 1142.83,194.476C1145.63,199.826 1147.03,206.264 1147.03,213.792ZM1134.32,213.792C1134.32,208.492 1133.5,204.019 1131.85,200.374C1130.2,196.728 1127.92,193.967 1125.01,192.09C1122.1,190.213 1118.75,189.274 1114.96,189.274C1111.17,189.274 1107.82,190.213 1104.91,192.09C1101.99,193.967 1099.71,196.728 1098.07,200.374C1096.42,204.019 1095.6,208.492 1095.6,213.792C1095.6,219.092 1096.42,223.565 1098.07,227.21C1099.71,230.855 1101.99,233.617 1104.91,235.494C1107.82,237.371 1111.17,238.31 1114.96,238.31C1118.75,238.31 1122.1,237.371 1125.01,235.494C1127.92,233.617 1130.2,230.855 1131.85,227.21C1133.5,223.565 1134.32,219.092 1134.32,213.792Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
20 |                 <path d="M1157.72,248.701L1157.72,178.883L1170.08,178.883L1170.08,204.982L1170.6,204.982C1171.22,203.728 1172.12,202.377 1173.28,200.929C1174.44,199.482 1176.01,198.241 1177.98,197.207C1179.96,196.172 1182.49,195.655 1185.57,195.655C1189.6,195.655 1193.24,196.685 1196.51,198.744C1199.78,200.803 1202.37,203.837 1204.29,207.846C1206.21,211.855 1207.17,216.774 1207.17,222.601C1207.17,228.346 1206.23,233.232 1204.35,237.257C1202.46,241.282 1199.89,244.35 1196.64,246.461C1193.39,248.573 1189.7,249.628 1185.6,249.628C1182.6,249.628 1180.1,249.129 1178.12,248.132C1176.14,247.134 1174.55,245.923 1173.36,244.498C1172.16,243.072 1171.24,241.719 1170.6,240.437L1169.86,240.437L1169.86,248.701L1157.72,248.701ZM1169.83,222.519C1169.83,225.91 1170.31,228.879 1171.28,231.427C1172.24,233.974 1173.64,235.958 1175.47,237.379C1177.3,238.799 1179.53,239.51 1182.16,239.51C1184.87,239.51 1187.14,238.777 1188.99,237.311C1190.83,235.845 1192.23,233.831 1193.17,231.27C1194.12,228.709 1194.6,225.792 1194.6,222.519C1194.6,219.274 1194.13,216.391 1193.19,213.87C1192.26,211.35 1190.87,209.37 1189.03,207.932C1187.18,206.493 1184.89,205.774 1182.16,205.774C1179.51,205.774 1177.26,206.466 1175.43,207.85C1173.6,209.234 1172.21,211.18 1171.26,213.686C1170.31,216.193 1169.83,219.137 1169.83,222.519Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
21 |                 <path d="M1258.17,210.192L1246.9,211.419C1246.6,210.269 1246.05,209.195 1245.26,208.197C1244.47,207.2 1243.42,206.392 1242.1,205.774C1240.79,205.156 1239.18,204.847 1237.28,204.847C1234.71,204.847 1232.56,205.404 1230.82,206.52C1229.08,207.636 1228.21,209.087 1228.22,210.874C1228.21,212.383 1228.78,213.617 1229.93,214.576C1231.08,215.535 1232.99,216.319 1235.64,216.928L1244.56,218.837C1249.51,219.91 1253.2,221.607 1255.63,223.927C1258.06,226.247 1259.28,229.278 1259.29,233.019C1259.28,236.31 1258.32,239.212 1256.41,241.726C1254.51,244.239 1251.88,246.203 1248.52,247.617C1245.17,249.031 1241.3,249.737 1236.92,249.737C1230.52,249.737 1225.36,248.387 1221.46,245.687C1217.55,242.987 1215.22,239.228 1214.45,234.41L1226.5,233.265C1227.04,235.619 1228.2,237.398 1229.98,238.603C1231.76,239.808 1234.06,240.41 1236.89,240.41C1239.84,240.41 1242.2,239.811 1243.98,238.613C1245.76,237.415 1246.65,235.923 1246.66,234.137C1246.65,232.646 1246.07,231.411 1244.92,230.432C1243.77,229.452 1242,228.705 1239.6,228.192L1230.65,226.31C1225.64,225.255 1221.93,223.486 1219.52,221.002C1217.11,218.518 1215.91,215.369 1215.92,211.556C1215.91,208.328 1216.8,205.526 1218.58,203.149C1220.36,200.771 1222.84,198.928 1226.03,197.619C1229.22,196.31 1232.91,195.655 1237.11,195.655C1243.25,195.655 1248.08,196.965 1251.61,199.583C1255.14,202.201 1257.33,205.737 1258.17,210.192Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
22 |                 <path d="M1266.95,248.701L1266.95,196.337L1279.3,196.337L1279.3,248.701L1266.95,248.701ZM1273.17,188.919C1271.21,188.919 1269.53,188.262 1268.13,186.948C1266.72,185.634 1266.02,184.054 1266.02,182.209C1266.02,180.364 1266.73,178.785 1268.13,177.471C1269.53,176.158 1271.21,175.501 1273.17,175.501C1275.14,175.501 1276.82,176.158 1278.22,177.472C1279.62,178.786 1280.31,180.365 1280.31,182.21C1280.31,184.055 1279.62,185.635 1278.22,186.949C1276.82,188.262 1275.14,188.919 1273.17,188.919Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
23 |                 <path d="M1309.17,249.628C1305.06,249.628 1301.38,248.573 1298.12,246.461C1294.87,244.35 1292.3,241.282 1290.42,237.257C1288.54,233.232 1287.6,228.346 1287.6,222.601C1287.6,216.774 1288.55,211.855 1290.47,207.846C1292.39,203.837 1294.98,200.803 1298.25,198.744C1301.52,196.685 1305.17,195.655 1309.19,195.655C1312.28,195.655 1314.81,196.172 1316.78,197.207C1318.76,198.241 1320.32,199.482 1321.49,200.929C1322.65,202.377 1323.54,203.728 1324.17,204.982L1324.69,204.982L1324.69,178.883L1337.04,178.883L1337.04,248.701L1324.9,248.701L1324.9,240.437L1324.17,240.437C1323.52,241.719 1322.6,243.072 1321.41,244.498C1320.21,245.923 1318.62,247.134 1316.64,248.132C1314.66,249.129 1312.17,249.628 1309.17,249.628ZM1312.6,239.51C1315.23,239.51 1317.46,238.799 1319.29,237.379C1321.12,235.958 1322.52,233.974 1323.49,231.427C1324.45,228.879 1324.93,225.91 1324.93,222.519C1324.93,219.137 1324.46,216.193 1323.51,213.686C1322.56,211.18 1321.17,209.234 1319.33,207.85C1317.5,206.466 1315.26,205.774 1312.6,205.774C1309.87,205.774 1307.58,206.493 1305.74,207.932C1303.89,209.37 1302.5,211.35 1301.57,213.87C1300.63,216.391 1300.17,219.274 1300.17,222.519C1300.17,225.792 1300.64,228.709 1301.59,231.27C1302.54,233.831 1303.93,235.845 1305.78,237.311C1307.62,238.777 1309.89,239.51 1312.6,239.51Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
24 |                 <path d="M1349.31,248.701L1349.31,196.337L1361.67,196.337L1361.67,248.701L1349.31,248.701ZM1355.54,188.919C1353.58,188.919 1351.89,188.262 1350.49,186.948C1349.09,185.634 1348.39,184.054 1348.39,182.209C1348.39,180.364 1349.09,178.785 1350.49,177.471C1351.89,176.158 1353.58,175.501 1355.53,175.501C1357.5,175.501 1359.18,176.158 1360.58,177.472C1361.98,178.786 1362.68,180.365 1362.68,182.21C1362.68,184.055 1361.98,185.635 1360.58,186.949C1359.18,188.262 1357.5,188.919 1355.54,188.919Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
25 |                 <path d="M1387.17,249.765C1383.84,249.765 1380.85,249.166 1378.21,247.968C1375.56,246.77 1373.47,245.002 1371.94,242.663C1370.4,240.325 1369.63,237.437 1369.63,234.001C1369.63,231.055 1370.18,228.613 1371.28,226.675C1372.38,224.736 1373.87,223.187 1375.76,222.028C1377.65,220.869 1379.78,219.993 1382.15,219.4C1384.52,218.807 1386.97,218.374 1389.51,218.101C1392.6,217.764 1395.09,217.465 1397,217.204C1398.9,216.943 1400.29,216.535 1401.16,215.98C1402.03,215.426 1402.47,214.56 1402.47,213.383L1402.47,213.164C1402.47,210.601 1401.71,208.614 1400.19,207.205C1398.68,205.796 1396.48,205.092 1393.6,205.092C1390.58,205.092 1388.19,205.753 1386.43,207.076C1384.67,208.399 1383.48,209.955 1382.86,211.746L1371.35,210.11C1372.26,206.928 1373.76,204.263 1375.85,202.116C1377.95,199.968 1380.5,198.354 1383.52,197.275C1386.54,196.195 1389.89,195.655 1393.55,195.655C1396.06,195.655 1398.57,195.95 1401.07,196.538C1403.58,197.127 1405.87,198.101 1407.94,199.46C1410.01,200.819 1411.67,202.658 1412.93,204.976C1414.19,207.294 1414.82,210.187 1414.82,213.655L1414.82,248.701L1402.96,248.701L1402.96,241.501L1402.55,241.501C1401.8,242.965 1400.75,244.326 1399.39,245.585C1398.03,246.844 1396.34,247.855 1394.31,248.619C1392.29,249.383 1389.9,249.765 1387.17,249.765ZM1390.36,240.683C1392.84,240.683 1394.99,240.189 1396.81,239.203C1398.63,238.217 1400.04,236.908 1401.03,235.276C1402.03,233.644 1402.52,231.855 1402.52,229.91L1402.52,223.746C1402.12,224.074 1401.46,224.373 1400.55,224.643C1399.64,224.913 1398.61,225.152 1397.47,225.359C1396.32,225.566 1395.19,225.748 1394.08,225.904C1392.96,226.061 1392,226.196 1391.18,226.31C1389.34,226.565 1387.7,226.975 1386.24,227.541C1384.79,228.107 1383.65,228.895 1382.81,229.907C1381.97,230.918 1381.55,232.219 1381.55,233.81C1381.55,236.069 1382.38,237.779 1384.04,238.94C1385.69,240.102 1387.8,240.683 1390.36,240.683Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
26 |                 <path d="M1438.58,218.019L1438.58,248.701L1426.22,248.701L1426.22,196.337L1438.03,196.337L1438.03,205.228L1438.66,205.228C1439.85,202.305 1441.77,199.979 1444.42,198.25C1447.07,196.52 1450.35,195.655 1454.26,195.655C1457.87,195.655 1461.02,196.427 1463.71,197.97C1466.4,199.513 1468.49,201.752 1469.98,204.686C1471.47,207.62 1472.21,211.183 1472.2,215.374L1472.2,248.701L1459.85,248.701L1459.85,217.283C1459.86,213.778 1458.96,211.038 1457.14,209.064C1455.33,207.089 1452.83,206.101 1449.65,206.101C1447.49,206.101 1445.58,206.569 1443.91,207.506C1442.25,208.442 1440.94,209.799 1440,211.576C1439.06,213.353 1438.59,215.501 1438.58,218.019Z" style="fill:rgb(142,142,142);fill-rule:nonzero;"/>
27 |             </g>
28 |             <g transform="matrix(1,0,0,1,1416.81,26.5532)">
29 |                 <path d="M348.403,358.032L348.403,288.214L375.921,288.214C381.221,288.214 385.734,289.22 389.462,291.234C393.189,293.248 396.037,296.034 398.005,299.593C399.973,303.152 400.957,307.241 400.957,311.859C400.957,316.504 399.958,320.598 397.961,324.138C395.963,327.679 393.072,330.441 389.288,332.423C385.504,334.404 380.93,335.395 375.566,335.395L358.003,335.395L358.003,323.559L373.166,323.559C376.003,323.559 378.35,323.065 380.206,322.076C382.063,321.087 383.454,319.713 384.379,317.954C385.304,316.195 385.767,314.163 385.767,311.859C385.767,309.541 385.304,307.514 384.379,305.78C383.454,304.046 382.058,302.699 380.192,301.737C378.327,300.776 375.966,300.295 373.112,300.295L363.157,300.295L363.157,358.032L348.403,358.032Z" style="fill:url(#_Linear1);fill-rule:nonzero;"/>
30 |                 <rect x="409.085" y="288.214" width="14.509" height="69.818" style="fill:url(#_Linear2);fill-rule:nonzero;"/>
31 |                 <path d="M446.775,359.013C443.444,359.013 440.47,358.431 437.854,357.265C435.238,356.099 433.176,354.361 431.667,352.052C430.157,349.743 429.403,346.864 429.403,343.414C429.403,340.495 429.933,338.051 430.992,336.081C432.051,334.11 433.501,332.523 435.342,331.318C437.183,330.114 439.281,329.2 441.638,328.577C443.995,327.954 446.471,327.518 449.066,327.268C452.098,326.968 454.547,326.676 456.413,326.392C458.279,326.108 459.634,325.681 460.48,325.11C461.326,324.54 461.748,323.695 461.748,322.577L461.748,322.386C461.748,320.223 461.069,318.55 459.71,317.368C458.351,316.186 456.439,315.595 453.976,315.595C451.362,315.595 449.281,316.167 447.733,317.31C446.186,318.453 445.166,319.891 444.675,321.623L431.23,320.532C431.912,317.35 433.252,314.594 435.249,312.265C437.247,309.935 439.832,308.14 443.005,306.878C446.178,305.617 449.853,304.986 454.03,304.986C456.952,304.986 459.746,305.328 462.409,306.012C465.073,306.697 467.444,307.751 469.521,309.176C471.598,310.601 473.24,312.433 474.447,314.671C475.654,316.91 476.257,319.591 476.257,322.714L476.257,358.032L462.484,358.032L462.484,350.777L462.075,350.777C461.23,352.404 460.106,353.838 458.704,355.079C457.302,356.32 455.609,357.286 453.625,357.977C451.641,358.668 449.358,359.013 446.775,359.013ZM450.948,349.005C453.08,349.005 454.963,348.577 456.597,347.723C458.231,346.868 459.512,345.711 460.439,344.252C461.367,342.793 461.83,341.15 461.83,339.323L461.83,333.759C461.394,334.045 460.779,334.309 459.986,334.55C459.193,334.791 458.311,335.007 457.34,335.197C456.37,335.388 455.397,335.559 454.422,335.709C453.447,335.859 452.562,335.991 451.767,336.104C450.057,336.35 448.565,336.746 447.29,337.294C446.015,337.842 445.024,338.576 444.317,339.496C443.611,340.417 443.257,341.559 443.257,342.923C443.257,344.914 443.98,346.425 445.425,347.457C446.871,348.489 448.712,349.005 450.948,349.005Z" style="fill:url(#_Linear3);fill-rule:nonzero;"/>
32 |                 <path d="M485.994,358.032L485.994,305.668L500.503,305.668L500.503,358.032L485.994,358.032ZM493.286,298.904C491.124,298.904 489.273,298.186 487.732,296.749C486.191,295.312 485.421,293.585 485.421,291.567C485.421,289.549 486.192,287.822 487.735,286.386C489.278,284.95 491.125,284.232 493.275,284.232C495.443,284.232 497.294,284.95 498.829,286.387C500.363,287.824 501.13,289.551 501.13,291.569C501.13,293.587 500.363,295.314 498.829,296.75C497.294,298.186 495.447,298.904 493.286,298.904Z" style="fill:url(#_Linear4);fill-rule:nonzero;"/>
33 |                 <path d="M523.275,327.759L523.275,358.032L508.767,358.032L508.767,305.668L522.594,305.668L522.594,314.914L523.193,314.914C524.366,311.859 526.315,309.441 529.04,307.659C531.765,305.877 535.071,304.986 538.957,304.986C542.598,304.986 545.772,305.783 548.479,307.376C551.185,308.969 553.288,311.236 554.785,314.177C556.283,317.118 557.025,320.618 557.012,324.677L557.012,358.032L542.503,358.032L542.503,327.268C542.516,324.068 541.697,321.563 540.045,319.754C538.393,317.945 536.112,317.041 533.203,317.041C531.248,317.041 529.524,317.464 528.031,318.312C526.538,319.16 525.375,320.382 524.543,321.98C523.712,323.578 523.289,325.504 523.275,327.759Z" style="fill:url(#_Linear5);fill-rule:nonzero;"/>
34 |                 <path d="M619.794,305.668L619.794,316.577L588.239,316.577L588.239,305.668L619.794,305.668ZM595.412,293.123L609.921,293.123L609.921,341.927C609.921,343.272 610.13,344.317 610.548,345.06C610.966,345.803 611.543,346.322 612.28,346.615C613.016,346.908 613.866,347.054 614.83,347.054C615.525,347.054 616.215,346.993 616.899,346.87C617.583,346.748 618.103,346.646 618.457,346.564L620.748,357.391C620.025,357.623 619.001,357.891 617.676,358.196C616.351,358.5 614.748,358.686 612.866,358.755C609.366,358.891 606.303,358.426 603.675,357.36C601.048,356.294 599.007,354.632 597.553,352.373C596.098,350.113 595.384,347.277 595.412,343.864L595.412,293.123Z" style="fill:url(#_Linear6);fill-rule:nonzero;"/>
35 |                 <path d="M650.148,359.041C644.775,359.041 640.149,357.949 636.27,355.765C632.39,353.581 629.406,350.472 627.317,346.438C625.229,342.404 624.185,337.623 624.185,332.095C624.185,326.704 625.232,321.975 627.328,317.907C629.423,313.839 632.371,310.668 636.171,308.395C639.971,306.123 644.439,304.986 649.575,304.986C653.039,304.986 656.264,305.536 659.251,306.636C662.237,307.736 664.848,309.392 667.085,311.603C669.321,313.815 671.066,316.584 672.321,319.911C673.576,323.239 674.203,327.127 674.203,331.577L674.203,335.559L629.994,335.559L629.994,326.559L660.539,326.559C660.525,324.477 660.063,322.628 659.152,321.012C658.24,319.397 656.984,318.126 655.381,317.201C653.779,316.276 651.925,315.813 649.821,315.813C647.625,315.813 645.68,316.324 643.984,317.344C642.289,318.364 640.963,319.72 640.006,321.411C639.049,323.102 638.557,324.982 638.53,327.05L638.53,335.613C638.53,338.204 639.016,340.443 639.989,342.33C640.962,344.216 642.334,345.668 644.107,346.686C645.88,347.704 647.975,348.214 650.394,348.214C652.016,348.214 653.495,347.984 654.829,347.525C656.163,347.066 657.312,346.385 658.276,345.483C659.239,344.581 659.967,343.473 660.457,342.159L673.875,343.032C673.193,346.268 671.805,349.085 669.71,351.483C667.614,353.881 664.911,355.74 661.599,357.06C658.288,358.38 654.471,359.041 650.148,359.041Z" style="fill:url(#_Linear7);fill-rule:nonzero;"/>
36 |                 <path d="M692.993,305.668L702.594,323.968L712.439,305.668L727.357,305.668L712.166,331.85L727.766,358.032L712.93,358.032L702.594,339.923L692.421,358.032L677.421,358.032L692.994,331.85L677.994,305.668L692.993,305.668Z" style="fill:url(#_Linear8);fill-rule:nonzero;"/>
37 |                 <path d="M760.521,305.668L760.521,316.577L728.966,316.577L728.966,305.668L760.521,305.668ZM736.139,293.123L750.648,293.123L750.648,341.927C750.648,343.272 750.857,344.317 751.275,345.06C751.693,345.803 752.271,346.322 753.007,346.615C753.744,346.908 754.594,347.054 755.557,347.054C756.253,347.054 756.943,346.993 757.627,346.87C758.31,346.748 758.83,346.646 759.185,346.564L761.476,357.391C760.753,357.623 759.729,357.891 758.404,358.196C757.079,358.5 755.475,358.686 753.594,358.755C750.094,358.891 747.03,358.426 744.403,357.36C741.775,356.294 739.734,354.632 738.28,352.373C736.825,350.113 736.112,347.277 736.139,343.864L736.139,293.123Z" style="fill:url(#_Linear9);fill-rule:nonzero;"/>
38 |                 <path d="M193.221,473.668L193.221,401.668L207.539,401.668L207.539,410.477L208.166,410.477C208.812,409.05 209.741,407.605 210.955,406.144C212.169,404.683 213.759,403.458 215.728,402.469C217.696,401.481 220.139,400.986 223.057,400.986C226.893,400.986 230.422,401.979 233.642,403.966C236.863,405.952 239.44,408.941 241.374,412.932C243.308,416.923 244.275,421.913 244.275,427.904C244.275,433.75 243.336,438.677 241.456,442.686C239.576,446.695 237.031,449.729 233.82,451.788C230.608,453.847 227.012,454.877 223.03,454.877C220.212,454.877 217.822,454.41 215.86,453.476C213.899,452.542 212.294,451.367 211.047,449.951C209.799,448.535 208.839,447.105 208.166,445.659L207.73,445.659L207.73,473.668L193.221,473.668ZM207.43,427.85C207.43,430.959 207.863,433.671 208.729,435.987C209.594,438.304 210.845,440.104 212.479,441.388C214.113,442.672 216.094,443.314 218.421,443.314C220.803,443.314 222.811,442.66 224.445,441.354C226.079,440.047 227.32,438.231 228.168,435.906C229.015,433.581 229.439,430.895 229.439,427.85C229.439,424.823 229.02,422.16 228.181,419.862C227.343,417.564 226.106,415.771 224.472,414.483C222.838,413.194 220.821,412.549 218.421,412.549C216.075,412.549 214.085,413.176 212.451,414.428C210.817,415.68 209.572,417.451 208.715,419.739C207.858,422.028 207.43,424.732 207.43,427.85Z" style="fill-rule:nonzero;"/>
39 |                 <path d="M251.721,454.032L251.721,401.668L265.793,401.668L265.793,410.804L266.339,410.804C267.293,407.559 268.894,405.102 271.142,403.434C273.39,401.766 275.98,400.932 278.912,400.932C279.639,400.932 280.422,400.974 281.261,401.058C282.099,401.142 282.834,401.261 283.466,401.416L283.466,414.322C282.798,414.104 281.862,413.918 280.657,413.763C279.453,413.609 278.344,413.532 277.33,413.532C275.207,413.532 273.308,413.992 271.633,414.912C269.958,415.833 268.639,417.11 267.675,418.744C266.712,420.378 266.23,422.268 266.23,424.414L266.23,454.032L251.721,454.032Z" style="fill-rule:nonzero;"/>
40 |                 <path d="M309.457,455.041C304.157,455.041 299.582,453.912 295.732,451.655C291.882,449.399 288.912,446.244 286.821,442.192C284.73,438.14 283.685,433.423 283.685,428.041C283.685,422.641 284.73,417.91 286.821,413.849C288.912,409.787 291.882,406.628 295.732,404.371C299.582,402.115 304.157,400.986 309.457,400.986C314.757,400.986 319.332,402.115 323.182,404.371C327.032,406.628 330.003,409.787 332.094,413.849C334.185,417.91 335.23,422.641 335.23,428.041C335.23,433.423 334.185,438.14 332.094,442.192C330.003,446.244 327.032,449.399 323.182,451.655C319.332,453.912 314.757,455.041 309.457,455.041ZM309.539,443.804C311.93,443.804 313.937,443.116 315.56,441.738C317.182,440.361 318.407,438.479 319.235,436.093C320.062,433.707 320.476,430.995 320.476,427.959C320.476,424.909 320.062,422.19 319.235,419.801C318.407,417.412 317.182,415.525 315.56,414.138C313.937,412.752 311.93,412.059 309.539,412.059C307.094,412.059 305.046,412.752 303.396,414.138C301.746,415.525 300.507,417.412 299.68,419.801C298.853,422.19 298.439,424.909 298.439,427.959C298.439,430.995 298.853,433.707 299.68,436.093C300.507,438.479 301.746,440.361 303.396,441.738C305.046,443.116 307.094,443.804 309.539,443.804Z" style="fill-rule:nonzero;"/>
41 |                 <path d="M343.085,401.668L357.594,401.668L357.594,456.623C357.594,460.668 356.797,463.941 355.204,466.441C353.611,468.941 351.335,470.77 348.376,471.929C345.417,473.089 341.88,473.668 337.767,473.668C337.248,473.668 336.761,473.661 336.304,473.648C335.847,473.634 335.353,473.613 334.821,473.586L334.821,462.241C335.203,462.268 335.538,462.289 335.827,462.302C336.115,462.316 336.416,462.323 336.73,462.323C339.062,462.323 340.704,461.826 341.656,460.833C342.609,459.84 343.085,458.354 343.085,456.377L343.085,401.668ZM350.312,394.904C348.157,394.904 346.309,394.186 344.769,392.75C343.228,391.314 342.457,389.586 342.457,387.568C342.457,385.55 343.228,383.822 344.769,382.386C346.309,380.95 348.157,380.232 350.312,380.232C352.48,380.232 354.331,380.95 355.865,382.386C357.399,383.822 358.166,385.55 358.166,387.568C358.166,389.586 357.399,391.314 355.865,392.75C354.331,394.186 352.48,394.904 350.312,394.904Z" style="fill-rule:nonzero;"/>
42 |                 <path d="M389.693,455.041C384.321,455.041 379.695,453.949 375.815,451.765C371.936,449.581 368.952,446.472 366.863,442.438C364.774,438.404 363.73,433.623 363.73,428.095C363.73,422.704 364.778,417.975 366.873,413.907C368.969,409.839 371.917,406.668 375.716,404.395C379.516,402.123 383.984,400.986 389.121,400.986C392.585,400.986 395.81,401.536 398.796,402.636C401.782,403.736 404.394,405.392 406.63,407.603C408.866,409.815 410.612,412.584 411.866,415.911C413.121,419.239 413.748,423.127 413.748,427.577L413.748,431.559L369.539,431.559L369.539,422.559L400.085,422.559C400.071,420.477 399.608,418.628 398.697,417.012C397.786,415.397 396.529,414.126 394.927,413.201C393.324,412.276 391.471,411.813 389.366,411.813C387.171,411.813 385.225,412.324 383.53,413.344C381.834,414.364 380.508,415.72 379.551,417.411C378.595,419.102 378.103,420.982 378.075,423.05L378.075,431.613C378.075,434.204 378.562,436.443 379.534,438.33C380.507,440.216 381.88,441.668 383.652,442.686C385.425,443.704 387.521,444.214 389.939,444.214C391.562,444.214 393.04,443.984 394.375,443.525C395.709,443.066 396.858,442.385 397.821,441.483C398.785,440.581 399.512,439.473 400.003,438.159L413.421,439.032C412.739,442.268 411.35,445.085 409.255,447.483C407.16,449.881 404.456,451.74 401.145,453.06C397.833,454.38 394.016,455.041 389.693,455.041Z" style="fill-rule:nonzero;"/>
43 |                 <path d="M445.412,455.041C440.039,455.041 435.43,453.899 431.585,451.614C427.739,449.33 424.787,446.158 422.728,442.096C420.669,438.035 419.639,433.35 419.639,428.041C419.639,422.695 420.68,417.99 422.762,413.924C424.844,409.858 427.805,406.685 431.646,404.405C435.487,402.126 440.057,400.986 445.358,400.986C449.912,400.986 453.908,401.815 457.347,403.471C460.785,405.128 463.502,407.46 465.498,410.467C467.494,413.473 468.589,416.995 468.784,421.032L455.094,421.032C454.698,418.427 453.681,416.321 452.043,414.715C450.404,413.108 448.248,412.304 445.575,412.304C443.339,412.304 441.382,412.912 439.705,414.128C438.028,415.344 436.723,417.11 435.791,419.426C434.859,421.742 434.394,424.55 434.394,427.85C434.394,431.186 434.855,434.024 435.778,436.362C436.7,438.701 438,440.485 439.678,441.715C441.355,442.945 443.321,443.559 445.575,443.559C447.244,443.559 448.739,443.22 450.062,442.54C451.384,441.86 452.483,440.869 453.358,439.567C454.234,438.265 454.812,436.686 455.094,434.832L468.784,434.832C468.562,438.836 467.48,442.358 465.539,445.397C463.598,448.435 460.922,450.802 457.511,452.498C454.099,454.193 450.066,455.041 445.412,455.041Z" style="fill-rule:nonzero;"/>
44 |                 <path d="M503.203,401.668L503.203,412.577L471.648,412.577L471.648,401.668L503.203,401.668ZM478.821,389.123L493.33,389.123L493.33,437.927C493.33,439.272 493.539,440.317 493.957,441.06C494.375,441.803 494.952,442.322 495.689,442.615C496.426,442.908 497.275,443.054 498.239,443.054C498.935,443.054 499.624,442.993 500.308,442.87C500.992,442.748 501.512,442.646 501.866,442.564L504.157,453.391C503.434,453.623 502.41,453.891 501.085,454.196C499.761,454.5 498.157,454.686 496.275,454.755C492.775,454.891 489.712,454.426 487.085,453.36C484.457,452.294 482.416,450.632 480.962,448.373C479.507,446.113 478.794,443.277 478.821,439.864L478.821,389.123Z" style="fill-rule:nonzero;"/>
45 |                 <path d="M537.267,473.668L537.267,401.668L551.584,401.668L551.584,410.477L552.212,410.477C552.857,409.05 553.786,407.605 555,406.144C556.214,404.683 557.805,403.458 559.773,402.469C561.741,401.481 564.184,400.986 567.103,400.986C570.939,400.986 574.467,401.979 577.688,403.966C580.908,405.952 583.486,408.941 585.42,412.932C587.354,416.923 588.321,421.913 588.321,427.904C588.321,433.75 587.381,438.677 585.502,442.686C583.622,446.695 581.076,449.729 577.865,451.788C574.654,453.847 571.057,454.877 567.075,454.877C564.257,454.877 561.867,454.41 559.906,453.476C557.944,452.542 556.34,451.367 555.092,449.951C553.844,448.535 552.884,447.105 552.212,445.659L551.775,445.659L551.775,473.668L537.267,473.668ZM551.475,427.85C551.475,430.959 551.908,433.671 552.774,435.987C553.64,438.304 554.89,440.104 556.524,441.388C558.158,442.672 560.139,443.314 562.466,443.314C564.848,443.314 566.856,442.66 568.49,441.354C570.124,440.047 571.365,438.231 572.213,435.906C573.061,433.581 573.484,430.895 573.484,427.85C573.484,424.823 573.065,422.16 572.227,419.862C571.388,417.564 570.152,415.771 568.518,414.483C566.884,413.194 564.866,412.549 562.466,412.549C560.121,412.549 558.131,413.176 556.497,414.428C554.863,415.68 553.617,417.451 552.76,419.739C551.903,422.028 551.475,424.732 551.475,427.85Z" style="fill-rule:nonzero;"/>
46 |                 <rect x="595.767" y="384.214" width="14.509" height="69.818" style="fill-rule:nonzero;"/>
47 |                 <path d="M633.457,455.013C630.126,455.013 627.152,454.431 624.536,453.265C621.92,452.099 619.857,450.361 618.348,448.052C616.839,445.743 616.085,442.864 616.085,439.414C616.085,436.495 616.614,434.051 617.673,432.081C618.733,430.11 620.183,428.523 622.024,427.318C623.864,426.114 625.963,425.2 628.32,424.577C630.677,423.954 633.153,423.518 635.748,423.268C638.78,422.968 641.229,422.676 643.095,422.392C644.961,422.108 646.316,421.681 647.162,421.11C648.007,420.54 648.43,419.695 648.43,418.577L648.43,418.386C648.43,416.223 647.751,414.55 646.392,413.368C645.033,412.186 643.121,411.595 640.657,411.595C638.044,411.595 635.963,412.167 634.415,413.31C632.868,414.453 631.848,415.891 631.357,417.623L617.912,416.532C618.594,413.35 619.933,410.594 621.931,408.265C623.929,405.935 626.514,404.14 629.687,402.878C632.86,401.617 636.535,400.986 640.712,400.986C643.634,400.986 646.427,401.328 649.091,402.012C651.755,402.697 654.125,403.751 656.203,405.176C658.28,406.601 659.922,408.433 661.129,410.671C662.336,412.91 662.939,415.591 662.939,418.714L662.939,454.032L649.166,454.032L649.166,446.777L648.757,446.777C647.912,448.404 646.788,449.838 645.386,451.079C643.984,452.32 642.29,453.286 640.306,453.977C638.322,454.668 636.039,455.013 633.457,455.013ZM637.63,445.005C639.762,445.005 641.645,444.577 643.279,443.723C644.913,442.868 646.194,441.711 647.121,440.252C648.048,438.793 648.512,437.15 648.512,435.323L648.512,429.759C648.076,430.045 647.461,430.309 646.668,430.55C645.875,430.791 644.993,431.007 644.022,431.197C643.052,431.388 642.079,431.559 641.104,431.709C640.129,431.859 639.244,431.991 638.448,432.104C636.739,432.35 635.247,432.746 633.972,433.294C632.697,433.842 631.706,434.576 630.999,435.496C630.292,436.417 629.939,437.559 629.939,438.923C629.939,440.914 630.662,442.425 632.107,443.457C633.553,444.489 635.394,445.005 637.63,445.005Z" style="fill-rule:nonzero;"/>
48 |                 <path d="M687.185,423.759L687.185,454.032L672.676,454.032L672.676,401.668L686.503,401.668L686.503,410.914L687.103,410.914C688.275,407.859 690.224,405.441 692.949,403.659C695.674,401.877 698.98,400.986 702.866,400.986C706.507,400.986 709.681,401.783 712.388,403.376C715.094,404.969 717.197,407.236 718.694,410.177C720.192,413.118 720.934,416.618 720.921,420.677L720.921,454.032L706.412,454.032L706.412,423.268C706.425,420.068 705.606,417.563 703.954,415.754C702.302,413.945 700.021,413.041 697.112,413.041C695.157,413.041 693.433,413.464 691.94,414.312C690.447,415.16 689.284,416.382 688.453,417.98C687.621,419.578 687.198,421.504 687.185,423.759Z" style="fill-rule:nonzero;"/>
49 |                 <path d="M743.366,423.759L743.366,454.032L728.858,454.032L728.858,401.668L742.685,401.668L742.685,410.914L743.284,410.914C744.457,407.859 746.406,405.441 749.131,403.659C751.856,401.877 755.162,400.986 759.048,400.986C762.689,400.986 765.863,401.783 768.569,403.376C771.276,404.969 773.379,407.236 774.876,410.177C776.374,413.118 777.116,416.618 777.103,420.677L777.103,454.032L762.594,454.032L762.594,423.268C762.607,420.068 761.788,417.563 760.136,415.754C758.483,413.945 756.203,413.041 753.294,413.041C751.339,413.041 749.615,413.464 748.122,414.312C746.629,415.16 745.466,416.382 744.634,417.98C743.803,419.578 743.38,421.504 743.366,423.759Z" style="fill-rule:nonzero;"/>
50 |                 <path d="M785.039,454.032L785.039,401.668L799.548,401.668L799.548,454.032L785.039,454.032ZM792.331,394.904C790.17,394.904 788.319,394.186 786.778,392.749C785.237,391.312 784.466,389.585 784.466,387.567C784.466,385.549 785.238,383.822 786.781,382.386C788.324,380.95 790.17,380.232 792.321,380.232C794.489,380.232 796.34,380.95 797.874,382.387C799.408,383.824 800.175,385.551 800.175,387.569C800.175,389.587 799.408,391.314 797.874,392.75C796.34,394.186 794.492,394.904 792.331,394.904Z" style="fill-rule:nonzero;"/>
51 |                 <path d="M822.321,423.759L822.321,454.032L807.812,454.032L807.812,401.668L821.639,401.668L821.639,410.914L822.239,410.914C823.411,407.859 825.36,405.441 828.085,403.659C830.811,401.877 834.116,400.986 838.003,400.986C841.643,400.986 844.817,401.783 847.524,403.376C850.231,404.969 852.333,407.236 853.831,410.177C855.328,413.118 856.071,416.618 856.057,420.677L856.057,454.032L841.548,454.032L841.548,423.268C841.562,420.068 840.742,417.563 839.09,415.754C837.438,413.945 835.157,413.041 832.248,413.041C830.294,413.041 828.57,413.464 827.077,414.312C825.583,415.16 824.421,416.382 823.589,417.98C822.757,419.578 822.334,421.504 822.321,423.759Z" style="fill-rule:nonzero;"/>
52 |                 <path d="M887.585,474.759C882.88,474.759 878.847,474.115 875.486,472.826C872.125,471.537 869.456,469.792 867.481,467.59C865.506,465.387 864.225,462.913 863.639,460.168L877.084,458.368C877.484,459.418 878.125,460.396 879.007,461.3C879.889,462.204 881.063,462.933 882.529,463.485C883.995,464.038 885.789,464.314 887.912,464.314C891.062,464.314 893.667,463.55 895.729,462.023C897.79,460.495 898.821,457.932 898.821,454.332L898.821,444.759L898.221,444.759C897.576,446.204 896.614,447.578 895.337,448.881C894.06,450.183 892.426,451.244 890.435,452.065C888.444,452.885 886.057,453.296 883.275,453.296C879.348,453.296 875.777,452.377 872.561,450.541C869.345,448.704 866.786,445.898 864.883,442.12C862.981,438.343 862.03,433.55 862.03,427.741C862.03,421.804 862.997,416.852 864.931,412.884C866.865,408.916 869.443,405.941 872.663,403.959C875.884,401.977 879.412,400.986 883.248,400.986C886.167,400.986 888.614,401.481 890.592,402.469C892.569,403.458 894.169,404.683 895.392,406.144C896.614,407.605 897.548,409.05 898.194,410.477L898.767,410.477L898.767,401.668L913.166,401.668L913.166,454.55C913.166,459.009 912.074,462.735 909.89,465.728C907.706,468.721 904.689,470.975 900.839,472.488C896.989,474.002 892.571,474.759 887.585,474.759ZM887.885,442.386C890.212,442.386 892.192,441.801 893.827,440.631C895.461,439.46 896.711,437.779 897.577,435.585C898.443,433.392 898.876,430.759 898.876,427.686C898.876,424.622 898.447,421.958 897.59,419.692C896.734,417.426 895.488,415.669 893.854,414.421C892.22,413.173 890.23,412.549 887.885,412.549C885.484,412.549 883.467,413.192 881.833,414.476C880.199,415.76 878.963,417.54 878.124,419.815C877.286,422.09 876.866,424.714 876.866,427.686C876.866,430.695 877.29,433.299 878.138,435.496C878.986,437.694 880.226,439.392 881.86,440.59C883.494,441.788 885.503,442.386 887.885,442.386Z" style="fill-rule:nonzero;"/>
53 |             </g>
54 |             <path d="M1731.19,152.056L1738.31,152.056L1738.31,204.597L1685.77,204.597L1685.77,197.423L1692.92,197.423L1692.92,197.449L1731.16,197.449L1731.16,197.423L1731.19,197.423L1731.19,152.056ZM1717.85,159.204L1692.92,159.204L1692.92,184.081L1685.8,184.081L1685.8,152.056L1717.85,152.056L1717.85,159.204Z"/>
55 |             <g transform="matrix(0.476503,0,0,0.476503,1016.56,-17.3498)">
56 |                 <path d="M1493.23,444.227L1382.97,444.227L1382.97,333.964L1493.23,333.964L1493.23,444.227ZM1478.23,348.964L1397.97,348.964L1397.97,429.227L1478.23,429.227L1478.23,348.964Z"/>
57 |             </g>
58 |         </g>
59 |     </g>
60 |     <defs>
61 |         <linearGradient id="_Linear1" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
62 |         <linearGradient id="_Linear2" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
63 |         <linearGradient id="_Linear3" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
64 |         <linearGradient id="_Linear4" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
65 |         <linearGradient id="_Linear5" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
66 |         <linearGradient id="_Linear6" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
67 |         <linearGradient id="_Linear7" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
68 |         <linearGradient id="_Linear8" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
69 |         <linearGradient id="_Linear9" x1="0" y1="0" x2="1" y2="0" gradientUnits="userSpaceOnUse" gradientTransform="matrix(718.146,0,0,189.927,193.739,379.795)"><stop offset="0" style="stop-color:rgb(138,35,135);stop-opacity:1"/><stop offset="0.5" style="stop-color:rgb(233,64,87);stop-opacity:1"/><stop offset="1" style="stop-color:rgb(242,113,33);stop-opacity:1"/></linearGradient>
70 |     </defs>
71 | </svg>
72 | 


--------------------------------------------------------------------------------
/jest.config.js:
--------------------------------------------------------------------------------
1 | /** @type {import('ts-jest/dist/types').InitialOptionsTsJest} */
2 | module.exports = {
3 |   preset: "ts-jest",
4 |   testEnvironment: "node",
5 |   transform: {
6 |     "^.+\\.ts$": "esbuild-jest",
7 |   },
8 | };
9 | 


--------------------------------------------------------------------------------
/manifest-beta.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "id": "obsidian-projects",
 3 |   "name": "Projects",
 4 |   "version": "0.0.0-1004",
 5 |   "minAppVersion": "1.0.0",
 6 |   "description": "Plain text project planning.",
 7 |   "author": "Marcus Olsson",
 8 |   "authorUrl": "https://marcus.se.net",
 9 |   "fundingUrl": "https://www.buymeacoffee.com/marcusolsson",
10 |   "isDesktopOnly": false
11 | }


--------------------------------------------------------------------------------
/manifest.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "id": "obsidian-projects",
 3 |   "name": "Projects",
 4 |   "version": "1.17.4",
 5 |   "minAppVersion": "1.0.0",
 6 |   "description": "Plain text project planning.",
 7 |   "author": "Marcus Olsson",
 8 |   "authorUrl": "https://marcus.se.net",
 9 |   "fundingUrl": "https://www.buymeacoffee.com/marcusolsson",
10 |   "isDesktopOnly": false
11 | }


--------------------------------------------------------------------------------
/obsidian-projects-types/.gitignore:
--------------------------------------------------------------------------------
1 | index.d.ts
2 | index.js
3 | yarn.lock
4 | 


--------------------------------------------------------------------------------
/obsidian-projects-types/README.md:
--------------------------------------------------------------------------------
 1 | # Custom View API
 2 | 
 3 | _Traveler! Before you venture further, know that there be dragons ahead. Beasts that may lay waste to your plugin, leaving it broken and burned. Continue your journey only if you're willing to accept pain and suffering in your search of greatness._
 4 | 
 5 | With the Custom View API you can add your own custom views to the Projects plugin.
 6 | 
 7 | **IMPORTANT:** This API is **highly experimental**. If you're interested in building views for Projects, please reach out to me so that I can update you in case of (inevitable) breaking changes.
 8 | 
 9 | ## Build a custom view
10 | 
11 | ### Install dependencies
12 | 
13 | ```bash
14 | npm install --save-dev obsidian-projects-types@latest
15 | ```
16 | 
17 | ```bash
18 | yarn add --dev obsidian-projects-types@latest
19 | ```
20 | 
21 | ### Register a custom view
22 | 
23 | To register a custom view:
24 | 
25 | 1. Create a class that extends `ProjectView`.
26 | 1. Create a method `onRegisterProjectView` that returns a new instance of your view class.
27 | 
28 | Below is an example of a custom view:
29 | 
30 | ```ts
31 | import { Plugin } from "obsidian";
32 | import {
33 |   DataQueryResult,
34 |   ProjectView,
35 |   ProjectViewProps,
36 | } from "obsidian-projects-types";
37 | 
38 | class MySampleView extends ProjectView {
39 |   dataEl?: HTMLElement;
40 | 
41 |   getViewType(): string {
42 |     return "my-sample-view";
43 |   }
44 | 
45 |   getDisplayName(): string {
46 |     return "Sample view";
47 |   }
48 | 
49 |   getIcon(): string {
50 |     return "apple";
51 |   }
52 | 
53 |   // onData is called whenever the data has been updated (for whatever reason).
54 |   // Whenever this function is called, you should invalidate previous data.
55 |   //
56 |   // `data`        Contains the parsed data.
57 |   async onData({ data }: DataQueryResult) {
58 |     if (this.dataEl) {
59 |       this.dataEl.empty();
60 |       this.dataEl.createDiv({ text: JSON.stringify(data.fields) });
61 |       this.dataEl.createDiv({ text: JSON.stringify(data.records) });
62 |     }
63 |   }
64 | 
65 |   // onOpens is called whenever the user activates your view.
66 |   //
67 |   // `contentEl`    HTML element where you can attach your view.
68 |   // `config`       JSON object with optional view configuration.
69 |   // `saveConfig`   Callback to save configuration changes.
70 |   // `readonly`     If true, you should disable any UI features that updates the
71 |   //                underlying data. Currently, readonly is only true for
72 |   //                Dataview projects, where fields may be computed.
73 |   async onOpen({ contentEl, config, saveConfig, readonly }: ProjectViewProps) {
74 |     console.log("Opening ", this.getDisplayName());
75 | 
76 |     contentEl.createEl("h1", { text: "My Sample View" });
77 | 
78 |     this.dataEl = contentEl.createEl("div");
79 |   }
80 | 
81 |   // onOpens is called whenever the user leaves or removes your view.
82 |   // Use this to clean up any resources you've created.
83 |   async onClose() {
84 |     console.log("Closing ", this.getDisplayName());
85 |   }
86 | }
87 | 
88 | export default class MyPlugin extends Plugin {
89 |   // This method is called by Projects to register your view. The Projects
90 |   // plugin may call this function multiple times to create the view.
91 |   onRegisterProjectView = () => new MySampleView();
92 | }
93 | ```
94 | 


--------------------------------------------------------------------------------
/obsidian-projects-types/index.ts:
--------------------------------------------------------------------------------
  1 | /**
  2 |  * DataFrame is the core data structure that contains structured data for a
  3 |  * collection of notes.
  4 |  */
  5 | export type DataFrame = {
  6 |   /**
  7 |    * fields defines the schema for the data frame. Each field describes the
  8 |    * values in each DataRecord.
  9 |    */
 10 |   readonly fields: DataField[];
 11 | 
 12 |   /**
 13 |    * records holds the data from each note.
 14 |    */
 15 |   readonly records: DataRecord[];
 16 | };
 17 | 
 18 | /**
 19 |  * DataField holds metadata for a value in DataRecord, for example a front
 20 |  * matter property.
 21 |  */
 22 | export type DataField = {
 23 |   /**
 24 |    * name references the a property (key) in the DataRecord values object.
 25 |    */
 26 |   readonly name: string;
 27 | 
 28 |   /**
 29 |    * type defines the data type for the field.
 30 |    */
 31 |   readonly type: DataFieldType;
 32 | 
 33 |   /**
 34 |    * repeated defines whether the field can have multiple values.
 35 |    */
 36 |   readonly repeated: boolean;
 37 | 
 38 |   /**
 39 |    * identifier defines whether this field identifies a DataRecord.
 40 |    */
 41 |   readonly identifier: boolean;
 42 | 
 43 |   /**
 44 |    * derived defines whether this field has been derived from another field.
 45 |    *
 46 |    * Since derived fields are computed from other fields, they can't be
 47 |    * modified.
 48 |    */
 49 |   readonly derived: boolean;
 50 | };
 51 | 
 52 | export enum DataFieldType {
 53 |   String = "string",
 54 |   Number = "number",
 55 |   Boolean = "boolean",
 56 |   Date = "date",
 57 |   Unknown = "unknown",
 58 | }
 59 | 
 60 | export type DataRecord = {
 61 |   readonly id: string;
 62 |   readonly values: Record<string, Optional<DataValue>>;
 63 | };
 64 | 
 65 | export type DataValue =
 66 |   | string
 67 |   | number
 68 |   | boolean
 69 |   | Date
 70 |   | Array<Optional<DataValue>>;
 71 | 
 72 | export type Optional<T> =
 73 |   | T
 74 |   // undefined means the field has been removed from a DataRecord.
 75 |   | undefined
 76 |   // null means that while the field exists, it doesn't yet have a value.
 77 |   | null;
 78 | 
 79 | export class ViewApi {
 80 |   addRecord(
 81 |     record: DataRecord,
 82 |     fields: DataField[],
 83 |     templatePath: string
 84 |   ): void {}
 85 |   updateRecord(record: DataRecord, fields: DataField[]): void {}
 86 |   deleteRecord(recordId: string): void {}
 87 |   updateField(field: DataField): void {}
 88 |   deleteField(field: string): void {}
 89 | }
 90 | 
 91 | export type DataSource = FolderDataSource | TagDataSource | DataviewDataSource;
 92 | 
 93 | export type FolderDataSource = {
 94 |   readonly kind: "folder";
 95 |   readonly config: {
 96 |     readonly path: string;
 97 |     readonly recursive: boolean;
 98 |   };
 99 | };
100 | 
101 | export type TagDataSource = {
102 |   readonly kind: "tag";
103 |   readonly config: {
104 |     readonly tag: string;
105 |     readonly hierarchy: boolean;
106 |   };
107 | };
108 | 
109 | export type DataviewDataSource = {
110 |   readonly kind: "dataview";
111 |   readonly config: {
112 |     readonly query: string;
113 |   };
114 | };
115 | 
116 | export type ProjectDefinition = {
117 |   readonly name: string;
118 |   readonly id: string;
119 |   readonly defaultName: string;
120 |   readonly templates: string[];
121 |   readonly excludedNotes: string[];
122 |   readonly isDefault: boolean;
123 |   readonly dataSource: DataSource;
124 |   readonly newNotesFolder: string;
125 | };
126 | 
127 | export type DataQueryResult = {
128 |   data: DataFrame;
129 | };
130 | 
131 | export interface ProjectViewProps<T = Record<string, any>> {
132 |   viewId: string;
133 |   project: ProjectDefinition;
134 |   config: T;
135 |   saveConfig: (config: T) => void;
136 |   contentEl: HTMLElement;
137 |   viewApi: ViewApi;
138 |   readonly: boolean;
139 | }
140 | 
141 | export abstract class ProjectView<T = Record<string, any>> {
142 |   async onData(result: DataQueryResult): Promise<void> {}
143 |   async onOpen(props: ProjectViewProps<T>): Promise<void> {}
144 |   async onClose(): Promise<void> {}
145 |   abstract getViewType(): string;
146 |   abstract getDisplayName(): string;
147 |   abstract getIcon(): string;
148 | }
149 | 


--------------------------------------------------------------------------------
/obsidian-projects-types/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "obsidian-projects-types",
 3 |   "version": "0.7.1",
 4 |   "types": "index.d.ts",
 5 |   "scripts": {
 6 |     "build": "tsc"
 7 |   },
 8 |   "author": "Marcus Olsson",
 9 |   "license": "MIT",
10 |   "devDependencies": {
11 |     "typescript": "^4.8.3"
12 |   }
13 | }
14 | 


--------------------------------------------------------------------------------
/obsidian-projects-types/tsconfig.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "compilerOptions": {
 3 |     "module": "ESNext",
 4 |     "target": "ES6",
 5 |     "lib": ["dom", "es6"],
 6 |     "noImplicitAny": true,
 7 |     "noImplicitThis": true,
 8 |     "strictNullChecks": true,
 9 |     "strictFunctionTypes": true,
10 |     "declaration": true,
11 |     "baseUrl": "../",
12 |     "typeRoots": ["../"],
13 |     "types": [],
14 |     "forceConsistentCasingInFileNames": true
15 |   },
16 |   "files": ["index.ts"]
17 | }
18 | 


--------------------------------------------------------------------------------
/package-lock.json:
--------------------------------------------------------------------------------
   1 | {
   2 |   "name": "obsidian-projects",
   3 |   "version": "1.17.4",
   4 |   "lockfileVersion": 3,
   5 |   "requires": true,
   6 |   "packages": {
   7 |     "": {
   8 |       "name": "obsidian-projects",
   9 |       "version": "1.17.4",
  10 |       "license": "MIT",
  11 |       "devDependencies": {
  12 |         "@eslint/eslintrc": "^3.2.0",
  13 |         "@eslint/js": "^9.15.0",
  14 |         "@interactjs/interact": "^1.10.27",
  15 |         "@interactjs/types": "^1.10.27",
  16 |         "@popperjs/core": "^2.11.8",
  17 |         "@popperjs/svelte": "^0.1.1",
  18 |         "@tsconfig/svelte": "^5.0.4",
  19 |         "@types/jest": "^29.5.12",
  20 |         "@types/node": "^22.10.1",
  21 |         "@types/sortablejs": "^1.15.8",
  22 |         "@types/uuid": "^10.0.0",
  23 |         "@typescript-eslint/eslint-plugin": "^8.16.0",
  24 |         "@typescript-eslint/parser": "^8.16.0",
  25 |         "builtin-modules": "^3.3.0",
  26 |         "dayjs": "^1.11.11",
  27 |         "esbuild": "^0.16.17",
  28 |         "esbuild-jest": "^0.5.0",
  29 |         "esbuild-plugin-replace": "^1.4.0",
  30 |         "esbuild-svelte": "^0.7.4",
  31 |         "eslint": "^9.15.0",
  32 |         "eslint-plugin-tsdoc": "^0.4.0",
  33 |         "fp-ts": "^2.16.6",
  34 |         "globals": "^15.12.0",
  35 |         "i18next": "^24.0.2",
  36 |         "immer": "^10.1.1",
  37 |         "jest": "^29.7.0",
  38 |         "obsidian": "^1.7.2",
  39 |         "obsidian-dataview": "^0.5.67",
  40 |         "obsidian-svelte": "0.2.1",
  41 |         "prettier": "^3.3.3",
  42 |         "prettier-plugin-svelte": "^3.3.0",
  43 |         "sass": "^1.77.2",
  44 |         "svelte": "^3.59.2",
  45 |         "svelte-check": "^3.7.1",
  46 |         "svelte-dnd-action": "0.9.52",
  47 |         "svelte-i18next": "^2.2.2",
  48 |         "svelte-media-queries": "^1.6.2",
  49 |         "svelte-preprocess": "^5.1.4",
  50 |         "ts-essentials": "^10.0.3",
  51 |         "ts-jest": "^29.1.3",
  52 |         "tslib": "^2.6.2",
  53 |         "typescript": "^5.4.5",
  54 |         "uuid": "^11.0.3",
  55 |         "yaml": "^2.4.2"
  56 |       }
  57 |     },
  58 |     "node_modules/@ampproject/remapping": {
  59 |       "version": "2.3.0",
  60 |       "resolved": "https://registry.npmmirror.com/@ampproject/remapping/-/remapping-2.3.0.tgz",
  61 |       "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
  62 |       "dev": true,
  63 |       "dependencies": {
  64 |         "@jridgewell/gen-mapping": "^0.3.5",
  65 |         "@jridgewell/trace-mapping": "^0.3.24"
  66 |       },
  67 |       "engines": {
  68 |         "node": ">=6.0.0"
  69 |       }
  70 |     },
  71 |     "node_modules/@babel/code-frame": {
  72 |       "version": "7.26.2",
  73 |       "resolved": "https://registry.npmmirror.com/@babel/code-frame/-/code-frame-7.26.2.tgz",
  74 |       "integrity": "sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==",
  75 |       "dev": true,
  76 |       "dependencies": {
  77 |         "@babel/helper-validator-identifier": "^7.25.9",
  78 |         "js-tokens": "^4.0.0",
  79 |         "picocolors": "^1.0.0"
  80 |       },
  81 |       "engines": {
  82 |         "node": ">=6.9.0"
  83 |       }
  84 |     },
  85 |     "node_modules/@babel/compat-data": {
  86 |       "version": "7.26.2",
  87 |       "resolved": "https://registry.npmmirror.com/@babel/compat-data/-/compat-data-7.26.2.tgz",
  88 |       "integrity": "sha512-Z0WgzSEa+aUcdiJuCIqgujCshpMWgUpgOxXotrYPSA53hA3qopNaqcJpyr0hVb1FeWdnqFA35/fUtXgBK8srQg==",
  89 |       "dev": true,
  90 |       "engines": {
  91 |         "node": ">=6.9.0"
  92 |       }
  93 |     },
  94 |     "node_modules/@babel/core": {
  95 |       "version": "7.26.0",
  96 |       "resolved": "https://registry.npmmirror.com/@babel/core/-/core-7.26.0.tgz",
  97 |       "integrity": "sha512-i1SLeK+DzNnQ3LL/CswPCa/E5u4lh1k6IAEphON8F+cXt0t9euTshDru0q7/IqMa1PMPz5RnHuHscF8/ZJsStg==",
  98 |       "dev": true,
  99 |       "dependencies": {
 100 |         "@ampproject/remapping": "^2.2.0",
 101 |         "@babel/code-frame": "^7.26.0",
 102 |         "@babel/generator": "^7.26.0",
 103 |         "@babel/helper-compilation-targets": "^7.25.9",
 104 |         "@babel/helper-module-transforms": "^7.26.0",
 105 |         "@babel/helpers": "^7.26.0",
 106 |         "@babel/parser": "^7.26.0",
 107 |         "@babel/template": "^7.25.9",
 108 |         "@babel/traverse": "^7.25.9",
 109 |         "@babel/types": "^7.26.0",
 110 |         "convert-source-map": "^2.0.0",
 111 |         "debug": "^4.1.0",
 112 |         "gensync": "^1.0.0-beta.2",
 113 |         "json5": "^2.2.3",
 114 |         "semver": "^6.3.1"
 115 |       },
 116 |       "engines": {
 117 |         "node": ">=6.9.0"
 118 |       },
 119 |       "funding": {
 120 |         "type": "opencollective",
 121 |         "url": "https://opencollective.com/babel"
 122 |       }
 123 |     },
 124 |     "node_modules/@babel/core/node_modules/semver": {
 125 |       "version": "6.3.1",
 126 |       "resolved": "https://registry.npmmirror.com/semver/-/semver-6.3.1.tgz",
 127 |       "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
 128 |       "dev": true,
 129 |       "bin": {
 130 |         "semver": "bin/semver.js"
 131 |       }
 132 |     },
 133 |     "node_modules/@babel/generator": {
 134 |       "version": "7.26.2",
 135 |       "resolved": "https://registry.npmmirror.com/@babel/generator/-/generator-7.26.2.tgz",
 136 |       "integrity": "sha512-zevQbhbau95nkoxSq3f/DC/SC+EEOUZd3DYqfSkMhY2/wfSeaHV1Ew4vk8e+x8lja31IbyuUa2uQ3JONqKbysw==",
 137 |       "dev": true,
 138 |       "dependencies": {
 139 |         "@babel/parser": "^7.26.2",
 140 |         "@babel/types": "^7.26.0",
 141 |         "@jridgewell/gen-mapping": "^0.3.5",
 142 |         "@jridgewell/trace-mapping": "^0.3.25",
 143 |         "jsesc": "^3.0.2"
 144 |       },
 145 |       "engines": {
 146 |         "node": ">=6.9.0"
 147 |       }
 148 |     },
 149 |     "node_modules/@babel/helper-compilation-targets": {
 150 |       "version": "7.25.9",
 151 |       "resolved": "https://registry.npmmirror.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.25.9.tgz",
 152 |       "integrity": "sha512-j9Db8Suy6yV/VHa4qzrj9yZfZxhLWQdVnRlXxmKLYlhWUVB1sB2G5sxuWYXk/whHD9iW76PmNzxZ4UCnTQTVEQ==",
 153 |       "dev": true,
 154 |       "dependencies": {
 155 |         "@babel/compat-data": "^7.25.9",
 156 |         "@babel/helper-validator-option": "^7.25.9",
 157 |         "browserslist": "^4.24.0",
 158 |         "lru-cache": "^5.1.1",
 159 |         "semver": "^6.3.1"
 160 |       },
 161 |       "engines": {
 162 |         "node": ">=6.9.0"
 163 |       }
 164 |     },
 165 |     "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
 166 |       "version": "6.3.1",
 167 |       "resolved": "https://registry.npmmirror.com/semver/-/semver-6.3.1.tgz",
 168 |       "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
 169 |       "dev": true,
 170 |       "bin": {
 171 |         "semver": "bin/semver.js"
 172 |       }
 173 |     },
 174 |     "node_modules/@babel/helper-module-imports": {
 175 |       "version": "7.25.9",
 176 |       "resolved": "https://registry.npmmirror.com/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz",
 177 |       "integrity": "sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==",
 178 |       "dev": true,
 179 |       "dependencies": {
 180 |         "@babel/traverse": "^7.25.9",
 181 |         "@babel/types": "^7.25.9"
 182 |       },
 183 |       "engines": {
 184 |         "node": ">=6.9.0"
 185 |       }
 186 |     },
 187 |     "node_modules/@babel/helper-module-transforms": {
 188 |       "version": "7.26.0",
 189 |       "resolved": "https://registry.npmmirror.com/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz",
 190 |       "integrity": "sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==",
 191 |       "dev": true,
 192 |       "dependencies": {
 193 |         "@babel/helper-module-imports": "^7.25.9",
 194 |         "@babel/helper-validator-identifier": "^7.25.9",
 195 |         "@babel/traverse": "^7.25.9"
 196 |       },
 197 |       "engines": {
 198 |         "node": ">=6.9.0"
 199 |       },
 200 |       "peerDependencies": {
 201 |         "@babel/core": "^7.0.0"
 202 |       }
 203 |     },
 204 |     "node_modules/@babel/helper-plugin-utils": {
 205 |       "version": "7.25.9",
 206 |       "resolved": "https://registry.npmmirror.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.25.9.tgz",
 207 |       "integrity": "sha512-kSMlyUVdWe25rEsRGviIgOWnoT/nfABVWlqt9N19/dIPWViAOW2s9wznP5tURbs/IDuNk4gPy3YdYRgH3uxhBw==",
 208 |       "dev": true,
 209 |       "engines": {
 210 |         "node": ">=6.9.0"
 211 |       }
 212 |     },
 213 |     "node_modules/@babel/helper-simple-access": {
 214 |       "version": "7.25.9",
 215 |       "resolved": "https://registry.npmmirror.com/@babel/helper-simple-access/-/helper-simple-access-7.25.9.tgz",
 216 |       "integrity": "sha512-c6WHXuiaRsJTyHYLJV75t9IqsmTbItYfdj99PnzYGQZkYKvan5/2jKJ7gu31J3/BJ/A18grImSPModuyG/Eo0Q==",
 217 |       "dev": true,
 218 |       "dependencies": {
 219 |         "@babel/traverse": "^7.25.9",
 220 |         "@babel/types": "^7.25.9"
 221 |       },
 222 |       "engines": {
 223 |         "node": ">=6.9.0"
 224 |       }
 225 |     },
 226 |     "node_modules/@babel/helper-string-parser": {
 227 |       "version": "7.25.9",
 228 |       "resolved": "https://registry.npmmirror.com/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
 229 |       "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
 230 |       "dev": true,
 231 |       "engines": {
 232 |         "node": ">=6.9.0"
 233 |       }
 234 |     },
 235 |     "node_modules/@babel/helper-validator-identifier": {
 236 |       "version": "7.25.9",
 237 |       "resolved": "https://registry.npmmirror.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
 238 |       "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
 239 |       "dev": true,
 240 |       "engines": {
 241 |         "node": ">=6.9.0"
 242 |       }
 243 |     },
 244 |     "node_modules/@babel/helper-validator-option": {
 245 |       "version": "7.25.9",
 246 |       "resolved": "https://registry.npmmirror.com/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz",
 247 |       "integrity": "sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==",
 248 |       "dev": true,
 249 |       "engines": {
 250 |         "node": ">=6.9.0"
 251 |       }
 252 |     },
 253 |     "node_modules/@babel/helpers": {
 254 |       "version": "7.26.0",
 255 |       "resolved": "https://registry.npmmirror.com/@babel/helpers/-/helpers-7.26.0.tgz",
 256 |       "integrity": "sha512-tbhNuIxNcVb21pInl3ZSjksLCvgdZy9KwJ8brv993QtIVKJBBkYXz4q4ZbAv31GdnC+R90np23L5FbEBlthAEw==",
 257 |       "dev": true,
 258 |       "dependencies": {
 259 |         "@babel/template": "^7.25.9",
 260 |         "@babel/types": "^7.26.0"
 261 |       },
 262 |       "engines": {
 263 |         "node": ">=6.9.0"
 264 |       }
 265 |     },
 266 |     "node_modules/@babel/parser": {
 267 |       "version": "7.26.2",
 268 |       "resolved": "https://registry.npmmirror.com/@babel/parser/-/parser-7.26.2.tgz",
 269 |       "integrity": "sha512-DWMCZH9WA4Maitz2q21SRKHo9QXZxkDsbNZoVD62gusNtNBBqDg9i7uOhASfTfIGNzW+O+r7+jAlM8dwphcJKQ==",
 270 |       "dev": true,
 271 |       "dependencies": {
 272 |         "@babel/types": "^7.26.0"
 273 |       },
 274 |       "bin": {
 275 |         "parser": "bin/babel-parser.js"
 276 |       },
 277 |       "engines": {
 278 |         "node": ">=6.0.0"
 279 |       }
 280 |     },
 281 |     "node_modules/@babel/plugin-syntax-async-generators": {
 282 |       "version": "7.8.4",
 283 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz",
 284 |       "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==",
 285 |       "dev": true,
 286 |       "dependencies": {
 287 |         "@babel/helper-plugin-utils": "^7.8.0"
 288 |       },
 289 |       "peerDependencies": {
 290 |         "@babel/core": "^7.0.0-0"
 291 |       }
 292 |     },
 293 |     "node_modules/@babel/plugin-syntax-bigint": {
 294 |       "version": "7.8.3",
 295 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz",
 296 |       "integrity": "sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==",
 297 |       "dev": true,
 298 |       "dependencies": {
 299 |         "@babel/helper-plugin-utils": "^7.8.0"
 300 |       },
 301 |       "peerDependencies": {
 302 |         "@babel/core": "^7.0.0-0"
 303 |       }
 304 |     },
 305 |     "node_modules/@babel/plugin-syntax-class-properties": {
 306 |       "version": "7.12.13",
 307 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz",
 308 |       "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==",
 309 |       "dev": true,
 310 |       "dependencies": {
 311 |         "@babel/helper-plugin-utils": "^7.12.13"
 312 |       },
 313 |       "peerDependencies": {
 314 |         "@babel/core": "^7.0.0-0"
 315 |       }
 316 |     },
 317 |     "node_modules/@babel/plugin-syntax-class-static-block": {
 318 |       "version": "7.14.5",
 319 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz",
 320 |       "integrity": "sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==",
 321 |       "dev": true,
 322 |       "dependencies": {
 323 |         "@babel/helper-plugin-utils": "^7.14.5"
 324 |       },
 325 |       "engines": {
 326 |         "node": ">=6.9.0"
 327 |       },
 328 |       "peerDependencies": {
 329 |         "@babel/core": "^7.0.0-0"
 330 |       }
 331 |     },
 332 |     "node_modules/@babel/plugin-syntax-import-attributes": {
 333 |       "version": "7.26.0",
 334 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.26.0.tgz",
 335 |       "integrity": "sha512-e2dttdsJ1ZTpi3B9UYGLw41hifAubg19AtCu/2I/F1QNVclOBr1dYpTdmdyZ84Xiz43BS/tCUkMAZNLv12Pi+A==",
 336 |       "dev": true,
 337 |       "dependencies": {
 338 |         "@babel/helper-plugin-utils": "^7.25.9"
 339 |       },
 340 |       "engines": {
 341 |         "node": ">=6.9.0"
 342 |       },
 343 |       "peerDependencies": {
 344 |         "@babel/core": "^7.0.0-0"
 345 |       }
 346 |     },
 347 |     "node_modules/@babel/plugin-syntax-import-meta": {
 348 |       "version": "7.10.4",
 349 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz",
 350 |       "integrity": "sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==",
 351 |       "dev": true,
 352 |       "dependencies": {
 353 |         "@babel/helper-plugin-utils": "^7.10.4"
 354 |       },
 355 |       "peerDependencies": {
 356 |         "@babel/core": "^7.0.0-0"
 357 |       }
 358 |     },
 359 |     "node_modules/@babel/plugin-syntax-json-strings": {
 360 |       "version": "7.8.3",
 361 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz",
 362 |       "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==",
 363 |       "dev": true,
 364 |       "dependencies": {
 365 |         "@babel/helper-plugin-utils": "^7.8.0"
 366 |       },
 367 |       "peerDependencies": {
 368 |         "@babel/core": "^7.0.0-0"
 369 |       }
 370 |     },
 371 |     "node_modules/@babel/plugin-syntax-jsx": {
 372 |       "version": "7.25.9",
 373 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.25.9.tgz",
 374 |       "integrity": "sha512-ld6oezHQMZsZfp6pWtbjaNDF2tiiCYYDqQszHt5VV437lewP9aSi2Of99CK0D0XB21k7FLgnLcmQKyKzynfeAA==",
 375 |       "dev": true,
 376 |       "dependencies": {
 377 |         "@babel/helper-plugin-utils": "^7.25.9"
 378 |       },
 379 |       "engines": {
 380 |         "node": ">=6.9.0"
 381 |       },
 382 |       "peerDependencies": {
 383 |         "@babel/core": "^7.0.0-0"
 384 |       }
 385 |     },
 386 |     "node_modules/@babel/plugin-syntax-logical-assignment-operators": {
 387 |       "version": "7.10.4",
 388 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz",
 389 |       "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==",
 390 |       "dev": true,
 391 |       "dependencies": {
 392 |         "@babel/helper-plugin-utils": "^7.10.4"
 393 |       },
 394 |       "peerDependencies": {
 395 |         "@babel/core": "^7.0.0-0"
 396 |       }
 397 |     },
 398 |     "node_modules/@babel/plugin-syntax-nullish-coalescing-operator": {
 399 |       "version": "7.8.3",
 400 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz",
 401 |       "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==",
 402 |       "dev": true,
 403 |       "dependencies": {
 404 |         "@babel/helper-plugin-utils": "^7.8.0"
 405 |       },
 406 |       "peerDependencies": {
 407 |         "@babel/core": "^7.0.0-0"
 408 |       }
 409 |     },
 410 |     "node_modules/@babel/plugin-syntax-numeric-separator": {
 411 |       "version": "7.10.4",
 412 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz",
 413 |       "integrity": "sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==",
 414 |       "dev": true,
 415 |       "dependencies": {
 416 |         "@babel/helper-plugin-utils": "^7.10.4"
 417 |       },
 418 |       "peerDependencies": {
 419 |         "@babel/core": "^7.0.0-0"
 420 |       }
 421 |     },
 422 |     "node_modules/@babel/plugin-syntax-object-rest-spread": {
 423 |       "version": "7.8.3",
 424 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz",
 425 |       "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==",
 426 |       "dev": true,
 427 |       "dependencies": {
 428 |         "@babel/helper-plugin-utils": "^7.8.0"
 429 |       },
 430 |       "peerDependencies": {
 431 |         "@babel/core": "^7.0.0-0"
 432 |       }
 433 |     },
 434 |     "node_modules/@babel/plugin-syntax-optional-catch-binding": {
 435 |       "version": "7.8.3",
 436 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz",
 437 |       "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==",
 438 |       "dev": true,
 439 |       "dependencies": {
 440 |         "@babel/helper-plugin-utils": "^7.8.0"
 441 |       },
 442 |       "peerDependencies": {
 443 |         "@babel/core": "^7.0.0-0"
 444 |       }
 445 |     },
 446 |     "node_modules/@babel/plugin-syntax-optional-chaining": {
 447 |       "version": "7.8.3",
 448 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz",
 449 |       "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==",
 450 |       "dev": true,
 451 |       "dependencies": {
 452 |         "@babel/helper-plugin-utils": "^7.8.0"
 453 |       },
 454 |       "peerDependencies": {
 455 |         "@babel/core": "^7.0.0-0"
 456 |       }
 457 |     },
 458 |     "node_modules/@babel/plugin-syntax-private-property-in-object": {
 459 |       "version": "7.14.5",
 460 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz",
 461 |       "integrity": "sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==",
 462 |       "dev": true,
 463 |       "dependencies": {
 464 |         "@babel/helper-plugin-utils": "^7.14.5"
 465 |       },
 466 |       "engines": {
 467 |         "node": ">=6.9.0"
 468 |       },
 469 |       "peerDependencies": {
 470 |         "@babel/core": "^7.0.0-0"
 471 |       }
 472 |     },
 473 |     "node_modules/@babel/plugin-syntax-top-level-await": {
 474 |       "version": "7.14.5",
 475 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz",
 476 |       "integrity": "sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==",
 477 |       "dev": true,
 478 |       "dependencies": {
 479 |         "@babel/helper-plugin-utils": "^7.14.5"
 480 |       },
 481 |       "engines": {
 482 |         "node": ">=6.9.0"
 483 |       },
 484 |       "peerDependencies": {
 485 |         "@babel/core": "^7.0.0-0"
 486 |       }
 487 |     },
 488 |     "node_modules/@babel/plugin-syntax-typescript": {
 489 |       "version": "7.25.9",
 490 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.25.9.tgz",
 491 |       "integrity": "sha512-hjMgRy5hb8uJJjUcdWunWVcoi9bGpJp8p5Ol1229PoN6aytsLwNMgmdftO23wnCLMfVmTwZDWMPNq/D1SY60JQ==",
 492 |       "dev": true,
 493 |       "dependencies": {
 494 |         "@babel/helper-plugin-utils": "^7.25.9"
 495 |       },
 496 |       "engines": {
 497 |         "node": ">=6.9.0"
 498 |       },
 499 |       "peerDependencies": {
 500 |         "@babel/core": "^7.0.0-0"
 501 |       }
 502 |     },
 503 |     "node_modules/@babel/plugin-transform-modules-commonjs": {
 504 |       "version": "7.25.9",
 505 |       "resolved": "https://registry.npmmirror.com/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.25.9.tgz",
 506 |       "integrity": "sha512-dwh2Ol1jWwL2MgkCzUSOvfmKElqQcuswAZypBSUsScMXvgdT8Ekq5YA6TtqpTVWH+4903NmboMuH1o9i8Rxlyg==",
 507 |       "dev": true,
 508 |       "dependencies": {
 509 |         "@babel/helper-module-transforms": "^7.25.9",
 510 |         "@babel/helper-plugin-utils": "^7.25.9",
 511 |         "@babel/helper-simple-access": "^7.25.9"
 512 |       },
 513 |       "engines": {
 514 |         "node": ">=6.9.0"
 515 |       },
 516 |       "peerDependencies": {
 517 |         "@babel/core": "^7.0.0-0"
 518 |       }
 519 |     },
 520 |     "node_modules/@babel/runtime": {
 521 |       "version": "7.26.0",
 522 |       "resolved": "https://registry.npmmirror.com/@babel/runtime/-/runtime-7.26.0.tgz",
 523 |       "integrity": "sha512-FDSOghenHTiToteC/QRlv2q3DhPZ/oOXTBoirfWNx1Cx3TMVcGWQtMMmQcSvb/JjpNeGzx8Pq/b4fKEJuWm1sw==",
 524 |       "dev": true,
 525 |       "dependencies": {
 526 |         "regenerator-runtime": "^0.14.0"
 527 |       },
 528 |       "engines": {
 529 |         "node": ">=6.9.0"
 530 |       }
 531 |     },
 532 |     "node_modules/@babel/template": {
 533 |       "version": "7.25.9",
 534 |       "resolved": "https://registry.npmmirror.com/@babel/template/-/template-7.25.9.tgz",
 535 |       "integrity": "sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==",
 536 |       "dev": true,
 537 |       "dependencies": {
 538 |         "@babel/code-frame": "^7.25.9",
 539 |         "@babel/parser": "^7.25.9",
 540 |         "@babel/types": "^7.25.9"
 541 |       },
 542 |       "engines": {
 543 |         "node": ">=6.9.0"
 544 |       }
 545 |     },
 546 |     "node_modules/@babel/traverse": {
 547 |       "version": "7.25.9",
 548 |       "resolved": "https://registry.npmmirror.com/@babel/traverse/-/traverse-7.25.9.tgz",
 549 |       "integrity": "sha512-ZCuvfwOwlz/bawvAuvcj8rrithP2/N55Tzz342AkTvq4qaWbGfmCk/tKhNaV2cthijKrPAA8SRJV5WWe7IBMJw==",
 550 |       "dev": true,
 551 |       "dependencies": {
 552 |         "@babel/code-frame": "^7.25.9",
 553 |         "@babel/generator": "^7.25.9",
 554 |         "@babel/parser": "^7.25.9",
 555 |         "@babel/template": "^7.25.9",
 556 |         "@babel/types": "^7.25.9",
 557 |         "debug": "^4.3.1",
 558 |         "globals": "^11.1.0"
 559 |       },
 560 |       "engines": {
 561 |         "node": ">=6.9.0"
 562 |       }
 563 |     },
 564 |     "node_modules/@babel/traverse/node_modules/globals": {
 565 |       "version": "11.12.0",
 566 |       "resolved": "https://registry.npmmirror.com/globals/-/globals-11.12.0.tgz",
 567 |       "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
 568 |       "dev": true,
 569 |       "engines": {
 570 |         "node": ">=4"
 571 |       }
 572 |     },
 573 |     "node_modules/@babel/types": {
 574 |       "version": "7.26.0",
 575 |       "resolved": "https://registry.npmmirror.com/@babel/types/-/types-7.26.0.tgz",
 576 |       "integrity": "sha512-Z/yiTPj+lDVnF7lWeKCIJzaIkI0vYO87dMpZ4bg4TDrFe4XXLFWL1TbXU27gBP3QccxV9mZICCrnjnYlJjXHOA==",
 577 |       "dev": true,
 578 |       "dependencies": {
 579 |         "@babel/helper-string-parser": "^7.25.9",
 580 |         "@babel/helper-validator-identifier": "^7.25.9"
 581 |       },
 582 |       "engines": {
 583 |         "node": ">=6.9.0"
 584 |       }
 585 |     },
 586 |     "node_modules/@bcoe/v8-coverage": {
 587 |       "version": "0.2.3",
 588 |       "resolved": "https://registry.npmmirror.com/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz",
 589 |       "integrity": "sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==",
 590 |       "dev": true
 591 |     },
 592 |     "node_modules/@cnakazawa/watch": {
 593 |       "version": "1.0.4",
 594 |       "resolved": "https://registry.npmmirror.com/@cnakazawa/watch/-/watch-1.0.4.tgz",
 595 |       "integrity": "sha512-v9kIhKwjeZThiWrLmj0y17CWoyddASLj9O2yvbZkbvw/N3rWOYy9zkV66ursAoVr0mV15bL8g0c4QZUE6cdDoQ==",
 596 |       "dev": true,
 597 |       "dependencies": {
 598 |         "exec-sh": "^0.3.2",
 599 |         "minimist": "^1.2.0"
 600 |       },
 601 |       "bin": {
 602 |         "watch": "cli.js"
 603 |       },
 604 |       "engines": {
 605 |         "node": ">=0.1.95"
 606 |       }
 607 |     },
 608 |     "node_modules/@codemirror/language": {
 609 |       "version": "6.10.3",
 610 |       "resolved": "git+ssh://git@github.com/lishid/cm-language.git#be84c19d93fa87ac4e43c1a5874b1d228b5b2a89",
 611 |       "dev": true,
 612 |       "license": "MIT",
 613 |       "dependencies": {
 614 |         "@codemirror/state": "^6.0.0",
 615 |         "@codemirror/view": "^6.23.0",
 616 |         "@lezer/common": "^1.1.0",
 617 |         "@lezer/highlight": "^1.0.0",
 618 |         "@lezer/lr": "^1.0.0",
 619 |         "style-mod": "^4.0.0"
 620 |       }
 621 |     },
 622 |     "node_modules/@codemirror/state": {
 623 |       "version": "6.4.1",
 624 |       "resolved": "https://registry.npmmirror.com/@codemirror/state/-/state-6.4.1.tgz",
 625 |       "integrity": "sha512-QkEyUiLhsJoZkbumGZlswmAhA7CBU02Wrz7zvH4SrcifbsqwlXShVXg65f3v/ts57W3dqyamEriMhij1Z3Zz4A==",
 626 |       "dev": true
 627 |     },
 628 |     "node_modules/@codemirror/view": {
 629 |       "version": "6.34.3",
 630 |       "resolved": "https://registry.npmmirror.com/@codemirror/view/-/view-6.34.3.tgz",
 631 |       "integrity": "sha512-Ph5d+u8DxIeSgssXEakaakImkzBV4+slwIbcxl9oc9evexJhImeu/G8TK7+zp+IFK9KuJ0BdSn6kTBJeH2CHvA==",
 632 |       "dev": true,
 633 |       "dependencies": {
 634 |         "@codemirror/state": "^6.4.0",
 635 |         "style-mod": "^4.1.0",
 636 |         "w3c-keyname": "^2.2.4"
 637 |       }
 638 |     },
 639 |     "node_modules/@esbuild/android-arm": {
 640 |       "version": "0.16.17",
 641 |       "resolved": "https://registry.npmmirror.com/@esbuild/android-arm/-/android-arm-0.16.17.tgz",
 642 |       "integrity": "sha512-N9x1CMXVhtWEAMS7pNNONyA14f71VPQN9Cnavj1XQh6T7bskqiLLrSca4O0Vr8Wdcga943eThxnVp3JLnBMYtw==",
 643 |       "cpu": [
 644 |         "arm"
 645 |       ],
 646 |       "dev": true,
 647 |       "optional": true,
 648 |       "os": [
 649 |         "android"
 650 |       ],
 651 |       "engines": {
 652 |         "node": ">=12"
 653 |       }
 654 |     },
 655 |     "node_modules/@esbuild/android-arm64": {
 656 |       "version": "0.16.17",
 657 |       "resolved": "https://registry.npmmirror.com/@esbuild/android-arm64/-/android-arm64-0.16.17.tgz",
 658 |       "integrity": "sha512-MIGl6p5sc3RDTLLkYL1MyL8BMRN4tLMRCn+yRJJmEDvYZ2M7tmAf80hx1kbNEUX2KJ50RRtxZ4JHLvCfuB6kBg==",
 659 |       "cpu": [
 660 |         "arm64"
 661 |       ],
 662 |       "dev": true,
 663 |       "optional": true,
 664 |       "os": [
 665 |         "android"
 666 |       ],
 667 |       "engines": {
 668 |         "node": ">=12"
 669 |       }
 670 |     },
 671 |     "node_modules/@esbuild/android-x64": {
 672 |       "version": "0.16.17",
 673 |       "resolved": "https://registry.npmmirror.com/@esbuild/android-x64/-/android-x64-0.16.17.tgz",
 674 |       "integrity": "sha512-a3kTv3m0Ghh4z1DaFEuEDfz3OLONKuFvI4Xqczqx4BqLyuFaFkuaG4j2MtA6fuWEFeC5x9IvqnX7drmRq/fyAQ==",
 675 |       "cpu": [
 676 |         "x64"
 677 |       ],
 678 |       "dev": true,
 679 |       "optional": true,
 680 |       "os": [
 681 |         "android"
 682 |       ],
 683 |       "engines": {
 684 |         "node": ">=12"
 685 |       }
 686 |     },
 687 |     "node_modules/@esbuild/darwin-arm64": {
 688 |       "version": "0.16.17",
 689 |       "resolved": "https://registry.npmmirror.com/@esbuild/darwin-arm64/-/darwin-arm64-0.16.17.tgz",
 690 |       "integrity": "sha512-/2agbUEfmxWHi9ARTX6OQ/KgXnOWfsNlTeLcoV7HSuSTv63E4DqtAc+2XqGw1KHxKMHGZgbVCZge7HXWX9Vn+w==",
 691 |       "cpu": [
 692 |         "arm64"
 693 |       ],
 694 |       "dev": true,
 695 |       "optional": true,
 696 |       "os": [
 697 |         "darwin"
 698 |       ],
 699 |       "engines": {
 700 |         "node": ">=12"
 701 |       }
 702 |     },
 703 |     "node_modules/@esbuild/darwin-x64": {
 704 |       "version": "0.16.17",
 705 |       "resolved": "https://registry.npmmirror.com/@esbuild/darwin-x64/-/darwin-x64-0.16.17.tgz",
 706 |       "integrity": "sha512-2By45OBHulkd9Svy5IOCZt376Aa2oOkiE9QWUK9fe6Tb+WDr8hXL3dpqi+DeLiMed8tVXspzsTAvd0jUl96wmg==",
 707 |       "cpu": [
 708 |         "x64"
 709 |       ],
 710 |       "dev": true,
 711 |       "optional": true,
 712 |       "os": [
 713 |         "darwin"
 714 |       ],
 715 |       "engines": {
 716 |         "node": ">=12"
 717 |       }
 718 |     },
 719 |     "node_modules/@esbuild/freebsd-arm64": {
 720 |       "version": "0.16.17",
 721 |       "resolved": "https://registry.npmmirror.com/@esbuild/freebsd-arm64/-/freebsd-arm64-0.16.17.tgz",
 722 |       "integrity": "sha512-mt+cxZe1tVx489VTb4mBAOo2aKSnJ33L9fr25JXpqQqzbUIw/yzIzi+NHwAXK2qYV1lEFp4OoVeThGjUbmWmdw==",
 723 |       "cpu": [
 724 |         "arm64"
 725 |       ],
 726 |       "dev": true,
 727 |       "optional": true,
 728 |       "os": [
 729 |         "freebsd"
 730 |       ],
 731 |       "engines": {
 732 |         "node": ">=12"
 733 |       }
 734 |     },
 735 |     "node_modules/@esbuild/freebsd-x64": {
 736 |       "version": "0.16.17",
 737 |       "resolved": "https://registry.npmmirror.com/@esbuild/freebsd-x64/-/freebsd-x64-0.16.17.tgz",
 738 |       "integrity": "sha512-8ScTdNJl5idAKjH8zGAsN7RuWcyHG3BAvMNpKOBaqqR7EbUhhVHOqXRdL7oZvz8WNHL2pr5+eIT5c65kA6NHug==",
 739 |       "cpu": [
 740 |         "x64"
 741 |       ],
 742 |       "dev": true,
 743 |       "optional": true,
 744 |       "os": [
 745 |         "freebsd"
 746 |       ],
 747 |       "engines": {
 748 |         "node": ">=12"
 749 |       }
 750 |     },
 751 |     "node_modules/@esbuild/linux-arm": {
 752 |       "version": "0.16.17",
 753 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-arm/-/linux-arm-0.16.17.tgz",
 754 |       "integrity": "sha512-iihzrWbD4gIT7j3caMzKb/RsFFHCwqqbrbH9SqUSRrdXkXaygSZCZg1FybsZz57Ju7N/SHEgPyaR0LZ8Zbe9gQ==",
 755 |       "cpu": [
 756 |         "arm"
 757 |       ],
 758 |       "dev": true,
 759 |       "optional": true,
 760 |       "os": [
 761 |         "linux"
 762 |       ],
 763 |       "engines": {
 764 |         "node": ">=12"
 765 |       }
 766 |     },
 767 |     "node_modules/@esbuild/linux-arm64": {
 768 |       "version": "0.16.17",
 769 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-arm64/-/linux-arm64-0.16.17.tgz",
 770 |       "integrity": "sha512-7S8gJnSlqKGVJunnMCrXHU9Q8Q/tQIxk/xL8BqAP64wchPCTzuM6W3Ra8cIa1HIflAvDnNOt2jaL17vaW+1V0g==",
 771 |       "cpu": [
 772 |         "arm64"
 773 |       ],
 774 |       "dev": true,
 775 |       "optional": true,
 776 |       "os": [
 777 |         "linux"
 778 |       ],
 779 |       "engines": {
 780 |         "node": ">=12"
 781 |       }
 782 |     },
 783 |     "node_modules/@esbuild/linux-ia32": {
 784 |       "version": "0.16.17",
 785 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-ia32/-/linux-ia32-0.16.17.tgz",
 786 |       "integrity": "sha512-kiX69+wcPAdgl3Lonh1VI7MBr16nktEvOfViszBSxygRQqSpzv7BffMKRPMFwzeJGPxcio0pdD3kYQGpqQ2SSg==",
 787 |       "cpu": [
 788 |         "ia32"
 789 |       ],
 790 |       "dev": true,
 791 |       "optional": true,
 792 |       "os": [
 793 |         "linux"
 794 |       ],
 795 |       "engines": {
 796 |         "node": ">=12"
 797 |       }
 798 |     },
 799 |     "node_modules/@esbuild/linux-loong64": {
 800 |       "version": "0.16.17",
 801 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-loong64/-/linux-loong64-0.16.17.tgz",
 802 |       "integrity": "sha512-dTzNnQwembNDhd654cA4QhbS9uDdXC3TKqMJjgOWsC0yNCbpzfWoXdZvp0mY7HU6nzk5E0zpRGGx3qoQg8T2DQ==",
 803 |       "cpu": [
 804 |         "loong64"
 805 |       ],
 806 |       "dev": true,
 807 |       "optional": true,
 808 |       "os": [
 809 |         "linux"
 810 |       ],
 811 |       "engines": {
 812 |         "node": ">=12"
 813 |       }
 814 |     },
 815 |     "node_modules/@esbuild/linux-mips64el": {
 816 |       "version": "0.16.17",
 817 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-mips64el/-/linux-mips64el-0.16.17.tgz",
 818 |       "integrity": "sha512-ezbDkp2nDl0PfIUn0CsQ30kxfcLTlcx4Foz2kYv8qdC6ia2oX5Q3E/8m6lq84Dj/6b0FrkgD582fJMIfHhJfSw==",
 819 |       "cpu": [
 820 |         "mips64el"
 821 |       ],
 822 |       "dev": true,
 823 |       "optional": true,
 824 |       "os": [
 825 |         "linux"
 826 |       ],
 827 |       "engines": {
 828 |         "node": ">=12"
 829 |       }
 830 |     },
 831 |     "node_modules/@esbuild/linux-ppc64": {
 832 |       "version": "0.16.17",
 833 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-ppc64/-/linux-ppc64-0.16.17.tgz",
 834 |       "integrity": "sha512-dzS678gYD1lJsW73zrFhDApLVdM3cUF2MvAa1D8K8KtcSKdLBPP4zZSLy6LFZ0jYqQdQ29bjAHJDgz0rVbLB3g==",
 835 |       "cpu": [
 836 |         "ppc64"
 837 |       ],
 838 |       "dev": true,
 839 |       "optional": true,
 840 |       "os": [
 841 |         "linux"
 842 |       ],
 843 |       "engines": {
 844 |         "node": ">=12"
 845 |       }
 846 |     },
 847 |     "node_modules/@esbuild/linux-riscv64": {
 848 |       "version": "0.16.17",
 849 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-riscv64/-/linux-riscv64-0.16.17.tgz",
 850 |       "integrity": "sha512-ylNlVsxuFjZK8DQtNUwiMskh6nT0vI7kYl/4fZgV1llP5d6+HIeL/vmmm3jpuoo8+NuXjQVZxmKuhDApK0/cKw==",
 851 |       "cpu": [
 852 |         "riscv64"
 853 |       ],
 854 |       "dev": true,
 855 |       "optional": true,
 856 |       "os": [
 857 |         "linux"
 858 |       ],
 859 |       "engines": {
 860 |         "node": ">=12"
 861 |       }
 862 |     },
 863 |     "node_modules/@esbuild/linux-s390x": {
 864 |       "version": "0.16.17",
 865 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-s390x/-/linux-s390x-0.16.17.tgz",
 866 |       "integrity": "sha512-gzy7nUTO4UA4oZ2wAMXPNBGTzZFP7mss3aKR2hH+/4UUkCOyqmjXiKpzGrY2TlEUhbbejzXVKKGazYcQTZWA/w==",
 867 |       "cpu": [
 868 |         "s390x"
 869 |       ],
 870 |       "dev": true,
 871 |       "optional": true,
 872 |       "os": [
 873 |         "linux"
 874 |       ],
 875 |       "engines": {
 876 |         "node": ">=12"
 877 |       }
 878 |     },
 879 |     "node_modules/@esbuild/linux-x64": {
 880 |       "version": "0.16.17",
 881 |       "resolved": "https://registry.npmmirror.com/@esbuild/linux-x64/-/linux-x64-0.16.17.tgz",
 882 |       "integrity": "sha512-mdPjPxfnmoqhgpiEArqi4egmBAMYvaObgn4poorpUaqmvzzbvqbowRllQ+ZgzGVMGKaPkqUmPDOOFQRUFDmeUw==",
 883 |       "cpu": [
 884 |         "x64"
 885 |       ],
 886 |       "dev": true,
 887 |       "optional": true,
 888 |       "os": [
 889 |         "linux"
 890 |       ],
 891 |       "engines": {
 892 |         "node": ">=12"
 893 |       }
 894 |     },
 895 |     "node_modules/@esbuild/netbsd-x64": {
 896 |       "version": "0.16.17",
 897 |       "resolved": "https://registry.npmmirror.com/@esbuild/netbsd-x64/-/netbsd-x64-0.16.17.tgz",
 898 |       "integrity": "sha512-/PzmzD/zyAeTUsduZa32bn0ORug+Jd1EGGAUJvqfeixoEISYpGnAezN6lnJoskauoai0Jrs+XSyvDhppCPoKOA==",
 899 |       "cpu": [
 900 |         "x64"
 901 |       ],
 902 |       "dev": true,
 903 |       "optional": true,
 904 |       "os": [
 905 |         "netbsd"
 906 |       ],
 907 |       "engines": {
 908 |         "node": ">=12"
 909 |       }
 910 |     },
 911 |     "node_modules/@esbuild/openbsd-x64": {
 912 |       "version": "0.16.17",
 913 |       "resolved": "https://registry.npmmirror.com/@esbuild/openbsd-x64/-/openbsd-x64-0.16.17.tgz",
 914 |       "integrity": "sha512-2yaWJhvxGEz2RiftSk0UObqJa/b+rIAjnODJgv2GbGGpRwAfpgzyrg1WLK8rqA24mfZa9GvpjLcBBg8JHkoodg==",
 915 |       "cpu": [
 916 |         "x64"
 917 |       ],
 918 |       "dev": true,
 919 |       "optional": true,
 920 |       "os": [
 921 |         "openbsd"
 922 |       ],
 923 |       "engines": {
 924 |         "node": ">=12"
 925 |       }
 926 |     },
 927 |     "node_modules/@esbuild/sunos-x64": {
 928 |       "version": "0.16.17",
 929 |       "resolved": "https://registry.npmmirror.com/@esbuild/sunos-x64/-/sunos-x64-0.16.17.tgz",
 930 |       "integrity": "sha512-xtVUiev38tN0R3g8VhRfN7Zl42YCJvyBhRKw1RJjwE1d2emWTVToPLNEQj/5Qxc6lVFATDiy6LjVHYhIPrLxzw==",
 931 |       "cpu": [
 932 |         "x64"
 933 |       ],
 934 |       "dev": true,
 935 |       "optional": true,
 936 |       "os": [
 937 |         "sunos"
 938 |       ],
 939 |       "engines": {
 940 |         "node": ">=12"
 941 |       }
 942 |     },
 943 |     "node_modules/@esbuild/win32-arm64": {
 944 |       "version": "0.16.17",
 945 |       "resolved": "https://registry.npmmirror.com/@esbuild/win32-arm64/-/win32-arm64-0.16.17.tgz",
 946 |       "integrity": "sha512-ga8+JqBDHY4b6fQAmOgtJJue36scANy4l/rL97W+0wYmijhxKetzZdKOJI7olaBaMhWt8Pac2McJdZLxXWUEQw==",
 947 |       "cpu": [
 948 |         "arm64"
 949 |       ],
 950 |       "dev": true,
 951 |       "optional": true,
 952 |       "os": [
 953 |         "win32"
 954 |       ],
 955 |       "engines": {
 956 |         "node": ">=12"
 957 |       }
 958 |     },
 959 |     "node_modules/@esbuild/win32-ia32": {
 960 |       "version": "0.16.17",
 961 |       "resolved": "https://registry.npmmirror.com/@esbuild/win32-ia32/-/win32-ia32-0.16.17.tgz",
 962 |       "integrity": "sha512-WnsKaf46uSSF/sZhwnqE4L/F89AYNMiD4YtEcYekBt9Q7nj0DiId2XH2Ng2PHM54qi5oPrQ8luuzGszqi/veig==",
 963 |       "cpu": [
 964 |         "ia32"
 965 |       ],
 966 |       "dev": true,
 967 |       "optional": true,
 968 |       "os": [
 969 |         "win32"
 970 |       ],
 971 |       "engines": {
 972 |         "node": ">=12"
 973 |       }
 974 |     },
 975 |     "node_modules/@esbuild/win32-x64": {
 976 |       "version": "0.16.17",
 977 |       "resolved": "https://registry.npmmirror.com/@esbuild/win32-x64/-/win32-x64-0.16.17.tgz",
 978 |       "integrity": "sha512-y+EHuSchhL7FjHgvQL/0fnnFmO4T1bhvWANX6gcnqTjtnKWbTvUMCpGnv2+t+31d7RzyEAYAd4u2fnIhHL6N/Q==",
 979 |       "cpu": [
 980 |         "x64"
 981 |       ],
 982 |       "dev": true,
 983 |       "optional": true,
 984 |       "os": [
 985 |         "win32"
 986 |       ],
 987 |       "engines": {
 988 |         "node": ">=12"
 989 |       }
 990 |     },
 991 |     "node_modules/@eslint-community/eslint-utils": {
 992 |       "version": "4.4.1",
 993 |       "resolved": "https://registry.npmmirror.com/@eslint-community/eslint-utils/-/eslint-utils-4.4.1.tgz",
 994 |       "integrity": "sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==",
 995 |       "dev": true,
 996 |       "dependencies": {
 997 |         "eslint-visitor-keys": "^3.4.3"
 998 |       },
 999 |       "engines": {
1000 |         "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
1001 |       },
1002 |       "funding": {
1003 |         "url": "https://opencollective.com/eslint"
1004 |       },
1005 |       "peerDependencies": {
1006 |         "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
1007 |       }
1008 |     },
1009 |     "node_modules/@eslint-community/regexpp": {
1010 |       "version": "4.12.1",
1011 |       "resolved": "https://registry.npmmirror.com/@eslint-community/regexpp/-/regexpp-4.12.1.tgz",
1012 |       "integrity": "sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==",
1013 |       "dev": true,
1014 |       "engines": {
1015 |         "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
1016 |       }
1017 |     },
1018 |     "node_modules/@eslint/config-array": {
1019 |       "version": "0.19.0",
1020 |       "resolved": "https://registry.npmmirror.com/@eslint/config-array/-/config-array-0.19.0.tgz",
1021 |       "integrity": "sha512-zdHg2FPIFNKPdcHWtiNT+jEFCHYVplAXRDlQDyqy0zGx/q2parwh7brGJSiTxRk/TSMkbM//zt/f5CHgyTyaSQ==",
1022 |       "dev": true,
1023 |       "dependencies": {
1024 |         "@eslint/object-schema": "^2.1.4",
1025 |         "debug": "^4.3.1",
1026 |         "minimatch": "^3.1.2"
1027 |       },
1028 |       "engines": {
1029 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
1030 |       }
1031 |     },
1032 |     "node_modules/@eslint/core": {
1033 |       "version": "0.9.0",
1034 |       "resolved": "https://registry.npmmirror.com/@eslint/core/-/core-0.9.0.tgz",
1035 |       "integrity": "sha512-7ATR9F0e4W85D/0w7cU0SNj7qkAexMG+bAHEZOjo9akvGuhHE2m7umzWzfnpa0XAg5Kxc1BWmtPMV67jJ+9VUg==",
1036 |       "dev": true,
1037 |       "engines": {
1038 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
1039 |       }
1040 |     },
1041 |     "node_modules/@eslint/eslintrc": {
1042 |       "version": "3.2.0",
1043 |       "resolved": "https://registry.npmmirror.com/@eslint/eslintrc/-/eslintrc-3.2.0.tgz",
1044 |       "integrity": "sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==",
1045 |       "dev": true,
1046 |       "dependencies": {
1047 |         "ajv": "^6.12.4",
1048 |         "debug": "^4.3.2",
1049 |         "espree": "^10.0.1",
1050 |         "globals": "^14.0.0",
1051 |         "ignore": "^5.2.0",
1052 |         "import-fresh": "^3.2.1",
1053 |         "js-yaml": "^4.1.0",
1054 |         "minimatch": "^3.1.2",
1055 |         "strip-json-comments": "^3.1.1"
1056 |       },
1057 |       "engines": {
1058 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
1059 |       },
1060 |       "funding": {
1061 |         "url": "https://opencollective.com/eslint"
1062 |       }
1063 |     },
1064 |     "node_modules/@eslint/eslintrc/node_modules/argparse": {
1065 |       "version": "2.0.1",
1066 |       "resolved": "https://registry.npmmirror.com/argparse/-/argparse-2.0.1.tgz",
1067 |       "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
1068 |       "dev": true
1069 |     },
1070 |     "node_modules/@eslint/eslintrc/node_modules/globals": {
1071 |       "version": "14.0.0",
1072 |       "resolved": "https://registry.npmmirror.com/globals/-/globals-14.0.0.tgz",
1073 |       "integrity": "sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==",
1074 |       "dev": true,
1075 |       "engines": {
1076 |         "node": ">=18"
1077 |       },
1078 |       "funding": {
1079 |         "url": "https://github.com/sponsors/sindresorhus"
1080 |       }
1081 |     },
1082 |     "node_modules/@eslint/eslintrc/node_modules/js-yaml": {
1083 |       "version": "4.1.0",
1084 |       "resolved": "https://registry.npmmirror.com/js-yaml/-/js-yaml-4.1.0.tgz",
1085 |       "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
1086 |       "dev": true,
1087 |       "dependencies": {
1088 |         "argparse": "^2.0.1"
1089 |       },
1090 |       "bin": {
1091 |         "js-yaml": "bin/js-yaml.js"
1092 |       }
1093 |     },
1094 |     "node_modules/@eslint/js": {
1095 |       "version": "9.15.0",
1096 |       "resolved": "https://registry.npmmirror.com/@eslint/js/-/js-9.15.0.tgz",
1097 |       "integrity": "sha512-tMTqrY+EzbXmKJR5ToI8lxu7jaN5EdmrBFJpQk5JmSlyLsx6o4t27r883K5xsLuCYCpfKBCGswMSWXsM+jB7lg==",
1098 |       "dev": true,
1099 |       "engines": {
1100 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
1101 |       }
1102 |     },
1103 |     "node_modules/@eslint/object-schema": {
1104 |       "version": "2.1.4",
1105 |       "resolved": "https://registry.npmmirror.com/@eslint/object-schema/-/object-schema-2.1.4.tgz",
1106 |       "integrity": "sha512-BsWiH1yFGjXXS2yvrf5LyuoSIIbPrGUWob917o+BTKuZ7qJdxX8aJLRxs1fS9n6r7vESrq1OUqb68dANcFXuQQ==",
1107 |       "dev": true,
1108 |       "engines": {
1109 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
1110 |       }
1111 |     },
1112 |     "node_modules/@eslint/plugin-kit": {
1113 |       "version": "0.2.3",
1114 |       "resolved": "https://registry.npmmirror.com/@eslint/plugin-kit/-/plugin-kit-0.2.3.tgz",
1115 |       "integrity": "sha512-2b/g5hRmpbb1o4GnTZax9N9m0FXzz9OV42ZzI4rDDMDuHUqigAiQCEWChBWCY4ztAGVRjoWT19v0yMmc5/L5kA==",
1116 |       "dev": true,
1117 |       "dependencies": {
1118 |         "levn": "^0.4.1"
1119 |       },
1120 |       "engines": {
1121 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
1122 |       }
1123 |     },
1124 |     "node_modules/@humanfs/core": {
1125 |       "version": "0.19.1",
1126 |       "resolved": "https://registry.npmmirror.com/@humanfs/core/-/core-0.19.1.tgz",
1127 |       "integrity": "sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==",
1128 |       "dev": true,
1129 |       "engines": {
1130 |         "node": ">=18.18.0"
1131 |       }
1132 |     },
1133 |     "node_modules/@humanfs/node": {
1134 |       "version": "0.16.6",
1135 |       "resolved": "https://registry.npmmirror.com/@humanfs/node/-/node-0.16.6.tgz",
1136 |       "integrity": "sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==",
1137 |       "dev": true,
1138 |       "dependencies": {
1139 |         "@humanfs/core": "^0.19.1",
1140 |         "@humanwhocodes/retry": "^0.3.0"
1141 |       },
1142 |       "engines": {
1143 |         "node": ">=18.18.0"
1144 |       }
1145 |     },
1146 |     "node_modules/@humanfs/node/node_modules/@humanwhocodes/retry": {
1147 |       "version": "0.3.1",
1148 |       "resolved": "https://registry.npmmirror.com/@humanwhocodes/retry/-/retry-0.3.1.tgz",
1149 |       "integrity": "sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==",
1150 |       "dev": true,
1151 |       "engines": {
1152 |         "node": ">=18.18"
1153 |       },
1154 |       "funding": {
1155 |         "type": "github",
1156 |         "url": "https://github.com/sponsors/nzakas"
1157 |       }
1158 |     },
1159 |     "node_modules/@humanwhocodes/module-importer": {
1160 |       "version": "1.0.1",
1161 |       "resolved": "https://registry.npmmirror.com/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
1162 |       "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
1163 |       "dev": true,
1164 |       "engines": {
1165 |         "node": ">=12.22"
1166 |       },
1167 |       "funding": {
1168 |         "type": "github",
1169 |         "url": "https://github.com/sponsors/nzakas"
1170 |       }
1171 |     },
1172 |     "node_modules/@humanwhocodes/retry": {
1173 |       "version": "0.4.1",
1174 |       "resolved": "https://registry.npmmirror.com/@humanwhocodes/retry/-/retry-0.4.1.tgz",
1175 |       "integrity": "sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==",
1176 |       "dev": true,
1177 |       "engines": {
1178 |         "node": ">=18.18"
1179 |       },
1180 |       "funding": {
1181 |         "type": "github",
1182 |         "url": "https://github.com/sponsors/nzakas"
1183 |       }
1184 |     },
1185 |     "node_modules/@interactjs/core": {
1186 |       "version": "1.10.27",
1187 |       "resolved": "https://registry.npmmirror.com/@interactjs/core/-/core-1.10.27.tgz",
1188 |       "integrity": "sha512-SliUr/3ZbLAdED8LokzYzWHWMdCB5Cq+UnpXuRy+BIod1j97m4IUFf/D1iIKUBBjBcucgXbz28z96WnenVCB7Q==",
1189 |       "dev": true,
1190 |       "peerDependencies": {
1191 |         "@interactjs/utils": "1.10.27"
1192 |       }
1193 |     },
1194 |     "node_modules/@interactjs/interact": {
1195 |       "version": "1.10.27",
1196 |       "resolved": "https://registry.npmmirror.com/@interactjs/interact/-/interact-1.10.27.tgz",
1197 |       "integrity": "sha512-XdH3A2UUzjEFGGJgFuJlhiz99tE8jB8xNh/DmnoMuL6uOQPxNA+sWRnzEVjG0+zY2P3/dbhEpi4Cn3FLPzydwA==",
1198 |       "dev": true,
1199 |       "dependencies": {
1200 |         "@interactjs/core": "1.10.27",
1201 |         "@interactjs/utils": "1.10.27"
1202 |       }
1203 |     },
1204 |     "node_modules/@interactjs/types": {
1205 |       "version": "1.10.27",
1206 |       "resolved": "https://registry.npmmirror.com/@interactjs/types/-/types-1.10.27.tgz",
1207 |       "integrity": "sha512-BUdv0cvs4H5ODuwft2Xp4eL8Vmi3LcihK42z0Ft/FbVJZoRioBsxH+LlsBdK4tAie7PqlKGy+1oyOncu1nQ6eA==",
1208 |       "dev": true
1209 |     },
1210 |     "node_modules/@interactjs/utils": {
1211 |       "version": "1.10.27",
1212 |       "resolved": "https://registry.npmmirror.com/@interactjs/utils/-/utils-1.10.27.tgz",
1213 |       "integrity": "sha512-+qfLOio2OxQqg1cXSnRaCl+N8MQDQLDS9w+aOGxH8YLAhIMyt7Asxx/46//sT8orgsi16pmlBPtngPHT9s8zKw==",
1214 |       "dev": true
1215 |     },
1216 |     "node_modules/@istanbuljs/load-nyc-config": {
1217 |       "version": "1.1.0",
1218 |       "resolved": "https://registry.npmmirror.com/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz",
1219 |       "integrity": "sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==",
1220 |       "dev": true,
1221 |       "dependencies": {
1222 |         "camelcase": "^5.3.1",
1223 |         "find-up": "^4.1.0",
1224 |         "get-package-type": "^0.1.0",
1225 |         "js-yaml": "^3.13.1",
1226 |         "resolve-from": "^5.0.0"
1227 |       },
1228 |       "engines": {
1229 |         "node": ">=8"
1230 |       }
1231 |     },
1232 |     "node_modules/@istanbuljs/schema": {
1233 |       "version": "0.1.3",
1234 |       "resolved": "https://registry.npmmirror.com/@istanbuljs/schema/-/schema-0.1.3.tgz",
1235 |       "integrity": "sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==",
1236 |       "dev": true,
1237 |       "engines": {
1238 |         "node": ">=8"
1239 |       }
1240 |     },
1241 |     "node_modules/@jest/console": {
1242 |       "version": "29.7.0",
1243 |       "resolved": "https://registry.npmmirror.com/@jest/console/-/console-29.7.0.tgz",
1244 |       "integrity": "sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==",
1245 |       "dev": true,
1246 |       "dependencies": {
1247 |         "@jest/types": "^29.6.3",
1248 |         "@types/node": "*",
1249 |         "chalk": "^4.0.0",
1250 |         "jest-message-util": "^29.7.0",
1251 |         "jest-util": "^29.7.0",
1252 |         "slash": "^3.0.0"
1253 |       },
1254 |       "engines": {
1255 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1256 |       }
1257 |     },
1258 |     "node_modules/@jest/core": {
1259 |       "version": "29.7.0",
1260 |       "resolved": "https://registry.npmmirror.com/@jest/core/-/core-29.7.0.tgz",
1261 |       "integrity": "sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==",
1262 |       "dev": true,
1263 |       "dependencies": {
1264 |         "@jest/console": "^29.7.0",
1265 |         "@jest/reporters": "^29.7.0",
1266 |         "@jest/test-result": "^29.7.0",
1267 |         "@jest/transform": "^29.7.0",
1268 |         "@jest/types": "^29.6.3",
1269 |         "@types/node": "*",
1270 |         "ansi-escapes": "^4.2.1",
1271 |         "chalk": "^4.0.0",
1272 |         "ci-info": "^3.2.0",
1273 |         "exit": "^0.1.2",
1274 |         "graceful-fs": "^4.2.9",
1275 |         "jest-changed-files": "^29.7.0",
1276 |         "jest-config": "^29.7.0",
1277 |         "jest-haste-map": "^29.7.0",
1278 |         "jest-message-util": "^29.7.0",
1279 |         "jest-regex-util": "^29.6.3",
1280 |         "jest-resolve": "^29.7.0",
1281 |         "jest-resolve-dependencies": "^29.7.0",
1282 |         "jest-runner": "^29.7.0",
1283 |         "jest-runtime": "^29.7.0",
1284 |         "jest-snapshot": "^29.7.0",
1285 |         "jest-util": "^29.7.0",
1286 |         "jest-validate": "^29.7.0",
1287 |         "jest-watcher": "^29.7.0",
1288 |         "micromatch": "^4.0.4",
1289 |         "pretty-format": "^29.7.0",
1290 |         "slash": "^3.0.0",
1291 |         "strip-ansi": "^6.0.0"
1292 |       },
1293 |       "engines": {
1294 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1295 |       },
1296 |       "peerDependencies": {
1297 |         "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
1298 |       },
1299 |       "peerDependenciesMeta": {
1300 |         "node-notifier": {
1301 |           "optional": true
1302 |         }
1303 |       }
1304 |     },
1305 |     "node_modules/@jest/environment": {
1306 |       "version": "29.7.0",
1307 |       "resolved": "https://registry.npmmirror.com/@jest/environment/-/environment-29.7.0.tgz",
1308 |       "integrity": "sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==",
1309 |       "dev": true,
1310 |       "dependencies": {
1311 |         "@jest/fake-timers": "^29.7.0",
1312 |         "@jest/types": "^29.6.3",
1313 |         "@types/node": "*",
1314 |         "jest-mock": "^29.7.0"
1315 |       },
1316 |       "engines": {
1317 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1318 |       }
1319 |     },
1320 |     "node_modules/@jest/expect": {
1321 |       "version": "29.7.0",
1322 |       "resolved": "https://registry.npmmirror.com/@jest/expect/-/expect-29.7.0.tgz",
1323 |       "integrity": "sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==",
1324 |       "dev": true,
1325 |       "dependencies": {
1326 |         "expect": "^29.7.0",
1327 |         "jest-snapshot": "^29.7.0"
1328 |       },
1329 |       "engines": {
1330 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1331 |       }
1332 |     },
1333 |     "node_modules/@jest/expect-utils": {
1334 |       "version": "29.7.0",
1335 |       "resolved": "https://registry.npmmirror.com/@jest/expect-utils/-/expect-utils-29.7.0.tgz",
1336 |       "integrity": "sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==",
1337 |       "dev": true,
1338 |       "dependencies": {
1339 |         "jest-get-type": "^29.6.3"
1340 |       },
1341 |       "engines": {
1342 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1343 |       }
1344 |     },
1345 |     "node_modules/@jest/fake-timers": {
1346 |       "version": "29.7.0",
1347 |       "resolved": "https://registry.npmmirror.com/@jest/fake-timers/-/fake-timers-29.7.0.tgz",
1348 |       "integrity": "sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==",
1349 |       "dev": true,
1350 |       "dependencies": {
1351 |         "@jest/types": "^29.6.3",
1352 |         "@sinonjs/fake-timers": "^10.0.2",
1353 |         "@types/node": "*",
1354 |         "jest-message-util": "^29.7.0",
1355 |         "jest-mock": "^29.7.0",
1356 |         "jest-util": "^29.7.0"
1357 |       },
1358 |       "engines": {
1359 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1360 |       }
1361 |     },
1362 |     "node_modules/@jest/globals": {
1363 |       "version": "29.7.0",
1364 |       "resolved": "https://registry.npmmirror.com/@jest/globals/-/globals-29.7.0.tgz",
1365 |       "integrity": "sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==",
1366 |       "dev": true,
1367 |       "dependencies": {
1368 |         "@jest/environment": "^29.7.0",
1369 |         "@jest/expect": "^29.7.0",
1370 |         "@jest/types": "^29.6.3",
1371 |         "jest-mock": "^29.7.0"
1372 |       },
1373 |       "engines": {
1374 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1375 |       }
1376 |     },
1377 |     "node_modules/@jest/reporters": {
1378 |       "version": "29.7.0",
1379 |       "resolved": "https://registry.npmmirror.com/@jest/reporters/-/reporters-29.7.0.tgz",
1380 |       "integrity": "sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==",
1381 |       "dev": true,
1382 |       "dependencies": {
1383 |         "@bcoe/v8-coverage": "^0.2.3",
1384 |         "@jest/console": "^29.7.0",
1385 |         "@jest/test-result": "^29.7.0",
1386 |         "@jest/transform": "^29.7.0",
1387 |         "@jest/types": "^29.6.3",
1388 |         "@jridgewell/trace-mapping": "^0.3.18",
1389 |         "@types/node": "*",
1390 |         "chalk": "^4.0.0",
1391 |         "collect-v8-coverage": "^1.0.0",
1392 |         "exit": "^0.1.2",
1393 |         "glob": "^7.1.3",
1394 |         "graceful-fs": "^4.2.9",
1395 |         "istanbul-lib-coverage": "^3.0.0",
1396 |         "istanbul-lib-instrument": "^6.0.0",
1397 |         "istanbul-lib-report": "^3.0.0",
1398 |         "istanbul-lib-source-maps": "^4.0.0",
1399 |         "istanbul-reports": "^3.1.3",
1400 |         "jest-message-util": "^29.7.0",
1401 |         "jest-util": "^29.7.0",
1402 |         "jest-worker": "^29.7.0",
1403 |         "slash": "^3.0.0",
1404 |         "string-length": "^4.0.1",
1405 |         "strip-ansi": "^6.0.0",
1406 |         "v8-to-istanbul": "^9.0.1"
1407 |       },
1408 |       "engines": {
1409 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1410 |       },
1411 |       "peerDependencies": {
1412 |         "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
1413 |       },
1414 |       "peerDependenciesMeta": {
1415 |         "node-notifier": {
1416 |           "optional": true
1417 |         }
1418 |       }
1419 |     },
1420 |     "node_modules/@jest/reporters/node_modules/istanbul-lib-instrument": {
1421 |       "version": "6.0.3",
1422 |       "resolved": "https://registry.npmmirror.com/istanbul-lib-instrument/-/istanbul-lib-instrument-6.0.3.tgz",
1423 |       "integrity": "sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==",
1424 |       "dev": true,
1425 |       "dependencies": {
1426 |         "@babel/core": "^7.23.9",
1427 |         "@babel/parser": "^7.23.9",
1428 |         "@istanbuljs/schema": "^0.1.3",
1429 |         "istanbul-lib-coverage": "^3.2.0",
1430 |         "semver": "^7.5.4"
1431 |       },
1432 |       "engines": {
1433 |         "node": ">=10"
1434 |       }
1435 |     },
1436 |     "node_modules/@jest/schemas": {
1437 |       "version": "29.6.3",
1438 |       "resolved": "https://registry.npmmirror.com/@jest/schemas/-/schemas-29.6.3.tgz",
1439 |       "integrity": "sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==",
1440 |       "dev": true,
1441 |       "dependencies": {
1442 |         "@sinclair/typebox": "^0.27.8"
1443 |       },
1444 |       "engines": {
1445 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1446 |       }
1447 |     },
1448 |     "node_modules/@jest/source-map": {
1449 |       "version": "29.6.3",
1450 |       "resolved": "https://registry.npmmirror.com/@jest/source-map/-/source-map-29.6.3.tgz",
1451 |       "integrity": "sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==",
1452 |       "dev": true,
1453 |       "dependencies": {
1454 |         "@jridgewell/trace-mapping": "^0.3.18",
1455 |         "callsites": "^3.0.0",
1456 |         "graceful-fs": "^4.2.9"
1457 |       },
1458 |       "engines": {
1459 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1460 |       }
1461 |     },
1462 |     "node_modules/@jest/test-result": {
1463 |       "version": "29.7.0",
1464 |       "resolved": "https://registry.npmmirror.com/@jest/test-result/-/test-result-29.7.0.tgz",
1465 |       "integrity": "sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==",
1466 |       "dev": true,
1467 |       "dependencies": {
1468 |         "@jest/console": "^29.7.0",
1469 |         "@jest/types": "^29.6.3",
1470 |         "@types/istanbul-lib-coverage": "^2.0.0",
1471 |         "collect-v8-coverage": "^1.0.0"
1472 |       },
1473 |       "engines": {
1474 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1475 |       }
1476 |     },
1477 |     "node_modules/@jest/test-sequencer": {
1478 |       "version": "29.7.0",
1479 |       "resolved": "https://registry.npmmirror.com/@jest/test-sequencer/-/test-sequencer-29.7.0.tgz",
1480 |       "integrity": "sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==",
1481 |       "dev": true,
1482 |       "dependencies": {
1483 |         "@jest/test-result": "^29.7.0",
1484 |         "graceful-fs": "^4.2.9",
1485 |         "jest-haste-map": "^29.7.0",
1486 |         "slash": "^3.0.0"
1487 |       },
1488 |       "engines": {
1489 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1490 |       }
1491 |     },
1492 |     "node_modules/@jest/transform": {
1493 |       "version": "29.7.0",
1494 |       "resolved": "https://registry.npmmirror.com/@jest/transform/-/transform-29.7.0.tgz",
1495 |       "integrity": "sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==",
1496 |       "dev": true,
1497 |       "dependencies": {
1498 |         "@babel/core": "^7.11.6",
1499 |         "@jest/types": "^29.6.3",
1500 |         "@jridgewell/trace-mapping": "^0.3.18",
1501 |         "babel-plugin-istanbul": "^6.1.1",
1502 |         "chalk": "^4.0.0",
1503 |         "convert-source-map": "^2.0.0",
1504 |         "fast-json-stable-stringify": "^2.1.0",
1505 |         "graceful-fs": "^4.2.9",
1506 |         "jest-haste-map": "^29.7.0",
1507 |         "jest-regex-util": "^29.6.3",
1508 |         "jest-util": "^29.7.0",
1509 |         "micromatch": "^4.0.4",
1510 |         "pirates": "^4.0.4",
1511 |         "slash": "^3.0.0",
1512 |         "write-file-atomic": "^4.0.2"
1513 |       },
1514 |       "engines": {
1515 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1516 |       }
1517 |     },
1518 |     "node_modules/@jest/types": {
1519 |       "version": "29.6.3",
1520 |       "resolved": "https://registry.npmmirror.com/@jest/types/-/types-29.6.3.tgz",
1521 |       "integrity": "sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==",
1522 |       "dev": true,
1523 |       "dependencies": {
1524 |         "@jest/schemas": "^29.6.3",
1525 |         "@types/istanbul-lib-coverage": "^2.0.0",
1526 |         "@types/istanbul-reports": "^3.0.0",
1527 |         "@types/node": "*",
1528 |         "@types/yargs": "^17.0.8",
1529 |         "chalk": "^4.0.0"
1530 |       },
1531 |       "engines": {
1532 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
1533 |       }
1534 |     },
1535 |     "node_modules/@jridgewell/gen-mapping": {
1536 |       "version": "0.3.5",
1537 |       "resolved": "https://registry.npmmirror.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz",
1538 |       "integrity": "sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==",
1539 |       "dev": true,
1540 |       "dependencies": {
1541 |         "@jridgewell/set-array": "^1.2.1",
1542 |         "@jridgewell/sourcemap-codec": "^1.4.10",
1543 |         "@jridgewell/trace-mapping": "^0.3.24"
1544 |       },
1545 |       "engines": {
1546 |         "node": ">=6.0.0"
1547 |       }
1548 |     },
1549 |     "node_modules/@jridgewell/resolve-uri": {
1550 |       "version": "3.1.2",
1551 |       "resolved": "https://registry.npmmirror.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
1552 |       "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
1553 |       "dev": true,
1554 |       "engines": {
1555 |         "node": ">=6.0.0"
1556 |       }
1557 |     },
1558 |     "node_modules/@jridgewell/set-array": {
1559 |       "version": "1.2.1",
1560 |       "resolved": "https://registry.npmmirror.com/@jridgewell/set-array/-/set-array-1.2.1.tgz",
1561 |       "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
1562 |       "dev": true,
1563 |       "engines": {
1564 |         "node": ">=6.0.0"
1565 |       }
1566 |     },
1567 |     "node_modules/@jridgewell/sourcemap-codec": {
1568 |       "version": "1.5.0",
1569 |       "resolved": "https://registry.npmmirror.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
1570 |       "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
1571 |       "dev": true
1572 |     },
1573 |     "node_modules/@jridgewell/trace-mapping": {
1574 |       "version": "0.3.25",
1575 |       "resolved": "https://registry.npmmirror.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
1576 |       "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
1577 |       "dev": true,
1578 |       "dependencies": {
1579 |         "@jridgewell/resolve-uri": "^3.1.0",
1580 |         "@jridgewell/sourcemap-codec": "^1.4.14"
1581 |       }
1582 |     },
1583 |     "node_modules/@lezer/common": {
1584 |       "version": "1.2.3",
1585 |       "resolved": "https://registry.npmmirror.com/@lezer/common/-/common-1.2.3.tgz",
1586 |       "integrity": "sha512-w7ojc8ejBqr2REPsWxJjrMFsA/ysDCFICn8zEOR9mrqzOu2amhITYuLD8ag6XZf0CFXDrhKqw7+tW8cX66NaDA==",
1587 |       "dev": true
1588 |     },
1589 |     "node_modules/@lezer/highlight": {
1590 |       "version": "1.2.1",
1591 |       "resolved": "https://registry.npmmirror.com/@lezer/highlight/-/highlight-1.2.1.tgz",
1592 |       "integrity": "sha512-Z5duk4RN/3zuVO7Jq0pGLJ3qynpxUVsh7IbUbGj88+uV2ApSAn6kWg2au3iJb+0Zi7kKtqffIESgNcRXWZWmSA==",
1593 |       "dev": true,
1594 |       "dependencies": {
1595 |         "@lezer/common": "^1.0.0"
1596 |       }
1597 |     },
1598 |     "node_modules/@lezer/lr": {
1599 |       "version": "1.4.2",
1600 |       "resolved": "https://registry.npmmirror.com/@lezer/lr/-/lr-1.4.2.tgz",
1601 |       "integrity": "sha512-pu0K1jCIdnQ12aWNaAVU5bzi7Bd1w54J3ECgANPmYLtQKP0HBj2cE/5coBD66MT10xbtIuUr7tg0Shbsvk0mDA==",
1602 |       "dev": true,
1603 |       "dependencies": {
1604 |         "@lezer/common": "^1.0.0"
1605 |       }
1606 |     },
1607 |     "node_modules/@microsoft/tsdoc": {
1608 |       "version": "0.15.1",
1609 |       "resolved": "https://registry.npmmirror.com/@microsoft/tsdoc/-/tsdoc-0.15.1.tgz",
1610 |       "integrity": "sha512-4aErSrCR/On/e5G2hDP0wjooqDdauzEbIq8hIkIe5pXV0rtWJZvdCEKL0ykZxex+IxIwBp0eGeV48hQN07dXtw==",
1611 |       "dev": true
1612 |     },
1613 |     "node_modules/@microsoft/tsdoc-config": {
1614 |       "version": "0.17.1",
1615 |       "resolved": "https://registry.npmmirror.com/@microsoft/tsdoc-config/-/tsdoc-config-0.17.1.tgz",
1616 |       "integrity": "sha512-UtjIFe0C6oYgTnad4q1QP4qXwLhe6tIpNTRStJ2RZEPIkqQPREAwE5spzVxsdn9UaEMUqhh0AqSx3X4nWAKXWw==",
1617 |       "dev": true,
1618 |       "dependencies": {
1619 |         "@microsoft/tsdoc": "0.15.1",
1620 |         "ajv": "~8.12.0",
1621 |         "jju": "~1.4.0",
1622 |         "resolve": "~1.22.2"
1623 |       }
1624 |     },
1625 |     "node_modules/@microsoft/tsdoc-config/node_modules/ajv": {
1626 |       "version": "8.12.0",
1627 |       "resolved": "https://registry.npmmirror.com/ajv/-/ajv-8.12.0.tgz",
1628 |       "integrity": "sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA==",
1629 |       "dev": true,
1630 |       "dependencies": {
1631 |         "fast-deep-equal": "^3.1.1",
1632 |         "json-schema-traverse": "^1.0.0",
1633 |         "require-from-string": "^2.0.2",
1634 |         "uri-js": "^4.2.2"
1635 |       },
1636 |       "funding": {
1637 |         "type": "github",
1638 |         "url": "https://github.com/sponsors/epoberezkin"
1639 |       }
1640 |     },
1641 |     "node_modules/@microsoft/tsdoc-config/node_modules/json-schema-traverse": {
1642 |       "version": "1.0.0",
1643 |       "resolved": "https://registry.npmmirror.com/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz",
1644 |       "integrity": "sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==",
1645 |       "dev": true
1646 |     },
1647 |     "node_modules/@nodelib/fs.scandir": {
1648 |       "version": "2.1.5",
1649 |       "resolved": "https://registry.npmmirror.com/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
1650 |       "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
1651 |       "dev": true,
1652 |       "dependencies": {
1653 |         "@nodelib/fs.stat": "2.0.5",
1654 |         "run-parallel": "^1.1.9"
1655 |       },
1656 |       "engines": {
1657 |         "node": ">= 8"
1658 |       }
1659 |     },
1660 |     "node_modules/@nodelib/fs.stat": {
1661 |       "version": "2.0.5",
1662 |       "resolved": "https://registry.npmmirror.com/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
1663 |       "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
1664 |       "dev": true,
1665 |       "engines": {
1666 |         "node": ">= 8"
1667 |       }
1668 |     },
1669 |     "node_modules/@nodelib/fs.walk": {
1670 |       "version": "1.2.8",
1671 |       "resolved": "https://registry.npmmirror.com/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
1672 |       "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
1673 |       "dev": true,
1674 |       "dependencies": {
1675 |         "@nodelib/fs.scandir": "2.1.5",
1676 |         "fastq": "^1.6.0"
1677 |       },
1678 |       "engines": {
1679 |         "node": ">= 8"
1680 |       }
1681 |     },
1682 |     "node_modules/@parcel/watcher": {
1683 |       "version": "2.5.0",
1684 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher/-/watcher-2.5.0.tgz",
1685 |       "integrity": "sha512-i0GV1yJnm2n3Yq1qw6QrUrd/LI9bE8WEBOTtOkpCXHHdyN3TAGgqAK/DAT05z4fq2x04cARXt2pDmjWjL92iTQ==",
1686 |       "dev": true,
1687 |       "hasInstallScript": true,
1688 |       "optional": true,
1689 |       "dependencies": {
1690 |         "detect-libc": "^1.0.3",
1691 |         "is-glob": "^4.0.3",
1692 |         "micromatch": "^4.0.5",
1693 |         "node-addon-api": "^7.0.0"
1694 |       },
1695 |       "engines": {
1696 |         "node": ">= 10.0.0"
1697 |       },
1698 |       "funding": {
1699 |         "type": "opencollective",
1700 |         "url": "https://opencollective.com/parcel"
1701 |       },
1702 |       "optionalDependencies": {
1703 |         "@parcel/watcher-android-arm64": "2.5.0",
1704 |         "@parcel/watcher-darwin-arm64": "2.5.0",
1705 |         "@parcel/watcher-darwin-x64": "2.5.0",
1706 |         "@parcel/watcher-freebsd-x64": "2.5.0",
1707 |         "@parcel/watcher-linux-arm-glibc": "2.5.0",
1708 |         "@parcel/watcher-linux-arm-musl": "2.5.0",
1709 |         "@parcel/watcher-linux-arm64-glibc": "2.5.0",
1710 |         "@parcel/watcher-linux-arm64-musl": "2.5.0",
1711 |         "@parcel/watcher-linux-x64-glibc": "2.5.0",
1712 |         "@parcel/watcher-linux-x64-musl": "2.5.0",
1713 |         "@parcel/watcher-win32-arm64": "2.5.0",
1714 |         "@parcel/watcher-win32-ia32": "2.5.0",
1715 |         "@parcel/watcher-win32-x64": "2.5.0"
1716 |       }
1717 |     },
1718 |     "node_modules/@parcel/watcher-android-arm64": {
1719 |       "version": "2.5.0",
1720 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-android-arm64/-/watcher-android-arm64-2.5.0.tgz",
1721 |       "integrity": "sha512-qlX4eS28bUcQCdribHkg/herLe+0A9RyYC+mm2PXpncit8z5b3nSqGVzMNR3CmtAOgRutiZ02eIJJgP/b1iEFQ==",
1722 |       "cpu": [
1723 |         "arm64"
1724 |       ],
1725 |       "dev": true,
1726 |       "optional": true,
1727 |       "os": [
1728 |         "android"
1729 |       ],
1730 |       "engines": {
1731 |         "node": ">= 10.0.0"
1732 |       },
1733 |       "funding": {
1734 |         "type": "opencollective",
1735 |         "url": "https://opencollective.com/parcel"
1736 |       }
1737 |     },
1738 |     "node_modules/@parcel/watcher-darwin-arm64": {
1739 |       "version": "2.5.0",
1740 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-darwin-arm64/-/watcher-darwin-arm64-2.5.0.tgz",
1741 |       "integrity": "sha512-hyZ3TANnzGfLpRA2s/4U1kbw2ZI4qGxaRJbBH2DCSREFfubMswheh8TeiC1sGZ3z2jUf3s37P0BBlrD3sjVTUw==",
1742 |       "cpu": [
1743 |         "arm64"
1744 |       ],
1745 |       "dev": true,
1746 |       "optional": true,
1747 |       "os": [
1748 |         "darwin"
1749 |       ],
1750 |       "engines": {
1751 |         "node": ">= 10.0.0"
1752 |       },
1753 |       "funding": {
1754 |         "type": "opencollective",
1755 |         "url": "https://opencollective.com/parcel"
1756 |       }
1757 |     },
1758 |     "node_modules/@parcel/watcher-darwin-x64": {
1759 |       "version": "2.5.0",
1760 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-darwin-x64/-/watcher-darwin-x64-2.5.0.tgz",
1761 |       "integrity": "sha512-9rhlwd78saKf18fT869/poydQK8YqlU26TMiNg7AIu7eBp9adqbJZqmdFOsbZ5cnLp5XvRo9wcFmNHgHdWaGYA==",
1762 |       "cpu": [
1763 |         "x64"
1764 |       ],
1765 |       "dev": true,
1766 |       "optional": true,
1767 |       "os": [
1768 |         "darwin"
1769 |       ],
1770 |       "engines": {
1771 |         "node": ">= 10.0.0"
1772 |       },
1773 |       "funding": {
1774 |         "type": "opencollective",
1775 |         "url": "https://opencollective.com/parcel"
1776 |       }
1777 |     },
1778 |     "node_modules/@parcel/watcher-freebsd-x64": {
1779 |       "version": "2.5.0",
1780 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-freebsd-x64/-/watcher-freebsd-x64-2.5.0.tgz",
1781 |       "integrity": "sha512-syvfhZzyM8kErg3VF0xpV8dixJ+RzbUaaGaeb7uDuz0D3FK97/mZ5AJQ3XNnDsXX7KkFNtyQyFrXZzQIcN49Tw==",
1782 |       "cpu": [
1783 |         "x64"
1784 |       ],
1785 |       "dev": true,
1786 |       "optional": true,
1787 |       "os": [
1788 |         "freebsd"
1789 |       ],
1790 |       "engines": {
1791 |         "node": ">= 10.0.0"
1792 |       },
1793 |       "funding": {
1794 |         "type": "opencollective",
1795 |         "url": "https://opencollective.com/parcel"
1796 |       }
1797 |     },
1798 |     "node_modules/@parcel/watcher-linux-arm-glibc": {
1799 |       "version": "2.5.0",
1800 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-linux-arm-glibc/-/watcher-linux-arm-glibc-2.5.0.tgz",
1801 |       "integrity": "sha512-0VQY1K35DQET3dVYWpOaPFecqOT9dbuCfzjxoQyif1Wc574t3kOSkKevULddcR9znz1TcklCE7Ht6NIxjvTqLA==",
1802 |       "cpu": [
1803 |         "arm"
1804 |       ],
1805 |       "dev": true,
1806 |       "optional": true,
1807 |       "os": [
1808 |         "linux"
1809 |       ],
1810 |       "engines": {
1811 |         "node": ">= 10.0.0"
1812 |       },
1813 |       "funding": {
1814 |         "type": "opencollective",
1815 |         "url": "https://opencollective.com/parcel"
1816 |       }
1817 |     },
1818 |     "node_modules/@parcel/watcher-linux-arm-musl": {
1819 |       "version": "2.5.0",
1820 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-linux-arm-musl/-/watcher-linux-arm-musl-2.5.0.tgz",
1821 |       "integrity": "sha512-6uHywSIzz8+vi2lAzFeltnYbdHsDm3iIB57d4g5oaB9vKwjb6N6dRIgZMujw4nm5r6v9/BQH0noq6DzHrqr2pA==",
1822 |       "cpu": [
1823 |         "arm"
1824 |       ],
1825 |       "dev": true,
1826 |       "optional": true,
1827 |       "os": [
1828 |         "linux"
1829 |       ],
1830 |       "engines": {
1831 |         "node": ">= 10.0.0"
1832 |       },
1833 |       "funding": {
1834 |         "type": "opencollective",
1835 |         "url": "https://opencollective.com/parcel"
1836 |       }
1837 |     },
1838 |     "node_modules/@parcel/watcher-linux-arm64-glibc": {
1839 |       "version": "2.5.0",
1840 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-linux-arm64-glibc/-/watcher-linux-arm64-glibc-2.5.0.tgz",
1841 |       "integrity": "sha512-BfNjXwZKxBy4WibDb/LDCriWSKLz+jJRL3cM/DllnHH5QUyoiUNEp3GmL80ZqxeumoADfCCP19+qiYiC8gUBjA==",
1842 |       "cpu": [
1843 |         "arm64"
1844 |       ],
1845 |       "dev": true,
1846 |       "optional": true,
1847 |       "os": [
1848 |         "linux"
1849 |       ],
1850 |       "engines": {
1851 |         "node": ">= 10.0.0"
1852 |       },
1853 |       "funding": {
1854 |         "type": "opencollective",
1855 |         "url": "https://opencollective.com/parcel"
1856 |       }
1857 |     },
1858 |     "node_modules/@parcel/watcher-linux-arm64-musl": {
1859 |       "version": "2.5.0",
1860 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-linux-arm64-musl/-/watcher-linux-arm64-musl-2.5.0.tgz",
1861 |       "integrity": "sha512-S1qARKOphxfiBEkwLUbHjCY9BWPdWnW9j7f7Hb2jPplu8UZ3nes7zpPOW9bkLbHRvWM0WDTsjdOTUgW0xLBN1Q==",
1862 |       "cpu": [
1863 |         "arm64"
1864 |       ],
1865 |       "dev": true,
1866 |       "optional": true,
1867 |       "os": [
1868 |         "linux"
1869 |       ],
1870 |       "engines": {
1871 |         "node": ">= 10.0.0"
1872 |       },
1873 |       "funding": {
1874 |         "type": "opencollective",
1875 |         "url": "https://opencollective.com/parcel"
1876 |       }
1877 |     },
1878 |     "node_modules/@parcel/watcher-linux-x64-glibc": {
1879 |       "version": "2.5.0",
1880 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-linux-x64-glibc/-/watcher-linux-x64-glibc-2.5.0.tgz",
1881 |       "integrity": "sha512-d9AOkusyXARkFD66S6zlGXyzx5RvY+chTP9Jp0ypSTC9d4lzyRs9ovGf/80VCxjKddcUvnsGwCHWuF2EoPgWjw==",
1882 |       "cpu": [
1883 |         "x64"
1884 |       ],
1885 |       "dev": true,
1886 |       "optional": true,
1887 |       "os": [
1888 |         "linux"
1889 |       ],
1890 |       "engines": {
1891 |         "node": ">= 10.0.0"
1892 |       },
1893 |       "funding": {
1894 |         "type": "opencollective",
1895 |         "url": "https://opencollective.com/parcel"
1896 |       }
1897 |     },
1898 |     "node_modules/@parcel/watcher-linux-x64-musl": {
1899 |       "version": "2.5.0",
1900 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-linux-x64-musl/-/watcher-linux-x64-musl-2.5.0.tgz",
1901 |       "integrity": "sha512-iqOC+GoTDoFyk/VYSFHwjHhYrk8bljW6zOhPuhi5t9ulqiYq1togGJB5e3PwYVFFfeVgc6pbz3JdQyDoBszVaA==",
1902 |       "cpu": [
1903 |         "x64"
1904 |       ],
1905 |       "dev": true,
1906 |       "optional": true,
1907 |       "os": [
1908 |         "linux"
1909 |       ],
1910 |       "engines": {
1911 |         "node": ">= 10.0.0"
1912 |       },
1913 |       "funding": {
1914 |         "type": "opencollective",
1915 |         "url": "https://opencollective.com/parcel"
1916 |       }
1917 |     },
1918 |     "node_modules/@parcel/watcher-win32-arm64": {
1919 |       "version": "2.5.0",
1920 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-win32-arm64/-/watcher-win32-arm64-2.5.0.tgz",
1921 |       "integrity": "sha512-twtft1d+JRNkM5YbmexfcH/N4znDtjgysFaV9zvZmmJezQsKpkfLYJ+JFV3uygugK6AtIM2oADPkB2AdhBrNig==",
1922 |       "cpu": [
1923 |         "arm64"
1924 |       ],
1925 |       "dev": true,
1926 |       "optional": true,
1927 |       "os": [
1928 |         "win32"
1929 |       ],
1930 |       "engines": {
1931 |         "node": ">= 10.0.0"
1932 |       },
1933 |       "funding": {
1934 |         "type": "opencollective",
1935 |         "url": "https://opencollective.com/parcel"
1936 |       }
1937 |     },
1938 |     "node_modules/@parcel/watcher-win32-ia32": {
1939 |       "version": "2.5.0",
1940 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-win32-ia32/-/watcher-win32-ia32-2.5.0.tgz",
1941 |       "integrity": "sha512-+rgpsNRKwo8A53elqbbHXdOMtY/tAtTzManTWShB5Kk54N8Q9mzNWV7tV+IbGueCbcj826MfWGU3mprWtuf1TA==",
1942 |       "cpu": [
1943 |         "ia32"
1944 |       ],
1945 |       "dev": true,
1946 |       "optional": true,
1947 |       "os": [
1948 |         "win32"
1949 |       ],
1950 |       "engines": {
1951 |         "node": ">= 10.0.0"
1952 |       },
1953 |       "funding": {
1954 |         "type": "opencollective",
1955 |         "url": "https://opencollective.com/parcel"
1956 |       }
1957 |     },
1958 |     "node_modules/@parcel/watcher-win32-x64": {
1959 |       "version": "2.5.0",
1960 |       "resolved": "https://registry.npmmirror.com/@parcel/watcher-win32-x64/-/watcher-win32-x64-2.5.0.tgz",
1961 |       "integrity": "sha512-lPrxve92zEHdgeff3aiu4gDOIt4u7sJYha6wbdEZDCDUhtjTsOMiaJzG5lMY4GkWH8p0fMmO2Ppq5G5XXG+DQw==",
1962 |       "cpu": [
1963 |         "x64"
1964 |       ],
1965 |       "dev": true,
1966 |       "optional": true,
1967 |       "os": [
1968 |         "win32"
1969 |       ],
1970 |       "engines": {
1971 |         "node": ">= 10.0.0"
1972 |       },
1973 |       "funding": {
1974 |         "type": "opencollective",
1975 |         "url": "https://opencollective.com/parcel"
1976 |       }
1977 |     },
1978 |     "node_modules/@popperjs/core": {
1979 |       "version": "2.11.8",
1980 |       "resolved": "https://registry.npmmirror.com/@popperjs/core/-/core-2.11.8.tgz",
1981 |       "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
1982 |       "dev": true,
1983 |       "funding": {
1984 |         "type": "opencollective",
1985 |         "url": "https://opencollective.com/popperjs"
1986 |       }
1987 |     },
1988 |     "node_modules/@popperjs/svelte": {
1989 |       "version": "0.1.1",
1990 |       "resolved": "https://registry.npmmirror.com/@popperjs/svelte/-/svelte-0.1.1.tgz",
1991 |       "integrity": "sha512-/zhQ0TI5cqhY/tlI+4FiU/Cn1jpQwJQTeOYor2HuQXFp+XRI07t9247OEGRqUvUBlENrVLDSPh6FU3B2MVrKSw==",
1992 |       "dev": true,
1993 |       "peerDependencies": {
1994 |         "@popperjs/core": "^2.3.3",
1995 |         "svelte": "^3.18.1"
1996 |       }
1997 |     },
1998 |     "node_modules/@sinclair/typebox": {
1999 |       "version": "0.27.8",
2000 |       "resolved": "https://registry.npmmirror.com/@sinclair/typebox/-/typebox-0.27.8.tgz",
2001 |       "integrity": "sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==",
2002 |       "dev": true
2003 |     },
2004 |     "node_modules/@sinonjs/commons": {
2005 |       "version": "3.0.1",
2006 |       "resolved": "https://registry.npmmirror.com/@sinonjs/commons/-/commons-3.0.1.tgz",
2007 |       "integrity": "sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==",
2008 |       "dev": true,
2009 |       "dependencies": {
2010 |         "type-detect": "4.0.8"
2011 |       }
2012 |     },
2013 |     "node_modules/@sinonjs/fake-timers": {
2014 |       "version": "10.3.0",
2015 |       "resolved": "https://registry.npmmirror.com/@sinonjs/fake-timers/-/fake-timers-10.3.0.tgz",
2016 |       "integrity": "sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==",
2017 |       "dev": true,
2018 |       "dependencies": {
2019 |         "@sinonjs/commons": "^3.0.0"
2020 |       }
2021 |     },
2022 |     "node_modules/@tsconfig/svelte": {
2023 |       "version": "5.0.4",
2024 |       "resolved": "https://registry.npmmirror.com/@tsconfig/svelte/-/svelte-5.0.4.tgz",
2025 |       "integrity": "sha512-BV9NplVgLmSi4mwKzD8BD/NQ8erOY/nUE/GpgWe2ckx+wIQF5RyRirn/QsSSCPeulVpc3RA/iJt6DpfTIZps0Q==",
2026 |       "dev": true
2027 |     },
2028 |     "node_modules/@types/babel__core": {
2029 |       "version": "7.20.5",
2030 |       "resolved": "https://registry.npmmirror.com/@types/babel__core/-/babel__core-7.20.5.tgz",
2031 |       "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
2032 |       "dev": true,
2033 |       "dependencies": {
2034 |         "@babel/parser": "^7.20.7",
2035 |         "@babel/types": "^7.20.7",
2036 |         "@types/babel__generator": "*",
2037 |         "@types/babel__template": "*",
2038 |         "@types/babel__traverse": "*"
2039 |       }
2040 |     },
2041 |     "node_modules/@types/babel__generator": {
2042 |       "version": "7.6.8",
2043 |       "resolved": "https://registry.npmmirror.com/@types/babel__generator/-/babel__generator-7.6.8.tgz",
2044 |       "integrity": "sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==",
2045 |       "dev": true,
2046 |       "dependencies": {
2047 |         "@babel/types": "^7.0.0"
2048 |       }
2049 |     },
2050 |     "node_modules/@types/babel__template": {
2051 |       "version": "7.4.4",
2052 |       "resolved": "https://registry.npmmirror.com/@types/babel__template/-/babel__template-7.4.4.tgz",
2053 |       "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
2054 |       "dev": true,
2055 |       "dependencies": {
2056 |         "@babel/parser": "^7.1.0",
2057 |         "@babel/types": "^7.0.0"
2058 |       }
2059 |     },
2060 |     "node_modules/@types/babel__traverse": {
2061 |       "version": "7.20.6",
2062 |       "resolved": "https://registry.npmmirror.com/@types/babel__traverse/-/babel__traverse-7.20.6.tgz",
2063 |       "integrity": "sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==",
2064 |       "dev": true,
2065 |       "dependencies": {
2066 |         "@babel/types": "^7.20.7"
2067 |       }
2068 |     },
2069 |     "node_modules/@types/codemirror": {
2070 |       "version": "5.60.8",
2071 |       "resolved": "https://registry.npmmirror.com/@types/codemirror/-/codemirror-5.60.8.tgz",
2072 |       "integrity": "sha512-VjFgDF/eB+Aklcy15TtOTLQeMjTo07k7KAjql8OK5Dirr7a6sJY4T1uVBDuTVG9VEmn1uUsohOpYnVfgC6/jyw==",
2073 |       "dev": true,
2074 |       "dependencies": {
2075 |         "@types/tern": "*"
2076 |       }
2077 |     },
2078 |     "node_modules/@types/estree": {
2079 |       "version": "1.0.6",
2080 |       "resolved": "https://registry.npmmirror.com/@types/estree/-/estree-1.0.6.tgz",
2081 |       "integrity": "sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==",
2082 |       "dev": true
2083 |     },
2084 |     "node_modules/@types/graceful-fs": {
2085 |       "version": "4.1.9",
2086 |       "resolved": "https://registry.npmmirror.com/@types/graceful-fs/-/graceful-fs-4.1.9.tgz",
2087 |       "integrity": "sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==",
2088 |       "dev": true,
2089 |       "dependencies": {
2090 |         "@types/node": "*"
2091 |       }
2092 |     },
2093 |     "node_modules/@types/istanbul-lib-coverage": {
2094 |       "version": "2.0.6",
2095 |       "resolved": "https://registry.npmmirror.com/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.6.tgz",
2096 |       "integrity": "sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==",
2097 |       "dev": true
2098 |     },
2099 |     "node_modules/@types/istanbul-lib-report": {
2100 |       "version": "3.0.3",
2101 |       "resolved": "https://registry.npmmirror.com/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.3.tgz",
2102 |       "integrity": "sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==",
2103 |       "dev": true,
2104 |       "dependencies": {
2105 |         "@types/istanbul-lib-coverage": "*"
2106 |       }
2107 |     },
2108 |     "node_modules/@types/istanbul-reports": {
2109 |       "version": "3.0.4",
2110 |       "resolved": "https://registry.npmmirror.com/@types/istanbul-reports/-/istanbul-reports-3.0.4.tgz",
2111 |       "integrity": "sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==",
2112 |       "dev": true,
2113 |       "dependencies": {
2114 |         "@types/istanbul-lib-report": "*"
2115 |       }
2116 |     },
2117 |     "node_modules/@types/jest": {
2118 |       "version": "29.5.14",
2119 |       "resolved": "https://registry.npmmirror.com/@types/jest/-/jest-29.5.14.tgz",
2120 |       "integrity": "sha512-ZN+4sdnLUbo8EVvVc2ao0GFW6oVrQRPn4K2lglySj7APvSrgzxHiNNK99us4WDMi57xxA2yggblIAMNhXOotLQ==",
2121 |       "dev": true,
2122 |       "dependencies": {
2123 |         "expect": "^29.0.0",
2124 |         "pretty-format": "^29.0.0"
2125 |       }
2126 |     },
2127 |     "node_modules/@types/json-schema": {
2128 |       "version": "7.0.15",
2129 |       "resolved": "https://registry.npmmirror.com/@types/json-schema/-/json-schema-7.0.15.tgz",
2130 |       "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
2131 |       "dev": true
2132 |     },
2133 |     "node_modules/@types/node": {
2134 |       "version": "22.10.1",
2135 |       "resolved": "https://registry.npmmirror.com/@types/node/-/node-22.10.1.tgz",
2136 |       "integrity": "sha512-qKgsUwfHZV2WCWLAnVP1JqnpE6Im6h3Y0+fYgMTasNQ7V++CBX5OT1as0g0f+OyubbFqhf6XVNIsmN4IIhEgGQ==",
2137 |       "dev": true,
2138 |       "dependencies": {
2139 |         "undici-types": "~6.20.0"
2140 |       }
2141 |     },
2142 |     "node_modules/@types/pug": {
2143 |       "version": "2.0.10",
2144 |       "resolved": "https://registry.npmmirror.com/@types/pug/-/pug-2.0.10.tgz",
2145 |       "integrity": "sha512-Sk/uYFOBAB7mb74XcpizmH0KOR2Pv3D2Hmrh1Dmy5BmK3MpdSa5kqZcg6EKBdklU0bFXX9gCfzvpnyUehrPIuA==",
2146 |       "dev": true
2147 |     },
2148 |     "node_modules/@types/sortablejs": {
2149 |       "version": "1.15.8",
2150 |       "resolved": "https://registry.npmmirror.com/@types/sortablejs/-/sortablejs-1.15.8.tgz",
2151 |       "integrity": "sha512-b79830lW+RZfwaztgs1aVPgbasJ8e7AXtZYHTELNXZPsERt4ymJdjV4OccDbHQAvHrCcFpbF78jkm0R6h/pZVg==",
2152 |       "dev": true
2153 |     },
2154 |     "node_modules/@types/stack-utils": {
2155 |       "version": "2.0.3",
2156 |       "resolved": "https://registry.npmmirror.com/@types/stack-utils/-/stack-utils-2.0.3.tgz",
2157 |       "integrity": "sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==",
2158 |       "dev": true
2159 |     },
2160 |     "node_modules/@types/tern": {
2161 |       "version": "0.23.9",
2162 |       "resolved": "https://registry.npmmirror.com/@types/tern/-/tern-0.23.9.tgz",
2163 |       "integrity": "sha512-ypzHFE/wBzh+BlH6rrBgS5I/Z7RD21pGhZ2rltb/+ZrVM1awdZwjx7hE5XfuYgHWk9uvV5HLZN3SloevCAp3Bw==",
2164 |       "dev": true,
2165 |       "dependencies": {
2166 |         "@types/estree": "*"
2167 |       }
2168 |     },
2169 |     "node_modules/@types/uuid": {
2170 |       "version": "10.0.0",
2171 |       "resolved": "https://registry.npmmirror.com/@types/uuid/-/uuid-10.0.0.tgz",
2172 |       "integrity": "sha512-7gqG38EyHgyP1S+7+xomFtL+ZNHcKv6DwNaCZmJmo1vgMugyF3TCnXVg4t1uk89mLNwnLtnY3TpOpCOyp1/xHQ==",
2173 |       "dev": true
2174 |     },
2175 |     "node_modules/@types/yargs": {
2176 |       "version": "17.0.33",
2177 |       "resolved": "https://registry.npmmirror.com/@types/yargs/-/yargs-17.0.33.tgz",
2178 |       "integrity": "sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==",
2179 |       "dev": true,
2180 |       "dependencies": {
2181 |         "@types/yargs-parser": "*"
2182 |       }
2183 |     },
2184 |     "node_modules/@types/yargs-parser": {
2185 |       "version": "21.0.3",
2186 |       "resolved": "https://registry.npmmirror.com/@types/yargs-parser/-/yargs-parser-21.0.3.tgz",
2187 |       "integrity": "sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==",
2188 |       "dev": true
2189 |     },
2190 |     "node_modules/@typescript-eslint/eslint-plugin": {
2191 |       "version": "8.16.0",
2192 |       "resolved": "https://registry.npmmirror.com/@typescript-eslint/eslint-plugin/-/eslint-plugin-8.16.0.tgz",
2193 |       "integrity": "sha512-5YTHKV8MYlyMI6BaEG7crQ9BhSc8RxzshOReKwZwRWN0+XvvTOm+L/UYLCYxFpfwYuAAqhxiq4yae0CMFwbL7Q==",
2194 |       "dev": true,
2195 |       "dependencies": {
2196 |         "@eslint-community/regexpp": "^4.10.0",
2197 |         "@typescript-eslint/scope-manager": "8.16.0",
2198 |         "@typescript-eslint/type-utils": "8.16.0",
2199 |         "@typescript-eslint/utils": "8.16.0",
2200 |         "@typescript-eslint/visitor-keys": "8.16.0",
2201 |         "graphemer": "^1.4.0",
2202 |         "ignore": "^5.3.1",
2203 |         "natural-compare": "^1.4.0",
2204 |         "ts-api-utils": "^1.3.0"
2205 |       },
2206 |       "engines": {
2207 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2208 |       },
2209 |       "funding": {
2210 |         "type": "opencollective",
2211 |         "url": "https://opencollective.com/typescript-eslint"
2212 |       },
2213 |       "peerDependencies": {
2214 |         "@typescript-eslint/parser": "^8.0.0 || ^8.0.0-alpha.0",
2215 |         "eslint": "^8.57.0 || ^9.0.0"
2216 |       },
2217 |       "peerDependenciesMeta": {
2218 |         "typescript": {
2219 |           "optional": true
2220 |         }
2221 |       }
2222 |     },
2223 |     "node_modules/@typescript-eslint/parser": {
2224 |       "version": "8.16.0",
2225 |       "resolved": "https://registry.npmmirror.com/@typescript-eslint/parser/-/parser-8.16.0.tgz",
2226 |       "integrity": "sha512-D7DbgGFtsqIPIFMPJwCad9Gfi/hC0PWErRRHFnaCWoEDYi5tQUDiJCTmGUbBiLzjqAck4KcXt9Ayj0CNlIrF+w==",
2227 |       "dev": true,
2228 |       "dependencies": {
2229 |         "@typescript-eslint/scope-manager": "8.16.0",
2230 |         "@typescript-eslint/types": "8.16.0",
2231 |         "@typescript-eslint/typescript-estree": "8.16.0",
2232 |         "@typescript-eslint/visitor-keys": "8.16.0",
2233 |         "debug": "^4.3.4"
2234 |       },
2235 |       "engines": {
2236 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2237 |       },
2238 |       "funding": {
2239 |         "type": "opencollective",
2240 |         "url": "https://opencollective.com/typescript-eslint"
2241 |       },
2242 |       "peerDependencies": {
2243 |         "eslint": "^8.57.0 || ^9.0.0"
2244 |       },
2245 |       "peerDependenciesMeta": {
2246 |         "typescript": {
2247 |           "optional": true
2248 |         }
2249 |       }
2250 |     },
2251 |     "node_modules/@typescript-eslint/scope-manager": {
2252 |       "version": "8.16.0",
2253 |       "resolved": "https://registry.npmmirror.com/@typescript-eslint/scope-manager/-/scope-manager-8.16.0.tgz",
2254 |       "integrity": "sha512-mwsZWubQvBki2t5565uxF0EYvG+FwdFb8bMtDuGQLdCCnGPrDEDvm1gtfynuKlnpzeBRqdFCkMf9jg1fnAK8sg==",
2255 |       "dev": true,
2256 |       "dependencies": {
2257 |         "@typescript-eslint/types": "8.16.0",
2258 |         "@typescript-eslint/visitor-keys": "8.16.0"
2259 |       },
2260 |       "engines": {
2261 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2262 |       },
2263 |       "funding": {
2264 |         "type": "opencollective",
2265 |         "url": "https://opencollective.com/typescript-eslint"
2266 |       }
2267 |     },
2268 |     "node_modules/@typescript-eslint/type-utils": {
2269 |       "version": "8.16.0",
2270 |       "resolved": "https://registry.npmmirror.com/@typescript-eslint/type-utils/-/type-utils-8.16.0.tgz",
2271 |       "integrity": "sha512-IqZHGG+g1XCWX9NyqnI/0CX5LL8/18awQqmkZSl2ynn8F76j579dByc0jhfVSnSnhf7zv76mKBQv9HQFKvDCgg==",
2272 |       "dev": true,
2273 |       "dependencies": {
2274 |         "@typescript-eslint/typescript-estree": "8.16.0",
2275 |         "@typescript-eslint/utils": "8.16.0",
2276 |         "debug": "^4.3.4",
2277 |         "ts-api-utils": "^1.3.0"
2278 |       },
2279 |       "engines": {
2280 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2281 |       },
2282 |       "funding": {
2283 |         "type": "opencollective",
2284 |         "url": "https://opencollective.com/typescript-eslint"
2285 |       },
2286 |       "peerDependencies": {
2287 |         "eslint": "^8.57.0 || ^9.0.0"
2288 |       },
2289 |       "peerDependenciesMeta": {
2290 |         "typescript": {
2291 |           "optional": true
2292 |         }
2293 |       }
2294 |     },
2295 |     "node_modules/@typescript-eslint/types": {
2296 |       "version": "8.16.0",
2297 |       "resolved": "https://registry.npmmirror.com/@typescript-eslint/types/-/types-8.16.0.tgz",
2298 |       "integrity": "sha512-NzrHj6thBAOSE4d9bsuRNMvk+BvaQvmY4dDglgkgGC0EW/tB3Kelnp3tAKH87GEwzoxgeQn9fNGRyFJM/xd+GQ==",
2299 |       "dev": true,
2300 |       "engines": {
2301 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2302 |       },
2303 |       "funding": {
2304 |         "type": "opencollective",
2305 |         "url": "https://opencollective.com/typescript-eslint"
2306 |       }
2307 |     },
2308 |     "node_modules/@typescript-eslint/typescript-estree": {
2309 |       "version": "8.16.0",
2310 |       "resolved": "https://registry.npmmirror.com/@typescript-eslint/typescript-estree/-/typescript-estree-8.16.0.tgz",
2311 |       "integrity": "sha512-E2+9IzzXMc1iaBy9zmo+UYvluE3TW7bCGWSF41hVWUE01o8nzr1rvOQYSxelxr6StUvRcTMe633eY8mXASMaNw==",
2312 |       "dev": true,
2313 |       "dependencies": {
2314 |         "@typescript-eslint/types": "8.16.0",
2315 |         "@typescript-eslint/visitor-keys": "8.16.0",
2316 |         "debug": "^4.3.4",
2317 |         "fast-glob": "^3.3.2",
2318 |         "is-glob": "^4.0.3",
2319 |         "minimatch": "^9.0.4",
2320 |         "semver": "^7.6.0",
2321 |         "ts-api-utils": "^1.3.0"
2322 |       },
2323 |       "engines": {
2324 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2325 |       },
2326 |       "funding": {
2327 |         "type": "opencollective",
2328 |         "url": "https://opencollective.com/typescript-eslint"
2329 |       },
2330 |       "peerDependenciesMeta": {
2331 |         "typescript": {
2332 |           "optional": true
2333 |         }
2334 |       }
2335 |     },
2336 |     "node_modules/@typescript-eslint/typescript-estree/node_modules/brace-expansion": {
2337 |       "version": "2.0.1",
2338 |       "resolved": "https://registry.npmmirror.com/brace-expansion/-/brace-expansion-2.0.1.tgz",
2339 |       "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
2340 |       "dev": true,
2341 |       "dependencies": {
2342 |         "balanced-match": "^1.0.0"
2343 |       }
2344 |     },
2345 |     "node_modules/@typescript-eslint/typescript-estree/node_modules/minimatch": {
2346 |       "version": "9.0.5",
2347 |       "resolved": "https://registry.npmmirror.com/minimatch/-/minimatch-9.0.5.tgz",
2348 |       "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
2349 |       "dev": true,
2350 |       "dependencies": {
2351 |         "brace-expansion": "^2.0.1"
2352 |       },
2353 |       "engines": {
2354 |         "node": ">=16 || 14 >=14.17"
2355 |       },
2356 |       "funding": {
2357 |         "url": "https://github.com/sponsors/isaacs"
2358 |       }
2359 |     },
2360 |     "node_modules/@typescript-eslint/utils": {
2361 |       "version": "8.16.0",
2362 |       "resolved": "https://registry.npmmirror.com/@typescript-eslint/utils/-/utils-8.16.0.tgz",
2363 |       "integrity": "sha512-C1zRy/mOL8Pj157GiX4kaw7iyRLKfJXBR3L82hk5kS/GyHcOFmy4YUq/zfZti72I9wnuQtA/+xzft4wCC8PJdA==",
2364 |       "dev": true,
2365 |       "dependencies": {
2366 |         "@eslint-community/eslint-utils": "^4.4.0",
2367 |         "@typescript-eslint/scope-manager": "8.16.0",
2368 |         "@typescript-eslint/types": "8.16.0",
2369 |         "@typescript-eslint/typescript-estree": "8.16.0"
2370 |       },
2371 |       "engines": {
2372 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2373 |       },
2374 |       "funding": {
2375 |         "type": "opencollective",
2376 |         "url": "https://opencollective.com/typescript-eslint"
2377 |       },
2378 |       "peerDependencies": {
2379 |         "eslint": "^8.57.0 || ^9.0.0"
2380 |       },
2381 |       "peerDependenciesMeta": {
2382 |         "typescript": {
2383 |           "optional": true
2384 |         }
2385 |       }
2386 |     },
2387 |     "node_modules/@typescript-eslint/visitor-keys": {
2388 |       "version": "8.16.0",
2389 |       "resolved": "https://registry.npmmirror.com/@typescript-eslint/visitor-keys/-/visitor-keys-8.16.0.tgz",
2390 |       "integrity": "sha512-pq19gbaMOmFE3CbL0ZB8J8BFCo2ckfHBfaIsaOZgBIF4EoISJIdLX5xRhd0FGB0LlHReNRuzoJoMGpTjq8F2CQ==",
2391 |       "dev": true,
2392 |       "dependencies": {
2393 |         "@typescript-eslint/types": "8.16.0",
2394 |         "eslint-visitor-keys": "^4.2.0"
2395 |       },
2396 |       "engines": {
2397 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2398 |       },
2399 |       "funding": {
2400 |         "type": "opencollective",
2401 |         "url": "https://opencollective.com/typescript-eslint"
2402 |       }
2403 |     },
2404 |     "node_modules/@typescript-eslint/visitor-keys/node_modules/eslint-visitor-keys": {
2405 |       "version": "4.2.0",
2406 |       "resolved": "https://registry.npmmirror.com/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
2407 |       "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
2408 |       "dev": true,
2409 |       "engines": {
2410 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
2411 |       },
2412 |       "funding": {
2413 |         "url": "https://opencollective.com/eslint"
2414 |       }
2415 |     },
2416 |     "node_modules/acorn": {
2417 |       "version": "8.14.0",
2418 |       "resolved": "https://registry.npmmirror.com/acorn/-/acorn-8.14.0.tgz",
2419 |       "integrity": "sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==",
2420 |       "dev": true,
2421 |       "bin": {
2422 |         "acorn": "bin/acorn"
2423 |       },
2424 |       "engines": {
2425 |         "node": ">=0.4.0"
2426 |       }
2427 |     },
2428 |     "node_modules/acorn-jsx": {
2429 |       "version": "5.3.2",
2430 |       "resolved": "https://registry.npmmirror.com/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
2431 |       "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
2432 |       "dev": true,
2433 |       "peerDependencies": {
2434 |         "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
2435 |       }
2436 |     },
2437 |     "node_modules/ajv": {
2438 |       "version": "6.12.6",
2439 |       "resolved": "https://registry.npmmirror.com/ajv/-/ajv-6.12.6.tgz",
2440 |       "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
2441 |       "dev": true,
2442 |       "dependencies": {
2443 |         "fast-deep-equal": "^3.1.1",
2444 |         "fast-json-stable-stringify": "^2.0.0",
2445 |         "json-schema-traverse": "^0.4.1",
2446 |         "uri-js": "^4.2.2"
2447 |       },
2448 |       "funding": {
2449 |         "type": "github",
2450 |         "url": "https://github.com/sponsors/epoberezkin"
2451 |       }
2452 |     },
2453 |     "node_modules/ansi-escapes": {
2454 |       "version": "4.3.2",
2455 |       "resolved": "https://registry.npmmirror.com/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
2456 |       "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==",
2457 |       "dev": true,
2458 |       "dependencies": {
2459 |         "type-fest": "^0.21.3"
2460 |       },
2461 |       "engines": {
2462 |         "node": ">=8"
2463 |       },
2464 |       "funding": {
2465 |         "url": "https://github.com/sponsors/sindresorhus"
2466 |       }
2467 |     },
2468 |     "node_modules/ansi-regex": {
2469 |       "version": "5.0.1",
2470 |       "resolved": "https://registry.npmmirror.com/ansi-regex/-/ansi-regex-5.0.1.tgz",
2471 |       "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
2472 |       "dev": true,
2473 |       "engines": {
2474 |         "node": ">=8"
2475 |       }
2476 |     },
2477 |     "node_modules/ansi-styles": {
2478 |       "version": "4.3.0",
2479 |       "resolved": "https://registry.npmmirror.com/ansi-styles/-/ansi-styles-4.3.0.tgz",
2480 |       "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
2481 |       "dev": true,
2482 |       "dependencies": {
2483 |         "color-convert": "^2.0.1"
2484 |       },
2485 |       "engines": {
2486 |         "node": ">=8"
2487 |       },
2488 |       "funding": {
2489 |         "url": "https://github.com/chalk/ansi-styles?sponsor=1"
2490 |       }
2491 |     },
2492 |     "node_modules/anymatch": {
2493 |       "version": "3.1.3",
2494 |       "resolved": "https://registry.npmmirror.com/anymatch/-/anymatch-3.1.3.tgz",
2495 |       "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
2496 |       "dev": true,
2497 |       "dependencies": {
2498 |         "normalize-path": "^3.0.0",
2499 |         "picomatch": "^2.0.4"
2500 |       },
2501 |       "engines": {
2502 |         "node": ">= 8"
2503 |       }
2504 |     },
2505 |     "node_modules/argparse": {
2506 |       "version": "1.0.10",
2507 |       "resolved": "https://registry.npmmirror.com/argparse/-/argparse-1.0.10.tgz",
2508 |       "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",
2509 |       "dev": true,
2510 |       "dependencies": {
2511 |         "sprintf-js": "~1.0.2"
2512 |       }
2513 |     },
2514 |     "node_modules/arr-diff": {
2515 |       "version": "4.0.0",
2516 |       "resolved": "https://registry.npmmirror.com/arr-diff/-/arr-diff-4.0.0.tgz",
2517 |       "integrity": "sha512-YVIQ82gZPGBebQV/a8dar4AitzCQs0jjXwMPZllpXMaGjXPYVUawSxQrRsjhjupyVxEvbHgUmIhKVlND+j02kA==",
2518 |       "dev": true,
2519 |       "engines": {
2520 |         "node": ">=0.10.0"
2521 |       }
2522 |     },
2523 |     "node_modules/arr-flatten": {
2524 |       "version": "1.1.0",
2525 |       "resolved": "https://registry.npmmirror.com/arr-flatten/-/arr-flatten-1.1.0.tgz",
2526 |       "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==",
2527 |       "dev": true,
2528 |       "engines": {
2529 |         "node": ">=0.10.0"
2530 |       }
2531 |     },
2532 |     "node_modules/arr-union": {
2533 |       "version": "3.1.0",
2534 |       "resolved": "https://registry.npmmirror.com/arr-union/-/arr-union-3.1.0.tgz",
2535 |       "integrity": "sha512-sKpyeERZ02v1FeCZT8lrfJq5u6goHCtpTAzPwJYe7c8SPFOboNjNg1vz2L4VTn9T4PQxEx13TbXLmYUcS6Ug7Q==",
2536 |       "dev": true,
2537 |       "engines": {
2538 |         "node": ">=0.10.0"
2539 |       }
2540 |     },
2541 |     "node_modules/array-unique": {
2542 |       "version": "0.3.2",
2543 |       "resolved": "https://registry.npmmirror.com/array-unique/-/array-unique-0.3.2.tgz",
2544 |       "integrity": "sha512-SleRWjh9JUud2wH1hPs9rZBZ33H6T9HOiL0uwGnGx9FpE6wKGyfWugmbkEOIs6qWrZhg0LWeLziLrEwQJhs5mQ==",
2545 |       "dev": true,
2546 |       "engines": {
2547 |         "node": ">=0.10.0"
2548 |       }
2549 |     },
2550 |     "node_modules/assign-symbols": {
2551 |       "version": "1.0.0",
2552 |       "resolved": "https://registry.npmmirror.com/assign-symbols/-/assign-symbols-1.0.0.tgz",
2553 |       "integrity": "sha512-Q+JC7Whu8HhmTdBph/Tq59IoRtoy6KAm5zzPv00WdujX82lbAL8K7WVjne7vdCsAmbF4AYaDOPyO3k0kl8qIrw==",
2554 |       "dev": true,
2555 |       "engines": {
2556 |         "node": ">=0.10.0"
2557 |       }
2558 |     },
2559 |     "node_modules/async": {
2560 |       "version": "3.2.6",
2561 |       "resolved": "https://registry.npmmirror.com/async/-/async-3.2.6.tgz",
2562 |       "integrity": "sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==",
2563 |       "dev": true
2564 |     },
2565 |     "node_modules/atob": {
2566 |       "version": "2.1.2",
2567 |       "resolved": "https://registry.npmmirror.com/atob/-/atob-2.1.2.tgz",
2568 |       "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==",
2569 |       "dev": true,
2570 |       "bin": {
2571 |         "atob": "bin/atob.js"
2572 |       },
2573 |       "engines": {
2574 |         "node": ">= 4.5.0"
2575 |       }
2576 |     },
2577 |     "node_modules/babel-jest": {
2578 |       "version": "29.7.0",
2579 |       "resolved": "https://registry.npmmirror.com/babel-jest/-/babel-jest-29.7.0.tgz",
2580 |       "integrity": "sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==",
2581 |       "dev": true,
2582 |       "dependencies": {
2583 |         "@jest/transform": "^29.7.0",
2584 |         "@types/babel__core": "^7.1.14",
2585 |         "babel-plugin-istanbul": "^6.1.1",
2586 |         "babel-preset-jest": "^29.6.3",
2587 |         "chalk": "^4.0.0",
2588 |         "graceful-fs": "^4.2.9",
2589 |         "slash": "^3.0.0"
2590 |       },
2591 |       "engines": {
2592 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
2593 |       },
2594 |       "peerDependencies": {
2595 |         "@babel/core": "^7.8.0"
2596 |       }
2597 |     },
2598 |     "node_modules/babel-plugin-istanbul": {
2599 |       "version": "6.1.1",
2600 |       "resolved": "https://registry.npmmirror.com/babel-plugin-istanbul/-/babel-plugin-istanbul-6.1.1.tgz",
2601 |       "integrity": "sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==",
2602 |       "dev": true,
2603 |       "dependencies": {
2604 |         "@babel/helper-plugin-utils": "^7.0.0",
2605 |         "@istanbuljs/load-nyc-config": "^1.0.0",
2606 |         "@istanbuljs/schema": "^0.1.2",
2607 |         "istanbul-lib-instrument": "^5.0.4",
2608 |         "test-exclude": "^6.0.0"
2609 |       },
2610 |       "engines": {
2611 |         "node": ">=8"
2612 |       }
2613 |     },
2614 |     "node_modules/babel-plugin-jest-hoist": {
2615 |       "version": "29.6.3",
2616 |       "resolved": "https://registry.npmmirror.com/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-29.6.3.tgz",
2617 |       "integrity": "sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==",
2618 |       "dev": true,
2619 |       "dependencies": {
2620 |         "@babel/template": "^7.3.3",
2621 |         "@babel/types": "^7.3.3",
2622 |         "@types/babel__core": "^7.1.14",
2623 |         "@types/babel__traverse": "^7.0.6"
2624 |       },
2625 |       "engines": {
2626 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
2627 |       }
2628 |     },
2629 |     "node_modules/babel-preset-current-node-syntax": {
2630 |       "version": "1.1.0",
2631 |       "resolved": "https://registry.npmmirror.com/babel-preset-current-node-syntax/-/babel-preset-current-node-syntax-1.1.0.tgz",
2632 |       "integrity": "sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==",
2633 |       "dev": true,
2634 |       "dependencies": {
2635 |         "@babel/plugin-syntax-async-generators": "^7.8.4",
2636 |         "@babel/plugin-syntax-bigint": "^7.8.3",
2637 |         "@babel/plugin-syntax-class-properties": "^7.12.13",
2638 |         "@babel/plugin-syntax-class-static-block": "^7.14.5",
2639 |         "@babel/plugin-syntax-import-attributes": "^7.24.7",
2640 |         "@babel/plugin-syntax-import-meta": "^7.10.4",
2641 |         "@babel/plugin-syntax-json-strings": "^7.8.3",
2642 |         "@babel/plugin-syntax-logical-assignment-operators": "^7.10.4",
2643 |         "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
2644 |         "@babel/plugin-syntax-numeric-separator": "^7.10.4",
2645 |         "@babel/plugin-syntax-object-rest-spread": "^7.8.3",
2646 |         "@babel/plugin-syntax-optional-catch-binding": "^7.8.3",
2647 |         "@babel/plugin-syntax-optional-chaining": "^7.8.3",
2648 |         "@babel/plugin-syntax-private-property-in-object": "^7.14.5",
2649 |         "@babel/plugin-syntax-top-level-await": "^7.14.5"
2650 |       },
2651 |       "peerDependencies": {
2652 |         "@babel/core": "^7.0.0"
2653 |       }
2654 |     },
2655 |     "node_modules/babel-preset-jest": {
2656 |       "version": "29.6.3",
2657 |       "resolved": "https://registry.npmmirror.com/babel-preset-jest/-/babel-preset-jest-29.6.3.tgz",
2658 |       "integrity": "sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==",
2659 |       "dev": true,
2660 |       "dependencies": {
2661 |         "babel-plugin-jest-hoist": "^29.6.3",
2662 |         "babel-preset-current-node-syntax": "^1.0.0"
2663 |       },
2664 |       "engines": {
2665 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
2666 |       },
2667 |       "peerDependencies": {
2668 |         "@babel/core": "^7.0.0"
2669 |       }
2670 |     },
2671 |     "node_modules/balanced-match": {
2672 |       "version": "1.0.2",
2673 |       "resolved": "https://registry.npmmirror.com/balanced-match/-/balanced-match-1.0.2.tgz",
2674 |       "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
2675 |       "dev": true
2676 |     },
2677 |     "node_modules/base": {
2678 |       "version": "0.11.2",
2679 |       "resolved": "https://registry.npmmirror.com/base/-/base-0.11.2.tgz",
2680 |       "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",
2681 |       "dev": true,
2682 |       "dependencies": {
2683 |         "cache-base": "^1.0.1",
2684 |         "class-utils": "^0.3.5",
2685 |         "component-emitter": "^1.2.1",
2686 |         "define-property": "^1.0.0",
2687 |         "isobject": "^3.0.1",
2688 |         "mixin-deep": "^1.2.0",
2689 |         "pascalcase": "^0.1.1"
2690 |       },
2691 |       "engines": {
2692 |         "node": ">=0.10.0"
2693 |       }
2694 |     },
2695 |     "node_modules/base/node_modules/define-property": {
2696 |       "version": "1.0.0",
2697 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-1.0.0.tgz",
2698 |       "integrity": "sha512-cZTYKFWspt9jZsMscWo8sc/5lbPC9Q0N5nBLgb+Yd915iL3udB1uFgS3B8YCx66UVHq018DAVFoee7x+gxggeA==",
2699 |       "dev": true,
2700 |       "dependencies": {
2701 |         "is-descriptor": "^1.0.0"
2702 |       },
2703 |       "engines": {
2704 |         "node": ">=0.10.0"
2705 |       }
2706 |     },
2707 |     "node_modules/binary-extensions": {
2708 |       "version": "2.3.0",
2709 |       "resolved": "https://registry.npmmirror.com/binary-extensions/-/binary-extensions-2.3.0.tgz",
2710 |       "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
2711 |       "dev": true,
2712 |       "engines": {
2713 |         "node": ">=8"
2714 |       },
2715 |       "funding": {
2716 |         "url": "https://github.com/sponsors/sindresorhus"
2717 |       }
2718 |     },
2719 |     "node_modules/brace-expansion": {
2720 |       "version": "1.1.11",
2721 |       "resolved": "https://registry.npmmirror.com/brace-expansion/-/brace-expansion-1.1.11.tgz",
2722 |       "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
2723 |       "dev": true,
2724 |       "dependencies": {
2725 |         "balanced-match": "^1.0.0",
2726 |         "concat-map": "0.0.1"
2727 |       }
2728 |     },
2729 |     "node_modules/braces": {
2730 |       "version": "3.0.3",
2731 |       "resolved": "https://registry.npmmirror.com/braces/-/braces-3.0.3.tgz",
2732 |       "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
2733 |       "dev": true,
2734 |       "dependencies": {
2735 |         "fill-range": "^7.1.1"
2736 |       },
2737 |       "engines": {
2738 |         "node": ">=8"
2739 |       }
2740 |     },
2741 |     "node_modules/browserslist": {
2742 |       "version": "4.24.2",
2743 |       "resolved": "https://registry.npmmirror.com/browserslist/-/browserslist-4.24.2.tgz",
2744 |       "integrity": "sha512-ZIc+Q62revdMcqC6aChtW4jz3My3klmCO1fEmINZY/8J3EpBg5/A/D0AKmBveUh6pgoeycoMkVMko84tuYS+Gg==",
2745 |       "dev": true,
2746 |       "funding": [
2747 |         {
2748 |           "type": "opencollective",
2749 |           "url": "https://opencollective.com/browserslist"
2750 |         },
2751 |         {
2752 |           "type": "tidelift",
2753 |           "url": "https://tidelift.com/funding/github/npm/browserslist"
2754 |         },
2755 |         {
2756 |           "type": "github",
2757 |           "url": "https://github.com/sponsors/ai"
2758 |         }
2759 |       ],
2760 |       "dependencies": {
2761 |         "caniuse-lite": "^1.0.30001669",
2762 |         "electron-to-chromium": "^1.5.41",
2763 |         "node-releases": "^2.0.18",
2764 |         "update-browserslist-db": "^1.1.1"
2765 |       },
2766 |       "bin": {
2767 |         "browserslist": "cli.js"
2768 |       },
2769 |       "engines": {
2770 |         "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
2771 |       }
2772 |     },
2773 |     "node_modules/bs-logger": {
2774 |       "version": "0.2.6",
2775 |       "resolved": "https://registry.npmmirror.com/bs-logger/-/bs-logger-0.2.6.tgz",
2776 |       "integrity": "sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==",
2777 |       "dev": true,
2778 |       "dependencies": {
2779 |         "fast-json-stable-stringify": "2.x"
2780 |       },
2781 |       "engines": {
2782 |         "node": ">= 6"
2783 |       }
2784 |     },
2785 |     "node_modules/bser": {
2786 |       "version": "2.1.1",
2787 |       "resolved": "https://registry.npmmirror.com/bser/-/bser-2.1.1.tgz",
2788 |       "integrity": "sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==",
2789 |       "dev": true,
2790 |       "dependencies": {
2791 |         "node-int64": "^0.4.0"
2792 |       }
2793 |     },
2794 |     "node_modules/buffer-crc32": {
2795 |       "version": "1.0.0",
2796 |       "resolved": "https://registry.npmmirror.com/buffer-crc32/-/buffer-crc32-1.0.0.tgz",
2797 |       "integrity": "sha512-Db1SbgBS/fg/392AblrMJk97KggmvYhr4pB5ZIMTWtaivCPMWLkmb7m21cJvpvgK+J3nsU2CmmixNBZx4vFj/w==",
2798 |       "dev": true,
2799 |       "engines": {
2800 |         "node": ">=8.0.0"
2801 |       }
2802 |     },
2803 |     "node_modules/buffer-from": {
2804 |       "version": "1.1.2",
2805 |       "resolved": "https://registry.npmmirror.com/buffer-from/-/buffer-from-1.1.2.tgz",
2806 |       "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
2807 |       "dev": true
2808 |     },
2809 |     "node_modules/builtin-modules": {
2810 |       "version": "3.3.0",
2811 |       "resolved": "https://registry.npmmirror.com/builtin-modules/-/builtin-modules-3.3.0.tgz",
2812 |       "integrity": "sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==",
2813 |       "dev": true,
2814 |       "engines": {
2815 |         "node": ">=6"
2816 |       },
2817 |       "funding": {
2818 |         "url": "https://github.com/sponsors/sindresorhus"
2819 |       }
2820 |     },
2821 |     "node_modules/cache-base": {
2822 |       "version": "1.0.1",
2823 |       "resolved": "https://registry.npmmirror.com/cache-base/-/cache-base-1.0.1.tgz",
2824 |       "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",
2825 |       "dev": true,
2826 |       "dependencies": {
2827 |         "collection-visit": "^1.0.0",
2828 |         "component-emitter": "^1.2.1",
2829 |         "get-value": "^2.0.6",
2830 |         "has-value": "^1.0.0",
2831 |         "isobject": "^3.0.1",
2832 |         "set-value": "^2.0.0",
2833 |         "to-object-path": "^0.3.0",
2834 |         "union-value": "^1.0.0",
2835 |         "unset-value": "^1.0.0"
2836 |       },
2837 |       "engines": {
2838 |         "node": ">=0.10.0"
2839 |       }
2840 |     },
2841 |     "node_modules/callsites": {
2842 |       "version": "3.1.0",
2843 |       "resolved": "https://registry.npmmirror.com/callsites/-/callsites-3.1.0.tgz",
2844 |       "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
2845 |       "dev": true,
2846 |       "engines": {
2847 |         "node": ">=6"
2848 |       }
2849 |     },
2850 |     "node_modules/camelcase": {
2851 |       "version": "5.3.1",
2852 |       "resolved": "https://registry.npmmirror.com/camelcase/-/camelcase-5.3.1.tgz",
2853 |       "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==",
2854 |       "dev": true,
2855 |       "engines": {
2856 |         "node": ">=6"
2857 |       }
2858 |     },
2859 |     "node_modules/caniuse-lite": {
2860 |       "version": "1.0.30001680",
2861 |       "resolved": "https://registry.npmmirror.com/caniuse-lite/-/caniuse-lite-1.0.30001680.tgz",
2862 |       "integrity": "sha512-rPQy70G6AGUMnbwS1z6Xg+RkHYPAi18ihs47GH0jcxIG7wArmPgY3XbS2sRdBbxJljp3thdT8BIqv9ccCypiPA==",
2863 |       "dev": true,
2864 |       "funding": [
2865 |         {
2866 |           "type": "opencollective",
2867 |           "url": "https://opencollective.com/browserslist"
2868 |         },
2869 |         {
2870 |           "type": "tidelift",
2871 |           "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
2872 |         },
2873 |         {
2874 |           "type": "github",
2875 |           "url": "https://github.com/sponsors/ai"
2876 |         }
2877 |       ]
2878 |     },
2879 |     "node_modules/capture-exit": {
2880 |       "version": "2.0.0",
2881 |       "resolved": "https://registry.npmmirror.com/capture-exit/-/capture-exit-2.0.0.tgz",
2882 |       "integrity": "sha512-PiT/hQmTonHhl/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbduLeeBkxEaYXUOUrRq6g==",
2883 |       "dev": true,
2884 |       "dependencies": {
2885 |         "rsvp": "^4.8.4"
2886 |       },
2887 |       "engines": {
2888 |         "node": "6.* || 8.* || >= 10.*"
2889 |       }
2890 |     },
2891 |     "node_modules/chalk": {
2892 |       "version": "4.1.2",
2893 |       "resolved": "https://registry.npmmirror.com/chalk/-/chalk-4.1.2.tgz",
2894 |       "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
2895 |       "dev": true,
2896 |       "dependencies": {
2897 |         "ansi-styles": "^4.1.0",
2898 |         "supports-color": "^7.1.0"
2899 |       },
2900 |       "engines": {
2901 |         "node": ">=10"
2902 |       },
2903 |       "funding": {
2904 |         "url": "https://github.com/chalk/chalk?sponsor=1"
2905 |       }
2906 |     },
2907 |     "node_modules/char-regex": {
2908 |       "version": "1.0.2",
2909 |       "resolved": "https://registry.npmmirror.com/char-regex/-/char-regex-1.0.2.tgz",
2910 |       "integrity": "sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==",
2911 |       "dev": true,
2912 |       "engines": {
2913 |         "node": ">=10"
2914 |       }
2915 |     },
2916 |     "node_modules/chokidar": {
2917 |       "version": "4.0.1",
2918 |       "resolved": "https://registry.npmmirror.com/chokidar/-/chokidar-4.0.1.tgz",
2919 |       "integrity": "sha512-n8enUVCED/KVRQlab1hr3MVpcVMvxtZjmEa956u+4YijlmQED223XMSYj2tLuKvr4jcCTzNNMpQDUer72MMmzA==",
2920 |       "dev": true,
2921 |       "dependencies": {
2922 |         "readdirp": "^4.0.1"
2923 |       },
2924 |       "engines": {
2925 |         "node": ">= 14.16.0"
2926 |       },
2927 |       "funding": {
2928 |         "url": "https://paulmillr.com/funding/"
2929 |       }
2930 |     },
2931 |     "node_modules/ci-info": {
2932 |       "version": "3.9.0",
2933 |       "resolved": "https://registry.npmmirror.com/ci-info/-/ci-info-3.9.0.tgz",
2934 |       "integrity": "sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==",
2935 |       "dev": true,
2936 |       "funding": [
2937 |         {
2938 |           "type": "github",
2939 |           "url": "https://github.com/sponsors/sibiraj-s"
2940 |         }
2941 |       ],
2942 |       "engines": {
2943 |         "node": ">=8"
2944 |       }
2945 |     },
2946 |     "node_modules/cjs-module-lexer": {
2947 |       "version": "1.4.1",
2948 |       "resolved": "https://registry.npmmirror.com/cjs-module-lexer/-/cjs-module-lexer-1.4.1.tgz",
2949 |       "integrity": "sha512-cuSVIHi9/9E/+821Qjdvngor+xpnlwnuwIyZOaLmHBVdXL+gP+I6QQB9VkO7RI77YIcTV+S1W9AreJ5eN63JBA==",
2950 |       "dev": true
2951 |     },
2952 |     "node_modules/class-utils": {
2953 |       "version": "0.3.6",
2954 |       "resolved": "https://registry.npmmirror.com/class-utils/-/class-utils-0.3.6.tgz",
2955 |       "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",
2956 |       "dev": true,
2957 |       "dependencies": {
2958 |         "arr-union": "^3.1.0",
2959 |         "define-property": "^0.2.5",
2960 |         "isobject": "^3.0.0",
2961 |         "static-extend": "^0.1.1"
2962 |       },
2963 |       "engines": {
2964 |         "node": ">=0.10.0"
2965 |       }
2966 |     },
2967 |     "node_modules/class-utils/node_modules/define-property": {
2968 |       "version": "0.2.5",
2969 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-0.2.5.tgz",
2970 |       "integrity": "sha512-Rr7ADjQZenceVOAKop6ALkkRAmH1A4Gx9hV/7ZujPUN2rkATqFO0JZLZInbAjpZYoJ1gUx8MRMQVkYemcbMSTA==",
2971 |       "dev": true,
2972 |       "dependencies": {
2973 |         "is-descriptor": "^0.1.0"
2974 |       },
2975 |       "engines": {
2976 |         "node": ">=0.10.0"
2977 |       }
2978 |     },
2979 |     "node_modules/class-utils/node_modules/is-descriptor": {
2980 |       "version": "0.1.7",
2981 |       "resolved": "https://registry.npmmirror.com/is-descriptor/-/is-descriptor-0.1.7.tgz",
2982 |       "integrity": "sha512-C3grZTvObeN1xud4cRWl366OMXZTj0+HGyk4hvfpx4ZHt1Pb60ANSXqCK7pdOTeUQpRzECBSTphqvD7U+l22Eg==",
2983 |       "dev": true,
2984 |       "dependencies": {
2985 |         "is-accessor-descriptor": "^1.0.1",
2986 |         "is-data-descriptor": "^1.0.1"
2987 |       },
2988 |       "engines": {
2989 |         "node": ">= 0.4"
2990 |       }
2991 |     },
2992 |     "node_modules/cliui": {
2993 |       "version": "8.0.1",
2994 |       "resolved": "https://registry.npmmirror.com/cliui/-/cliui-8.0.1.tgz",
2995 |       "integrity": "sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==",
2996 |       "dev": true,
2997 |       "dependencies": {
2998 |         "string-width": "^4.2.0",
2999 |         "strip-ansi": "^6.0.1",
3000 |         "wrap-ansi": "^7.0.0"
3001 |       },
3002 |       "engines": {
3003 |         "node": ">=12"
3004 |       }
3005 |     },
3006 |     "node_modules/co": {
3007 |       "version": "4.6.0",
3008 |       "resolved": "https://registry.npmmirror.com/co/-/co-4.6.0.tgz",
3009 |       "integrity": "sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==",
3010 |       "dev": true,
3011 |       "engines": {
3012 |         "iojs": ">= 1.0.0",
3013 |         "node": ">= 0.12.0"
3014 |       }
3015 |     },
3016 |     "node_modules/collect-v8-coverage": {
3017 |       "version": "1.0.2",
3018 |       "resolved": "https://registry.npmmirror.com/collect-v8-coverage/-/collect-v8-coverage-1.0.2.tgz",
3019 |       "integrity": "sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==",
3020 |       "dev": true
3021 |     },
3022 |     "node_modules/collection-visit": {
3023 |       "version": "1.0.0",
3024 |       "resolved": "https://registry.npmmirror.com/collection-visit/-/collection-visit-1.0.0.tgz",
3025 |       "integrity": "sha512-lNkKvzEeMBBjUGHZ+q6z9pSJla0KWAQPvtzhEV9+iGyQYG+pBpl7xKDhxoNSOZH2hhv0v5k0y2yAM4o4SjoSkw==",
3026 |       "dev": true,
3027 |       "dependencies": {
3028 |         "map-visit": "^1.0.0",
3029 |         "object-visit": "^1.0.0"
3030 |       },
3031 |       "engines": {
3032 |         "node": ">=0.10.0"
3033 |       }
3034 |     },
3035 |     "node_modules/color-convert": {
3036 |       "version": "2.0.1",
3037 |       "resolved": "https://registry.npmmirror.com/color-convert/-/color-convert-2.0.1.tgz",
3038 |       "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
3039 |       "dev": true,
3040 |       "dependencies": {
3041 |         "color-name": "~1.1.4"
3042 |       },
3043 |       "engines": {
3044 |         "node": ">=7.0.0"
3045 |       }
3046 |     },
3047 |     "node_modules/color-name": {
3048 |       "version": "1.1.4",
3049 |       "resolved": "https://registry.npmmirror.com/color-name/-/color-name-1.1.4.tgz",
3050 |       "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
3051 |       "dev": true
3052 |     },
3053 |     "node_modules/component-emitter": {
3054 |       "version": "1.3.1",
3055 |       "resolved": "https://registry.npmmirror.com/component-emitter/-/component-emitter-1.3.1.tgz",
3056 |       "integrity": "sha512-T0+barUSQRTUQASh8bx02dl+DhF54GtIDY13Y3m9oWTklKbb3Wv974meRpeZ3lp1JpLVECWWNHC4vaG2XHXouQ==",
3057 |       "dev": true,
3058 |       "funding": {
3059 |         "url": "https://github.com/sponsors/sindresorhus"
3060 |       }
3061 |     },
3062 |     "node_modules/concat-map": {
3063 |       "version": "0.0.1",
3064 |       "resolved": "https://registry.npmmirror.com/concat-map/-/concat-map-0.0.1.tgz",
3065 |       "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
3066 |       "dev": true
3067 |     },
3068 |     "node_modules/convert-source-map": {
3069 |       "version": "2.0.0",
3070 |       "resolved": "https://registry.npmmirror.com/convert-source-map/-/convert-source-map-2.0.0.tgz",
3071 |       "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
3072 |       "dev": true
3073 |     },
3074 |     "node_modules/copy-descriptor": {
3075 |       "version": "0.1.1",
3076 |       "resolved": "https://registry.npmmirror.com/copy-descriptor/-/copy-descriptor-0.1.1.tgz",
3077 |       "integrity": "sha512-XgZ0pFcakEUlbwQEVNg3+QAis1FyTL3Qel9FYy8pSkQqoG3PNoT0bOCQtOXcOkur21r2Eq2kI+IE+gsmAEVlYw==",
3078 |       "dev": true,
3079 |       "engines": {
3080 |         "node": ">=0.10.0"
3081 |       }
3082 |     },
3083 |     "node_modules/create-jest": {
3084 |       "version": "29.7.0",
3085 |       "resolved": "https://registry.npmmirror.com/create-jest/-/create-jest-29.7.0.tgz",
3086 |       "integrity": "sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==",
3087 |       "dev": true,
3088 |       "dependencies": {
3089 |         "@jest/types": "^29.6.3",
3090 |         "chalk": "^4.0.0",
3091 |         "exit": "^0.1.2",
3092 |         "graceful-fs": "^4.2.9",
3093 |         "jest-config": "^29.7.0",
3094 |         "jest-util": "^29.7.0",
3095 |         "prompts": "^2.0.1"
3096 |       },
3097 |       "bin": {
3098 |         "create-jest": "bin/create-jest.js"
3099 |       },
3100 |       "engines": {
3101 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
3102 |       }
3103 |     },
3104 |     "node_modules/cross-spawn": {
3105 |       "version": "7.0.6",
3106 |       "resolved": "https://registry.npmmirror.com/cross-spawn/-/cross-spawn-7.0.6.tgz",
3107 |       "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
3108 |       "dev": true,
3109 |       "dependencies": {
3110 |         "path-key": "^3.1.0",
3111 |         "shebang-command": "^2.0.0",
3112 |         "which": "^2.0.1"
3113 |       },
3114 |       "engines": {
3115 |         "node": ">= 8"
3116 |       }
3117 |     },
3118 |     "node_modules/dayjs": {
3119 |       "version": "1.11.13",
3120 |       "resolved": "https://registry.npmmirror.com/dayjs/-/dayjs-1.11.13.tgz",
3121 |       "integrity": "sha512-oaMBel6gjolK862uaPQOVTA7q3TZhuSvuMQAAglQDOWYO9A91IrAOUJEyKVlqJlHE0vq5p5UXxzdPfMH/x6xNg==",
3122 |       "dev": true
3123 |     },
3124 |     "node_modules/debug": {
3125 |       "version": "4.3.7",
3126 |       "resolved": "https://registry.npmmirror.com/debug/-/debug-4.3.7.tgz",
3127 |       "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
3128 |       "dev": true,
3129 |       "dependencies": {
3130 |         "ms": "^2.1.3"
3131 |       },
3132 |       "engines": {
3133 |         "node": ">=6.0"
3134 |       },
3135 |       "peerDependenciesMeta": {
3136 |         "supports-color": {
3137 |           "optional": true
3138 |         }
3139 |       }
3140 |     },
3141 |     "node_modules/decode-uri-component": {
3142 |       "version": "0.2.2",
3143 |       "resolved": "https://registry.npmmirror.com/decode-uri-component/-/decode-uri-component-0.2.2.tgz",
3144 |       "integrity": "sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==",
3145 |       "dev": true,
3146 |       "engines": {
3147 |         "node": ">=0.10"
3148 |       }
3149 |     },
3150 |     "node_modules/dedent": {
3151 |       "version": "1.5.3",
3152 |       "resolved": "https://registry.npmmirror.com/dedent/-/dedent-1.5.3.tgz",
3153 |       "integrity": "sha512-NHQtfOOW68WD8lgypbLA5oT+Bt0xXJhiYvoR6SmmNXZfpzOGXwdKWmcwG8N7PwVVWV3eF/68nmD9BaJSsTBhyQ==",
3154 |       "dev": true,
3155 |       "peerDependencies": {
3156 |         "babel-plugin-macros": "^3.1.0"
3157 |       },
3158 |       "peerDependenciesMeta": {
3159 |         "babel-plugin-macros": {
3160 |           "optional": true
3161 |         }
3162 |       }
3163 |     },
3164 |     "node_modules/deep-is": {
3165 |       "version": "0.1.4",
3166 |       "resolved": "https://registry.npmmirror.com/deep-is/-/deep-is-0.1.4.tgz",
3167 |       "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
3168 |       "dev": true
3169 |     },
3170 |     "node_modules/deepmerge": {
3171 |       "version": "4.3.1",
3172 |       "resolved": "https://registry.npmmirror.com/deepmerge/-/deepmerge-4.3.1.tgz",
3173 |       "integrity": "sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==",
3174 |       "dev": true,
3175 |       "engines": {
3176 |         "node": ">=0.10.0"
3177 |       }
3178 |     },
3179 |     "node_modules/define-property": {
3180 |       "version": "2.0.2",
3181 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-2.0.2.tgz",
3182 |       "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",
3183 |       "dev": true,
3184 |       "dependencies": {
3185 |         "is-descriptor": "^1.0.2",
3186 |         "isobject": "^3.0.1"
3187 |       },
3188 |       "engines": {
3189 |         "node": ">=0.10.0"
3190 |       }
3191 |     },
3192 |     "node_modules/detect-indent": {
3193 |       "version": "6.1.0",
3194 |       "resolved": "https://registry.npmmirror.com/detect-indent/-/detect-indent-6.1.0.tgz",
3195 |       "integrity": "sha512-reYkTUJAZb9gUuZ2RvVCNhVHdg62RHnJ7WJl8ftMi4diZ6NWlciOzQN88pUhSELEwflJht4oQDv0F0BMlwaYtA==",
3196 |       "dev": true,
3197 |       "engines": {
3198 |         "node": ">=8"
3199 |       }
3200 |     },
3201 |     "node_modules/detect-libc": {
3202 |       "version": "1.0.3",
3203 |       "resolved": "https://registry.npmmirror.com/detect-libc/-/detect-libc-1.0.3.tgz",
3204 |       "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
3205 |       "dev": true,
3206 |       "optional": true,
3207 |       "bin": {
3208 |         "detect-libc": "bin/detect-libc.js"
3209 |       },
3210 |       "engines": {
3211 |         "node": ">=0.10"
3212 |       }
3213 |     },
3214 |     "node_modules/detect-newline": {
3215 |       "version": "3.1.0",
3216 |       "resolved": "https://registry.npmmirror.com/detect-newline/-/detect-newline-3.1.0.tgz",
3217 |       "integrity": "sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==",
3218 |       "dev": true,
3219 |       "engines": {
3220 |         "node": ">=8"
3221 |       }
3222 |     },
3223 |     "node_modules/diff-sequences": {
3224 |       "version": "29.6.3",
3225 |       "resolved": "https://registry.npmmirror.com/diff-sequences/-/diff-sequences-29.6.3.tgz",
3226 |       "integrity": "sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==",
3227 |       "dev": true,
3228 |       "engines": {
3229 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
3230 |       }
3231 |     },
3232 |     "node_modules/ejs": {
3233 |       "version": "3.1.10",
3234 |       "resolved": "https://registry.npmmirror.com/ejs/-/ejs-3.1.10.tgz",
3235 |       "integrity": "sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA==",
3236 |       "dev": true,
3237 |       "dependencies": {
3238 |         "jake": "^10.8.5"
3239 |       },
3240 |       "bin": {
3241 |         "ejs": "bin/cli.js"
3242 |       },
3243 |       "engines": {
3244 |         "node": ">=0.10.0"
3245 |       }
3246 |     },
3247 |     "node_modules/electron-to-chromium": {
3248 |       "version": "1.5.63",
3249 |       "resolved": "https://registry.npmmirror.com/electron-to-chromium/-/electron-to-chromium-1.5.63.tgz",
3250 |       "integrity": "sha512-ddeXKuY9BHo/mw145axlyWjlJ1UBt4WK3AlvkT7W2AbqfRQoacVoRUCF6wL3uIx/8wT9oLKXzI+rFqHHscByaA==",
3251 |       "dev": true
3252 |     },
3253 |     "node_modules/emittery": {
3254 |       "version": "0.13.1",
3255 |       "resolved": "https://registry.npmmirror.com/emittery/-/emittery-0.13.1.tgz",
3256 |       "integrity": "sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==",
3257 |       "dev": true,
3258 |       "engines": {
3259 |         "node": ">=12"
3260 |       },
3261 |       "funding": {
3262 |         "url": "https://github.com/sindresorhus/emittery?sponsor=1"
3263 |       }
3264 |     },
3265 |     "node_modules/emoji-regex": {
3266 |       "version": "10.4.0",
3267 |       "resolved": "https://registry.npmmirror.com/emoji-regex/-/emoji-regex-10.4.0.tgz",
3268 |       "integrity": "sha512-EC+0oUMY1Rqm4O6LLrgjtYDvcVYTy7chDnM4Q7030tP4Kwj3u/pR6gP9ygnp2CJMK5Gq+9Q2oqmrFJAz01DXjw==",
3269 |       "dev": true
3270 |     },
3271 |     "node_modules/end-of-stream": {
3272 |       "version": "1.4.4",
3273 |       "resolved": "https://registry.npmmirror.com/end-of-stream/-/end-of-stream-1.4.4.tgz",
3274 |       "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
3275 |       "dev": true,
3276 |       "dependencies": {
3277 |         "once": "^1.4.0"
3278 |       }
3279 |     },
3280 |     "node_modules/error-ex": {
3281 |       "version": "1.3.2",
3282 |       "resolved": "https://registry.npmmirror.com/error-ex/-/error-ex-1.3.2.tgz",
3283 |       "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",
3284 |       "dev": true,
3285 |       "dependencies": {
3286 |         "is-arrayish": "^0.2.1"
3287 |       }
3288 |     },
3289 |     "node_modules/es6-promise": {
3290 |       "version": "3.3.1",
3291 |       "resolved": "https://registry.npmmirror.com/es6-promise/-/es6-promise-3.3.1.tgz",
3292 |       "integrity": "sha512-SOp9Phqvqn7jtEUxPWdWfWoLmyt2VaJ6MpvP9Comy1MceMXqE6bxvaTu4iaxpYYPzhny28Lc+M87/c2cPK6lDg==",
3293 |       "dev": true
3294 |     },
3295 |     "node_modules/esbuild": {
3296 |       "version": "0.16.17",
3297 |       "resolved": "https://registry.npmmirror.com/esbuild/-/esbuild-0.16.17.tgz",
3298 |       "integrity": "sha512-G8LEkV0XzDMNwXKgM0Jwu3nY3lSTwSGY6XbxM9cr9+s0T/qSV1q1JVPBGzm3dcjhCic9+emZDmMffkwgPeOeLg==",
3299 |       "dev": true,
3300 |       "hasInstallScript": true,
3301 |       "bin": {
3302 |         "esbuild": "bin/esbuild"
3303 |       },
3304 |       "engines": {
3305 |         "node": ">=12"
3306 |       },
3307 |       "optionalDependencies": {
3308 |         "@esbuild/android-arm": "0.16.17",
3309 |         "@esbuild/android-arm64": "0.16.17",
3310 |         "@esbuild/android-x64": "0.16.17",
3311 |         "@esbuild/darwin-arm64": "0.16.17",
3312 |         "@esbuild/darwin-x64": "0.16.17",
3313 |         "@esbuild/freebsd-arm64": "0.16.17",
3314 |         "@esbuild/freebsd-x64": "0.16.17",
3315 |         "@esbuild/linux-arm": "0.16.17",
3316 |         "@esbuild/linux-arm64": "0.16.17",
3317 |         "@esbuild/linux-ia32": "0.16.17",
3318 |         "@esbuild/linux-loong64": "0.16.17",
3319 |         "@esbuild/linux-mips64el": "0.16.17",
3320 |         "@esbuild/linux-ppc64": "0.16.17",
3321 |         "@esbuild/linux-riscv64": "0.16.17",
3322 |         "@esbuild/linux-s390x": "0.16.17",
3323 |         "@esbuild/linux-x64": "0.16.17",
3324 |         "@esbuild/netbsd-x64": "0.16.17",
3325 |         "@esbuild/openbsd-x64": "0.16.17",
3326 |         "@esbuild/sunos-x64": "0.16.17",
3327 |         "@esbuild/win32-arm64": "0.16.17",
3328 |         "@esbuild/win32-ia32": "0.16.17",
3329 |         "@esbuild/win32-x64": "0.16.17"
3330 |       }
3331 |     },
3332 |     "node_modules/esbuild-jest": {
3333 |       "version": "0.5.0",
3334 |       "resolved": "https://registry.npmmirror.com/esbuild-jest/-/esbuild-jest-0.5.0.tgz",
3335 |       "integrity": "sha512-AMZZCdEpXfNVOIDvURlqYyHwC8qC1/BFjgsrOiSL1eyiIArVtHL8YAC83Shhn16cYYoAWEW17yZn0W/RJKJKHQ==",
3336 |       "dev": true,
3337 |       "dependencies": {
3338 |         "@babel/core": "^7.12.17",
3339 |         "@babel/plugin-transform-modules-commonjs": "^7.12.13",
3340 |         "babel-jest": "^26.6.3"
3341 |       },
3342 |       "peerDependencies": {
3343 |         "esbuild": ">=0.8.50"
3344 |       }
3345 |     },
3346 |     "node_modules/esbuild-jest/node_modules/@jest/transform": {
3347 |       "version": "26.6.2",
3348 |       "resolved": "https://registry.npmmirror.com/@jest/transform/-/transform-26.6.2.tgz",
3349 |       "integrity": "sha512-E9JjhUgNzvuQ+vVAL21vlyfy12gP0GhazGgJC4h6qUt1jSdUXGWJ1wfu/X7Sd8etSgxV4ovT1pb9v5D6QW4XgA==",
3350 |       "dev": true,
3351 |       "dependencies": {
3352 |         "@babel/core": "^7.1.0",
3353 |         "@jest/types": "^26.6.2",
3354 |         "babel-plugin-istanbul": "^6.0.0",
3355 |         "chalk": "^4.0.0",
3356 |         "convert-source-map": "^1.4.0",
3357 |         "fast-json-stable-stringify": "^2.0.0",
3358 |         "graceful-fs": "^4.2.4",
3359 |         "jest-haste-map": "^26.6.2",
3360 |         "jest-regex-util": "^26.0.0",
3361 |         "jest-util": "^26.6.2",
3362 |         "micromatch": "^4.0.2",
3363 |         "pirates": "^4.0.1",
3364 |         "slash": "^3.0.0",
3365 |         "source-map": "^0.6.1",
3366 |         "write-file-atomic": "^3.0.0"
3367 |       },
3368 |       "engines": {
3369 |         "node": ">= 10.14.2"
3370 |       }
3371 |     },
3372 |     "node_modules/esbuild-jest/node_modules/@jest/types": {
3373 |       "version": "26.6.2",
3374 |       "resolved": "https://registry.npmmirror.com/@jest/types/-/types-26.6.2.tgz",
3375 |       "integrity": "sha512-fC6QCp7Sc5sX6g8Tvbmj4XUTbyrik0akgRy03yjXbQaBWWNWGE7SGtJk98m0N8nzegD/7SggrUlivxo5ax4KWQ==",
3376 |       "dev": true,
3377 |       "dependencies": {
3378 |         "@types/istanbul-lib-coverage": "^2.0.0",
3379 |         "@types/istanbul-reports": "^3.0.0",
3380 |         "@types/node": "*",
3381 |         "@types/yargs": "^15.0.0",
3382 |         "chalk": "^4.0.0"
3383 |       },
3384 |       "engines": {
3385 |         "node": ">= 10.14.2"
3386 |       }
3387 |     },
3388 |     "node_modules/esbuild-jest/node_modules/@types/yargs": {
3389 |       "version": "15.0.19",
3390 |       "resolved": "https://registry.npmmirror.com/@types/yargs/-/yargs-15.0.19.tgz",
3391 |       "integrity": "sha512-2XUaGVmyQjgyAZldf0D0c14vvo/yv0MhQBSTJcejMMaitsn3nxCB6TmH4G0ZQf+uxROOa9mpanoSm8h6SG/1ZA==",
3392 |       "dev": true,
3393 |       "dependencies": {
3394 |         "@types/yargs-parser": "*"
3395 |       }
3396 |     },
3397 |     "node_modules/esbuild-jest/node_modules/babel-jest": {
3398 |       "version": "26.6.3",
3399 |       "resolved": "https://registry.npmmirror.com/babel-jest/-/babel-jest-26.6.3.tgz",
3400 |       "integrity": "sha512-pl4Q+GAVOHwvjrck6jKjvmGhnO3jHX/xuB9d27f+EJZ/6k+6nMuPjorrYp7s++bKKdANwzElBWnLWaObvTnaZA==",
3401 |       "dev": true,
3402 |       "dependencies": {
3403 |         "@jest/transform": "^26.6.2",
3404 |         "@jest/types": "^26.6.2",
3405 |         "@types/babel__core": "^7.1.7",
3406 |         "babel-plugin-istanbul": "^6.0.0",
3407 |         "babel-preset-jest": "^26.6.2",
3408 |         "chalk": "^4.0.0",
3409 |         "graceful-fs": "^4.2.4",
3410 |         "slash": "^3.0.0"
3411 |       },
3412 |       "engines": {
3413 |         "node": ">= 10.14.2"
3414 |       },
3415 |       "peerDependencies": {
3416 |         "@babel/core": "^7.0.0"
3417 |       }
3418 |     },
3419 |     "node_modules/esbuild-jest/node_modules/babel-plugin-jest-hoist": {
3420 |       "version": "26.6.2",
3421 |       "resolved": "https://registry.npmmirror.com/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-26.6.2.tgz",
3422 |       "integrity": "sha512-PO9t0697lNTmcEHH69mdtYiOIkkOlj9fySqfO3K1eCcdISevLAE0xY59VLLUj0SoiPiTX/JU2CYFpILydUa5Lw==",
3423 |       "dev": true,
3424 |       "dependencies": {
3425 |         "@babel/template": "^7.3.3",
3426 |         "@babel/types": "^7.3.3",
3427 |         "@types/babel__core": "^7.0.0",
3428 |         "@types/babel__traverse": "^7.0.6"
3429 |       },
3430 |       "engines": {
3431 |         "node": ">= 10.14.2"
3432 |       }
3433 |     },
3434 |     "node_modules/esbuild-jest/node_modules/babel-preset-jest": {
3435 |       "version": "26.6.2",
3436 |       "resolved": "https://registry.npmmirror.com/babel-preset-jest/-/babel-preset-jest-26.6.2.tgz",
3437 |       "integrity": "sha512-YvdtlVm9t3k777c5NPQIv6cxFFFapys25HiUmuSgHwIZhfifweR5c5Sf5nwE3MAbfu327CYSvps8Yx6ANLyleQ==",
3438 |       "dev": true,
3439 |       "dependencies": {
3440 |         "babel-plugin-jest-hoist": "^26.6.2",
3441 |         "babel-preset-current-node-syntax": "^1.0.0"
3442 |       },
3443 |       "engines": {
3444 |         "node": ">= 10.14.2"
3445 |       },
3446 |       "peerDependencies": {
3447 |         "@babel/core": "^7.0.0"
3448 |       }
3449 |     },
3450 |     "node_modules/esbuild-jest/node_modules/convert-source-map": {
3451 |       "version": "1.9.0",
3452 |       "resolved": "https://registry.npmmirror.com/convert-source-map/-/convert-source-map-1.9.0.tgz",
3453 |       "integrity": "sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==",
3454 |       "dev": true
3455 |     },
3456 |     "node_modules/esbuild-jest/node_modules/jest-haste-map": {
3457 |       "version": "26.6.2",
3458 |       "resolved": "https://registry.npmmirror.com/jest-haste-map/-/jest-haste-map-26.6.2.tgz",
3459 |       "integrity": "sha512-easWIJXIw71B2RdR8kgqpjQrbMRWQBgiBwXYEhtGUTaX+doCjBheluShdDMeR8IMfJiTqH4+zfhtg29apJf/8w==",
3460 |       "dev": true,
3461 |       "dependencies": {
3462 |         "@jest/types": "^26.6.2",
3463 |         "@types/graceful-fs": "^4.1.2",
3464 |         "@types/node": "*",
3465 |         "anymatch": "^3.0.3",
3466 |         "fb-watchman": "^2.0.0",
3467 |         "graceful-fs": "^4.2.4",
3468 |         "jest-regex-util": "^26.0.0",
3469 |         "jest-serializer": "^26.6.2",
3470 |         "jest-util": "^26.6.2",
3471 |         "jest-worker": "^26.6.2",
3472 |         "micromatch": "^4.0.2",
3473 |         "sane": "^4.0.3",
3474 |         "walker": "^1.0.7"
3475 |       },
3476 |       "engines": {
3477 |         "node": ">= 10.14.2"
3478 |       },
3479 |       "optionalDependencies": {
3480 |         "fsevents": "^2.1.2"
3481 |       }
3482 |     },
3483 |     "node_modules/esbuild-jest/node_modules/jest-regex-util": {
3484 |       "version": "26.0.0",
3485 |       "resolved": "https://registry.npmmirror.com/jest-regex-util/-/jest-regex-util-26.0.0.tgz",
3486 |       "integrity": "sha512-Gv3ZIs/nA48/Zvjrl34bf+oD76JHiGDUxNOVgUjh3j890sblXryjY4rss71fPtD/njchl6PSE2hIhvyWa1eT0A==",
3487 |       "dev": true,
3488 |       "engines": {
3489 |         "node": ">= 10.14.2"
3490 |       }
3491 |     },
3492 |     "node_modules/esbuild-jest/node_modules/jest-util": {
3493 |       "version": "26.6.2",
3494 |       "resolved": "https://registry.npmmirror.com/jest-util/-/jest-util-26.6.2.tgz",
3495 |       "integrity": "sha512-MDW0fKfsn0OI7MS7Euz6h8HNDXVQ0gaM9uW6RjfDmd1DAFcaxX9OqIakHIqhbnmF08Cf2DLDG+ulq8YQQ0Lp0Q==",
3496 |       "dev": true,
3497 |       "dependencies": {
3498 |         "@jest/types": "^26.6.2",
3499 |         "@types/node": "*",
3500 |         "chalk": "^4.0.0",
3501 |         "graceful-fs": "^4.2.4",
3502 |         "is-ci": "^2.0.0",
3503 |         "micromatch": "^4.0.2"
3504 |       },
3505 |       "engines": {
3506 |         "node": ">= 10.14.2"
3507 |       }
3508 |     },
3509 |     "node_modules/esbuild-jest/node_modules/jest-worker": {
3510 |       "version": "26.6.2",
3511 |       "resolved": "https://registry.npmmirror.com/jest-worker/-/jest-worker-26.6.2.tgz",
3512 |       "integrity": "sha512-KWYVV1c4i+jbMpaBC+U++4Va0cp8OisU185o73T1vo99hqi7w8tSJfUXYswwqqrjzwxa6KpRK54WhPvwf5w6PQ==",
3513 |       "dev": true,
3514 |       "dependencies": {
3515 |         "@types/node": "*",
3516 |         "merge-stream": "^2.0.0",
3517 |         "supports-color": "^7.0.0"
3518 |       },
3519 |       "engines": {
3520 |         "node": ">= 10.13.0"
3521 |       }
3522 |     },
3523 |     "node_modules/esbuild-jest/node_modules/write-file-atomic": {
3524 |       "version": "3.0.3",
3525 |       "resolved": "https://registry.npmmirror.com/write-file-atomic/-/write-file-atomic-3.0.3.tgz",
3526 |       "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==",
3527 |       "dev": true,
3528 |       "dependencies": {
3529 |         "imurmurhash": "^0.1.4",
3530 |         "is-typedarray": "^1.0.0",
3531 |         "signal-exit": "^3.0.2",
3532 |         "typedarray-to-buffer": "^3.1.5"
3533 |       }
3534 |     },
3535 |     "node_modules/esbuild-plugin-replace": {
3536 |       "version": "1.4.0",
3537 |       "resolved": "https://registry.npmmirror.com/esbuild-plugin-replace/-/esbuild-plugin-replace-1.4.0.tgz",
3538 |       "integrity": "sha512-lP3ZAyzyRa5JXoOd59lJbRKNObtK8pJ/RO7o6vdjwLi71GfbL32NR22ZuS7/cLZkr10/L1lutoLma8E4DLngYg==",
3539 |       "dev": true,
3540 |       "dependencies": {
3541 |         "magic-string": "^0.25.7"
3542 |       }
3543 |     },
3544 |     "node_modules/esbuild-svelte": {
3545 |       "version": "0.7.4",
3546 |       "resolved": "https://registry.npmmirror.com/esbuild-svelte/-/esbuild-svelte-0.7.4.tgz",
3547 |       "integrity": "sha512-d4Vafj5nFTmZPXznW6YL3ZHXiWwNiPLcE8yfq/5oE8nbyrZlIB92ZCVh3JMbMje+vCb4jnKdH+WoV2sLZRdOJA==",
3548 |       "dev": true,
3549 |       "engines": {
3550 |         "node": ">=14"
3551 |       },
3552 |       "peerDependencies": {
3553 |         "esbuild": ">=0.9.6",
3554 |         "svelte": ">=3.43.0 <5"
3555 |       }
3556 |     },
3557 |     "node_modules/escalade": {
3558 |       "version": "3.2.0",
3559 |       "resolved": "https://registry.npmmirror.com/escalade/-/escalade-3.2.0.tgz",
3560 |       "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
3561 |       "dev": true,
3562 |       "engines": {
3563 |         "node": ">=6"
3564 |       }
3565 |     },
3566 |     "node_modules/escape-string-regexp": {
3567 |       "version": "4.0.0",
3568 |       "resolved": "https://registry.npmmirror.com/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
3569 |       "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
3570 |       "dev": true,
3571 |       "engines": {
3572 |         "node": ">=10"
3573 |       },
3574 |       "funding": {
3575 |         "url": "https://github.com/sponsors/sindresorhus"
3576 |       }
3577 |     },
3578 |     "node_modules/eslint": {
3579 |       "version": "9.15.0",
3580 |       "resolved": "https://registry.npmmirror.com/eslint/-/eslint-9.15.0.tgz",
3581 |       "integrity": "sha512-7CrWySmIibCgT1Os28lUU6upBshZ+GxybLOrmRzi08kS8MBuO8QA7pXEgYgY5W8vK3e74xv0lpjo9DbaGU9Rkw==",
3582 |       "dev": true,
3583 |       "dependencies": {
3584 |         "@eslint-community/eslint-utils": "^4.2.0",
3585 |         "@eslint-community/regexpp": "^4.12.1",
3586 |         "@eslint/config-array": "^0.19.0",
3587 |         "@eslint/core": "^0.9.0",
3588 |         "@eslint/eslintrc": "^3.2.0",
3589 |         "@eslint/js": "9.15.0",
3590 |         "@eslint/plugin-kit": "^0.2.3",
3591 |         "@humanfs/node": "^0.16.6",
3592 |         "@humanwhocodes/module-importer": "^1.0.1",
3593 |         "@humanwhocodes/retry": "^0.4.1",
3594 |         "@types/estree": "^1.0.6",
3595 |         "@types/json-schema": "^7.0.15",
3596 |         "ajv": "^6.12.4",
3597 |         "chalk": "^4.0.0",
3598 |         "cross-spawn": "^7.0.5",
3599 |         "debug": "^4.3.2",
3600 |         "escape-string-regexp": "^4.0.0",
3601 |         "eslint-scope": "^8.2.0",
3602 |         "eslint-visitor-keys": "^4.2.0",
3603 |         "espree": "^10.3.0",
3604 |         "esquery": "^1.5.0",
3605 |         "esutils": "^2.0.2",
3606 |         "fast-deep-equal": "^3.1.3",
3607 |         "file-entry-cache": "^8.0.0",
3608 |         "find-up": "^5.0.0",
3609 |         "glob-parent": "^6.0.2",
3610 |         "ignore": "^5.2.0",
3611 |         "imurmurhash": "^0.1.4",
3612 |         "is-glob": "^4.0.0",
3613 |         "json-stable-stringify-without-jsonify": "^1.0.1",
3614 |         "lodash.merge": "^4.6.2",
3615 |         "minimatch": "^3.1.2",
3616 |         "natural-compare": "^1.4.0",
3617 |         "optionator": "^0.9.3"
3618 |       },
3619 |       "bin": {
3620 |         "eslint": "bin/eslint.js"
3621 |       },
3622 |       "engines": {
3623 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3624 |       },
3625 |       "funding": {
3626 |         "url": "https://eslint.org/donate"
3627 |       },
3628 |       "peerDependencies": {
3629 |         "jiti": "*"
3630 |       },
3631 |       "peerDependenciesMeta": {
3632 |         "jiti": {
3633 |           "optional": true
3634 |         }
3635 |       }
3636 |     },
3637 |     "node_modules/eslint-plugin-tsdoc": {
3638 |       "version": "0.4.0",
3639 |       "resolved": "https://registry.npmmirror.com/eslint-plugin-tsdoc/-/eslint-plugin-tsdoc-0.4.0.tgz",
3640 |       "integrity": "sha512-MT/8b4aKLdDClnS8mP3R/JNjg29i0Oyqd/0ym6NnQf+gfKbJJ4ZcSh2Bs1H0YiUMTBwww5JwXGTWot/RwyJ7aQ==",
3641 |       "dev": true,
3642 |       "dependencies": {
3643 |         "@microsoft/tsdoc": "0.15.1",
3644 |         "@microsoft/tsdoc-config": "0.17.1"
3645 |       }
3646 |     },
3647 |     "node_modules/eslint-scope": {
3648 |       "version": "8.2.0",
3649 |       "resolved": "https://registry.npmmirror.com/eslint-scope/-/eslint-scope-8.2.0.tgz",
3650 |       "integrity": "sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==",
3651 |       "dev": true,
3652 |       "dependencies": {
3653 |         "esrecurse": "^4.3.0",
3654 |         "estraverse": "^5.2.0"
3655 |       },
3656 |       "engines": {
3657 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3658 |       },
3659 |       "funding": {
3660 |         "url": "https://opencollective.com/eslint"
3661 |       }
3662 |     },
3663 |     "node_modules/eslint-visitor-keys": {
3664 |       "version": "3.4.3",
3665 |       "resolved": "https://registry.npmmirror.com/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
3666 |       "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
3667 |       "dev": true,
3668 |       "engines": {
3669 |         "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
3670 |       },
3671 |       "funding": {
3672 |         "url": "https://opencollective.com/eslint"
3673 |       }
3674 |     },
3675 |     "node_modules/eslint/node_modules/eslint-visitor-keys": {
3676 |       "version": "4.2.0",
3677 |       "resolved": "https://registry.npmmirror.com/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
3678 |       "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
3679 |       "dev": true,
3680 |       "engines": {
3681 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3682 |       },
3683 |       "funding": {
3684 |         "url": "https://opencollective.com/eslint"
3685 |       }
3686 |     },
3687 |     "node_modules/eslint/node_modules/find-up": {
3688 |       "version": "5.0.0",
3689 |       "resolved": "https://registry.npmmirror.com/find-up/-/find-up-5.0.0.tgz",
3690 |       "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
3691 |       "dev": true,
3692 |       "dependencies": {
3693 |         "locate-path": "^6.0.0",
3694 |         "path-exists": "^4.0.0"
3695 |       },
3696 |       "engines": {
3697 |         "node": ">=10"
3698 |       },
3699 |       "funding": {
3700 |         "url": "https://github.com/sponsors/sindresorhus"
3701 |       }
3702 |     },
3703 |     "node_modules/eslint/node_modules/locate-path": {
3704 |       "version": "6.0.0",
3705 |       "resolved": "https://registry.npmmirror.com/locate-path/-/locate-path-6.0.0.tgz",
3706 |       "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
3707 |       "dev": true,
3708 |       "dependencies": {
3709 |         "p-locate": "^5.0.0"
3710 |       },
3711 |       "engines": {
3712 |         "node": ">=10"
3713 |       },
3714 |       "funding": {
3715 |         "url": "https://github.com/sponsors/sindresorhus"
3716 |       }
3717 |     },
3718 |     "node_modules/eslint/node_modules/p-locate": {
3719 |       "version": "5.0.0",
3720 |       "resolved": "https://registry.npmmirror.com/p-locate/-/p-locate-5.0.0.tgz",
3721 |       "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
3722 |       "dev": true,
3723 |       "dependencies": {
3724 |         "p-limit": "^3.0.2"
3725 |       },
3726 |       "engines": {
3727 |         "node": ">=10"
3728 |       },
3729 |       "funding": {
3730 |         "url": "https://github.com/sponsors/sindresorhus"
3731 |       }
3732 |     },
3733 |     "node_modules/espree": {
3734 |       "version": "10.3.0",
3735 |       "resolved": "https://registry.npmmirror.com/espree/-/espree-10.3.0.tgz",
3736 |       "integrity": "sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==",
3737 |       "dev": true,
3738 |       "dependencies": {
3739 |         "acorn": "^8.14.0",
3740 |         "acorn-jsx": "^5.3.2",
3741 |         "eslint-visitor-keys": "^4.2.0"
3742 |       },
3743 |       "engines": {
3744 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3745 |       },
3746 |       "funding": {
3747 |         "url": "https://opencollective.com/eslint"
3748 |       }
3749 |     },
3750 |     "node_modules/espree/node_modules/eslint-visitor-keys": {
3751 |       "version": "4.2.0",
3752 |       "resolved": "https://registry.npmmirror.com/eslint-visitor-keys/-/eslint-visitor-keys-4.2.0.tgz",
3753 |       "integrity": "sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==",
3754 |       "dev": true,
3755 |       "engines": {
3756 |         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
3757 |       },
3758 |       "funding": {
3759 |         "url": "https://opencollective.com/eslint"
3760 |       }
3761 |     },
3762 |     "node_modules/esprima": {
3763 |       "version": "4.0.1",
3764 |       "resolved": "https://registry.npmmirror.com/esprima/-/esprima-4.0.1.tgz",
3765 |       "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
3766 |       "dev": true,
3767 |       "bin": {
3768 |         "esparse": "bin/esparse.js",
3769 |         "esvalidate": "bin/esvalidate.js"
3770 |       },
3771 |       "engines": {
3772 |         "node": ">=4"
3773 |       }
3774 |     },
3775 |     "node_modules/esquery": {
3776 |       "version": "1.6.0",
3777 |       "resolved": "https://registry.npmmirror.com/esquery/-/esquery-1.6.0.tgz",
3778 |       "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
3779 |       "dev": true,
3780 |       "dependencies": {
3781 |         "estraverse": "^5.1.0"
3782 |       },
3783 |       "engines": {
3784 |         "node": ">=0.10"
3785 |       }
3786 |     },
3787 |     "node_modules/esrecurse": {
3788 |       "version": "4.3.0",
3789 |       "resolved": "https://registry.npmmirror.com/esrecurse/-/esrecurse-4.3.0.tgz",
3790 |       "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
3791 |       "dev": true,
3792 |       "dependencies": {
3793 |         "estraverse": "^5.2.0"
3794 |       },
3795 |       "engines": {
3796 |         "node": ">=4.0"
3797 |       }
3798 |     },
3799 |     "node_modules/estraverse": {
3800 |       "version": "5.3.0",
3801 |       "resolved": "https://registry.npmmirror.com/estraverse/-/estraverse-5.3.0.tgz",
3802 |       "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
3803 |       "dev": true,
3804 |       "engines": {
3805 |         "node": ">=4.0"
3806 |       }
3807 |     },
3808 |     "node_modules/esutils": {
3809 |       "version": "2.0.3",
3810 |       "resolved": "https://registry.npmmirror.com/esutils/-/esutils-2.0.3.tgz",
3811 |       "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
3812 |       "dev": true,
3813 |       "engines": {
3814 |         "node": ">=0.10.0"
3815 |       }
3816 |     },
3817 |     "node_modules/exec-sh": {
3818 |       "version": "0.3.6",
3819 |       "resolved": "https://registry.npmmirror.com/exec-sh/-/exec-sh-0.3.6.tgz",
3820 |       "integrity": "sha512-nQn+hI3yp+oD0huYhKwvYI32+JFeq+XkNcD1GAo3Y/MjxsfVGmrrzrnzjWiNY6f+pUCP440fThsFh5gZrRAU/w==",
3821 |       "dev": true
3822 |     },
3823 |     "node_modules/execa": {
3824 |       "version": "5.1.1",
3825 |       "resolved": "https://registry.npmmirror.com/execa/-/execa-5.1.1.tgz",
3826 |       "integrity": "sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==",
3827 |       "dev": true,
3828 |       "dependencies": {
3829 |         "cross-spawn": "^7.0.3",
3830 |         "get-stream": "^6.0.0",
3831 |         "human-signals": "^2.1.0",
3832 |         "is-stream": "^2.0.0",
3833 |         "merge-stream": "^2.0.0",
3834 |         "npm-run-path": "^4.0.1",
3835 |         "onetime": "^5.1.2",
3836 |         "signal-exit": "^3.0.3",
3837 |         "strip-final-newline": "^2.0.0"
3838 |       },
3839 |       "engines": {
3840 |         "node": ">=10"
3841 |       },
3842 |       "funding": {
3843 |         "url": "https://github.com/sindresorhus/execa?sponsor=1"
3844 |       }
3845 |     },
3846 |     "node_modules/exit": {
3847 |       "version": "0.1.2",
3848 |       "resolved": "https://registry.npmmirror.com/exit/-/exit-0.1.2.tgz",
3849 |       "integrity": "sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==",
3850 |       "dev": true,
3851 |       "engines": {
3852 |         "node": ">= 0.8.0"
3853 |       }
3854 |     },
3855 |     "node_modules/expand-brackets": {
3856 |       "version": "2.1.4",
3857 |       "resolved": "https://registry.npmmirror.com/expand-brackets/-/expand-brackets-2.1.4.tgz",
3858 |       "integrity": "sha512-w/ozOKR9Obk3qoWeY/WDi6MFta9AoMR+zud60mdnbniMcBxRuFJyDt2LdX/14A1UABeqk+Uk+LDfUpvoGKppZA==",
3859 |       "dev": true,
3860 |       "dependencies": {
3861 |         "debug": "^2.3.3",
3862 |         "define-property": "^0.2.5",
3863 |         "extend-shallow": "^2.0.1",
3864 |         "posix-character-classes": "^0.1.0",
3865 |         "regex-not": "^1.0.0",
3866 |         "snapdragon": "^0.8.1",
3867 |         "to-regex": "^3.0.1"
3868 |       },
3869 |       "engines": {
3870 |         "node": ">=0.10.0"
3871 |       }
3872 |     },
3873 |     "node_modules/expand-brackets/node_modules/debug": {
3874 |       "version": "2.6.9",
3875 |       "resolved": "https://registry.npmmirror.com/debug/-/debug-2.6.9.tgz",
3876 |       "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
3877 |       "dev": true,
3878 |       "dependencies": {
3879 |         "ms": "2.0.0"
3880 |       }
3881 |     },
3882 |     "node_modules/expand-brackets/node_modules/define-property": {
3883 |       "version": "0.2.5",
3884 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-0.2.5.tgz",
3885 |       "integrity": "sha512-Rr7ADjQZenceVOAKop6ALkkRAmH1A4Gx9hV/7ZujPUN2rkATqFO0JZLZInbAjpZYoJ1gUx8MRMQVkYemcbMSTA==",
3886 |       "dev": true,
3887 |       "dependencies": {
3888 |         "is-descriptor": "^0.1.0"
3889 |       },
3890 |       "engines": {
3891 |         "node": ">=0.10.0"
3892 |       }
3893 |     },
3894 |     "node_modules/expand-brackets/node_modules/extend-shallow": {
3895 |       "version": "2.0.1",
3896 |       "resolved": "https://registry.npmmirror.com/extend-shallow/-/extend-shallow-2.0.1.tgz",
3897 |       "integrity": "sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==",
3898 |       "dev": true,
3899 |       "dependencies": {
3900 |         "is-extendable": "^0.1.0"
3901 |       },
3902 |       "engines": {
3903 |         "node": ">=0.10.0"
3904 |       }
3905 |     },
3906 |     "node_modules/expand-brackets/node_modules/is-descriptor": {
3907 |       "version": "0.1.7",
3908 |       "resolved": "https://registry.npmmirror.com/is-descriptor/-/is-descriptor-0.1.7.tgz",
3909 |       "integrity": "sha512-C3grZTvObeN1xud4cRWl366OMXZTj0+HGyk4hvfpx4ZHt1Pb60ANSXqCK7pdOTeUQpRzECBSTphqvD7U+l22Eg==",
3910 |       "dev": true,
3911 |       "dependencies": {
3912 |         "is-accessor-descriptor": "^1.0.1",
3913 |         "is-data-descriptor": "^1.0.1"
3914 |       },
3915 |       "engines": {
3916 |         "node": ">= 0.4"
3917 |       }
3918 |     },
3919 |     "node_modules/expand-brackets/node_modules/is-extendable": {
3920 |       "version": "0.1.1",
3921 |       "resolved": "https://registry.npmmirror.com/is-extendable/-/is-extendable-0.1.1.tgz",
3922 |       "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
3923 |       "dev": true,
3924 |       "engines": {
3925 |         "node": ">=0.10.0"
3926 |       }
3927 |     },
3928 |     "node_modules/expand-brackets/node_modules/ms": {
3929 |       "version": "2.0.0",
3930 |       "resolved": "https://registry.npmmirror.com/ms/-/ms-2.0.0.tgz",
3931 |       "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
3932 |       "dev": true
3933 |     },
3934 |     "node_modules/expect": {
3935 |       "version": "29.7.0",
3936 |       "resolved": "https://registry.npmmirror.com/expect/-/expect-29.7.0.tgz",
3937 |       "integrity": "sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==",
3938 |       "dev": true,
3939 |       "dependencies": {
3940 |         "@jest/expect-utils": "^29.7.0",
3941 |         "jest-get-type": "^29.6.3",
3942 |         "jest-matcher-utils": "^29.7.0",
3943 |         "jest-message-util": "^29.7.0",
3944 |         "jest-util": "^29.7.0"
3945 |       },
3946 |       "engines": {
3947 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
3948 |       }
3949 |     },
3950 |     "node_modules/extend-shallow": {
3951 |       "version": "3.0.2",
3952 |       "resolved": "https://registry.npmmirror.com/extend-shallow/-/extend-shallow-3.0.2.tgz",
3953 |       "integrity": "sha512-BwY5b5Ql4+qZoefgMj2NUmx+tehVTH/Kf4k1ZEtOHNFcm2wSxMRo992l6X3TIgni2eZVTZ85xMOjF31fwZAj6Q==",
3954 |       "dev": true,
3955 |       "dependencies": {
3956 |         "assign-symbols": "^1.0.0",
3957 |         "is-extendable": "^1.0.1"
3958 |       },
3959 |       "engines": {
3960 |         "node": ">=0.10.0"
3961 |       }
3962 |     },
3963 |     "node_modules/extglob": {
3964 |       "version": "2.0.4",
3965 |       "resolved": "https://registry.npmmirror.com/extglob/-/extglob-2.0.4.tgz",
3966 |       "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",
3967 |       "dev": true,
3968 |       "dependencies": {
3969 |         "array-unique": "^0.3.2",
3970 |         "define-property": "^1.0.0",
3971 |         "expand-brackets": "^2.1.4",
3972 |         "extend-shallow": "^2.0.1",
3973 |         "fragment-cache": "^0.2.1",
3974 |         "regex-not": "^1.0.0",
3975 |         "snapdragon": "^0.8.1",
3976 |         "to-regex": "^3.0.1"
3977 |       },
3978 |       "engines": {
3979 |         "node": ">=0.10.0"
3980 |       }
3981 |     },
3982 |     "node_modules/extglob/node_modules/define-property": {
3983 |       "version": "1.0.0",
3984 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-1.0.0.tgz",
3985 |       "integrity": "sha512-cZTYKFWspt9jZsMscWo8sc/5lbPC9Q0N5nBLgb+Yd915iL3udB1uFgS3B8YCx66UVHq018DAVFoee7x+gxggeA==",
3986 |       "dev": true,
3987 |       "dependencies": {
3988 |         "is-descriptor": "^1.0.0"
3989 |       },
3990 |       "engines": {
3991 |         "node": ">=0.10.0"
3992 |       }
3993 |     },
3994 |     "node_modules/extglob/node_modules/extend-shallow": {
3995 |       "version": "2.0.1",
3996 |       "resolved": "https://registry.npmmirror.com/extend-shallow/-/extend-shallow-2.0.1.tgz",
3997 |       "integrity": "sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==",
3998 |       "dev": true,
3999 |       "dependencies": {
4000 |         "is-extendable": "^0.1.0"
4001 |       },
4002 |       "engines": {
4003 |         "node": ">=0.10.0"
4004 |       }
4005 |     },
4006 |     "node_modules/extglob/node_modules/is-extendable": {
4007 |       "version": "0.1.1",
4008 |       "resolved": "https://registry.npmmirror.com/is-extendable/-/is-extendable-0.1.1.tgz",
4009 |       "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
4010 |       "dev": true,
4011 |       "engines": {
4012 |         "node": ">=0.10.0"
4013 |       }
4014 |     },
4015 |     "node_modules/fast-deep-equal": {
4016 |       "version": "3.1.3",
4017 |       "resolved": "https://registry.npmmirror.com/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
4018 |       "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
4019 |       "dev": true
4020 |     },
4021 |     "node_modules/fast-glob": {
4022 |       "version": "3.3.2",
4023 |       "resolved": "https://registry.npmmirror.com/fast-glob/-/fast-glob-3.3.2.tgz",
4024 |       "integrity": "sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==",
4025 |       "dev": true,
4026 |       "dependencies": {
4027 |         "@nodelib/fs.stat": "^2.0.2",
4028 |         "@nodelib/fs.walk": "^1.2.3",
4029 |         "glob-parent": "^5.1.2",
4030 |         "merge2": "^1.3.0",
4031 |         "micromatch": "^4.0.4"
4032 |       },
4033 |       "engines": {
4034 |         "node": ">=8.6.0"
4035 |       }
4036 |     },
4037 |     "node_modules/fast-glob/node_modules/glob-parent": {
4038 |       "version": "5.1.2",
4039 |       "resolved": "https://registry.npmmirror.com/glob-parent/-/glob-parent-5.1.2.tgz",
4040 |       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
4041 |       "dev": true,
4042 |       "dependencies": {
4043 |         "is-glob": "^4.0.1"
4044 |       },
4045 |       "engines": {
4046 |         "node": ">= 6"
4047 |       }
4048 |     },
4049 |     "node_modules/fast-json-stable-stringify": {
4050 |       "version": "2.1.0",
4051 |       "resolved": "https://registry.npmmirror.com/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
4052 |       "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
4053 |       "dev": true
4054 |     },
4055 |     "node_modules/fast-levenshtein": {
4056 |       "version": "2.0.6",
4057 |       "resolved": "https://registry.npmmirror.com/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
4058 |       "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
4059 |       "dev": true
4060 |     },
4061 |     "node_modules/fastq": {
4062 |       "version": "1.17.1",
4063 |       "resolved": "https://registry.npmmirror.com/fastq/-/fastq-1.17.1.tgz",
4064 |       "integrity": "sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==",
4065 |       "dev": true,
4066 |       "dependencies": {
4067 |         "reusify": "^1.0.4"
4068 |       }
4069 |     },
4070 |     "node_modules/fb-watchman": {
4071 |       "version": "2.0.2",
4072 |       "resolved": "https://registry.npmmirror.com/fb-watchman/-/fb-watchman-2.0.2.tgz",
4073 |       "integrity": "sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==",
4074 |       "dev": true,
4075 |       "dependencies": {
4076 |         "bser": "2.1.1"
4077 |       }
4078 |     },
4079 |     "node_modules/file-entry-cache": {
4080 |       "version": "8.0.0",
4081 |       "resolved": "https://registry.npmmirror.com/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
4082 |       "integrity": "sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==",
4083 |       "dev": true,
4084 |       "dependencies": {
4085 |         "flat-cache": "^4.0.0"
4086 |       },
4087 |       "engines": {
4088 |         "node": ">=16.0.0"
4089 |       }
4090 |     },
4091 |     "node_modules/filelist": {
4092 |       "version": "1.0.4",
4093 |       "resolved": "https://registry.npmmirror.com/filelist/-/filelist-1.0.4.tgz",
4094 |       "integrity": "sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q==",
4095 |       "dev": true,
4096 |       "dependencies": {
4097 |         "minimatch": "^5.0.1"
4098 |       }
4099 |     },
4100 |     "node_modules/filelist/node_modules/brace-expansion": {
4101 |       "version": "2.0.1",
4102 |       "resolved": "https://registry.npmmirror.com/brace-expansion/-/brace-expansion-2.0.1.tgz",
4103 |       "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
4104 |       "dev": true,
4105 |       "dependencies": {
4106 |         "balanced-match": "^1.0.0"
4107 |       }
4108 |     },
4109 |     "node_modules/filelist/node_modules/minimatch": {
4110 |       "version": "5.1.6",
4111 |       "resolved": "https://registry.npmmirror.com/minimatch/-/minimatch-5.1.6.tgz",
4112 |       "integrity": "sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g==",
4113 |       "dev": true,
4114 |       "dependencies": {
4115 |         "brace-expansion": "^2.0.1"
4116 |       },
4117 |       "engines": {
4118 |         "node": ">=10"
4119 |       }
4120 |     },
4121 |     "node_modules/fill-range": {
4122 |       "version": "7.1.1",
4123 |       "resolved": "https://registry.npmmirror.com/fill-range/-/fill-range-7.1.1.tgz",
4124 |       "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
4125 |       "dev": true,
4126 |       "dependencies": {
4127 |         "to-regex-range": "^5.0.1"
4128 |       },
4129 |       "engines": {
4130 |         "node": ">=8"
4131 |       }
4132 |     },
4133 |     "node_modules/find-up": {
4134 |       "version": "4.1.0",
4135 |       "resolved": "https://registry.npmmirror.com/find-up/-/find-up-4.1.0.tgz",
4136 |       "integrity": "sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==",
4137 |       "dev": true,
4138 |       "dependencies": {
4139 |         "locate-path": "^5.0.0",
4140 |         "path-exists": "^4.0.0"
4141 |       },
4142 |       "engines": {
4143 |         "node": ">=8"
4144 |       }
4145 |     },
4146 |     "node_modules/flat-cache": {
4147 |       "version": "4.0.1",
4148 |       "resolved": "https://registry.npmmirror.com/flat-cache/-/flat-cache-4.0.1.tgz",
4149 |       "integrity": "sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==",
4150 |       "dev": true,
4151 |       "dependencies": {
4152 |         "flatted": "^3.2.9",
4153 |         "keyv": "^4.5.4"
4154 |       },
4155 |       "engines": {
4156 |         "node": ">=16"
4157 |       }
4158 |     },
4159 |     "node_modules/flatted": {
4160 |       "version": "3.3.2",
4161 |       "resolved": "https://registry.npmmirror.com/flatted/-/flatted-3.3.2.tgz",
4162 |       "integrity": "sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==",
4163 |       "dev": true
4164 |     },
4165 |     "node_modules/for-in": {
4166 |       "version": "1.0.2",
4167 |       "resolved": "https://registry.npmmirror.com/for-in/-/for-in-1.0.2.tgz",
4168 |       "integrity": "sha512-7EwmXrOjyL+ChxMhmG5lnW9MPt1aIeZEwKhQzoBUdTV0N3zuwWDZYVJatDvZ2OyzPUvdIAZDsCetk3coyMfcnQ==",
4169 |       "dev": true,
4170 |       "engines": {
4171 |         "node": ">=0.10.0"
4172 |       }
4173 |     },
4174 |     "node_modules/fp-ts": {
4175 |       "version": "2.16.9",
4176 |       "resolved": "https://registry.npmmirror.com/fp-ts/-/fp-ts-2.16.9.tgz",
4177 |       "integrity": "sha512-+I2+FnVB+tVaxcYyQkHUq7ZdKScaBlX53A41mxQtpIccsfyv8PzdzP7fzp2AY832T4aoK6UZ5WRX/ebGd8uZuQ==",
4178 |       "dev": true
4179 |     },
4180 |     "node_modules/fragment-cache": {
4181 |       "version": "0.2.1",
4182 |       "resolved": "https://registry.npmmirror.com/fragment-cache/-/fragment-cache-0.2.1.tgz",
4183 |       "integrity": "sha512-GMBAbW9antB8iZRHLoGw0b3HANt57diZYFO/HL1JGIC1MjKrdmhxvrJbupnVvpys0zsz7yBApXdQyfepKly2kA==",
4184 |       "dev": true,
4185 |       "dependencies": {
4186 |         "map-cache": "^0.2.2"
4187 |       },
4188 |       "engines": {
4189 |         "node": ">=0.10.0"
4190 |       }
4191 |     },
4192 |     "node_modules/fs.realpath": {
4193 |       "version": "1.0.0",
4194 |       "resolved": "https://registry.npmmirror.com/fs.realpath/-/fs.realpath-1.0.0.tgz",
4195 |       "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
4196 |       "dev": true
4197 |     },
4198 |     "node_modules/fsevents": {
4199 |       "version": "2.3.3",
4200 |       "resolved": "https://registry.npmmirror.com/fsevents/-/fsevents-2.3.3.tgz",
4201 |       "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
4202 |       "dev": true,
4203 |       "hasInstallScript": true,
4204 |       "optional": true,
4205 |       "os": [
4206 |         "darwin"
4207 |       ],
4208 |       "engines": {
4209 |         "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
4210 |       }
4211 |     },
4212 |     "node_modules/function-bind": {
4213 |       "version": "1.1.2",
4214 |       "resolved": "https://registry.npmmirror.com/function-bind/-/function-bind-1.1.2.tgz",
4215 |       "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
4216 |       "dev": true,
4217 |       "funding": {
4218 |         "url": "https://github.com/sponsors/ljharb"
4219 |       }
4220 |     },
4221 |     "node_modules/gensync": {
4222 |       "version": "1.0.0-beta.2",
4223 |       "resolved": "https://registry.npmmirror.com/gensync/-/gensync-1.0.0-beta.2.tgz",
4224 |       "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
4225 |       "dev": true,
4226 |       "engines": {
4227 |         "node": ">=6.9.0"
4228 |       }
4229 |     },
4230 |     "node_modules/get-caller-file": {
4231 |       "version": "2.0.5",
4232 |       "resolved": "https://registry.npmmirror.com/get-caller-file/-/get-caller-file-2.0.5.tgz",
4233 |       "integrity": "sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==",
4234 |       "dev": true,
4235 |       "engines": {
4236 |         "node": "6.* || 8.* || >= 10.*"
4237 |       }
4238 |     },
4239 |     "node_modules/get-package-type": {
4240 |       "version": "0.1.0",
4241 |       "resolved": "https://registry.npmmirror.com/get-package-type/-/get-package-type-0.1.0.tgz",
4242 |       "integrity": "sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==",
4243 |       "dev": true,
4244 |       "engines": {
4245 |         "node": ">=8.0.0"
4246 |       }
4247 |     },
4248 |     "node_modules/get-stream": {
4249 |       "version": "6.0.1",
4250 |       "resolved": "https://registry.npmmirror.com/get-stream/-/get-stream-6.0.1.tgz",
4251 |       "integrity": "sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==",
4252 |       "dev": true,
4253 |       "engines": {
4254 |         "node": ">=10"
4255 |       },
4256 |       "funding": {
4257 |         "url": "https://github.com/sponsors/sindresorhus"
4258 |       }
4259 |     },
4260 |     "node_modules/get-value": {
4261 |       "version": "2.0.6",
4262 |       "resolved": "https://registry.npmmirror.com/get-value/-/get-value-2.0.6.tgz",
4263 |       "integrity": "sha512-Ln0UQDlxH1BapMu3GPtf7CuYNwRZf2gwCuPqbyG6pB8WfmFpzqcy4xtAaAMUhnNqjMKTiCPZG2oMT3YSx8U2NA==",
4264 |       "dev": true,
4265 |       "engines": {
4266 |         "node": ">=0.10.0"
4267 |       }
4268 |     },
4269 |     "node_modules/glob": {
4270 |       "version": "7.2.3",
4271 |       "resolved": "https://registry.npmmirror.com/glob/-/glob-7.2.3.tgz",
4272 |       "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
4273 |       "deprecated": "Glob versions prior to v9 are no longer supported",
4274 |       "dev": true,
4275 |       "dependencies": {
4276 |         "fs.realpath": "^1.0.0",
4277 |         "inflight": "^1.0.4",
4278 |         "inherits": "2",
4279 |         "minimatch": "^3.1.1",
4280 |         "once": "^1.3.0",
4281 |         "path-is-absolute": "^1.0.0"
4282 |       },
4283 |       "engines": {
4284 |         "node": "*"
4285 |       },
4286 |       "funding": {
4287 |         "url": "https://github.com/sponsors/isaacs"
4288 |       }
4289 |     },
4290 |     "node_modules/glob-parent": {
4291 |       "version": "6.0.2",
4292 |       "resolved": "https://registry.npmmirror.com/glob-parent/-/glob-parent-6.0.2.tgz",
4293 |       "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
4294 |       "dev": true,
4295 |       "dependencies": {
4296 |         "is-glob": "^4.0.3"
4297 |       },
4298 |       "engines": {
4299 |         "node": ">=10.13.0"
4300 |       }
4301 |     },
4302 |     "node_modules/globals": {
4303 |       "version": "15.12.0",
4304 |       "resolved": "https://registry.npmmirror.com/globals/-/globals-15.12.0.tgz",
4305 |       "integrity": "sha512-1+gLErljJFhbOVyaetcwJiJ4+eLe45S2E7P5UiZ9xGfeq3ATQf5DOv9G7MH3gGbKQLkzmNh2DxfZwLdw+j6oTQ==",
4306 |       "dev": true,
4307 |       "engines": {
4308 |         "node": ">=18"
4309 |       },
4310 |       "funding": {
4311 |         "url": "https://github.com/sponsors/sindresorhus"
4312 |       }
4313 |     },
4314 |     "node_modules/graceful-fs": {
4315 |       "version": "4.2.11",
4316 |       "resolved": "https://registry.npmmirror.com/graceful-fs/-/graceful-fs-4.2.11.tgz",
4317 |       "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
4318 |       "dev": true
4319 |     },
4320 |     "node_modules/graphemer": {
4321 |       "version": "1.4.0",
4322 |       "resolved": "https://registry.npmmirror.com/graphemer/-/graphemer-1.4.0.tgz",
4323 |       "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
4324 |       "dev": true
4325 |     },
4326 |     "node_modules/has-flag": {
4327 |       "version": "4.0.0",
4328 |       "resolved": "https://registry.npmmirror.com/has-flag/-/has-flag-4.0.0.tgz",
4329 |       "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
4330 |       "dev": true,
4331 |       "engines": {
4332 |         "node": ">=8"
4333 |       }
4334 |     },
4335 |     "node_modules/has-value": {
4336 |       "version": "1.0.0",
4337 |       "resolved": "https://registry.npmmirror.com/has-value/-/has-value-1.0.0.tgz",
4338 |       "integrity": "sha512-IBXk4GTsLYdQ7Rvt+GRBrFSVEkmuOUy4re0Xjd9kJSUQpnTrWR4/y9RpfexN9vkAPMFuQoeWKwqzPozRTlasGw==",
4339 |       "dev": true,
4340 |       "dependencies": {
4341 |         "get-value": "^2.0.6",
4342 |         "has-values": "^1.0.0",
4343 |         "isobject": "^3.0.0"
4344 |       },
4345 |       "engines": {
4346 |         "node": ">=0.10.0"
4347 |       }
4348 |     },
4349 |     "node_modules/has-values": {
4350 |       "version": "1.0.0",
4351 |       "resolved": "https://registry.npmmirror.com/has-values/-/has-values-1.0.0.tgz",
4352 |       "integrity": "sha512-ODYZC64uqzmtfGMEAX/FvZiRyWLpAC3vYnNunURUnkGVTS+mI0smVsWaPydRBsE3g+ok7h960jChO8mFcWlHaQ==",
4353 |       "dev": true,
4354 |       "dependencies": {
4355 |         "is-number": "^3.0.0",
4356 |         "kind-of": "^4.0.0"
4357 |       },
4358 |       "engines": {
4359 |         "node": ">=0.10.0"
4360 |       }
4361 |     },
4362 |     "node_modules/has-values/node_modules/is-number": {
4363 |       "version": "3.0.0",
4364 |       "resolved": "https://registry.npmmirror.com/is-number/-/is-number-3.0.0.tgz",
4365 |       "integrity": "sha512-4cboCqIpliH+mAvFNegjZQ4kgKc3ZUhQVr3HvWbSh5q3WH2v82ct+T2Y1hdU5Gdtorx/cLifQjqCbL7bpznLTg==",
4366 |       "dev": true,
4367 |       "dependencies": {
4368 |         "kind-of": "^3.0.2"
4369 |       },
4370 |       "engines": {
4371 |         "node": ">=0.10.0"
4372 |       }
4373 |     },
4374 |     "node_modules/has-values/node_modules/is-number/node_modules/kind-of": {
4375 |       "version": "3.2.2",
4376 |       "resolved": "https://registry.npmmirror.com/kind-of/-/kind-of-3.2.2.tgz",
4377 |       "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
4378 |       "dev": true,
4379 |       "dependencies": {
4380 |         "is-buffer": "^1.1.5"
4381 |       },
4382 |       "engines": {
4383 |         "node": ">=0.10.0"
4384 |       }
4385 |     },
4386 |     "node_modules/has-values/node_modules/kind-of": {
4387 |       "version": "4.0.0",
4388 |       "resolved": "https://registry.npmmirror.com/kind-of/-/kind-of-4.0.0.tgz",
4389 |       "integrity": "sha512-24XsCxmEbRwEDbz/qz3stgin8TTzZ1ESR56OMCN0ujYg+vRutNSiOj9bHH9u85DKgXguraugV5sFuvbD4FW/hw==",
4390 |       "dev": true,
4391 |       "dependencies": {
4392 |         "is-buffer": "^1.1.5"
4393 |       },
4394 |       "engines": {
4395 |         "node": ">=0.10.0"
4396 |       }
4397 |     },
4398 |     "node_modules/hasown": {
4399 |       "version": "2.0.2",
4400 |       "resolved": "https://registry.npmmirror.com/hasown/-/hasown-2.0.2.tgz",
4401 |       "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
4402 |       "dev": true,
4403 |       "dependencies": {
4404 |         "function-bind": "^1.1.2"
4405 |       },
4406 |       "engines": {
4407 |         "node": ">= 0.4"
4408 |       }
4409 |     },
4410 |     "node_modules/html-escaper": {
4411 |       "version": "2.0.2",
4412 |       "resolved": "https://registry.npmmirror.com/html-escaper/-/html-escaper-2.0.2.tgz",
4413 |       "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==",
4414 |       "dev": true
4415 |     },
4416 |     "node_modules/human-signals": {
4417 |       "version": "2.1.0",
4418 |       "resolved": "https://registry.npmmirror.com/human-signals/-/human-signals-2.1.0.tgz",
4419 |       "integrity": "sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==",
4420 |       "dev": true,
4421 |       "engines": {
4422 |         "node": ">=10.17.0"
4423 |       }
4424 |     },
4425 |     "node_modules/i18next": {
4426 |       "version": "24.0.2",
4427 |       "resolved": "https://registry.npmmirror.com/i18next/-/i18next-24.0.2.tgz",
4428 |       "integrity": "sha512-D88xyIGcWAKwBTAs4RSqASi8NXR/NhCVSTM4LDbdoU8qb/5dcEZjNCLDhtQBB7Epw/Cp1w2vH/3ujoTbqLSs5g==",
4429 |       "dev": true,
4430 |       "funding": [
4431 |         {
4432 |           "type": "individual",
4433 |           "url": "https://locize.com"
4434 |         },
4435 |         {
4436 |           "type": "individual",
4437 |           "url": "https://locize.com/i18next.html"
4438 |         },
4439 |         {
4440 |           "type": "individual",
4441 |           "url": "https://www.i18next.com/how-to/faq#i18next-is-awesome.-how-can-i-support-the-project"
4442 |         }
4443 |       ],
4444 |       "dependencies": {
4445 |         "@babel/runtime": "^7.23.2"
4446 |       },
4447 |       "peerDependencies": {
4448 |         "typescript": "^5"
4449 |       },
4450 |       "peerDependenciesMeta": {
4451 |         "typescript": {
4452 |           "optional": true
4453 |         }
4454 |       }
4455 |     },
4456 |     "node_modules/ignore": {
4457 |       "version": "5.3.2",
4458 |       "resolved": "https://registry.npmmirror.com/ignore/-/ignore-5.3.2.tgz",
4459 |       "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
4460 |       "dev": true,
4461 |       "engines": {
4462 |         "node": ">= 4"
4463 |       }
4464 |     },
4465 |     "node_modules/immediate": {
4466 |       "version": "3.0.6",
4467 |       "resolved": "https://registry.npmmirror.com/immediate/-/immediate-3.0.6.tgz",
4468 |       "integrity": "sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==",
4469 |       "dev": true
4470 |     },
4471 |     "node_modules/immer": {
4472 |       "version": "10.1.1",
4473 |       "resolved": "https://registry.npmmirror.com/immer/-/immer-10.1.1.tgz",
4474 |       "integrity": "sha512-s2MPrmjovJcoMaHtx6K11Ra7oD05NT97w1IC5zpMkT6Atjr7H8LjaDd81iIxUYpMKSRRNMJE703M1Fhr/TctHw==",
4475 |       "dev": true,
4476 |       "funding": {
4477 |         "type": "opencollective",
4478 |         "url": "https://opencollective.com/immer"
4479 |       }
4480 |     },
4481 |     "node_modules/immutable": {
4482 |       "version": "5.0.3",
4483 |       "resolved": "https://registry.npmmirror.com/immutable/-/immutable-5.0.3.tgz",
4484 |       "integrity": "sha512-P8IdPQHq3lA1xVeBRi5VPqUm5HDgKnx0Ru51wZz5mjxHr5n3RWhjIpOFU7ybkUxfB+5IToy+OLaHYDBIWsv+uw==",
4485 |       "dev": true
4486 |     },
4487 |     "node_modules/import-fresh": {
4488 |       "version": "3.3.0",
4489 |       "resolved": "https://registry.npmmirror.com/import-fresh/-/import-fresh-3.3.0.tgz",
4490 |       "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
4491 |       "dev": true,
4492 |       "dependencies": {
4493 |         "parent-module": "^1.0.0",
4494 |         "resolve-from": "^4.0.0"
4495 |       },
4496 |       "engines": {
4497 |         "node": ">=6"
4498 |       },
4499 |       "funding": {
4500 |         "url": "https://github.com/sponsors/sindresorhus"
4501 |       }
4502 |     },
4503 |     "node_modules/import-fresh/node_modules/resolve-from": {
4504 |       "version": "4.0.0",
4505 |       "resolved": "https://registry.npmmirror.com/resolve-from/-/resolve-from-4.0.0.tgz",
4506 |       "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
4507 |       "dev": true,
4508 |       "engines": {
4509 |         "node": ">=4"
4510 |       }
4511 |     },
4512 |     "node_modules/import-local": {
4513 |       "version": "3.2.0",
4514 |       "resolved": "https://registry.npmmirror.com/import-local/-/import-local-3.2.0.tgz",
4515 |       "integrity": "sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==",
4516 |       "dev": true,
4517 |       "dependencies": {
4518 |         "pkg-dir": "^4.2.0",
4519 |         "resolve-cwd": "^3.0.0"
4520 |       },
4521 |       "bin": {
4522 |         "import-local-fixture": "fixtures/cli.js"
4523 |       },
4524 |       "engines": {
4525 |         "node": ">=8"
4526 |       },
4527 |       "funding": {
4528 |         "url": "https://github.com/sponsors/sindresorhus"
4529 |       }
4530 |     },
4531 |     "node_modules/imurmurhash": {
4532 |       "version": "0.1.4",
4533 |       "resolved": "https://registry.npmmirror.com/imurmurhash/-/imurmurhash-0.1.4.tgz",
4534 |       "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
4535 |       "dev": true,
4536 |       "engines": {
4537 |         "node": ">=0.8.19"
4538 |       }
4539 |     },
4540 |     "node_modules/inflight": {
4541 |       "version": "1.0.6",
4542 |       "resolved": "https://registry.npmmirror.com/inflight/-/inflight-1.0.6.tgz",
4543 |       "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
4544 |       "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
4545 |       "dev": true,
4546 |       "dependencies": {
4547 |         "once": "^1.3.0",
4548 |         "wrappy": "1"
4549 |       }
4550 |     },
4551 |     "node_modules/inherits": {
4552 |       "version": "2.0.4",
4553 |       "resolved": "https://registry.npmmirror.com/inherits/-/inherits-2.0.4.tgz",
4554 |       "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
4555 |       "dev": true
4556 |     },
4557 |     "node_modules/is-accessor-descriptor": {
4558 |       "version": "1.0.1",
4559 |       "resolved": "https://registry.npmmirror.com/is-accessor-descriptor/-/is-accessor-descriptor-1.0.1.tgz",
4560 |       "integrity": "sha512-YBUanLI8Yoihw923YeFUS5fs0fF2f5TSFTNiYAAzhhDscDa3lEqYuz1pDOEP5KvX94I9ey3vsqjJcLVFVU+3QA==",
4561 |       "dev": true,
4562 |       "dependencies": {
4563 |         "hasown": "^2.0.0"
4564 |       },
4565 |       "engines": {
4566 |         "node": ">= 0.10"
4567 |       }
4568 |     },
4569 |     "node_modules/is-arrayish": {
4570 |       "version": "0.2.1",
4571 |       "resolved": "https://registry.npmmirror.com/is-arrayish/-/is-arrayish-0.2.1.tgz",
4572 |       "integrity": "sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==",
4573 |       "dev": true
4574 |     },
4575 |     "node_modules/is-binary-path": {
4576 |       "version": "2.1.0",
4577 |       "resolved": "https://registry.npmmirror.com/is-binary-path/-/is-binary-path-2.1.0.tgz",
4578 |       "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
4579 |       "dev": true,
4580 |       "dependencies": {
4581 |         "binary-extensions": "^2.0.0"
4582 |       },
4583 |       "engines": {
4584 |         "node": ">=8"
4585 |       }
4586 |     },
4587 |     "node_modules/is-buffer": {
4588 |       "version": "1.1.6",
4589 |       "resolved": "https://registry.npmmirror.com/is-buffer/-/is-buffer-1.1.6.tgz",
4590 |       "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==",
4591 |       "dev": true
4592 |     },
4593 |     "node_modules/is-ci": {
4594 |       "version": "2.0.0",
4595 |       "resolved": "https://registry.npmmirror.com/is-ci/-/is-ci-2.0.0.tgz",
4596 |       "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",
4597 |       "dev": true,
4598 |       "dependencies": {
4599 |         "ci-info": "^2.0.0"
4600 |       },
4601 |       "bin": {
4602 |         "is-ci": "bin.js"
4603 |       }
4604 |     },
4605 |     "node_modules/is-ci/node_modules/ci-info": {
4606 |       "version": "2.0.0",
4607 |       "resolved": "https://registry.npmmirror.com/ci-info/-/ci-info-2.0.0.tgz",
4608 |       "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==",
4609 |       "dev": true
4610 |     },
4611 |     "node_modules/is-core-module": {
4612 |       "version": "2.15.1",
4613 |       "resolved": "https://registry.npmmirror.com/is-core-module/-/is-core-module-2.15.1.tgz",
4614 |       "integrity": "sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==",
4615 |       "dev": true,
4616 |       "dependencies": {
4617 |         "hasown": "^2.0.2"
4618 |       },
4619 |       "engines": {
4620 |         "node": ">= 0.4"
4621 |       },
4622 |       "funding": {
4623 |         "url": "https://github.com/sponsors/ljharb"
4624 |       }
4625 |     },
4626 |     "node_modules/is-data-descriptor": {
4627 |       "version": "1.0.1",
4628 |       "resolved": "https://registry.npmmirror.com/is-data-descriptor/-/is-data-descriptor-1.0.1.tgz",
4629 |       "integrity": "sha512-bc4NlCDiCr28U4aEsQ3Qs2491gVq4V8G7MQyws968ImqjKuYtTJXrl7Vq7jsN7Ly/C3xj5KWFrY7sHNeDkAzXw==",
4630 |       "dev": true,
4631 |       "dependencies": {
4632 |         "hasown": "^2.0.0"
4633 |       },
4634 |       "engines": {
4635 |         "node": ">= 0.4"
4636 |       }
4637 |     },
4638 |     "node_modules/is-descriptor": {
4639 |       "version": "1.0.3",
4640 |       "resolved": "https://registry.npmmirror.com/is-descriptor/-/is-descriptor-1.0.3.tgz",
4641 |       "integrity": "sha512-JCNNGbwWZEVaSPtS45mdtrneRWJFp07LLmykxeFV5F6oBvNF8vHSfJuJgoT472pSfk+Mf8VnlrspaFBHWM8JAw==",
4642 |       "dev": true,
4643 |       "dependencies": {
4644 |         "is-accessor-descriptor": "^1.0.1",
4645 |         "is-data-descriptor": "^1.0.1"
4646 |       },
4647 |       "engines": {
4648 |         "node": ">= 0.4"
4649 |       }
4650 |     },
4651 |     "node_modules/is-extendable": {
4652 |       "version": "1.0.1",
4653 |       "resolved": "https://registry.npmmirror.com/is-extendable/-/is-extendable-1.0.1.tgz",
4654 |       "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",
4655 |       "dev": true,
4656 |       "dependencies": {
4657 |         "is-plain-object": "^2.0.4"
4658 |       },
4659 |       "engines": {
4660 |         "node": ">=0.10.0"
4661 |       }
4662 |     },
4663 |     "node_modules/is-extglob": {
4664 |       "version": "2.1.1",
4665 |       "resolved": "https://registry.npmmirror.com/is-extglob/-/is-extglob-2.1.1.tgz",
4666 |       "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
4667 |       "dev": true,
4668 |       "engines": {
4669 |         "node": ">=0.10.0"
4670 |       }
4671 |     },
4672 |     "node_modules/is-fullwidth-code-point": {
4673 |       "version": "3.0.0",
4674 |       "resolved": "https://registry.npmmirror.com/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
4675 |       "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
4676 |       "dev": true,
4677 |       "engines": {
4678 |         "node": ">=8"
4679 |       }
4680 |     },
4681 |     "node_modules/is-generator-fn": {
4682 |       "version": "2.1.0",
4683 |       "resolved": "https://registry.npmmirror.com/is-generator-fn/-/is-generator-fn-2.1.0.tgz",
4684 |       "integrity": "sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==",
4685 |       "dev": true,
4686 |       "engines": {
4687 |         "node": ">=6"
4688 |       }
4689 |     },
4690 |     "node_modules/is-glob": {
4691 |       "version": "4.0.3",
4692 |       "resolved": "https://registry.npmmirror.com/is-glob/-/is-glob-4.0.3.tgz",
4693 |       "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
4694 |       "dev": true,
4695 |       "dependencies": {
4696 |         "is-extglob": "^2.1.1"
4697 |       },
4698 |       "engines": {
4699 |         "node": ">=0.10.0"
4700 |       }
4701 |     },
4702 |     "node_modules/is-number": {
4703 |       "version": "7.0.0",
4704 |       "resolved": "https://registry.npmmirror.com/is-number/-/is-number-7.0.0.tgz",
4705 |       "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
4706 |       "dev": true,
4707 |       "engines": {
4708 |         "node": ">=0.12.0"
4709 |       }
4710 |     },
4711 |     "node_modules/is-plain-object": {
4712 |       "version": "2.0.4",
4713 |       "resolved": "https://registry.npmmirror.com/is-plain-object/-/is-plain-object-2.0.4.tgz",
4714 |       "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",
4715 |       "dev": true,
4716 |       "dependencies": {
4717 |         "isobject": "^3.0.1"
4718 |       },
4719 |       "engines": {
4720 |         "node": ">=0.10.0"
4721 |       }
4722 |     },
4723 |     "node_modules/is-stream": {
4724 |       "version": "2.0.1",
4725 |       "resolved": "https://registry.npmmirror.com/is-stream/-/is-stream-2.0.1.tgz",
4726 |       "integrity": "sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==",
4727 |       "dev": true,
4728 |       "engines": {
4729 |         "node": ">=8"
4730 |       },
4731 |       "funding": {
4732 |         "url": "https://github.com/sponsors/sindresorhus"
4733 |       }
4734 |     },
4735 |     "node_modules/is-typedarray": {
4736 |       "version": "1.0.0",
4737 |       "resolved": "https://registry.npmmirror.com/is-typedarray/-/is-typedarray-1.0.0.tgz",
4738 |       "integrity": "sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==",
4739 |       "dev": true
4740 |     },
4741 |     "node_modules/is-windows": {
4742 |       "version": "1.0.2",
4743 |       "resolved": "https://registry.npmmirror.com/is-windows/-/is-windows-1.0.2.tgz",
4744 |       "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==",
4745 |       "dev": true,
4746 |       "engines": {
4747 |         "node": ">=0.10.0"
4748 |       }
4749 |     },
4750 |     "node_modules/isarray": {
4751 |       "version": "1.0.0",
4752 |       "resolved": "https://registry.npmmirror.com/isarray/-/isarray-1.0.0.tgz",
4753 |       "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
4754 |       "dev": true
4755 |     },
4756 |     "node_modules/isexe": {
4757 |       "version": "2.0.0",
4758 |       "resolved": "https://registry.npmmirror.com/isexe/-/isexe-2.0.0.tgz",
4759 |       "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
4760 |       "dev": true
4761 |     },
4762 |     "node_modules/isobject": {
4763 |       "version": "3.0.1",
4764 |       "resolved": "https://registry.npmmirror.com/isobject/-/isobject-3.0.1.tgz",
4765 |       "integrity": "sha512-WhB9zCku7EGTj/HQQRz5aUQEUeoQZH2bWcltRErOpymJ4boYE6wL9Tbr23krRPSZ+C5zqNSrSw+Cc7sZZ4b7vg==",
4766 |       "dev": true,
4767 |       "engines": {
4768 |         "node": ">=0.10.0"
4769 |       }
4770 |     },
4771 |     "node_modules/istanbul-lib-coverage": {
4772 |       "version": "3.2.2",
4773 |       "resolved": "https://registry.npmmirror.com/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.2.tgz",
4774 |       "integrity": "sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==",
4775 |       "dev": true,
4776 |       "engines": {
4777 |         "node": ">=8"
4778 |       }
4779 |     },
4780 |     "node_modules/istanbul-lib-instrument": {
4781 |       "version": "5.2.1",
4782 |       "resolved": "https://registry.npmmirror.com/istanbul-lib-instrument/-/istanbul-lib-instrument-5.2.1.tgz",
4783 |       "integrity": "sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==",
4784 |       "dev": true,
4785 |       "dependencies": {
4786 |         "@babel/core": "^7.12.3",
4787 |         "@babel/parser": "^7.14.7",
4788 |         "@istanbuljs/schema": "^0.1.2",
4789 |         "istanbul-lib-coverage": "^3.2.0",
4790 |         "semver": "^6.3.0"
4791 |       },
4792 |       "engines": {
4793 |         "node": ">=8"
4794 |       }
4795 |     },
4796 |     "node_modules/istanbul-lib-instrument/node_modules/semver": {
4797 |       "version": "6.3.1",
4798 |       "resolved": "https://registry.npmmirror.com/semver/-/semver-6.3.1.tgz",
4799 |       "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
4800 |       "dev": true,
4801 |       "bin": {
4802 |         "semver": "bin/semver.js"
4803 |       }
4804 |     },
4805 |     "node_modules/istanbul-lib-report": {
4806 |       "version": "3.0.1",
4807 |       "resolved": "https://registry.npmmirror.com/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz",
4808 |       "integrity": "sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==",
4809 |       "dev": true,
4810 |       "dependencies": {
4811 |         "istanbul-lib-coverage": "^3.0.0",
4812 |         "make-dir": "^4.0.0",
4813 |         "supports-color": "^7.1.0"
4814 |       },
4815 |       "engines": {
4816 |         "node": ">=10"
4817 |       }
4818 |     },
4819 |     "node_modules/istanbul-lib-source-maps": {
4820 |       "version": "4.0.1",
4821 |       "resolved": "https://registry.npmmirror.com/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.1.tgz",
4822 |       "integrity": "sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==",
4823 |       "dev": true,
4824 |       "dependencies": {
4825 |         "debug": "^4.1.1",
4826 |         "istanbul-lib-coverage": "^3.0.0",
4827 |         "source-map": "^0.6.1"
4828 |       },
4829 |       "engines": {
4830 |         "node": ">=10"
4831 |       }
4832 |     },
4833 |     "node_modules/istanbul-reports": {
4834 |       "version": "3.1.7",
4835 |       "resolved": "https://registry.npmmirror.com/istanbul-reports/-/istanbul-reports-3.1.7.tgz",
4836 |       "integrity": "sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==",
4837 |       "dev": true,
4838 |       "dependencies": {
4839 |         "html-escaper": "^2.0.0",
4840 |         "istanbul-lib-report": "^3.0.0"
4841 |       },
4842 |       "engines": {
4843 |         "node": ">=8"
4844 |       }
4845 |     },
4846 |     "node_modules/jake": {
4847 |       "version": "10.9.2",
4848 |       "resolved": "https://registry.npmmirror.com/jake/-/jake-10.9.2.tgz",
4849 |       "integrity": "sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA==",
4850 |       "dev": true,
4851 |       "dependencies": {
4852 |         "async": "^3.2.3",
4853 |         "chalk": "^4.0.2",
4854 |         "filelist": "^1.0.4",
4855 |         "minimatch": "^3.1.2"
4856 |       },
4857 |       "bin": {
4858 |         "jake": "bin/cli.js"
4859 |       },
4860 |       "engines": {
4861 |         "node": ">=10"
4862 |       }
4863 |     },
4864 |     "node_modules/jest": {
4865 |       "version": "29.7.0",
4866 |       "resolved": "https://registry.npmmirror.com/jest/-/jest-29.7.0.tgz",
4867 |       "integrity": "sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==",
4868 |       "dev": true,
4869 |       "dependencies": {
4870 |         "@jest/core": "^29.7.0",
4871 |         "@jest/types": "^29.6.3",
4872 |         "import-local": "^3.0.2",
4873 |         "jest-cli": "^29.7.0"
4874 |       },
4875 |       "bin": {
4876 |         "jest": "bin/jest.js"
4877 |       },
4878 |       "engines": {
4879 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
4880 |       },
4881 |       "peerDependencies": {
4882 |         "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
4883 |       },
4884 |       "peerDependenciesMeta": {
4885 |         "node-notifier": {
4886 |           "optional": true
4887 |         }
4888 |       }
4889 |     },
4890 |     "node_modules/jest-changed-files": {
4891 |       "version": "29.7.0",
4892 |       "resolved": "https://registry.npmmirror.com/jest-changed-files/-/jest-changed-files-29.7.0.tgz",
4893 |       "integrity": "sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==",
4894 |       "dev": true,
4895 |       "dependencies": {
4896 |         "execa": "^5.0.0",
4897 |         "jest-util": "^29.7.0",
4898 |         "p-limit": "^3.1.0"
4899 |       },
4900 |       "engines": {
4901 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
4902 |       }
4903 |     },
4904 |     "node_modules/jest-circus": {
4905 |       "version": "29.7.0",
4906 |       "resolved": "https://registry.npmmirror.com/jest-circus/-/jest-circus-29.7.0.tgz",
4907 |       "integrity": "sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==",
4908 |       "dev": true,
4909 |       "dependencies": {
4910 |         "@jest/environment": "^29.7.0",
4911 |         "@jest/expect": "^29.7.0",
4912 |         "@jest/test-result": "^29.7.0",
4913 |         "@jest/types": "^29.6.3",
4914 |         "@types/node": "*",
4915 |         "chalk": "^4.0.0",
4916 |         "co": "^4.6.0",
4917 |         "dedent": "^1.0.0",
4918 |         "is-generator-fn": "^2.0.0",
4919 |         "jest-each": "^29.7.0",
4920 |         "jest-matcher-utils": "^29.7.0",
4921 |         "jest-message-util": "^29.7.0",
4922 |         "jest-runtime": "^29.7.0",
4923 |         "jest-snapshot": "^29.7.0",
4924 |         "jest-util": "^29.7.0",
4925 |         "p-limit": "^3.1.0",
4926 |         "pretty-format": "^29.7.0",
4927 |         "pure-rand": "^6.0.0",
4928 |         "slash": "^3.0.0",
4929 |         "stack-utils": "^2.0.3"
4930 |       },
4931 |       "engines": {
4932 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
4933 |       }
4934 |     },
4935 |     "node_modules/jest-cli": {
4936 |       "version": "29.7.0",
4937 |       "resolved": "https://registry.npmmirror.com/jest-cli/-/jest-cli-29.7.0.tgz",
4938 |       "integrity": "sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==",
4939 |       "dev": true,
4940 |       "dependencies": {
4941 |         "@jest/core": "^29.7.0",
4942 |         "@jest/test-result": "^29.7.0",
4943 |         "@jest/types": "^29.6.3",
4944 |         "chalk": "^4.0.0",
4945 |         "create-jest": "^29.7.0",
4946 |         "exit": "^0.1.2",
4947 |         "import-local": "^3.0.2",
4948 |         "jest-config": "^29.7.0",
4949 |         "jest-util": "^29.7.0",
4950 |         "jest-validate": "^29.7.0",
4951 |         "yargs": "^17.3.1"
4952 |       },
4953 |       "bin": {
4954 |         "jest": "bin/jest.js"
4955 |       },
4956 |       "engines": {
4957 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
4958 |       },
4959 |       "peerDependencies": {
4960 |         "node-notifier": "^8.0.1 || ^9.0.0 || ^10.0.0"
4961 |       },
4962 |       "peerDependenciesMeta": {
4963 |         "node-notifier": {
4964 |           "optional": true
4965 |         }
4966 |       }
4967 |     },
4968 |     "node_modules/jest-config": {
4969 |       "version": "29.7.0",
4970 |       "resolved": "https://registry.npmmirror.com/jest-config/-/jest-config-29.7.0.tgz",
4971 |       "integrity": "sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==",
4972 |       "dev": true,
4973 |       "dependencies": {
4974 |         "@babel/core": "^7.11.6",
4975 |         "@jest/test-sequencer": "^29.7.0",
4976 |         "@jest/types": "^29.6.3",
4977 |         "babel-jest": "^29.7.0",
4978 |         "chalk": "^4.0.0",
4979 |         "ci-info": "^3.2.0",
4980 |         "deepmerge": "^4.2.2",
4981 |         "glob": "^7.1.3",
4982 |         "graceful-fs": "^4.2.9",
4983 |         "jest-circus": "^29.7.0",
4984 |         "jest-environment-node": "^29.7.0",
4985 |         "jest-get-type": "^29.6.3",
4986 |         "jest-regex-util": "^29.6.3",
4987 |         "jest-resolve": "^29.7.0",
4988 |         "jest-runner": "^29.7.0",
4989 |         "jest-util": "^29.7.0",
4990 |         "jest-validate": "^29.7.0",
4991 |         "micromatch": "^4.0.4",
4992 |         "parse-json": "^5.2.0",
4993 |         "pretty-format": "^29.7.0",
4994 |         "slash": "^3.0.0",
4995 |         "strip-json-comments": "^3.1.1"
4996 |       },
4997 |       "engines": {
4998 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
4999 |       },
5000 |       "peerDependencies": {
5001 |         "@types/node": "*",
5002 |         "ts-node": ">=9.0.0"
5003 |       },
5004 |       "peerDependenciesMeta": {
5005 |         "@types/node": {
5006 |           "optional": true
5007 |         },
5008 |         "ts-node": {
5009 |           "optional": true
5010 |         }
5011 |       }
5012 |     },
5013 |     "node_modules/jest-diff": {
5014 |       "version": "29.7.0",
5015 |       "resolved": "https://registry.npmmirror.com/jest-diff/-/jest-diff-29.7.0.tgz",
5016 |       "integrity": "sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==",
5017 |       "dev": true,
5018 |       "dependencies": {
5019 |         "chalk": "^4.0.0",
5020 |         "diff-sequences": "^29.6.3",
5021 |         "jest-get-type": "^29.6.3",
5022 |         "pretty-format": "^29.7.0"
5023 |       },
5024 |       "engines": {
5025 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5026 |       }
5027 |     },
5028 |     "node_modules/jest-docblock": {
5029 |       "version": "29.7.0",
5030 |       "resolved": "https://registry.npmmirror.com/jest-docblock/-/jest-docblock-29.7.0.tgz",
5031 |       "integrity": "sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==",
5032 |       "dev": true,
5033 |       "dependencies": {
5034 |         "detect-newline": "^3.0.0"
5035 |       },
5036 |       "engines": {
5037 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5038 |       }
5039 |     },
5040 |     "node_modules/jest-each": {
5041 |       "version": "29.7.0",
5042 |       "resolved": "https://registry.npmmirror.com/jest-each/-/jest-each-29.7.0.tgz",
5043 |       "integrity": "sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==",
5044 |       "dev": true,
5045 |       "dependencies": {
5046 |         "@jest/types": "^29.6.3",
5047 |         "chalk": "^4.0.0",
5048 |         "jest-get-type": "^29.6.3",
5049 |         "jest-util": "^29.7.0",
5050 |         "pretty-format": "^29.7.0"
5051 |       },
5052 |       "engines": {
5053 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5054 |       }
5055 |     },
5056 |     "node_modules/jest-environment-node": {
5057 |       "version": "29.7.0",
5058 |       "resolved": "https://registry.npmmirror.com/jest-environment-node/-/jest-environment-node-29.7.0.tgz",
5059 |       "integrity": "sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==",
5060 |       "dev": true,
5061 |       "dependencies": {
5062 |         "@jest/environment": "^29.7.0",
5063 |         "@jest/fake-timers": "^29.7.0",
5064 |         "@jest/types": "^29.6.3",
5065 |         "@types/node": "*",
5066 |         "jest-mock": "^29.7.0",
5067 |         "jest-util": "^29.7.0"
5068 |       },
5069 |       "engines": {
5070 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5071 |       }
5072 |     },
5073 |     "node_modules/jest-get-type": {
5074 |       "version": "29.6.3",
5075 |       "resolved": "https://registry.npmmirror.com/jest-get-type/-/jest-get-type-29.6.3.tgz",
5076 |       "integrity": "sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==",
5077 |       "dev": true,
5078 |       "engines": {
5079 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5080 |       }
5081 |     },
5082 |     "node_modules/jest-haste-map": {
5083 |       "version": "29.7.0",
5084 |       "resolved": "https://registry.npmmirror.com/jest-haste-map/-/jest-haste-map-29.7.0.tgz",
5085 |       "integrity": "sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==",
5086 |       "dev": true,
5087 |       "dependencies": {
5088 |         "@jest/types": "^29.6.3",
5089 |         "@types/graceful-fs": "^4.1.3",
5090 |         "@types/node": "*",
5091 |         "anymatch": "^3.0.3",
5092 |         "fb-watchman": "^2.0.0",
5093 |         "graceful-fs": "^4.2.9",
5094 |         "jest-regex-util": "^29.6.3",
5095 |         "jest-util": "^29.7.0",
5096 |         "jest-worker": "^29.7.0",
5097 |         "micromatch": "^4.0.4",
5098 |         "walker": "^1.0.8"
5099 |       },
5100 |       "engines": {
5101 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5102 |       },
5103 |       "optionalDependencies": {
5104 |         "fsevents": "^2.3.2"
5105 |       }
5106 |     },
5107 |     "node_modules/jest-leak-detector": {
5108 |       "version": "29.7.0",
5109 |       "resolved": "https://registry.npmmirror.com/jest-leak-detector/-/jest-leak-detector-29.7.0.tgz",
5110 |       "integrity": "sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==",
5111 |       "dev": true,
5112 |       "dependencies": {
5113 |         "jest-get-type": "^29.6.3",
5114 |         "pretty-format": "^29.7.0"
5115 |       },
5116 |       "engines": {
5117 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5118 |       }
5119 |     },
5120 |     "node_modules/jest-matcher-utils": {
5121 |       "version": "29.7.0",
5122 |       "resolved": "https://registry.npmmirror.com/jest-matcher-utils/-/jest-matcher-utils-29.7.0.tgz",
5123 |       "integrity": "sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==",
5124 |       "dev": true,
5125 |       "dependencies": {
5126 |         "chalk": "^4.0.0",
5127 |         "jest-diff": "^29.7.0",
5128 |         "jest-get-type": "^29.6.3",
5129 |         "pretty-format": "^29.7.0"
5130 |       },
5131 |       "engines": {
5132 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5133 |       }
5134 |     },
5135 |     "node_modules/jest-message-util": {
5136 |       "version": "29.7.0",
5137 |       "resolved": "https://registry.npmmirror.com/jest-message-util/-/jest-message-util-29.7.0.tgz",
5138 |       "integrity": "sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==",
5139 |       "dev": true,
5140 |       "dependencies": {
5141 |         "@babel/code-frame": "^7.12.13",
5142 |         "@jest/types": "^29.6.3",
5143 |         "@types/stack-utils": "^2.0.0",
5144 |         "chalk": "^4.0.0",
5145 |         "graceful-fs": "^4.2.9",
5146 |         "micromatch": "^4.0.4",
5147 |         "pretty-format": "^29.7.0",
5148 |         "slash": "^3.0.0",
5149 |         "stack-utils": "^2.0.3"
5150 |       },
5151 |       "engines": {
5152 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5153 |       }
5154 |     },
5155 |     "node_modules/jest-mock": {
5156 |       "version": "29.7.0",
5157 |       "resolved": "https://registry.npmmirror.com/jest-mock/-/jest-mock-29.7.0.tgz",
5158 |       "integrity": "sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==",
5159 |       "dev": true,
5160 |       "dependencies": {
5161 |         "@jest/types": "^29.6.3",
5162 |         "@types/node": "*",
5163 |         "jest-util": "^29.7.0"
5164 |       },
5165 |       "engines": {
5166 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5167 |       }
5168 |     },
5169 |     "node_modules/jest-pnp-resolver": {
5170 |       "version": "1.2.3",
5171 |       "resolved": "https://registry.npmmirror.com/jest-pnp-resolver/-/jest-pnp-resolver-1.2.3.tgz",
5172 |       "integrity": "sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==",
5173 |       "dev": true,
5174 |       "engines": {
5175 |         "node": ">=6"
5176 |       },
5177 |       "peerDependencies": {
5178 |         "jest-resolve": "*"
5179 |       },
5180 |       "peerDependenciesMeta": {
5181 |         "jest-resolve": {
5182 |           "optional": true
5183 |         }
5184 |       }
5185 |     },
5186 |     "node_modules/jest-regex-util": {
5187 |       "version": "29.6.3",
5188 |       "resolved": "https://registry.npmmirror.com/jest-regex-util/-/jest-regex-util-29.6.3.tgz",
5189 |       "integrity": "sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==",
5190 |       "dev": true,
5191 |       "engines": {
5192 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5193 |       }
5194 |     },
5195 |     "node_modules/jest-resolve": {
5196 |       "version": "29.7.0",
5197 |       "resolved": "https://registry.npmmirror.com/jest-resolve/-/jest-resolve-29.7.0.tgz",
5198 |       "integrity": "sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==",
5199 |       "dev": true,
5200 |       "dependencies": {
5201 |         "chalk": "^4.0.0",
5202 |         "graceful-fs": "^4.2.9",
5203 |         "jest-haste-map": "^29.7.0",
5204 |         "jest-pnp-resolver": "^1.2.2",
5205 |         "jest-util": "^29.7.0",
5206 |         "jest-validate": "^29.7.0",
5207 |         "resolve": "^1.20.0",
5208 |         "resolve.exports": "^2.0.0",
5209 |         "slash": "^3.0.0"
5210 |       },
5211 |       "engines": {
5212 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5213 |       }
5214 |     },
5215 |     "node_modules/jest-resolve-dependencies": {
5216 |       "version": "29.7.0",
5217 |       "resolved": "https://registry.npmmirror.com/jest-resolve-dependencies/-/jest-resolve-dependencies-29.7.0.tgz",
5218 |       "integrity": "sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==",
5219 |       "dev": true,
5220 |       "dependencies": {
5221 |         "jest-regex-util": "^29.6.3",
5222 |         "jest-snapshot": "^29.7.0"
5223 |       },
5224 |       "engines": {
5225 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5226 |       }
5227 |     },
5228 |     "node_modules/jest-runner": {
5229 |       "version": "29.7.0",
5230 |       "resolved": "https://registry.npmmirror.com/jest-runner/-/jest-runner-29.7.0.tgz",
5231 |       "integrity": "sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==",
5232 |       "dev": true,
5233 |       "dependencies": {
5234 |         "@jest/console": "^29.7.0",
5235 |         "@jest/environment": "^29.7.0",
5236 |         "@jest/test-result": "^29.7.0",
5237 |         "@jest/transform": "^29.7.0",
5238 |         "@jest/types": "^29.6.3",
5239 |         "@types/node": "*",
5240 |         "chalk": "^4.0.0",
5241 |         "emittery": "^0.13.1",
5242 |         "graceful-fs": "^4.2.9",
5243 |         "jest-docblock": "^29.7.0",
5244 |         "jest-environment-node": "^29.7.0",
5245 |         "jest-haste-map": "^29.7.0",
5246 |         "jest-leak-detector": "^29.7.0",
5247 |         "jest-message-util": "^29.7.0",
5248 |         "jest-resolve": "^29.7.0",
5249 |         "jest-runtime": "^29.7.0",
5250 |         "jest-util": "^29.7.0",
5251 |         "jest-watcher": "^29.7.0",
5252 |         "jest-worker": "^29.7.0",
5253 |         "p-limit": "^3.1.0",
5254 |         "source-map-support": "0.5.13"
5255 |       },
5256 |       "engines": {
5257 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5258 |       }
5259 |     },
5260 |     "node_modules/jest-runtime": {
5261 |       "version": "29.7.0",
5262 |       "resolved": "https://registry.npmmirror.com/jest-runtime/-/jest-runtime-29.7.0.tgz",
5263 |       "integrity": "sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==",
5264 |       "dev": true,
5265 |       "dependencies": {
5266 |         "@jest/environment": "^29.7.0",
5267 |         "@jest/fake-timers": "^29.7.0",
5268 |         "@jest/globals": "^29.7.0",
5269 |         "@jest/source-map": "^29.6.3",
5270 |         "@jest/test-result": "^29.7.0",
5271 |         "@jest/transform": "^29.7.0",
5272 |         "@jest/types": "^29.6.3",
5273 |         "@types/node": "*",
5274 |         "chalk": "^4.0.0",
5275 |         "cjs-module-lexer": "^1.0.0",
5276 |         "collect-v8-coverage": "^1.0.0",
5277 |         "glob": "^7.1.3",
5278 |         "graceful-fs": "^4.2.9",
5279 |         "jest-haste-map": "^29.7.0",
5280 |         "jest-message-util": "^29.7.0",
5281 |         "jest-mock": "^29.7.0",
5282 |         "jest-regex-util": "^29.6.3",
5283 |         "jest-resolve": "^29.7.0",
5284 |         "jest-snapshot": "^29.7.0",
5285 |         "jest-util": "^29.7.0",
5286 |         "slash": "^3.0.0",
5287 |         "strip-bom": "^4.0.0"
5288 |       },
5289 |       "engines": {
5290 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5291 |       }
5292 |     },
5293 |     "node_modules/jest-serializer": {
5294 |       "version": "26.6.2",
5295 |       "resolved": "https://registry.npmmirror.com/jest-serializer/-/jest-serializer-26.6.2.tgz",
5296 |       "integrity": "sha512-S5wqyz0DXnNJPd/xfIzZ5Xnp1HrJWBczg8mMfMpN78OJ5eDxXyf+Ygld9wX1DnUWbIbhM1YDY95NjR4CBXkb2g==",
5297 |       "dev": true,
5298 |       "dependencies": {
5299 |         "@types/node": "*",
5300 |         "graceful-fs": "^4.2.4"
5301 |       },
5302 |       "engines": {
5303 |         "node": ">= 10.14.2"
5304 |       }
5305 |     },
5306 |     "node_modules/jest-snapshot": {
5307 |       "version": "29.7.0",
5308 |       "resolved": "https://registry.npmmirror.com/jest-snapshot/-/jest-snapshot-29.7.0.tgz",
5309 |       "integrity": "sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==",
5310 |       "dev": true,
5311 |       "dependencies": {
5312 |         "@babel/core": "^7.11.6",
5313 |         "@babel/generator": "^7.7.2",
5314 |         "@babel/plugin-syntax-jsx": "^7.7.2",
5315 |         "@babel/plugin-syntax-typescript": "^7.7.2",
5316 |         "@babel/types": "^7.3.3",
5317 |         "@jest/expect-utils": "^29.7.0",
5318 |         "@jest/transform": "^29.7.0",
5319 |         "@jest/types": "^29.6.3",
5320 |         "babel-preset-current-node-syntax": "^1.0.0",
5321 |         "chalk": "^4.0.0",
5322 |         "expect": "^29.7.0",
5323 |         "graceful-fs": "^4.2.9",
5324 |         "jest-diff": "^29.7.0",
5325 |         "jest-get-type": "^29.6.3",
5326 |         "jest-matcher-utils": "^29.7.0",
5327 |         "jest-message-util": "^29.7.0",
5328 |         "jest-util": "^29.7.0",
5329 |         "natural-compare": "^1.4.0",
5330 |         "pretty-format": "^29.7.0",
5331 |         "semver": "^7.5.3"
5332 |       },
5333 |       "engines": {
5334 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5335 |       }
5336 |     },
5337 |     "node_modules/jest-util": {
5338 |       "version": "29.7.0",
5339 |       "resolved": "https://registry.npmmirror.com/jest-util/-/jest-util-29.7.0.tgz",
5340 |       "integrity": "sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==",
5341 |       "dev": true,
5342 |       "dependencies": {
5343 |         "@jest/types": "^29.6.3",
5344 |         "@types/node": "*",
5345 |         "chalk": "^4.0.0",
5346 |         "ci-info": "^3.2.0",
5347 |         "graceful-fs": "^4.2.9",
5348 |         "picomatch": "^2.2.3"
5349 |       },
5350 |       "engines": {
5351 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5352 |       }
5353 |     },
5354 |     "node_modules/jest-validate": {
5355 |       "version": "29.7.0",
5356 |       "resolved": "https://registry.npmmirror.com/jest-validate/-/jest-validate-29.7.0.tgz",
5357 |       "integrity": "sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==",
5358 |       "dev": true,
5359 |       "dependencies": {
5360 |         "@jest/types": "^29.6.3",
5361 |         "camelcase": "^6.2.0",
5362 |         "chalk": "^4.0.0",
5363 |         "jest-get-type": "^29.6.3",
5364 |         "leven": "^3.1.0",
5365 |         "pretty-format": "^29.7.0"
5366 |       },
5367 |       "engines": {
5368 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5369 |       }
5370 |     },
5371 |     "node_modules/jest-validate/node_modules/camelcase": {
5372 |       "version": "6.3.0",
5373 |       "resolved": "https://registry.npmmirror.com/camelcase/-/camelcase-6.3.0.tgz",
5374 |       "integrity": "sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==",
5375 |       "dev": true,
5376 |       "engines": {
5377 |         "node": ">=10"
5378 |       },
5379 |       "funding": {
5380 |         "url": "https://github.com/sponsors/sindresorhus"
5381 |       }
5382 |     },
5383 |     "node_modules/jest-watcher": {
5384 |       "version": "29.7.0",
5385 |       "resolved": "https://registry.npmmirror.com/jest-watcher/-/jest-watcher-29.7.0.tgz",
5386 |       "integrity": "sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==",
5387 |       "dev": true,
5388 |       "dependencies": {
5389 |         "@jest/test-result": "^29.7.0",
5390 |         "@jest/types": "^29.6.3",
5391 |         "@types/node": "*",
5392 |         "ansi-escapes": "^4.2.1",
5393 |         "chalk": "^4.0.0",
5394 |         "emittery": "^0.13.1",
5395 |         "jest-util": "^29.7.0",
5396 |         "string-length": "^4.0.1"
5397 |       },
5398 |       "engines": {
5399 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5400 |       }
5401 |     },
5402 |     "node_modules/jest-worker": {
5403 |       "version": "29.7.0",
5404 |       "resolved": "https://registry.npmmirror.com/jest-worker/-/jest-worker-29.7.0.tgz",
5405 |       "integrity": "sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==",
5406 |       "dev": true,
5407 |       "dependencies": {
5408 |         "@types/node": "*",
5409 |         "jest-util": "^29.7.0",
5410 |         "merge-stream": "^2.0.0",
5411 |         "supports-color": "^8.0.0"
5412 |       },
5413 |       "engines": {
5414 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
5415 |       }
5416 |     },
5417 |     "node_modules/jest-worker/node_modules/supports-color": {
5418 |       "version": "8.1.1",
5419 |       "resolved": "https://registry.npmmirror.com/supports-color/-/supports-color-8.1.1.tgz",
5420 |       "integrity": "sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==",
5421 |       "dev": true,
5422 |       "dependencies": {
5423 |         "has-flag": "^4.0.0"
5424 |       },
5425 |       "engines": {
5426 |         "node": ">=10"
5427 |       },
5428 |       "funding": {
5429 |         "url": "https://github.com/chalk/supports-color?sponsor=1"
5430 |       }
5431 |     },
5432 |     "node_modules/jju": {
5433 |       "version": "1.4.0",
5434 |       "resolved": "https://registry.npmmirror.com/jju/-/jju-1.4.0.tgz",
5435 |       "integrity": "sha512-8wb9Yw966OSxApiCt0K3yNJL8pnNeIv+OEq2YMidz4FKP6nonSRoOXc80iXY4JaN2FC11B9qsNmDsm+ZOfMROA==",
5436 |       "dev": true
5437 |     },
5438 |     "node_modules/js-tokens": {
5439 |       "version": "4.0.0",
5440 |       "resolved": "https://registry.npmmirror.com/js-tokens/-/js-tokens-4.0.0.tgz",
5441 |       "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
5442 |       "dev": true
5443 |     },
5444 |     "node_modules/js-yaml": {
5445 |       "version": "3.14.1",
5446 |       "resolved": "https://registry.npmmirror.com/js-yaml/-/js-yaml-3.14.1.tgz",
5447 |       "integrity": "sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==",
5448 |       "dev": true,
5449 |       "dependencies": {
5450 |         "argparse": "^1.0.7",
5451 |         "esprima": "^4.0.0"
5452 |       },
5453 |       "bin": {
5454 |         "js-yaml": "bin/js-yaml.js"
5455 |       }
5456 |     },
5457 |     "node_modules/jsesc": {
5458 |       "version": "3.0.2",
5459 |       "resolved": "https://registry.npmmirror.com/jsesc/-/jsesc-3.0.2.tgz",
5460 |       "integrity": "sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==",
5461 |       "dev": true,
5462 |       "bin": {
5463 |         "jsesc": "bin/jsesc"
5464 |       },
5465 |       "engines": {
5466 |         "node": ">=6"
5467 |       }
5468 |     },
5469 |     "node_modules/json-buffer": {
5470 |       "version": "3.0.1",
5471 |       "resolved": "https://registry.npmmirror.com/json-buffer/-/json-buffer-3.0.1.tgz",
5472 |       "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
5473 |       "dev": true
5474 |     },
5475 |     "node_modules/json-parse-even-better-errors": {
5476 |       "version": "2.3.1",
5477 |       "resolved": "https://registry.npmmirror.com/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz",
5478 |       "integrity": "sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==",
5479 |       "dev": true
5480 |     },
5481 |     "node_modules/json-schema-traverse": {
5482 |       "version": "0.4.1",
5483 |       "resolved": "https://registry.npmmirror.com/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
5484 |       "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
5485 |       "dev": true
5486 |     },
5487 |     "node_modules/json-stable-stringify-without-jsonify": {
5488 |       "version": "1.0.1",
5489 |       "resolved": "https://registry.npmmirror.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
5490 |       "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
5491 |       "dev": true
5492 |     },
5493 |     "node_modules/json5": {
5494 |       "version": "2.2.3",
5495 |       "resolved": "https://registry.npmmirror.com/json5/-/json5-2.2.3.tgz",
5496 |       "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
5497 |       "dev": true,
5498 |       "bin": {
5499 |         "json5": "lib/cli.js"
5500 |       },
5501 |       "engines": {
5502 |         "node": ">=6"
5503 |       }
5504 |     },
5505 |     "node_modules/keyv": {
5506 |       "version": "4.5.4",
5507 |       "resolved": "https://registry.npmmirror.com/keyv/-/keyv-4.5.4.tgz",
5508 |       "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
5509 |       "dev": true,
5510 |       "dependencies": {
5511 |         "json-buffer": "3.0.1"
5512 |       }
5513 |     },
5514 |     "node_modules/kind-of": {
5515 |       "version": "6.0.3",
5516 |       "resolved": "https://registry.npmmirror.com/kind-of/-/kind-of-6.0.3.tgz",
5517 |       "integrity": "sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==",
5518 |       "dev": true,
5519 |       "engines": {
5520 |         "node": ">=0.10.0"
5521 |       }
5522 |     },
5523 |     "node_modules/kleur": {
5524 |       "version": "3.0.3",
5525 |       "resolved": "https://registry.npmmirror.com/kleur/-/kleur-3.0.3.tgz",
5526 |       "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==",
5527 |       "dev": true,
5528 |       "engines": {
5529 |         "node": ">=6"
5530 |       }
5531 |     },
5532 |     "node_modules/leven": {
5533 |       "version": "3.1.0",
5534 |       "resolved": "https://registry.npmmirror.com/leven/-/leven-3.1.0.tgz",
5535 |       "integrity": "sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==",
5536 |       "dev": true,
5537 |       "engines": {
5538 |         "node": ">=6"
5539 |       }
5540 |     },
5541 |     "node_modules/levn": {
5542 |       "version": "0.4.1",
5543 |       "resolved": "https://registry.npmmirror.com/levn/-/levn-0.4.1.tgz",
5544 |       "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
5545 |       "dev": true,
5546 |       "dependencies": {
5547 |         "prelude-ls": "^1.2.1",
5548 |         "type-check": "~0.4.0"
5549 |       },
5550 |       "engines": {
5551 |         "node": ">= 0.8.0"
5552 |       }
5553 |     },
5554 |     "node_modules/lie": {
5555 |       "version": "3.1.1",
5556 |       "resolved": "https://registry.npmmirror.com/lie/-/lie-3.1.1.tgz",
5557 |       "integrity": "sha512-RiNhHysUjhrDQntfYSfY4MU24coXXdEOgw9WGcKHNeEwffDYbF//u87M1EWaMGzuFoSbqW0C9C6lEEhDOAswfw==",
5558 |       "dev": true,
5559 |       "dependencies": {
5560 |         "immediate": "~3.0.5"
5561 |       }
5562 |     },
5563 |     "node_modules/lines-and-columns": {
5564 |       "version": "1.2.4",
5565 |       "resolved": "https://registry.npmmirror.com/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
5566 |       "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
5567 |       "dev": true
5568 |     },
5569 |     "node_modules/localforage": {
5570 |       "version": "1.10.0",
5571 |       "resolved": "https://registry.npmmirror.com/localforage/-/localforage-1.10.0.tgz",
5572 |       "integrity": "sha512-14/H1aX7hzBBmmh7sGPd+AOMkkIrHM3Z1PAyGgZigA1H1p5O5ANnMyWzvpAETtG68/dC4pC0ncy3+PPGzXZHPg==",
5573 |       "dev": true,
5574 |       "dependencies": {
5575 |         "lie": "3.1.1"
5576 |       }
5577 |     },
5578 |     "node_modules/locate-path": {
5579 |       "version": "5.0.0",
5580 |       "resolved": "https://registry.npmmirror.com/locate-path/-/locate-path-5.0.0.tgz",
5581 |       "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==",
5582 |       "dev": true,
5583 |       "dependencies": {
5584 |         "p-locate": "^4.1.0"
5585 |       },
5586 |       "engines": {
5587 |         "node": ">=8"
5588 |       }
5589 |     },
5590 |     "node_modules/lodash.memoize": {
5591 |       "version": "4.1.2",
5592 |       "resolved": "https://registry.npmmirror.com/lodash.memoize/-/lodash.memoize-4.1.2.tgz",
5593 |       "integrity": "sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==",
5594 |       "dev": true
5595 |     },
5596 |     "node_modules/lodash.merge": {
5597 |       "version": "4.6.2",
5598 |       "resolved": "https://registry.npmmirror.com/lodash.merge/-/lodash.merge-4.6.2.tgz",
5599 |       "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
5600 |       "dev": true
5601 |     },
5602 |     "node_modules/lru-cache": {
5603 |       "version": "5.1.1",
5604 |       "resolved": "https://registry.npmmirror.com/lru-cache/-/lru-cache-5.1.1.tgz",
5605 |       "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
5606 |       "dev": true,
5607 |       "dependencies": {
5608 |         "yallist": "^3.0.2"
5609 |       }
5610 |     },
5611 |     "node_modules/luxon": {
5612 |       "version": "3.5.0",
5613 |       "resolved": "https://registry.npmmirror.com/luxon/-/luxon-3.5.0.tgz",
5614 |       "integrity": "sha512-rh+Zjr6DNfUYR3bPwJEnuwDdqMbxZW7LOQfUN4B54+Cl+0o5zaU9RJ6bcidfDtC1cWCZXQ+nvX8bf6bAji37QQ==",
5615 |       "dev": true,
5616 |       "engines": {
5617 |         "node": ">=12"
5618 |       }
5619 |     },
5620 |     "node_modules/magic-string": {
5621 |       "version": "0.25.9",
5622 |       "resolved": "https://registry.npmmirror.com/magic-string/-/magic-string-0.25.9.tgz",
5623 |       "integrity": "sha512-RmF0AsMzgt25qzqqLc1+MbHmhdx0ojF2Fvs4XnOqz2ZOBXzzkEwc/dJQZCYHAn7v1jbVOjAZfK8msRn4BxO4VQ==",
5624 |       "dev": true,
5625 |       "dependencies": {
5626 |         "sourcemap-codec": "^1.4.8"
5627 |       }
5628 |     },
5629 |     "node_modules/make-dir": {
5630 |       "version": "4.0.0",
5631 |       "resolved": "https://registry.npmmirror.com/make-dir/-/make-dir-4.0.0.tgz",
5632 |       "integrity": "sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==",
5633 |       "dev": true,
5634 |       "dependencies": {
5635 |         "semver": "^7.5.3"
5636 |       },
5637 |       "engines": {
5638 |         "node": ">=10"
5639 |       },
5640 |       "funding": {
5641 |         "url": "https://github.com/sponsors/sindresorhus"
5642 |       }
5643 |     },
5644 |     "node_modules/make-error": {
5645 |       "version": "1.3.6",
5646 |       "resolved": "https://registry.npmmirror.com/make-error/-/make-error-1.3.6.tgz",
5647 |       "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
5648 |       "dev": true
5649 |     },
5650 |     "node_modules/makeerror": {
5651 |       "version": "1.0.12",
5652 |       "resolved": "https://registry.npmmirror.com/makeerror/-/makeerror-1.0.12.tgz",
5653 |       "integrity": "sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==",
5654 |       "dev": true,
5655 |       "dependencies": {
5656 |         "tmpl": "1.0.5"
5657 |       }
5658 |     },
5659 |     "node_modules/map-cache": {
5660 |       "version": "0.2.2",
5661 |       "resolved": "https://registry.npmmirror.com/map-cache/-/map-cache-0.2.2.tgz",
5662 |       "integrity": "sha512-8y/eV9QQZCiyn1SprXSrCmqJN0yNRATe+PO8ztwqrvrbdRLA3eYJF0yaR0YayLWkMbsQSKWS9N2gPcGEc4UsZg==",
5663 |       "dev": true,
5664 |       "engines": {
5665 |         "node": ">=0.10.0"
5666 |       }
5667 |     },
5668 |     "node_modules/map-visit": {
5669 |       "version": "1.0.0",
5670 |       "resolved": "https://registry.npmmirror.com/map-visit/-/map-visit-1.0.0.tgz",
5671 |       "integrity": "sha512-4y7uGv8bd2WdM9vpQsiQNo41Ln1NvhvDRuVt0k2JZQ+ezN2uaQes7lZeZ+QQUHOLQAtDaBJ+7wCbi+ab/KFs+w==",
5672 |       "dev": true,
5673 |       "dependencies": {
5674 |         "object-visit": "^1.0.0"
5675 |       },
5676 |       "engines": {
5677 |         "node": ">=0.10.0"
5678 |       }
5679 |     },
5680 |     "node_modules/merge-stream": {
5681 |       "version": "2.0.0",
5682 |       "resolved": "https://registry.npmmirror.com/merge-stream/-/merge-stream-2.0.0.tgz",
5683 |       "integrity": "sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==",
5684 |       "dev": true
5685 |     },
5686 |     "node_modules/merge2": {
5687 |       "version": "1.4.1",
5688 |       "resolved": "https://registry.npmmirror.com/merge2/-/merge2-1.4.1.tgz",
5689 |       "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
5690 |       "dev": true,
5691 |       "engines": {
5692 |         "node": ">= 8"
5693 |       }
5694 |     },
5695 |     "node_modules/micromatch": {
5696 |       "version": "4.0.8",
5697 |       "resolved": "https://registry.npmmirror.com/micromatch/-/micromatch-4.0.8.tgz",
5698 |       "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
5699 |       "dev": true,
5700 |       "dependencies": {
5701 |         "braces": "^3.0.3",
5702 |         "picomatch": "^2.3.1"
5703 |       },
5704 |       "engines": {
5705 |         "node": ">=8.6"
5706 |       }
5707 |     },
5708 |     "node_modules/mimic-fn": {
5709 |       "version": "2.1.0",
5710 |       "resolved": "https://registry.npmmirror.com/mimic-fn/-/mimic-fn-2.1.0.tgz",
5711 |       "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==",
5712 |       "dev": true,
5713 |       "engines": {
5714 |         "node": ">=6"
5715 |       }
5716 |     },
5717 |     "node_modules/min-indent": {
5718 |       "version": "1.0.1",
5719 |       "resolved": "https://registry.npmmirror.com/min-indent/-/min-indent-1.0.1.tgz",
5720 |       "integrity": "sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==",
5721 |       "dev": true,
5722 |       "engines": {
5723 |         "node": ">=4"
5724 |       }
5725 |     },
5726 |     "node_modules/minimatch": {
5727 |       "version": "3.1.2",
5728 |       "resolved": "https://registry.npmmirror.com/minimatch/-/minimatch-3.1.2.tgz",
5729 |       "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
5730 |       "dev": true,
5731 |       "dependencies": {
5732 |         "brace-expansion": "^1.1.7"
5733 |       },
5734 |       "engines": {
5735 |         "node": "*"
5736 |       }
5737 |     },
5738 |     "node_modules/minimist": {
5739 |       "version": "1.2.8",
5740 |       "resolved": "https://registry.npmmirror.com/minimist/-/minimist-1.2.8.tgz",
5741 |       "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
5742 |       "dev": true,
5743 |       "funding": {
5744 |         "url": "https://github.com/sponsors/ljharb"
5745 |       }
5746 |     },
5747 |     "node_modules/mixin-deep": {
5748 |       "version": "1.3.2",
5749 |       "resolved": "https://registry.npmmirror.com/mixin-deep/-/mixin-deep-1.3.2.tgz",
5750 |       "integrity": "sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==",
5751 |       "dev": true,
5752 |       "dependencies": {
5753 |         "for-in": "^1.0.2",
5754 |         "is-extendable": "^1.0.1"
5755 |       },
5756 |       "engines": {
5757 |         "node": ">=0.10.0"
5758 |       }
5759 |     },
5760 |     "node_modules/mkdirp": {
5761 |       "version": "0.5.6",
5762 |       "resolved": "https://registry.npmmirror.com/mkdirp/-/mkdirp-0.5.6.tgz",
5763 |       "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
5764 |       "dev": true,
5765 |       "dependencies": {
5766 |         "minimist": "^1.2.6"
5767 |       },
5768 |       "bin": {
5769 |         "mkdirp": "bin/cmd.js"
5770 |       }
5771 |     },
5772 |     "node_modules/moment": {
5773 |       "version": "2.29.4",
5774 |       "resolved": "https://registry.npmmirror.com/moment/-/moment-2.29.4.tgz",
5775 |       "integrity": "sha512-5LC9SOxjSc2HF6vO2CyuTDNivEdoz2IvyJJGj6X8DJ0eFyfszE0QiEd+iXmBvUP3WHxSjFH/vIsA0EN00cgr8w==",
5776 |       "dev": true,
5777 |       "engines": {
5778 |         "node": "*"
5779 |       }
5780 |     },
5781 |     "node_modules/mri": {
5782 |       "version": "1.2.0",
5783 |       "resolved": "https://registry.npmmirror.com/mri/-/mri-1.2.0.tgz",
5784 |       "integrity": "sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==",
5785 |       "dev": true,
5786 |       "engines": {
5787 |         "node": ">=4"
5788 |       }
5789 |     },
5790 |     "node_modules/ms": {
5791 |       "version": "2.1.3",
5792 |       "resolved": "https://registry.npmmirror.com/ms/-/ms-2.1.3.tgz",
5793 |       "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
5794 |       "dev": true
5795 |     },
5796 |     "node_modules/nanomatch": {
5797 |       "version": "1.2.13",
5798 |       "resolved": "https://registry.npmmirror.com/nanomatch/-/nanomatch-1.2.13.tgz",
5799 |       "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",
5800 |       "dev": true,
5801 |       "dependencies": {
5802 |         "arr-diff": "^4.0.0",
5803 |         "array-unique": "^0.3.2",
5804 |         "define-property": "^2.0.2",
5805 |         "extend-shallow": "^3.0.2",
5806 |         "fragment-cache": "^0.2.1",
5807 |         "is-windows": "^1.0.2",
5808 |         "kind-of": "^6.0.2",
5809 |         "object.pick": "^1.3.0",
5810 |         "regex-not": "^1.0.0",
5811 |         "snapdragon": "^0.8.1",
5812 |         "to-regex": "^3.0.1"
5813 |       },
5814 |       "engines": {
5815 |         "node": ">=0.10.0"
5816 |       }
5817 |     },
5818 |     "node_modules/natural-compare": {
5819 |       "version": "1.4.0",
5820 |       "resolved": "https://registry.npmmirror.com/natural-compare/-/natural-compare-1.4.0.tgz",
5821 |       "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
5822 |       "dev": true
5823 |     },
5824 |     "node_modules/nice-try": {
5825 |       "version": "1.0.5",
5826 |       "resolved": "https://registry.npmmirror.com/nice-try/-/nice-try-1.0.5.tgz",
5827 |       "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==",
5828 |       "dev": true
5829 |     },
5830 |     "node_modules/node-addon-api": {
5831 |       "version": "7.1.1",
5832 |       "resolved": "https://registry.npmmirror.com/node-addon-api/-/node-addon-api-7.1.1.tgz",
5833 |       "integrity": "sha512-5m3bsyrjFWE1xf7nz7YXdN4udnVtXK6/Yfgn5qnahL6bCkf2yKt4k3nuTKAtT4r3IG8JNR2ncsIMdZuAzJjHQQ==",
5834 |       "dev": true,
5835 |       "optional": true
5836 |     },
5837 |     "node_modules/node-int64": {
5838 |       "version": "0.4.0",
5839 |       "resolved": "https://registry.npmmirror.com/node-int64/-/node-int64-0.4.0.tgz",
5840 |       "integrity": "sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==",
5841 |       "dev": true
5842 |     },
5843 |     "node_modules/node-releases": {
5844 |       "version": "2.0.18",
5845 |       "resolved": "https://registry.npmmirror.com/node-releases/-/node-releases-2.0.18.tgz",
5846 |       "integrity": "sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==",
5847 |       "dev": true
5848 |     },
5849 |     "node_modules/normalize-path": {
5850 |       "version": "3.0.0",
5851 |       "resolved": "https://registry.npmmirror.com/normalize-path/-/normalize-path-3.0.0.tgz",
5852 |       "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
5853 |       "dev": true,
5854 |       "engines": {
5855 |         "node": ">=0.10.0"
5856 |       }
5857 |     },
5858 |     "node_modules/npm-run-path": {
5859 |       "version": "4.0.1",
5860 |       "resolved": "https://registry.npmmirror.com/npm-run-path/-/npm-run-path-4.0.1.tgz",
5861 |       "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==",
5862 |       "dev": true,
5863 |       "dependencies": {
5864 |         "path-key": "^3.0.0"
5865 |       },
5866 |       "engines": {
5867 |         "node": ">=8"
5868 |       }
5869 |     },
5870 |     "node_modules/object-copy": {
5871 |       "version": "0.1.0",
5872 |       "resolved": "https://registry.npmmirror.com/object-copy/-/object-copy-0.1.0.tgz",
5873 |       "integrity": "sha512-79LYn6VAb63zgtmAteVOWo9Vdj71ZVBy3Pbse+VqxDpEP83XuujMrGqHIwAXJ5I/aM0zU7dIyIAhifVTPrNItQ==",
5874 |       "dev": true,
5875 |       "dependencies": {
5876 |         "copy-descriptor": "^0.1.0",
5877 |         "define-property": "^0.2.5",
5878 |         "kind-of": "^3.0.3"
5879 |       },
5880 |       "engines": {
5881 |         "node": ">=0.10.0"
5882 |       }
5883 |     },
5884 |     "node_modules/object-copy/node_modules/define-property": {
5885 |       "version": "0.2.5",
5886 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-0.2.5.tgz",
5887 |       "integrity": "sha512-Rr7ADjQZenceVOAKop6ALkkRAmH1A4Gx9hV/7ZujPUN2rkATqFO0JZLZInbAjpZYoJ1gUx8MRMQVkYemcbMSTA==",
5888 |       "dev": true,
5889 |       "dependencies": {
5890 |         "is-descriptor": "^0.1.0"
5891 |       },
5892 |       "engines": {
5893 |         "node": ">=0.10.0"
5894 |       }
5895 |     },
5896 |     "node_modules/object-copy/node_modules/is-descriptor": {
5897 |       "version": "0.1.7",
5898 |       "resolved": "https://registry.npmmirror.com/is-descriptor/-/is-descriptor-0.1.7.tgz",
5899 |       "integrity": "sha512-C3grZTvObeN1xud4cRWl366OMXZTj0+HGyk4hvfpx4ZHt1Pb60ANSXqCK7pdOTeUQpRzECBSTphqvD7U+l22Eg==",
5900 |       "dev": true,
5901 |       "dependencies": {
5902 |         "is-accessor-descriptor": "^1.0.1",
5903 |         "is-data-descriptor": "^1.0.1"
5904 |       },
5905 |       "engines": {
5906 |         "node": ">= 0.4"
5907 |       }
5908 |     },
5909 |     "node_modules/object-copy/node_modules/kind-of": {
5910 |       "version": "3.2.2",
5911 |       "resolved": "https://registry.npmmirror.com/kind-of/-/kind-of-3.2.2.tgz",
5912 |       "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
5913 |       "dev": true,
5914 |       "dependencies": {
5915 |         "is-buffer": "^1.1.5"
5916 |       },
5917 |       "engines": {
5918 |         "node": ">=0.10.0"
5919 |       }
5920 |     },
5921 |     "node_modules/object-visit": {
5922 |       "version": "1.0.1",
5923 |       "resolved": "https://registry.npmmirror.com/object-visit/-/object-visit-1.0.1.tgz",
5924 |       "integrity": "sha512-GBaMwwAVK9qbQN3Scdo0OyvgPW7l3lnaVMj84uTOZlswkX0KpF6fyDBJhtTthf7pymztoN36/KEr1DyhF96zEA==",
5925 |       "dev": true,
5926 |       "dependencies": {
5927 |         "isobject": "^3.0.0"
5928 |       },
5929 |       "engines": {
5930 |         "node": ">=0.10.0"
5931 |       }
5932 |     },
5933 |     "node_modules/object.pick": {
5934 |       "version": "1.3.0",
5935 |       "resolved": "https://registry.npmmirror.com/object.pick/-/object.pick-1.3.0.tgz",
5936 |       "integrity": "sha512-tqa/UMy/CCoYmj+H5qc07qvSL9dqcs/WZENZ1JbtWBlATP+iVOe778gE6MSijnyCnORzDuX6hU+LA4SZ09YjFQ==",
5937 |       "dev": true,
5938 |       "dependencies": {
5939 |         "isobject": "^3.0.1"
5940 |       },
5941 |       "engines": {
5942 |         "node": ">=0.10.0"
5943 |       }
5944 |     },
5945 |     "node_modules/obsidian": {
5946 |       "version": "1.7.2",
5947 |       "resolved": "git+ssh://git@github.com/obsidianmd/obsidian-api.git#23947b58d372ea02225324308e31d36b4aa95869",
5948 |       "dev": true,
5949 |       "license": "MIT",
5950 |       "dependencies": {
5951 |         "@types/codemirror": "5.60.8",
5952 |         "moment": "2.29.4"
5953 |       },
5954 |       "peerDependencies": {
5955 |         "@codemirror/state": "^6.0.0",
5956 |         "@codemirror/view": "^6.0.0"
5957 |       }
5958 |     },
5959 |     "node_modules/obsidian-calendar-ui": {
5960 |       "version": "0.3.12",
5961 |       "resolved": "https://registry.npmmirror.com/obsidian-calendar-ui/-/obsidian-calendar-ui-0.3.12.tgz",
5962 |       "integrity": "sha512-hdoRqCPnukfRgCARgArXaqMQZ+Iai0eY7f0ZsFHHfywpv4gKg3Tx5p47UsLvRO5DD+4knlbrL7Gel57MkfcLTw==",
5963 |       "dev": true,
5964 |       "dependencies": {
5965 |         "obsidian-daily-notes-interface": "0.8.4",
5966 |         "svelte": "3.35.0",
5967 |         "tslib": "2.1.0"
5968 |       }
5969 |     },
5970 |     "node_modules/obsidian-calendar-ui/node_modules/svelte": {
5971 |       "version": "3.35.0",
5972 |       "resolved": "https://registry.npmmirror.com/svelte/-/svelte-3.35.0.tgz",
5973 |       "integrity": "sha512-gknlZkR2sXheu/X+B7dDImwANVvK1R0QGQLd8CNIfxxGPeXBmePnxfzb6fWwTQRsYQG7lYkZXvpXJvxvpsoB7g==",
5974 |       "dev": true,
5975 |       "engines": {
5976 |         "node": ">= 8"
5977 |       }
5978 |     },
5979 |     "node_modules/obsidian-calendar-ui/node_modules/tslib": {
5980 |       "version": "2.1.0",
5981 |       "resolved": "https://registry.npmmirror.com/tslib/-/tslib-2.1.0.tgz",
5982 |       "integrity": "sha512-hcVC3wYEziELGGmEEXue7D75zbwIIVUMWAVbHItGPx0ziyXxrOMQx4rQEVEV45Ut/1IotuEvwqPopzIOkDMf0A==",
5983 |       "dev": true
5984 |     },
5985 |     "node_modules/obsidian-daily-notes-interface": {
5986 |       "version": "0.8.4",
5987 |       "resolved": "https://registry.npmmirror.com/obsidian-daily-notes-interface/-/obsidian-daily-notes-interface-0.8.4.tgz",
5988 |       "integrity": "sha512-REKQtAuIOKDbvNH/th1C1gWmJWCP5tRn9T/mfZGZt4Zncgko7McXK0aSKFtEInipvgbZJ2nScivvyLdiWluSMw==",
5989 |       "dev": true,
5990 |       "dependencies": {
5991 |         "obsidian": "github:obsidianmd/obsidian-api#master",
5992 |         "tslib": "2.1.0"
5993 |       },
5994 |       "bin": {
5995 |         "obsidian-daily-notes-interface": "dist/main.js"
5996 |       }
5997 |     },
5998 |     "node_modules/obsidian-daily-notes-interface/node_modules/tslib": {
5999 |       "version": "2.1.0",
6000 |       "resolved": "https://registry.npmmirror.com/tslib/-/tslib-2.1.0.tgz",
6001 |       "integrity": "sha512-hcVC3wYEziELGGmEEXue7D75zbwIIVUMWAVbHItGPx0ziyXxrOMQx4rQEVEV45Ut/1IotuEvwqPopzIOkDMf0A==",
6002 |       "dev": true
6003 |     },
6004 |     "node_modules/obsidian-dataview": {
6005 |       "version": "0.5.67",
6006 |       "resolved": "https://registry.npmmirror.com/obsidian-dataview/-/obsidian-dataview-0.5.67.tgz",
6007 |       "integrity": "sha512-nLQrjvZ6Ny5s6mCfi+rv0TsdYkKTV4YfDqyLNixxNkyLCqgE9AXKJlJNnkv3Ic1brGOw2m/0SgtdWykKzobwMQ==",
6008 |       "dev": true,
6009 |       "dependencies": {
6010 |         "@codemirror/language": "git+https://github.com/lishid/cm-language.git",
6011 |         "@codemirror/state": "^6.0.1",
6012 |         "@codemirror/view": "^6.0.1",
6013 |         "emoji-regex": "^10.0.0",
6014 |         "localforage": "^1.10.0",
6015 |         "luxon": "^3.2.0",
6016 |         "obsidian-calendar-ui": "^0.3.12",
6017 |         "papaparse": "^5.3.1",
6018 |         "parsimmon": "^1.18.0",
6019 |         "preact": "^10.6.5"
6020 |       }
6021 |     },
6022 |     "node_modules/obsidian-svelte": {
6023 |       "version": "0.2.1",
6024 |       "resolved": "https://registry.npmmirror.com/obsidian-svelte/-/obsidian-svelte-0.2.1.tgz",
6025 |       "integrity": "sha512-FA9mdvgtUi13PAA77Nw9BV3A4Hm8095V94ZTFNNIDmEdo2cp0AW4Zq/doWCjD0Zi4hQMLqMn9qAJapxTzQe+SQ==",
6026 |       "dev": true,
6027 |       "dependencies": {
6028 |         "dayjs": "^1.11.6"
6029 |       }
6030 |     },
6031 |     "node_modules/once": {
6032 |       "version": "1.4.0",
6033 |       "resolved": "https://registry.npmmirror.com/once/-/once-1.4.0.tgz",
6034 |       "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
6035 |       "dev": true,
6036 |       "dependencies": {
6037 |         "wrappy": "1"
6038 |       }
6039 |     },
6040 |     "node_modules/onetime": {
6041 |       "version": "5.1.2",
6042 |       "resolved": "https://registry.npmmirror.com/onetime/-/onetime-5.1.2.tgz",
6043 |       "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==",
6044 |       "dev": true,
6045 |       "dependencies": {
6046 |         "mimic-fn": "^2.1.0"
6047 |       },
6048 |       "engines": {
6049 |         "node": ">=6"
6050 |       },
6051 |       "funding": {
6052 |         "url": "https://github.com/sponsors/sindresorhus"
6053 |       }
6054 |     },
6055 |     "node_modules/optionator": {
6056 |       "version": "0.9.4",
6057 |       "resolved": "https://registry.npmmirror.com/optionator/-/optionator-0.9.4.tgz",
6058 |       "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
6059 |       "dev": true,
6060 |       "dependencies": {
6061 |         "deep-is": "^0.1.3",
6062 |         "fast-levenshtein": "^2.0.6",
6063 |         "levn": "^0.4.1",
6064 |         "prelude-ls": "^1.2.1",
6065 |         "type-check": "^0.4.0",
6066 |         "word-wrap": "^1.2.5"
6067 |       },
6068 |       "engines": {
6069 |         "node": ">= 0.8.0"
6070 |       }
6071 |     },
6072 |     "node_modules/p-finally": {
6073 |       "version": "1.0.0",
6074 |       "resolved": "https://registry.npmmirror.com/p-finally/-/p-finally-1.0.0.tgz",
6075 |       "integrity": "sha512-LICb2p9CB7FS+0eR1oqWnHhp0FljGLZCWBE9aix0Uye9W8LTQPwMTYVGWQWIw9RdQiDg4+epXQODwIYJtSJaow==",
6076 |       "dev": true,
6077 |       "engines": {
6078 |         "node": ">=4"
6079 |       }
6080 |     },
6081 |     "node_modules/p-limit": {
6082 |       "version": "3.1.0",
6083 |       "resolved": "https://registry.npmmirror.com/p-limit/-/p-limit-3.1.0.tgz",
6084 |       "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
6085 |       "dev": true,
6086 |       "dependencies": {
6087 |         "yocto-queue": "^0.1.0"
6088 |       },
6089 |       "engines": {
6090 |         "node": ">=10"
6091 |       },
6092 |       "funding": {
6093 |         "url": "https://github.com/sponsors/sindresorhus"
6094 |       }
6095 |     },
6096 |     "node_modules/p-locate": {
6097 |       "version": "4.1.0",
6098 |       "resolved": "https://registry.npmmirror.com/p-locate/-/p-locate-4.1.0.tgz",
6099 |       "integrity": "sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==",
6100 |       "dev": true,
6101 |       "dependencies": {
6102 |         "p-limit": "^2.2.0"
6103 |       },
6104 |       "engines": {
6105 |         "node": ">=8"
6106 |       }
6107 |     },
6108 |     "node_modules/p-locate/node_modules/p-limit": {
6109 |       "version": "2.3.0",
6110 |       "resolved": "https://registry.npmmirror.com/p-limit/-/p-limit-2.3.0.tgz",
6111 |       "integrity": "sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==",
6112 |       "dev": true,
6113 |       "dependencies": {
6114 |         "p-try": "^2.0.0"
6115 |       },
6116 |       "engines": {
6117 |         "node": ">=6"
6118 |       },
6119 |       "funding": {
6120 |         "url": "https://github.com/sponsors/sindresorhus"
6121 |       }
6122 |     },
6123 |     "node_modules/p-try": {
6124 |       "version": "2.2.0",
6125 |       "resolved": "https://registry.npmmirror.com/p-try/-/p-try-2.2.0.tgz",
6126 |       "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==",
6127 |       "dev": true,
6128 |       "engines": {
6129 |         "node": ">=6"
6130 |       }
6131 |     },
6132 |     "node_modules/papaparse": {
6133 |       "version": "5.4.1",
6134 |       "resolved": "https://registry.npmmirror.com/papaparse/-/papaparse-5.4.1.tgz",
6135 |       "integrity": "sha512-HipMsgJkZu8br23pW15uvo6sib6wne/4woLZPlFf3rpDyMe9ywEXUsuD7+6K9PRkJlVT51j/sCOYDKGGS3ZJrw==",
6136 |       "dev": true
6137 |     },
6138 |     "node_modules/parent-module": {
6139 |       "version": "1.0.1",
6140 |       "resolved": "https://registry.npmmirror.com/parent-module/-/parent-module-1.0.1.tgz",
6141 |       "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
6142 |       "dev": true,
6143 |       "dependencies": {
6144 |         "callsites": "^3.0.0"
6145 |       },
6146 |       "engines": {
6147 |         "node": ">=6"
6148 |       }
6149 |     },
6150 |     "node_modules/parse-json": {
6151 |       "version": "5.2.0",
6152 |       "resolved": "https://registry.npmmirror.com/parse-json/-/parse-json-5.2.0.tgz",
6153 |       "integrity": "sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==",
6154 |       "dev": true,
6155 |       "dependencies": {
6156 |         "@babel/code-frame": "^7.0.0",
6157 |         "error-ex": "^1.3.1",
6158 |         "json-parse-even-better-errors": "^2.3.0",
6159 |         "lines-and-columns": "^1.1.6"
6160 |       },
6161 |       "engines": {
6162 |         "node": ">=8"
6163 |       },
6164 |       "funding": {
6165 |         "url": "https://github.com/sponsors/sindresorhus"
6166 |       }
6167 |     },
6168 |     "node_modules/parsimmon": {
6169 |       "version": "1.18.1",
6170 |       "resolved": "https://registry.npmmirror.com/parsimmon/-/parsimmon-1.18.1.tgz",
6171 |       "integrity": "sha512-u7p959wLfGAhJpSDJVYXoyMCXWYwHia78HhRBWqk7AIbxdmlrfdp5wX0l3xv/iTSH5HvhN9K7o26hwwpgS5Nmw==",
6172 |       "dev": true
6173 |     },
6174 |     "node_modules/pascalcase": {
6175 |       "version": "0.1.1",
6176 |       "resolved": "https://registry.npmmirror.com/pascalcase/-/pascalcase-0.1.1.tgz",
6177 |       "integrity": "sha512-XHXfu/yOQRy9vYOtUDVMN60OEJjW013GoObG1o+xwQTpB9eYJX/BjXMsdW13ZDPruFhYYn0AG22w0xgQMwl3Nw==",
6178 |       "dev": true,
6179 |       "engines": {
6180 |         "node": ">=0.10.0"
6181 |       }
6182 |     },
6183 |     "node_modules/path-exists": {
6184 |       "version": "4.0.0",
6185 |       "resolved": "https://registry.npmmirror.com/path-exists/-/path-exists-4.0.0.tgz",
6186 |       "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
6187 |       "dev": true,
6188 |       "engines": {
6189 |         "node": ">=8"
6190 |       }
6191 |     },
6192 |     "node_modules/path-is-absolute": {
6193 |       "version": "1.0.1",
6194 |       "resolved": "https://registry.npmmirror.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
6195 |       "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
6196 |       "dev": true,
6197 |       "engines": {
6198 |         "node": ">=0.10.0"
6199 |       }
6200 |     },
6201 |     "node_modules/path-key": {
6202 |       "version": "3.1.1",
6203 |       "resolved": "https://registry.npmmirror.com/path-key/-/path-key-3.1.1.tgz",
6204 |       "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
6205 |       "dev": true,
6206 |       "engines": {
6207 |         "node": ">=8"
6208 |       }
6209 |     },
6210 |     "node_modules/path-parse": {
6211 |       "version": "1.0.7",
6212 |       "resolved": "https://registry.npmmirror.com/path-parse/-/path-parse-1.0.7.tgz",
6213 |       "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
6214 |       "dev": true
6215 |     },
6216 |     "node_modules/picocolors": {
6217 |       "version": "1.1.1",
6218 |       "resolved": "https://registry.npmmirror.com/picocolors/-/picocolors-1.1.1.tgz",
6219 |       "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
6220 |       "dev": true
6221 |     },
6222 |     "node_modules/picomatch": {
6223 |       "version": "2.3.1",
6224 |       "resolved": "https://registry.npmmirror.com/picomatch/-/picomatch-2.3.1.tgz",
6225 |       "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
6226 |       "dev": true,
6227 |       "engines": {
6228 |         "node": ">=8.6"
6229 |       },
6230 |       "funding": {
6231 |         "url": "https://github.com/sponsors/jonschlinkert"
6232 |       }
6233 |     },
6234 |     "node_modules/pirates": {
6235 |       "version": "4.0.6",
6236 |       "resolved": "https://registry.npmmirror.com/pirates/-/pirates-4.0.6.tgz",
6237 |       "integrity": "sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==",
6238 |       "dev": true,
6239 |       "engines": {
6240 |         "node": ">= 6"
6241 |       }
6242 |     },
6243 |     "node_modules/pkg-dir": {
6244 |       "version": "4.2.0",
6245 |       "resolved": "https://registry.npmmirror.com/pkg-dir/-/pkg-dir-4.2.0.tgz",
6246 |       "integrity": "sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==",
6247 |       "dev": true,
6248 |       "dependencies": {
6249 |         "find-up": "^4.0.0"
6250 |       },
6251 |       "engines": {
6252 |         "node": ">=8"
6253 |       }
6254 |     },
6255 |     "node_modules/posix-character-classes": {
6256 |       "version": "0.1.1",
6257 |       "resolved": "https://registry.npmmirror.com/posix-character-classes/-/posix-character-classes-0.1.1.tgz",
6258 |       "integrity": "sha512-xTgYBc3fuo7Yt7JbiuFxSYGToMoz8fLoE6TC9Wx1P/u+LfeThMOAqmuyECnlBaaJb+u1m9hHiXUEtwW4OzfUJg==",
6259 |       "dev": true,
6260 |       "engines": {
6261 |         "node": ">=0.10.0"
6262 |       }
6263 |     },
6264 |     "node_modules/preact": {
6265 |       "version": "10.24.3",
6266 |       "resolved": "https://registry.npmmirror.com/preact/-/preact-10.24.3.tgz",
6267 |       "integrity": "sha512-Z2dPnBnMUfyQfSQ+GBdsGa16hz35YmLmtTLhM169uW944hYL6xzTYkJjC07j+Wosz733pMWx0fgON3JNw1jJQA==",
6268 |       "dev": true,
6269 |       "funding": {
6270 |         "type": "opencollective",
6271 |         "url": "https://opencollective.com/preact"
6272 |       }
6273 |     },
6274 |     "node_modules/prelude-ls": {
6275 |       "version": "1.2.1",
6276 |       "resolved": "https://registry.npmmirror.com/prelude-ls/-/prelude-ls-1.2.1.tgz",
6277 |       "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
6278 |       "dev": true,
6279 |       "engines": {
6280 |         "node": ">= 0.8.0"
6281 |       }
6282 |     },
6283 |     "node_modules/prettier": {
6284 |       "version": "3.4.1",
6285 |       "resolved": "https://registry.npmmirror.com/prettier/-/prettier-3.4.1.tgz",
6286 |       "integrity": "sha512-G+YdqtITVZmOJje6QkXQWzl3fSfMxFwm1tjTyo9exhkmWSqC4Yhd1+lug++IlR2mvRVAxEDDWYkQdeSztajqgg==",
6287 |       "dev": true,
6288 |       "bin": {
6289 |         "prettier": "bin/prettier.cjs"
6290 |       },
6291 |       "engines": {
6292 |         "node": ">=14"
6293 |       },
6294 |       "funding": {
6295 |         "url": "https://github.com/prettier/prettier?sponsor=1"
6296 |       }
6297 |     },
6298 |     "node_modules/prettier-plugin-svelte": {
6299 |       "version": "3.3.2",
6300 |       "resolved": "https://registry.npmmirror.com/prettier-plugin-svelte/-/prettier-plugin-svelte-3.3.2.tgz",
6301 |       "integrity": "sha512-kRPjH8wSj2iu+dO+XaUv4vD8qr5mdDmlak3IT/7AOgGIMRG86z/EHOLauFcClKEnOUf4A4nOA7sre5KrJD4Raw==",
6302 |       "dev": true,
6303 |       "peerDependencies": {
6304 |         "prettier": "^3.0.0",
6305 |         "svelte": "^3.2.0 || ^4.0.0-next.0 || ^5.0.0-next.0"
6306 |       }
6307 |     },
6308 |     "node_modules/pretty-format": {
6309 |       "version": "29.7.0",
6310 |       "resolved": "https://registry.npmmirror.com/pretty-format/-/pretty-format-29.7.0.tgz",
6311 |       "integrity": "sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==",
6312 |       "dev": true,
6313 |       "dependencies": {
6314 |         "@jest/schemas": "^29.6.3",
6315 |         "ansi-styles": "^5.0.0",
6316 |         "react-is": "^18.0.0"
6317 |       },
6318 |       "engines": {
6319 |         "node": "^14.15.0 || ^16.10.0 || >=18.0.0"
6320 |       }
6321 |     },
6322 |     "node_modules/pretty-format/node_modules/ansi-styles": {
6323 |       "version": "5.2.0",
6324 |       "resolved": "https://registry.npmmirror.com/ansi-styles/-/ansi-styles-5.2.0.tgz",
6325 |       "integrity": "sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==",
6326 |       "dev": true,
6327 |       "engines": {
6328 |         "node": ">=10"
6329 |       },
6330 |       "funding": {
6331 |         "url": "https://github.com/chalk/ansi-styles?sponsor=1"
6332 |       }
6333 |     },
6334 |     "node_modules/prompts": {
6335 |       "version": "2.4.2",
6336 |       "resolved": "https://registry.npmmirror.com/prompts/-/prompts-2.4.2.tgz",
6337 |       "integrity": "sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==",
6338 |       "dev": true,
6339 |       "dependencies": {
6340 |         "kleur": "^3.0.3",
6341 |         "sisteransi": "^1.0.5"
6342 |       },
6343 |       "engines": {
6344 |         "node": ">= 6"
6345 |       }
6346 |     },
6347 |     "node_modules/pump": {
6348 |       "version": "3.0.2",
6349 |       "resolved": "https://registry.npmmirror.com/pump/-/pump-3.0.2.tgz",
6350 |       "integrity": "sha512-tUPXtzlGM8FE3P0ZL6DVs/3P58k9nk8/jZeQCurTJylQA8qFYzHFfhBJkuqyE0FifOsQ0uKWekiZ5g8wtr28cw==",
6351 |       "dev": true,
6352 |       "dependencies": {
6353 |         "end-of-stream": "^1.1.0",
6354 |         "once": "^1.3.1"
6355 |       }
6356 |     },
6357 |     "node_modules/punycode": {
6358 |       "version": "2.3.1",
6359 |       "resolved": "https://registry.npmmirror.com/punycode/-/punycode-2.3.1.tgz",
6360 |       "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
6361 |       "dev": true,
6362 |       "engines": {
6363 |         "node": ">=6"
6364 |       }
6365 |     },
6366 |     "node_modules/pure-rand": {
6367 |       "version": "6.1.0",
6368 |       "resolved": "https://registry.npmmirror.com/pure-rand/-/pure-rand-6.1.0.tgz",
6369 |       "integrity": "sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==",
6370 |       "dev": true,
6371 |       "funding": [
6372 |         {
6373 |           "type": "individual",
6374 |           "url": "https://github.com/sponsors/dubzzz"
6375 |         },
6376 |         {
6377 |           "type": "opencollective",
6378 |           "url": "https://opencollective.com/fast-check"
6379 |         }
6380 |       ]
6381 |     },
6382 |     "node_modules/queue-microtask": {
6383 |       "version": "1.2.3",
6384 |       "resolved": "https://registry.npmmirror.com/queue-microtask/-/queue-microtask-1.2.3.tgz",
6385 |       "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
6386 |       "dev": true,
6387 |       "funding": [
6388 |         {
6389 |           "type": "github",
6390 |           "url": "https://github.com/sponsors/feross"
6391 |         },
6392 |         {
6393 |           "type": "patreon",
6394 |           "url": "https://www.patreon.com/feross"
6395 |         },
6396 |         {
6397 |           "type": "consulting",
6398 |           "url": "https://feross.org/support"
6399 |         }
6400 |       ]
6401 |     },
6402 |     "node_modules/react-is": {
6403 |       "version": "18.3.1",
6404 |       "resolved": "https://registry.npmmirror.com/react-is/-/react-is-18.3.1.tgz",
6405 |       "integrity": "sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==",
6406 |       "dev": true
6407 |     },
6408 |     "node_modules/readdirp": {
6409 |       "version": "4.0.2",
6410 |       "resolved": "https://registry.npmmirror.com/readdirp/-/readdirp-4.0.2.tgz",
6411 |       "integrity": "sha512-yDMz9g+VaZkqBYS/ozoBJwaBhTbZo3UNYQHNRw1D3UFQB8oHB4uS/tAODO+ZLjGWmUbKnIlOWO+aaIiAxrUWHA==",
6412 |       "dev": true,
6413 |       "engines": {
6414 |         "node": ">= 14.16.0"
6415 |       },
6416 |       "funding": {
6417 |         "type": "individual",
6418 |         "url": "https://paulmillr.com/funding/"
6419 |       }
6420 |     },
6421 |     "node_modules/regenerator-runtime": {
6422 |       "version": "0.14.1",
6423 |       "resolved": "https://registry.npmmirror.com/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz",
6424 |       "integrity": "sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==",
6425 |       "dev": true
6426 |     },
6427 |     "node_modules/regex-not": {
6428 |       "version": "1.0.2",
6429 |       "resolved": "https://registry.npmmirror.com/regex-not/-/regex-not-1.0.2.tgz",
6430 |       "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",
6431 |       "dev": true,
6432 |       "dependencies": {
6433 |         "extend-shallow": "^3.0.2",
6434 |         "safe-regex": "^1.1.0"
6435 |       },
6436 |       "engines": {
6437 |         "node": ">=0.10.0"
6438 |       }
6439 |     },
6440 |     "node_modules/remove-trailing-separator": {
6441 |       "version": "1.1.0",
6442 |       "resolved": "https://registry.npmmirror.com/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",
6443 |       "integrity": "sha512-/hS+Y0u3aOfIETiaiirUFwDBDzmXPvO+jAfKTitUngIPzdKc6Z0LoFjM/CK5PL4C+eKwHohlHAb6H0VFfmmUsw==",
6444 |       "dev": true
6445 |     },
6446 |     "node_modules/repeat-element": {
6447 |       "version": "1.1.4",
6448 |       "resolved": "https://registry.npmmirror.com/repeat-element/-/repeat-element-1.1.4.tgz",
6449 |       "integrity": "sha512-LFiNfRcSu7KK3evMyYOuCzv3L10TW7yC1G2/+StMjK8Y6Vqd2MG7r/Qjw4ghtuCOjFvlnms/iMmLqpvW/ES/WQ==",
6450 |       "dev": true,
6451 |       "engines": {
6452 |         "node": ">=0.10.0"
6453 |       }
6454 |     },
6455 |     "node_modules/repeat-string": {
6456 |       "version": "1.6.1",
6457 |       "resolved": "https://registry.npmmirror.com/repeat-string/-/repeat-string-1.6.1.tgz",
6458 |       "integrity": "sha512-PV0dzCYDNfRi1jCDbJzpW7jNNDRuCOG/jI5ctQcGKt/clZD+YcPS3yIlWuTJMmESC8aevCFmWJy5wjAFgNqN6w==",
6459 |       "dev": true,
6460 |       "engines": {
6461 |         "node": ">=0.10"
6462 |       }
6463 |     },
6464 |     "node_modules/require-directory": {
6465 |       "version": "2.1.1",
6466 |       "resolved": "https://registry.npmmirror.com/require-directory/-/require-directory-2.1.1.tgz",
6467 |       "integrity": "sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==",
6468 |       "dev": true,
6469 |       "engines": {
6470 |         "node": ">=0.10.0"
6471 |       }
6472 |     },
6473 |     "node_modules/require-from-string": {
6474 |       "version": "2.0.2",
6475 |       "resolved": "https://registry.npmmirror.com/require-from-string/-/require-from-string-2.0.2.tgz",
6476 |       "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==",
6477 |       "dev": true,
6478 |       "engines": {
6479 |         "node": ">=0.10.0"
6480 |       }
6481 |     },
6482 |     "node_modules/resolve": {
6483 |       "version": "1.22.8",
6484 |       "resolved": "https://registry.npmmirror.com/resolve/-/resolve-1.22.8.tgz",
6485 |       "integrity": "sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==",
6486 |       "dev": true,
6487 |       "dependencies": {
6488 |         "is-core-module": "^2.13.0",
6489 |         "path-parse": "^1.0.7",
6490 |         "supports-preserve-symlinks-flag": "^1.0.0"
6491 |       },
6492 |       "bin": {
6493 |         "resolve": "bin/resolve"
6494 |       },
6495 |       "funding": {
6496 |         "url": "https://github.com/sponsors/ljharb"
6497 |       }
6498 |     },
6499 |     "node_modules/resolve-cwd": {
6500 |       "version": "3.0.0",
6501 |       "resolved": "https://registry.npmmirror.com/resolve-cwd/-/resolve-cwd-3.0.0.tgz",
6502 |       "integrity": "sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==",
6503 |       "dev": true,
6504 |       "dependencies": {
6505 |         "resolve-from": "^5.0.0"
6506 |       },
6507 |       "engines": {
6508 |         "node": ">=8"
6509 |       }
6510 |     },
6511 |     "node_modules/resolve-from": {
6512 |       "version": "5.0.0",
6513 |       "resolved": "https://registry.npmmirror.com/resolve-from/-/resolve-from-5.0.0.tgz",
6514 |       "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==",
6515 |       "dev": true,
6516 |       "engines": {
6517 |         "node": ">=8"
6518 |       }
6519 |     },
6520 |     "node_modules/resolve-url": {
6521 |       "version": "0.2.1",
6522 |       "resolved": "https://registry.npmmirror.com/resolve-url/-/resolve-url-0.2.1.tgz",
6523 |       "integrity": "sha512-ZuF55hVUQaaczgOIwqWzkEcEidmlD/xl44x1UZnhOXcYuFN2S6+rcxpG+C1N3So0wvNI3DmJICUFfu2SxhBmvg==",
6524 |       "deprecated": "https://github.com/lydell/resolve-url#deprecated",
6525 |       "dev": true
6526 |     },
6527 |     "node_modules/resolve.exports": {
6528 |       "version": "2.0.2",
6529 |       "resolved": "https://registry.npmmirror.com/resolve.exports/-/resolve.exports-2.0.2.tgz",
6530 |       "integrity": "sha512-X2UW6Nw3n/aMgDVy+0rSqgHlv39WZAlZrXCdnbyEiKm17DSqHX4MmQMaST3FbeWR5FTuRcUwYAziZajji0Y7mg==",
6531 |       "dev": true,
6532 |       "engines": {
6533 |         "node": ">=10"
6534 |       }
6535 |     },
6536 |     "node_modules/ret": {
6537 |       "version": "0.1.15",
6538 |       "resolved": "https://registry.npmmirror.com/ret/-/ret-0.1.15.tgz",
6539 |       "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==",
6540 |       "dev": true,
6541 |       "engines": {
6542 |         "node": ">=0.12"
6543 |       }
6544 |     },
6545 |     "node_modules/reusify": {
6546 |       "version": "1.0.4",
6547 |       "resolved": "https://registry.npmmirror.com/reusify/-/reusify-1.0.4.tgz",
6548 |       "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
6549 |       "dev": true,
6550 |       "engines": {
6551 |         "iojs": ">=1.0.0",
6552 |         "node": ">=0.10.0"
6553 |       }
6554 |     },
6555 |     "node_modules/rsvp": {
6556 |       "version": "4.8.5",
6557 |       "resolved": "https://registry.npmmirror.com/rsvp/-/rsvp-4.8.5.tgz",
6558 |       "integrity": "sha512-nfMOlASu9OnRJo1mbEk2cz0D56a1MBNrJ7orjRZQG10XDyuvwksKbuXNp6qa+kbn839HwjwhBzhFmdsaEAfauA==",
6559 |       "dev": true,
6560 |       "engines": {
6561 |         "node": "6.* || >= 7.*"
6562 |       }
6563 |     },
6564 |     "node_modules/run-parallel": {
6565 |       "version": "1.2.0",
6566 |       "resolved": "https://registry.npmmirror.com/run-parallel/-/run-parallel-1.2.0.tgz",
6567 |       "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
6568 |       "dev": true,
6569 |       "funding": [
6570 |         {
6571 |           "type": "github",
6572 |           "url": "https://github.com/sponsors/feross"
6573 |         },
6574 |         {
6575 |           "type": "patreon",
6576 |           "url": "https://www.patreon.com/feross"
6577 |         },
6578 |         {
6579 |           "type": "consulting",
6580 |           "url": "https://feross.org/support"
6581 |         }
6582 |       ],
6583 |       "dependencies": {
6584 |         "queue-microtask": "^1.2.2"
6585 |       }
6586 |     },
6587 |     "node_modules/sade": {
6588 |       "version": "1.8.1",
6589 |       "resolved": "https://registry.npmmirror.com/sade/-/sade-1.8.1.tgz",
6590 |       "integrity": "sha512-xal3CZX1Xlo/k4ApwCFrHVACi9fBqJ7V+mwhBsuf/1IOKbBy098Fex+Wa/5QMubw09pSZ/u8EY8PWgevJsXp1A==",
6591 |       "dev": true,
6592 |       "dependencies": {
6593 |         "mri": "^1.1.0"
6594 |       },
6595 |       "engines": {
6596 |         "node": ">=6"
6597 |       }
6598 |     },
6599 |     "node_modules/safe-regex": {
6600 |       "version": "1.1.0",
6601 |       "resolved": "https://registry.npmmirror.com/safe-regex/-/safe-regex-1.1.0.tgz",
6602 |       "integrity": "sha512-aJXcif4xnaNUzvUuC5gcb46oTS7zvg4jpMTnuqtrEPlR3vFr4pxtdTwaF1Qs3Enjn9HK+ZlwQui+a7z0SywIzg==",
6603 |       "dev": true,
6604 |       "dependencies": {
6605 |         "ret": "~0.1.10"
6606 |       }
6607 |     },
6608 |     "node_modules/sander": {
6609 |       "version": "0.5.1",
6610 |       "resolved": "https://registry.npmmirror.com/sander/-/sander-0.5.1.tgz",
6611 |       "integrity": "sha512-3lVqBir7WuKDHGrKRDn/1Ye3kwpXaDOMsiRP1wd6wpZW56gJhsbp5RqQpA6JG/P+pkXizygnr1dKR8vzWaVsfA==",
6612 |       "dev": true,
6613 |       "dependencies": {
6614 |         "es6-promise": "^3.1.2",
6615 |         "graceful-fs": "^4.1.3",
6616 |         "mkdirp": "^0.5.1",
6617 |         "rimraf": "^2.5.2"
6618 |       }
6619 |     },
6620 |     "node_modules/sander/node_modules/rimraf": {
6621 |       "version": "2.7.1",
6622 |       "resolved": "https://registry.npmmirror.com/rimraf/-/rimraf-2.7.1.tgz",
6623 |       "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
6624 |       "deprecated": "Rimraf versions prior to v4 are no longer supported",
6625 |       "dev": true,
6626 |       "dependencies": {
6627 |         "glob": "^7.1.3"
6628 |       },
6629 |       "bin": {
6630 |         "rimraf": "bin.js"
6631 |       }
6632 |     },
6633 |     "node_modules/sane": {
6634 |       "version": "4.1.0",
6635 |       "resolved": "https://registry.npmmirror.com/sane/-/sane-4.1.0.tgz",
6636 |       "integrity": "sha512-hhbzAgTIX8O7SHfp2c8/kREfEn4qO/9q8C9beyY6+tvZ87EpoZ3i1RIEvp27YBswnNbY9mWd6paKVmKbAgLfZA==",
6637 |       "deprecated": "some dependency vulnerabilities fixed, support for node < 10 dropped, and newer ECMAScript syntax/features added",
6638 |       "dev": true,
6639 |       "dependencies": {
6640 |         "@cnakazawa/watch": "^1.0.3",
6641 |         "anymatch": "^2.0.0",
6642 |         "capture-exit": "^2.0.0",
6643 |         "exec-sh": "^0.3.2",
6644 |         "execa": "^1.0.0",
6645 |         "fb-watchman": "^2.0.0",
6646 |         "micromatch": "^3.1.4",
6647 |         "minimist": "^1.1.1",
6648 |         "walker": "~1.0.5"
6649 |       },
6650 |       "bin": {
6651 |         "sane": "src/cli.js"
6652 |       },
6653 |       "engines": {
6654 |         "node": "6.* || 8.* || >= 10.*"
6655 |       }
6656 |     },
6657 |     "node_modules/sane/node_modules/anymatch": {
6658 |       "version": "2.0.0",
6659 |       "resolved": "https://registry.npmmirror.com/anymatch/-/anymatch-2.0.0.tgz",
6660 |       "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",
6661 |       "dev": true,
6662 |       "dependencies": {
6663 |         "micromatch": "^3.1.4",
6664 |         "normalize-path": "^2.1.1"
6665 |       }
6666 |     },
6667 |     "node_modules/sane/node_modules/braces": {
6668 |       "version": "2.3.2",
6669 |       "resolved": "https://registry.npmmirror.com/braces/-/braces-2.3.2.tgz",
6670 |       "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",
6671 |       "dev": true,
6672 |       "dependencies": {
6673 |         "arr-flatten": "^1.1.0",
6674 |         "array-unique": "^0.3.2",
6675 |         "extend-shallow": "^2.0.1",
6676 |         "fill-range": "^4.0.0",
6677 |         "isobject": "^3.0.1",
6678 |         "repeat-element": "^1.1.2",
6679 |         "snapdragon": "^0.8.1",
6680 |         "snapdragon-node": "^2.0.1",
6681 |         "split-string": "^3.0.2",
6682 |         "to-regex": "^3.0.1"
6683 |       },
6684 |       "engines": {
6685 |         "node": ">=0.10.0"
6686 |       }
6687 |     },
6688 |     "node_modules/sane/node_modules/braces/node_modules/extend-shallow": {
6689 |       "version": "2.0.1",
6690 |       "resolved": "https://registry.npmmirror.com/extend-shallow/-/extend-shallow-2.0.1.tgz",
6691 |       "integrity": "sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==",
6692 |       "dev": true,
6693 |       "dependencies": {
6694 |         "is-extendable": "^0.1.0"
6695 |       },
6696 |       "engines": {
6697 |         "node": ">=0.10.0"
6698 |       }
6699 |     },
6700 |     "node_modules/sane/node_modules/cross-spawn": {
6701 |       "version": "6.0.6",
6702 |       "resolved": "https://registry.npmmirror.com/cross-spawn/-/cross-spawn-6.0.6.tgz",
6703 |       "integrity": "sha512-VqCUuhcd1iB+dsv8gxPttb5iZh/D0iubSP21g36KXdEuf6I5JiioesUVjpCdHV9MZRUfVFlvwtIUyPfxo5trtw==",
6704 |       "dev": true,
6705 |       "dependencies": {
6706 |         "nice-try": "^1.0.4",
6707 |         "path-key": "^2.0.1",
6708 |         "semver": "^5.5.0",
6709 |         "shebang-command": "^1.2.0",
6710 |         "which": "^1.2.9"
6711 |       },
6712 |       "engines": {
6713 |         "node": ">=4.8"
6714 |       }
6715 |     },
6716 |     "node_modules/sane/node_modules/execa": {
6717 |       "version": "1.0.0",
6718 |       "resolved": "https://registry.npmmirror.com/execa/-/execa-1.0.0.tgz",
6719 |       "integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7/nxfAdhnox83seTDbwnaqKO4sXRy7roHAIFqJP/Rw/AuEbX61LA==",
6720 |       "dev": true,
6721 |       "dependencies": {
6722 |         "cross-spawn": "^6.0.0",
6723 |         "get-stream": "^4.0.0",
6724 |         "is-stream": "^1.1.0",
6725 |         "npm-run-path": "^2.0.0",
6726 |         "p-finally": "^1.0.0",
6727 |         "signal-exit": "^3.0.0",
6728 |         "strip-eof": "^1.0.0"
6729 |       },
6730 |       "engines": {
6731 |         "node": ">=6"
6732 |       }
6733 |     },
6734 |     "node_modules/sane/node_modules/fill-range": {
6735 |       "version": "4.0.0",
6736 |       "resolved": "https://registry.npmmirror.com/fill-range/-/fill-range-4.0.0.tgz",
6737 |       "integrity": "sha512-VcpLTWqWDiTerugjj8e3+esbg+skS3M9e54UuR3iCeIDMXCLTsAH8hTSzDQU/X6/6t3eYkOKoZSef2PlU6U1XQ==",
6738 |       "dev": true,
6739 |       "dependencies": {
6740 |         "extend-shallow": "^2.0.1",
6741 |         "is-number": "^3.0.0",
6742 |         "repeat-string": "^1.6.1",
6743 |         "to-regex-range": "^2.1.0"
6744 |       },
6745 |       "engines": {
6746 |         "node": ">=0.10.0"
6747 |       }
6748 |     },
6749 |     "node_modules/sane/node_modules/fill-range/node_modules/extend-shallow": {
6750 |       "version": "2.0.1",
6751 |       "resolved": "https://registry.npmmirror.com/extend-shallow/-/extend-shallow-2.0.1.tgz",
6752 |       "integrity": "sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==",
6753 |       "dev": true,
6754 |       "dependencies": {
6755 |         "is-extendable": "^0.1.0"
6756 |       },
6757 |       "engines": {
6758 |         "node": ">=0.10.0"
6759 |       }
6760 |     },
6761 |     "node_modules/sane/node_modules/get-stream": {
6762 |       "version": "4.1.0",
6763 |       "resolved": "https://registry.npmmirror.com/get-stream/-/get-stream-4.1.0.tgz",
6764 |       "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",
6765 |       "dev": true,
6766 |       "dependencies": {
6767 |         "pump": "^3.0.0"
6768 |       },
6769 |       "engines": {
6770 |         "node": ">=6"
6771 |       }
6772 |     },
6773 |     "node_modules/sane/node_modules/is-extendable": {
6774 |       "version": "0.1.1",
6775 |       "resolved": "https://registry.npmmirror.com/is-extendable/-/is-extendable-0.1.1.tgz",
6776 |       "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
6777 |       "dev": true,
6778 |       "engines": {
6779 |         "node": ">=0.10.0"
6780 |       }
6781 |     },
6782 |     "node_modules/sane/node_modules/is-number": {
6783 |       "version": "3.0.0",
6784 |       "resolved": "https://registry.npmmirror.com/is-number/-/is-number-3.0.0.tgz",
6785 |       "integrity": "sha512-4cboCqIpliH+mAvFNegjZQ4kgKc3ZUhQVr3HvWbSh5q3WH2v82ct+T2Y1hdU5Gdtorx/cLifQjqCbL7bpznLTg==",
6786 |       "dev": true,
6787 |       "dependencies": {
6788 |         "kind-of": "^3.0.2"
6789 |       },
6790 |       "engines": {
6791 |         "node": ">=0.10.0"
6792 |       }
6793 |     },
6794 |     "node_modules/sane/node_modules/is-number/node_modules/kind-of": {
6795 |       "version": "3.2.2",
6796 |       "resolved": "https://registry.npmmirror.com/kind-of/-/kind-of-3.2.2.tgz",
6797 |       "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
6798 |       "dev": true,
6799 |       "dependencies": {
6800 |         "is-buffer": "^1.1.5"
6801 |       },
6802 |       "engines": {
6803 |         "node": ">=0.10.0"
6804 |       }
6805 |     },
6806 |     "node_modules/sane/node_modules/is-stream": {
6807 |       "version": "1.1.0",
6808 |       "resolved": "https://registry.npmmirror.com/is-stream/-/is-stream-1.1.0.tgz",
6809 |       "integrity": "sha512-uQPm8kcs47jx38atAcWTVxyltQYoPT68y9aWYdV6yWXSyW8mzSat0TL6CiWdZeCdF3KrAvpVtnHbTv4RN+rqdQ==",
6810 |       "dev": true,
6811 |       "engines": {
6812 |         "node": ">=0.10.0"
6813 |       }
6814 |     },
6815 |     "node_modules/sane/node_modules/micromatch": {
6816 |       "version": "3.1.10",
6817 |       "resolved": "https://registry.npmmirror.com/micromatch/-/micromatch-3.1.10.tgz",
6818 |       "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",
6819 |       "dev": true,
6820 |       "dependencies": {
6821 |         "arr-diff": "^4.0.0",
6822 |         "array-unique": "^0.3.2",
6823 |         "braces": "^2.3.1",
6824 |         "define-property": "^2.0.2",
6825 |         "extend-shallow": "^3.0.2",
6826 |         "extglob": "^2.0.4",
6827 |         "fragment-cache": "^0.2.1",
6828 |         "kind-of": "^6.0.2",
6829 |         "nanomatch": "^1.2.9",
6830 |         "object.pick": "^1.3.0",
6831 |         "regex-not": "^1.0.0",
6832 |         "snapdragon": "^0.8.1",
6833 |         "to-regex": "^3.0.2"
6834 |       },
6835 |       "engines": {
6836 |         "node": ">=0.10.0"
6837 |       }
6838 |     },
6839 |     "node_modules/sane/node_modules/normalize-path": {
6840 |       "version": "2.1.1",
6841 |       "resolved": "https://registry.npmmirror.com/normalize-path/-/normalize-path-2.1.1.tgz",
6842 |       "integrity": "sha512-3pKJwH184Xo/lnH6oyP1q2pMd7HcypqqmRs91/6/i2CGtWwIKGCkOOMTm/zXbgTEWHw1uNpNi/igc3ePOYHb6w==",
6843 |       "dev": true,
6844 |       "dependencies": {
6845 |         "remove-trailing-separator": "^1.0.1"
6846 |       },
6847 |       "engines": {
6848 |         "node": ">=0.10.0"
6849 |       }
6850 |     },
6851 |     "node_modules/sane/node_modules/npm-run-path": {
6852 |       "version": "2.0.2",
6853 |       "resolved": "https://registry.npmmirror.com/npm-run-path/-/npm-run-path-2.0.2.tgz",
6854 |       "integrity": "sha512-lJxZYlT4DW/bRUtFh1MQIWqmLwQfAxnqWG4HhEdjMlkrJYnJn0Jrr2u3mgxqaWsdiBc76TYkTG/mhrnYTuzfHw==",
6855 |       "dev": true,
6856 |       "dependencies": {
6857 |         "path-key": "^2.0.0"
6858 |       },
6859 |       "engines": {
6860 |         "node": ">=4"
6861 |       }
6862 |     },
6863 |     "node_modules/sane/node_modules/path-key": {
6864 |       "version": "2.0.1",
6865 |       "resolved": "https://registry.npmmirror.com/path-key/-/path-key-2.0.1.tgz",
6866 |       "integrity": "sha512-fEHGKCSmUSDPv4uoj8AlD+joPlq3peND+HRYyxFz4KPw4z926S/b8rIuFs2FYJg3BwsxJf6A9/3eIdLaYC+9Dw==",
6867 |       "dev": true,
6868 |       "engines": {
6869 |         "node": ">=4"
6870 |       }
6871 |     },
6872 |     "node_modules/sane/node_modules/semver": {
6873 |       "version": "5.7.2",
6874 |       "resolved": "https://registry.npmmirror.com/semver/-/semver-5.7.2.tgz",
6875 |       "integrity": "sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==",
6876 |       "dev": true,
6877 |       "bin": {
6878 |         "semver": "bin/semver"
6879 |       }
6880 |     },
6881 |     "node_modules/sane/node_modules/shebang-command": {
6882 |       "version": "1.2.0",
6883 |       "resolved": "https://registry.npmmirror.com/shebang-command/-/shebang-command-1.2.0.tgz",
6884 |       "integrity": "sha512-EV3L1+UQWGor21OmnvojK36mhg+TyIKDh3iFBKBohr5xeXIhNBcx8oWdgkTEEQ+BEFFYdLRuqMfd5L84N1V5Vg==",
6885 |       "dev": true,
6886 |       "dependencies": {
6887 |         "shebang-regex": "^1.0.0"
6888 |       },
6889 |       "engines": {
6890 |         "node": ">=0.10.0"
6891 |       }
6892 |     },
6893 |     "node_modules/sane/node_modules/shebang-regex": {
6894 |       "version": "1.0.0",
6895 |       "resolved": "https://registry.npmmirror.com/shebang-regex/-/shebang-regex-1.0.0.tgz",
6896 |       "integrity": "sha512-wpoSFAxys6b2a2wHZ1XpDSgD7N9iVjg29Ph9uV/uaP9Ex/KXlkTZTeddxDPSYQpgvzKLGJke2UU0AzoGCjNIvQ==",
6897 |       "dev": true,
6898 |       "engines": {
6899 |         "node": ">=0.10.0"
6900 |       }
6901 |     },
6902 |     "node_modules/sane/node_modules/to-regex-range": {
6903 |       "version": "2.1.1",
6904 |       "resolved": "https://registry.npmmirror.com/to-regex-range/-/to-regex-range-2.1.1.tgz",
6905 |       "integrity": "sha512-ZZWNfCjUokXXDGXFpZehJIkZqq91BcULFq/Pi7M5i4JnxXdhMKAK682z8bCW3o8Hj1wuuzoKcW3DfVzaP6VuNg==",
6906 |       "dev": true,
6907 |       "dependencies": {
6908 |         "is-number": "^3.0.0",
6909 |         "repeat-string": "^1.6.1"
6910 |       },
6911 |       "engines": {
6912 |         "node": ">=0.10.0"
6913 |       }
6914 |     },
6915 |     "node_modules/sane/node_modules/which": {
6916 |       "version": "1.3.1",
6917 |       "resolved": "https://registry.npmmirror.com/which/-/which-1.3.1.tgz",
6918 |       "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
6919 |       "dev": true,
6920 |       "dependencies": {
6921 |         "isexe": "^2.0.0"
6922 |       },
6923 |       "bin": {
6924 |         "which": "bin/which"
6925 |       }
6926 |     },
6927 |     "node_modules/sass": {
6928 |       "version": "1.81.0",
6929 |       "resolved": "https://registry.npmmirror.com/sass/-/sass-1.81.0.tgz",
6930 |       "integrity": "sha512-Q4fOxRfhmv3sqCLoGfvrC9pRV8btc0UtqL9mN6Yrv6Qi9ScL55CVH1vlPP863ISLEEMNLLuu9P+enCeGHlnzhA==",
6931 |       "dev": true,
6932 |       "dependencies": {
6933 |         "chokidar": "^4.0.0",
6934 |         "immutable": "^5.0.2",
6935 |         "source-map-js": ">=0.6.2 <2.0.0"
6936 |       },
6937 |       "bin": {
6938 |         "sass": "sass.js"
6939 |       },
6940 |       "engines": {
6941 |         "node": ">=14.0.0"
6942 |       },
6943 |       "optionalDependencies": {
6944 |         "@parcel/watcher": "^2.4.1"
6945 |       }
6946 |     },
6947 |     "node_modules/semver": {
6948 |       "version": "7.6.3",
6949 |       "resolved": "https://registry.npmmirror.com/semver/-/semver-7.6.3.tgz",
6950 |       "integrity": "sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==",
6951 |       "dev": true,
6952 |       "bin": {
6953 |         "semver": "bin/semver.js"
6954 |       },
6955 |       "engines": {
6956 |         "node": ">=10"
6957 |       }
6958 |     },
6959 |     "node_modules/set-value": {
6960 |       "version": "2.0.1",
6961 |       "resolved": "https://registry.npmmirror.com/set-value/-/set-value-2.0.1.tgz",
6962 |       "integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==",
6963 |       "dev": true,
6964 |       "dependencies": {
6965 |         "extend-shallow": "^2.0.1",
6966 |         "is-extendable": "^0.1.1",
6967 |         "is-plain-object": "^2.0.3",
6968 |         "split-string": "^3.0.1"
6969 |       },
6970 |       "engines": {
6971 |         "node": ">=0.10.0"
6972 |       }
6973 |     },
6974 |     "node_modules/set-value/node_modules/extend-shallow": {
6975 |       "version": "2.0.1",
6976 |       "resolved": "https://registry.npmmirror.com/extend-shallow/-/extend-shallow-2.0.1.tgz",
6977 |       "integrity": "sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==",
6978 |       "dev": true,
6979 |       "dependencies": {
6980 |         "is-extendable": "^0.1.0"
6981 |       },
6982 |       "engines": {
6983 |         "node": ">=0.10.0"
6984 |       }
6985 |     },
6986 |     "node_modules/set-value/node_modules/is-extendable": {
6987 |       "version": "0.1.1",
6988 |       "resolved": "https://registry.npmmirror.com/is-extendable/-/is-extendable-0.1.1.tgz",
6989 |       "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
6990 |       "dev": true,
6991 |       "engines": {
6992 |         "node": ">=0.10.0"
6993 |       }
6994 |     },
6995 |     "node_modules/shebang-command": {
6996 |       "version": "2.0.0",
6997 |       "resolved": "https://registry.npmmirror.com/shebang-command/-/shebang-command-2.0.0.tgz",
6998 |       "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
6999 |       "dev": true,
7000 |       "dependencies": {
7001 |         "shebang-regex": "^3.0.0"
7002 |       },
7003 |       "engines": {
7004 |         "node": ">=8"
7005 |       }
7006 |     },
7007 |     "node_modules/shebang-regex": {
7008 |       "version": "3.0.0",
7009 |       "resolved": "https://registry.npmmirror.com/shebang-regex/-/shebang-regex-3.0.0.tgz",
7010 |       "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
7011 |       "dev": true,
7012 |       "engines": {
7013 |         "node": ">=8"
7014 |       }
7015 |     },
7016 |     "node_modules/signal-exit": {
7017 |       "version": "3.0.7",
7018 |       "resolved": "https://registry.npmmirror.com/signal-exit/-/signal-exit-3.0.7.tgz",
7019 |       "integrity": "sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==",
7020 |       "dev": true
7021 |     },
7022 |     "node_modules/sisteransi": {
7023 |       "version": "1.0.5",
7024 |       "resolved": "https://registry.npmmirror.com/sisteransi/-/sisteransi-1.0.5.tgz",
7025 |       "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==",
7026 |       "dev": true
7027 |     },
7028 |     "node_modules/slash": {
7029 |       "version": "3.0.0",
7030 |       "resolved": "https://registry.npmmirror.com/slash/-/slash-3.0.0.tgz",
7031 |       "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
7032 |       "dev": true,
7033 |       "engines": {
7034 |         "node": ">=8"
7035 |       }
7036 |     },
7037 |     "node_modules/snapdragon": {
7038 |       "version": "0.8.2",
7039 |       "resolved": "https://registry.npmmirror.com/snapdragon/-/snapdragon-0.8.2.tgz",
7040 |       "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",
7041 |       "dev": true,
7042 |       "dependencies": {
7043 |         "base": "^0.11.1",
7044 |         "debug": "^2.2.0",
7045 |         "define-property": "^0.2.5",
7046 |         "extend-shallow": "^2.0.1",
7047 |         "map-cache": "^0.2.2",
7048 |         "source-map": "^0.5.6",
7049 |         "source-map-resolve": "^0.5.0",
7050 |         "use": "^3.1.0"
7051 |       },
7052 |       "engines": {
7053 |         "node": ">=0.10.0"
7054 |       }
7055 |     },
7056 |     "node_modules/snapdragon-node": {
7057 |       "version": "2.1.1",
7058 |       "resolved": "https://registry.npmmirror.com/snapdragon-node/-/snapdragon-node-2.1.1.tgz",
7059 |       "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",
7060 |       "dev": true,
7061 |       "dependencies": {
7062 |         "define-property": "^1.0.0",
7063 |         "isobject": "^3.0.0",
7064 |         "snapdragon-util": "^3.0.1"
7065 |       },
7066 |       "engines": {
7067 |         "node": ">=0.10.0"
7068 |       }
7069 |     },
7070 |     "node_modules/snapdragon-node/node_modules/define-property": {
7071 |       "version": "1.0.0",
7072 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-1.0.0.tgz",
7073 |       "integrity": "sha512-cZTYKFWspt9jZsMscWo8sc/5lbPC9Q0N5nBLgb+Yd915iL3udB1uFgS3B8YCx66UVHq018DAVFoee7x+gxggeA==",
7074 |       "dev": true,
7075 |       "dependencies": {
7076 |         "is-descriptor": "^1.0.0"
7077 |       },
7078 |       "engines": {
7079 |         "node": ">=0.10.0"
7080 |       }
7081 |     },
7082 |     "node_modules/snapdragon-util": {
7083 |       "version": "3.0.1",
7084 |       "resolved": "https://registry.npmmirror.com/snapdragon-util/-/snapdragon-util-3.0.1.tgz",
7085 |       "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",
7086 |       "dev": true,
7087 |       "dependencies": {
7088 |         "kind-of": "^3.2.0"
7089 |       },
7090 |       "engines": {
7091 |         "node": ">=0.10.0"
7092 |       }
7093 |     },
7094 |     "node_modules/snapdragon-util/node_modules/kind-of": {
7095 |       "version": "3.2.2",
7096 |       "resolved": "https://registry.npmmirror.com/kind-of/-/kind-of-3.2.2.tgz",
7097 |       "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
7098 |       "dev": true,
7099 |       "dependencies": {
7100 |         "is-buffer": "^1.1.5"
7101 |       },
7102 |       "engines": {
7103 |         "node": ">=0.10.0"
7104 |       }
7105 |     },
7106 |     "node_modules/snapdragon/node_modules/debug": {
7107 |       "version": "2.6.9",
7108 |       "resolved": "https://registry.npmmirror.com/debug/-/debug-2.6.9.tgz",
7109 |       "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
7110 |       "dev": true,
7111 |       "dependencies": {
7112 |         "ms": "2.0.0"
7113 |       }
7114 |     },
7115 |     "node_modules/snapdragon/node_modules/define-property": {
7116 |       "version": "0.2.5",
7117 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-0.2.5.tgz",
7118 |       "integrity": "sha512-Rr7ADjQZenceVOAKop6ALkkRAmH1A4Gx9hV/7ZujPUN2rkATqFO0JZLZInbAjpZYoJ1gUx8MRMQVkYemcbMSTA==",
7119 |       "dev": true,
7120 |       "dependencies": {
7121 |         "is-descriptor": "^0.1.0"
7122 |       },
7123 |       "engines": {
7124 |         "node": ">=0.10.0"
7125 |       }
7126 |     },
7127 |     "node_modules/snapdragon/node_modules/extend-shallow": {
7128 |       "version": "2.0.1",
7129 |       "resolved": "https://registry.npmmirror.com/extend-shallow/-/extend-shallow-2.0.1.tgz",
7130 |       "integrity": "sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==",
7131 |       "dev": true,
7132 |       "dependencies": {
7133 |         "is-extendable": "^0.1.0"
7134 |       },
7135 |       "engines": {
7136 |         "node": ">=0.10.0"
7137 |       }
7138 |     },
7139 |     "node_modules/snapdragon/node_modules/is-descriptor": {
7140 |       "version": "0.1.7",
7141 |       "resolved": "https://registry.npmmirror.com/is-descriptor/-/is-descriptor-0.1.7.tgz",
7142 |       "integrity": "sha512-C3grZTvObeN1xud4cRWl366OMXZTj0+HGyk4hvfpx4ZHt1Pb60ANSXqCK7pdOTeUQpRzECBSTphqvD7U+l22Eg==",
7143 |       "dev": true,
7144 |       "dependencies": {
7145 |         "is-accessor-descriptor": "^1.0.1",
7146 |         "is-data-descriptor": "^1.0.1"
7147 |       },
7148 |       "engines": {
7149 |         "node": ">= 0.4"
7150 |       }
7151 |     },
7152 |     "node_modules/snapdragon/node_modules/is-extendable": {
7153 |       "version": "0.1.1",
7154 |       "resolved": "https://registry.npmmirror.com/is-extendable/-/is-extendable-0.1.1.tgz",
7155 |       "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
7156 |       "dev": true,
7157 |       "engines": {
7158 |         "node": ">=0.10.0"
7159 |       }
7160 |     },
7161 |     "node_modules/snapdragon/node_modules/ms": {
7162 |       "version": "2.0.0",
7163 |       "resolved": "https://registry.npmmirror.com/ms/-/ms-2.0.0.tgz",
7164 |       "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
7165 |       "dev": true
7166 |     },
7167 |     "node_modules/snapdragon/node_modules/source-map": {
7168 |       "version": "0.5.7",
7169 |       "resolved": "https://registry.npmmirror.com/source-map/-/source-map-0.5.7.tgz",
7170 |       "integrity": "sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==",
7171 |       "dev": true,
7172 |       "engines": {
7173 |         "node": ">=0.10.0"
7174 |       }
7175 |     },
7176 |     "node_modules/sorcery": {
7177 |       "version": "0.11.1",
7178 |       "resolved": "https://registry.npmmirror.com/sorcery/-/sorcery-0.11.1.tgz",
7179 |       "integrity": "sha512-o7npfeJE6wi6J9l0/5LKshFzZ2rMatRiCDwYeDQaOzqdzRJwALhX7mk/A/ecg6wjMu7wdZbmXfD2S/vpOg0bdQ==",
7180 |       "dev": true,
7181 |       "dependencies": {
7182 |         "@jridgewell/sourcemap-codec": "^1.4.14",
7183 |         "buffer-crc32": "^1.0.0",
7184 |         "minimist": "^1.2.0",
7185 |         "sander": "^0.5.0"
7186 |       },
7187 |       "bin": {
7188 |         "sorcery": "bin/sorcery"
7189 |       }
7190 |     },
7191 |     "node_modules/source-map": {
7192 |       "version": "0.6.1",
7193 |       "resolved": "https://registry.npmmirror.com/source-map/-/source-map-0.6.1.tgz",
7194 |       "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
7195 |       "dev": true,
7196 |       "engines": {
7197 |         "node": ">=0.10.0"
7198 |       }
7199 |     },
7200 |     "node_modules/source-map-js": {
7201 |       "version": "1.2.1",
7202 |       "resolved": "https://registry.npmmirror.com/source-map-js/-/source-map-js-1.2.1.tgz",
7203 |       "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
7204 |       "dev": true,
7205 |       "engines": {
7206 |         "node": ">=0.10.0"
7207 |       }
7208 |     },
7209 |     "node_modules/source-map-resolve": {
7210 |       "version": "0.5.3",
7211 |       "resolved": "https://registry.npmmirror.com/source-map-resolve/-/source-map-resolve-0.5.3.tgz",
7212 |       "integrity": "sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==",
7213 |       "deprecated": "See https://github.com/lydell/source-map-resolve#deprecated",
7214 |       "dev": true,
7215 |       "dependencies": {
7216 |         "atob": "^2.1.2",
7217 |         "decode-uri-component": "^0.2.0",
7218 |         "resolve-url": "^0.2.1",
7219 |         "source-map-url": "^0.4.0",
7220 |         "urix": "^0.1.0"
7221 |       }
7222 |     },
7223 |     "node_modules/source-map-support": {
7224 |       "version": "0.5.13",
7225 |       "resolved": "https://registry.npmmirror.com/source-map-support/-/source-map-support-0.5.13.tgz",
7226 |       "integrity": "sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==",
7227 |       "dev": true,
7228 |       "dependencies": {
7229 |         "buffer-from": "^1.0.0",
7230 |         "source-map": "^0.6.0"
7231 |       }
7232 |     },
7233 |     "node_modules/source-map-url": {
7234 |       "version": "0.4.1",
7235 |       "resolved": "https://registry.npmmirror.com/source-map-url/-/source-map-url-0.4.1.tgz",
7236 |       "integrity": "sha512-cPiFOTLUKvJFIg4SKVScy4ilPPW6rFgMgfuZJPNoDuMs3nC1HbMUycBoJw77xFIp6z1UJQJOfx6C9GMH80DiTw==",
7237 |       "deprecated": "See https://github.com/lydell/source-map-url#deprecated",
7238 |       "dev": true
7239 |     },
7240 |     "node_modules/sourcemap-codec": {
7241 |       "version": "1.4.8",
7242 |       "resolved": "https://registry.npmmirror.com/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz",
7243 |       "integrity": "sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==",
7244 |       "deprecated": "Please use @jridgewell/sourcemap-codec instead",
7245 |       "dev": true
7246 |     },
7247 |     "node_modules/split-string": {
7248 |       "version": "3.1.0",
7249 |       "resolved": "https://registry.npmmirror.com/split-string/-/split-string-3.1.0.tgz",
7250 |       "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",
7251 |       "dev": true,
7252 |       "dependencies": {
7253 |         "extend-shallow": "^3.0.0"
7254 |       },
7255 |       "engines": {
7256 |         "node": ">=0.10.0"
7257 |       }
7258 |     },
7259 |     "node_modules/sprintf-js": {
7260 |       "version": "1.0.3",
7261 |       "resolved": "https://registry.npmmirror.com/sprintf-js/-/sprintf-js-1.0.3.tgz",
7262 |       "integrity": "sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==",
7263 |       "dev": true
7264 |     },
7265 |     "node_modules/stack-utils": {
7266 |       "version": "2.0.6",
7267 |       "resolved": "https://registry.npmmirror.com/stack-utils/-/stack-utils-2.0.6.tgz",
7268 |       "integrity": "sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==",
7269 |       "dev": true,
7270 |       "dependencies": {
7271 |         "escape-string-regexp": "^2.0.0"
7272 |       },
7273 |       "engines": {
7274 |         "node": ">=10"
7275 |       }
7276 |     },
7277 |     "node_modules/stack-utils/node_modules/escape-string-regexp": {
7278 |       "version": "2.0.0",
7279 |       "resolved": "https://registry.npmmirror.com/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz",
7280 |       "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==",
7281 |       "dev": true,
7282 |       "engines": {
7283 |         "node": ">=8"
7284 |       }
7285 |     },
7286 |     "node_modules/static-extend": {
7287 |       "version": "0.1.2",
7288 |       "resolved": "https://registry.npmmirror.com/static-extend/-/static-extend-0.1.2.tgz",
7289 |       "integrity": "sha512-72E9+uLc27Mt718pMHt9VMNiAL4LMsmDbBva8mxWUCkT07fSzEGMYUCk0XWY6lp0j6RBAG4cJ3mWuZv2OE3s0g==",
7290 |       "dev": true,
7291 |       "dependencies": {
7292 |         "define-property": "^0.2.5",
7293 |         "object-copy": "^0.1.0"
7294 |       },
7295 |       "engines": {
7296 |         "node": ">=0.10.0"
7297 |       }
7298 |     },
7299 |     "node_modules/static-extend/node_modules/define-property": {
7300 |       "version": "0.2.5",
7301 |       "resolved": "https://registry.npmmirror.com/define-property/-/define-property-0.2.5.tgz",
7302 |       "integrity": "sha512-Rr7ADjQZenceVOAKop6ALkkRAmH1A4Gx9hV/7ZujPUN2rkATqFO0JZLZInbAjpZYoJ1gUx8MRMQVkYemcbMSTA==",
7303 |       "dev": true,
7304 |       "dependencies": {
7305 |         "is-descriptor": "^0.1.0"
7306 |       },
7307 |       "engines": {
7308 |         "node": ">=0.10.0"
7309 |       }
7310 |     },
7311 |     "node_modules/static-extend/node_modules/is-descriptor": {
7312 |       "version": "0.1.7",
7313 |       "resolved": "https://registry.npmmirror.com/is-descriptor/-/is-descriptor-0.1.7.tgz",
7314 |       "integrity": "sha512-C3grZTvObeN1xud4cRWl366OMXZTj0+HGyk4hvfpx4ZHt1Pb60ANSXqCK7pdOTeUQpRzECBSTphqvD7U+l22Eg==",
7315 |       "dev": true,
7316 |       "dependencies": {
7317 |         "is-accessor-descriptor": "^1.0.1",
7318 |         "is-data-descriptor": "^1.0.1"
7319 |       },
7320 |       "engines": {
7321 |         "node": ">= 0.4"
7322 |       }
7323 |     },
7324 |     "node_modules/string-length": {
7325 |       "version": "4.0.2",
7326 |       "resolved": "https://registry.npmmirror.com/string-length/-/string-length-4.0.2.tgz",
7327 |       "integrity": "sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==",
7328 |       "dev": true,
7329 |       "dependencies": {
7330 |         "char-regex": "^1.0.2",
7331 |         "strip-ansi": "^6.0.0"
7332 |       },
7333 |       "engines": {
7334 |         "node": ">=10"
7335 |       }
7336 |     },
7337 |     "node_modules/string-width": {
7338 |       "version": "4.2.3",
7339 |       "resolved": "https://registry.npmmirror.com/string-width/-/string-width-4.2.3.tgz",
7340 |       "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
7341 |       "dev": true,
7342 |       "dependencies": {
7343 |         "emoji-regex": "^8.0.0",
7344 |         "is-fullwidth-code-point": "^3.0.0",
7345 |         "strip-ansi": "^6.0.1"
7346 |       },
7347 |       "engines": {
7348 |         "node": ">=8"
7349 |       }
7350 |     },
7351 |     "node_modules/string-width/node_modules/emoji-regex": {
7352 |       "version": "8.0.0",
7353 |       "resolved": "https://registry.npmmirror.com/emoji-regex/-/emoji-regex-8.0.0.tgz",
7354 |       "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
7355 |       "dev": true
7356 |     },
7357 |     "node_modules/strip-ansi": {
7358 |       "version": "6.0.1",
7359 |       "resolved": "https://registry.npmmirror.com/strip-ansi/-/strip-ansi-6.0.1.tgz",
7360 |       "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
7361 |       "dev": true,
7362 |       "dependencies": {
7363 |         "ansi-regex": "^5.0.1"
7364 |       },
7365 |       "engines": {
7366 |         "node": ">=8"
7367 |       }
7368 |     },
7369 |     "node_modules/strip-bom": {
7370 |       "version": "4.0.0",
7371 |       "resolved": "https://registry.npmmirror.com/strip-bom/-/strip-bom-4.0.0.tgz",
7372 |       "integrity": "sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==",
7373 |       "dev": true,
7374 |       "engines": {
7375 |         "node": ">=8"
7376 |       }
7377 |     },
7378 |     "node_modules/strip-eof": {
7379 |       "version": "1.0.0",
7380 |       "resolved": "https://registry.npmmirror.com/strip-eof/-/strip-eof-1.0.0.tgz",
7381 |       "integrity": "sha512-7FCwGGmx8mD5xQd3RPUvnSpUXHM3BWuzjtpD4TXsfcZ9EL4azvVVUscFYwD9nx8Kh+uCBC00XBtAykoMHwTh8Q==",
7382 |       "dev": true,
7383 |       "engines": {
7384 |         "node": ">=0.10.0"
7385 |       }
7386 |     },
7387 |     "node_modules/strip-final-newline": {
7388 |       "version": "2.0.0",
7389 |       "resolved": "https://registry.npmmirror.com/strip-final-newline/-/strip-final-newline-2.0.0.tgz",
7390 |       "integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==",
7391 |       "dev": true,
7392 |       "engines": {
7393 |         "node": ">=6"
7394 |       }
7395 |     },
7396 |     "node_modules/strip-indent": {
7397 |       "version": "3.0.0",
7398 |       "resolved": "https://registry.npmmirror.com/strip-indent/-/strip-indent-3.0.0.tgz",
7399 |       "integrity": "sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==",
7400 |       "dev": true,
7401 |       "dependencies": {
7402 |         "min-indent": "^1.0.0"
7403 |       },
7404 |       "engines": {
7405 |         "node": ">=8"
7406 |       }
7407 |     },
7408 |     "node_modules/strip-json-comments": {
7409 |       "version": "3.1.1",
7410 |       "resolved": "https://registry.npmmirror.com/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
7411 |       "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
7412 |       "dev": true,
7413 |       "engines": {
7414 |         "node": ">=8"
7415 |       },
7416 |       "funding": {
7417 |         "url": "https://github.com/sponsors/sindresorhus"
7418 |       }
7419 |     },
7420 |     "node_modules/style-mod": {
7421 |       "version": "4.1.2",
7422 |       "resolved": "https://registry.npmmirror.com/style-mod/-/style-mod-4.1.2.tgz",
7423 |       "integrity": "sha512-wnD1HyVqpJUI2+eKZ+eo1UwghftP6yuFheBqqe+bWCotBjC2K1YnteJILRMs3SM4V/0dLEW1SC27MWP5y+mwmw==",
7424 |       "dev": true
7425 |     },
7426 |     "node_modules/supports-color": {
7427 |       "version": "7.2.0",
7428 |       "resolved": "https://registry.npmmirror.com/supports-color/-/supports-color-7.2.0.tgz",
7429 |       "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
7430 |       "dev": true,
7431 |       "dependencies": {
7432 |         "has-flag": "^4.0.0"
7433 |       },
7434 |       "engines": {
7435 |         "node": ">=8"
7436 |       }
7437 |     },
7438 |     "node_modules/supports-preserve-symlinks-flag": {
7439 |       "version": "1.0.0",
7440 |       "resolved": "https://registry.npmmirror.com/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
7441 |       "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
7442 |       "dev": true,
7443 |       "engines": {
7444 |         "node": ">= 0.4"
7445 |       },
7446 |       "funding": {
7447 |         "url": "https://github.com/sponsors/ljharb"
7448 |       }
7449 |     },
7450 |     "node_modules/svelte": {
7451 |       "version": "3.59.2",
7452 |       "resolved": "https://registry.npmmirror.com/svelte/-/svelte-3.59.2.tgz",
7453 |       "integrity": "sha512-vzSyuGr3eEoAtT/A6bmajosJZIUWySzY2CzB3w2pgPvnkUjGqlDnsNnA0PMO+mMAhuyMul6C2uuZzY6ELSkzyA==",
7454 |       "dev": true,
7455 |       "engines": {
7456 |         "node": ">= 8"
7457 |       }
7458 |     },
7459 |     "node_modules/svelte-check": {
7460 |       "version": "3.8.6",
7461 |       "resolved": "https://registry.npmmirror.com/svelte-check/-/svelte-check-3.8.6.tgz",
7462 |       "integrity": "sha512-ij0u4Lw/sOTREP13BdWZjiXD/BlHE6/e2e34XzmVmsp5IN4kVa3PWP65NM32JAgwjZlwBg/+JtiNV1MM8khu0Q==",
7463 |       "dev": true,
7464 |       "dependencies": {
7465 |         "@jridgewell/trace-mapping": "^0.3.17",
7466 |         "chokidar": "^3.4.1",
7467 |         "picocolors": "^1.0.0",
7468 |         "sade": "^1.7.4",
7469 |         "svelte-preprocess": "^5.1.3",
7470 |         "typescript": "^5.0.3"
7471 |       },
7472 |       "bin": {
7473 |         "svelte-check": "bin/svelte-check"
7474 |       },
7475 |       "peerDependencies": {
7476 |         "svelte": "^3.55.0 || ^4.0.0-next.0 || ^4.0.0 || ^5.0.0-next.0"
7477 |       }
7478 |     },
7479 |     "node_modules/svelte-check/node_modules/chokidar": {
7480 |       "version": "3.6.0",
7481 |       "resolved": "https://registry.npmmirror.com/chokidar/-/chokidar-3.6.0.tgz",
7482 |       "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
7483 |       "dev": true,
7484 |       "dependencies": {
7485 |         "anymatch": "~3.1.2",
7486 |         "braces": "~3.0.2",
7487 |         "glob-parent": "~5.1.2",
7488 |         "is-binary-path": "~2.1.0",
7489 |         "is-glob": "~4.0.1",
7490 |         "normalize-path": "~3.0.0",
7491 |         "readdirp": "~3.6.0"
7492 |       },
7493 |       "engines": {
7494 |         "node": ">= 8.10.0"
7495 |       },
7496 |       "funding": {
7497 |         "url": "https://paulmillr.com/funding/"
7498 |       },
7499 |       "optionalDependencies": {
7500 |         "fsevents": "~2.3.2"
7501 |       }
7502 |     },
7503 |     "node_modules/svelte-check/node_modules/glob-parent": {
7504 |       "version": "5.1.2",
7505 |       "resolved": "https://registry.npmmirror.com/glob-parent/-/glob-parent-5.1.2.tgz",
7506 |       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
7507 |       "dev": true,
7508 |       "dependencies": {
7509 |         "is-glob": "^4.0.1"
7510 |       },
7511 |       "engines": {
7512 |         "node": ">= 6"
7513 |       }
7514 |     },
7515 |     "node_modules/svelte-check/node_modules/readdirp": {
7516 |       "version": "3.6.0",
7517 |       "resolved": "https://registry.npmmirror.com/readdirp/-/readdirp-3.6.0.tgz",
7518 |       "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
7519 |       "dev": true,
7520 |       "dependencies": {
7521 |         "picomatch": "^2.2.1"
7522 |       },
7523 |       "engines": {
7524 |         "node": ">=8.10.0"
7525 |       }
7526 |     },
7527 |     "node_modules/svelte-dnd-action": {
7528 |       "version": "0.9.52",
7529 |       "resolved": "https://registry.npmmirror.com/svelte-dnd-action/-/svelte-dnd-action-0.9.52.tgz",
7530 |       "integrity": "sha512-f841HB5PCcvp21jsMkxSXCXcsJcGmIPMguN6iI1gXqP9Owcb47+ZUIE5ETUzNJntE9h7dm1wFj2Bm51hRtQ7Lw==",
7531 |       "dev": true,
7532 |       "peerDependencies": {
7533 |         "svelte": ">=3.23.0 || ^5.0.0-next.0"
7534 |       }
7535 |     },
7536 |     "node_modules/svelte-i18next": {
7537 |       "version": "2.2.2",
7538 |       "resolved": "https://registry.npmmirror.com/svelte-i18next/-/svelte-i18next-2.2.2.tgz",
7539 |       "integrity": "sha512-IpJDZCH5cCgKfHQHgiLmGT4j9HCdg4fqsP3oP2deLu8PxmNj0Ui6khMiDoxAxedAiYEhr0xendv2xqh3Rq+uQQ==",
7540 |       "dev": true,
7541 |       "peerDependencies": {
7542 |         "i18next": "*",
7543 |         "svelte": "*"
7544 |       }
7545 |     },
7546 |     "node_modules/svelte-media-queries": {
7547 |       "version": "1.6.2",
7548 |       "resolved": "https://registry.npmmirror.com/svelte-media-queries/-/svelte-media-queries-1.6.2.tgz",
7549 |       "integrity": "sha512-SMz6od/vIeZEGlc4P0HKJK4G0fZotuwFhCSpBQaPqh75h6sL6sNf+4+IjbegFKXbP7b+SOfyzVOIMXTr8jynkA==",
7550 |       "dev": true
7551 |     },
7552 |     "node_modules/svelte-preprocess": {
7553 |       "version": "5.1.4",
7554 |       "resolved": "https://registry.npmmirror.com/svelte-preprocess/-/svelte-preprocess-5.1.4.tgz",
7555 |       "integrity": "sha512-IvnbQ6D6Ao3Gg6ftiM5tdbR6aAETwjhHV+UKGf5bHGYR69RQvF1ho0JKPcbUON4vy4R7zom13jPjgdOWCQ5hDA==",
7556 |       "dev": true,
7557 |       "hasInstallScript": true,
7558 |       "dependencies": {
7559 |         "@types/pug": "^2.0.6",
7560 |         "detect-indent": "^6.1.0",
7561 |         "magic-string": "^0.30.5",
7562 |         "sorcery": "^0.11.0",
7563 |         "strip-indent": "^3.0.0"
7564 |       },
7565 |       "engines": {
7566 |         "node": ">= 16.0.0"
7567 |       },
7568 |       "peerDependencies": {
7569 |         "@babel/core": "^7.10.2",
7570 |         "coffeescript": "^2.5.1",
7571 |         "less": "^3.11.3 || ^4.0.0",
7572 |         "postcss": "^7 || ^8",
7573 |         "postcss-load-config": "^2.1.0 || ^3.0.0 || ^4.0.0 || ^5.0.0",
7574 |         "pug": "^3.0.0",
7575 |         "sass": "^1.26.8",
7576 |         "stylus": "^0.55.0",
7577 |         "sugarss": "^2.0.0 || ^3.0.0 || ^4.0.0",
7578 |         "svelte": "^3.23.0 || ^4.0.0-next.0 || ^4.0.0 || ^5.0.0-next.0",
7579 |         "typescript": ">=3.9.5 || ^4.0.0 || ^5.0.0"
7580 |       },
7581 |       "peerDependenciesMeta": {
7582 |         "@babel/core": {
7583 |           "optional": true
7584 |         },
7585 |         "coffeescript": {
7586 |           "optional": true
7587 |         },
7588 |         "less": {
7589 |           "optional": true
7590 |         },
7591 |         "postcss": {
7592 |           "optional": true
7593 |         },
7594 |         "postcss-load-config": {
7595 |           "optional": true
7596 |         },
7597 |         "pug": {
7598 |           "optional": true
7599 |         },
7600 |         "sass": {
7601 |           "optional": true
7602 |         },
7603 |         "stylus": {
7604 |           "optional": true
7605 |         },
7606 |         "sugarss": {
7607 |           "optional": true
7608 |         },
7609 |         "typescript": {
7610 |           "optional": true
7611 |         }
7612 |       }
7613 |     },
7614 |     "node_modules/svelte-preprocess/node_modules/magic-string": {
7615 |       "version": "0.30.13",
7616 |       "resolved": "https://registry.npmmirror.com/magic-string/-/magic-string-0.30.13.tgz",
7617 |       "integrity": "sha512-8rYBO+MsWkgjDSOvLomYnzhdwEG51olQ4zL5KXnNJWV5MNmrb4rTZdrtkhxjnD/QyZUqR/Z/XDsUs/4ej2nx0g==",
7618 |       "dev": true,
7619 |       "dependencies": {
7620 |         "@jridgewell/sourcemap-codec": "^1.5.0"
7621 |       }
7622 |     },
7623 |     "node_modules/test-exclude": {
7624 |       "version": "6.0.0",
7625 |       "resolved": "https://registry.npmmirror.com/test-exclude/-/test-exclude-6.0.0.tgz",
7626 |       "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==",
7627 |       "dev": true,
7628 |       "dependencies": {
7629 |         "@istanbuljs/schema": "^0.1.2",
7630 |         "glob": "^7.1.4",
7631 |         "minimatch": "^3.0.4"
7632 |       },
7633 |       "engines": {
7634 |         "node": ">=8"
7635 |       }
7636 |     },
7637 |     "node_modules/tmpl": {
7638 |       "version": "1.0.5",
7639 |       "resolved": "https://registry.npmmirror.com/tmpl/-/tmpl-1.0.5.tgz",
7640 |       "integrity": "sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==",
7641 |       "dev": true
7642 |     },
7643 |     "node_modules/to-object-path": {
7644 |       "version": "0.3.0",
7645 |       "resolved": "https://registry.npmmirror.com/to-object-path/-/to-object-path-0.3.0.tgz",
7646 |       "integrity": "sha512-9mWHdnGRuh3onocaHzukyvCZhzvr6tiflAy/JRFXcJX0TjgfWA9pk9t8CMbzmBE4Jfw58pXbkngtBtqYxzNEyg==",
7647 |       "dev": true,
7648 |       "dependencies": {
7649 |         "kind-of": "^3.0.2"
7650 |       },
7651 |       "engines": {
7652 |         "node": ">=0.10.0"
7653 |       }
7654 |     },
7655 |     "node_modules/to-object-path/node_modules/kind-of": {
7656 |       "version": "3.2.2",
7657 |       "resolved": "https://registry.npmmirror.com/kind-of/-/kind-of-3.2.2.tgz",
7658 |       "integrity": "sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==",
7659 |       "dev": true,
7660 |       "dependencies": {
7661 |         "is-buffer": "^1.1.5"
7662 |       },
7663 |       "engines": {
7664 |         "node": ">=0.10.0"
7665 |       }
7666 |     },
7667 |     "node_modules/to-regex": {
7668 |       "version": "3.0.2",
7669 |       "resolved": "https://registry.npmmirror.com/to-regex/-/to-regex-3.0.2.tgz",
7670 |       "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",
7671 |       "dev": true,
7672 |       "dependencies": {
7673 |         "define-property": "^2.0.2",
7674 |         "extend-shallow": "^3.0.2",
7675 |         "regex-not": "^1.0.2",
7676 |         "safe-regex": "^1.1.0"
7677 |       },
7678 |       "engines": {
7679 |         "node": ">=0.10.0"
7680 |       }
7681 |     },
7682 |     "node_modules/to-regex-range": {
7683 |       "version": "5.0.1",
7684 |       "resolved": "https://registry.npmmirror.com/to-regex-range/-/to-regex-range-5.0.1.tgz",
7685 |       "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
7686 |       "dev": true,
7687 |       "dependencies": {
7688 |         "is-number": "^7.0.0"
7689 |       },
7690 |       "engines": {
7691 |         "node": ">=8.0"
7692 |       }
7693 |     },
7694 |     "node_modules/ts-api-utils": {
7695 |       "version": "1.4.0",
7696 |       "resolved": "https://registry.npmmirror.com/ts-api-utils/-/ts-api-utils-1.4.0.tgz",
7697 |       "integrity": "sha512-032cPxaEKwM+GT3vA5JXNzIaizx388rhsSW79vGRNGXfRRAdEAn2mvk36PvK5HnOchyWZ7afLEXqYCvPCrzuzQ==",
7698 |       "dev": true,
7699 |       "engines": {
7700 |         "node": ">=16"
7701 |       },
7702 |       "peerDependencies": {
7703 |         "typescript": ">=4.2.0"
7704 |       }
7705 |     },
7706 |     "node_modules/ts-essentials": {
7707 |       "version": "10.0.3",
7708 |       "resolved": "https://registry.npmmirror.com/ts-essentials/-/ts-essentials-10.0.3.tgz",
7709 |       "integrity": "sha512-/FrVAZ76JLTWxJOERk04fm8hYENDo0PWSP3YLQKxevLwWtxemGcl5JJEzN4iqfDlRve0ckyfFaOBu4xbNH/wZw==",
7710 |       "dev": true,
7711 |       "peerDependencies": {
7712 |         "typescript": ">=4.5.0"
7713 |       },
7714 |       "peerDependenciesMeta": {
7715 |         "typescript": {
7716 |           "optional": true
7717 |         }
7718 |       }
7719 |     },
7720 |     "node_modules/ts-jest": {
7721 |       "version": "29.2.5",
7722 |       "resolved": "https://registry.npmmirror.com/ts-jest/-/ts-jest-29.2.5.tgz",
7723 |       "integrity": "sha512-KD8zB2aAZrcKIdGk4OwpJggeLcH1FgrICqDSROWqlnJXGCXK4Mn6FcdK2B6670Xr73lHMG1kHw8R87A0ecZ+vA==",
7724 |       "dev": true,
7725 |       "dependencies": {
7726 |         "bs-logger": "^0.2.6",
7727 |         "ejs": "^3.1.10",
7728 |         "fast-json-stable-stringify": "^2.1.0",
7729 |         "jest-util": "^29.0.0",
7730 |         "json5": "^2.2.3",
7731 |         "lodash.memoize": "^4.1.2",
7732 |         "make-error": "^1.3.6",
7733 |         "semver": "^7.6.3",
7734 |         "yargs-parser": "^21.1.1"
7735 |       },
7736 |       "bin": {
7737 |         "ts-jest": "cli.js"
7738 |       },
7739 |       "engines": {
7740 |         "node": "^14.15.0 || ^16.10.0 || ^18.0.0 || >=20.0.0"
7741 |       },
7742 |       "peerDependencies": {
7743 |         "@babel/core": ">=7.0.0-beta.0 <8",
7744 |         "@jest/transform": "^29.0.0",
7745 |         "@jest/types": "^29.0.0",
7746 |         "babel-jest": "^29.0.0",
7747 |         "jest": "^29.0.0",
7748 |         "typescript": ">=4.3 <6"
7749 |       },
7750 |       "peerDependenciesMeta": {
7751 |         "@babel/core": {
7752 |           "optional": true
7753 |         },
7754 |         "@jest/transform": {
7755 |           "optional": true
7756 |         },
7757 |         "@jest/types": {
7758 |           "optional": true
7759 |         },
7760 |         "babel-jest": {
7761 |           "optional": true
7762 |         },
7763 |         "esbuild": {
7764 |           "optional": true
7765 |         }
7766 |       }
7767 |     },
7768 |     "node_modules/tslib": {
7769 |       "version": "2.8.1",
7770 |       "resolved": "https://registry.npmmirror.com/tslib/-/tslib-2.8.1.tgz",
7771 |       "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
7772 |       "dev": true
7773 |     },
7774 |     "node_modules/type-check": {
7775 |       "version": "0.4.0",
7776 |       "resolved": "https://registry.npmmirror.com/type-check/-/type-check-0.4.0.tgz",
7777 |       "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
7778 |       "dev": true,
7779 |       "dependencies": {
7780 |         "prelude-ls": "^1.2.1"
7781 |       },
7782 |       "engines": {
7783 |         "node": ">= 0.8.0"
7784 |       }
7785 |     },
7786 |     "node_modules/type-detect": {
7787 |       "version": "4.0.8",
7788 |       "resolved": "https://registry.npmmirror.com/type-detect/-/type-detect-4.0.8.tgz",
7789 |       "integrity": "sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==",
7790 |       "dev": true,
7791 |       "engines": {
7792 |         "node": ">=4"
7793 |       }
7794 |     },
7795 |     "node_modules/type-fest": {
7796 |       "version": "0.21.3",
7797 |       "resolved": "https://registry.npmmirror.com/type-fest/-/type-fest-0.21.3.tgz",
7798 |       "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==",
7799 |       "dev": true,
7800 |       "engines": {
7801 |         "node": ">=10"
7802 |       },
7803 |       "funding": {
7804 |         "url": "https://github.com/sponsors/sindresorhus"
7805 |       }
7806 |     },
7807 |     "node_modules/typedarray-to-buffer": {
7808 |       "version": "3.1.5",
7809 |       "resolved": "https://registry.npmmirror.com/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz",
7810 |       "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==",
7811 |       "dev": true,
7812 |       "dependencies": {
7813 |         "is-typedarray": "^1.0.0"
7814 |       }
7815 |     },
7816 |     "node_modules/typescript": {
7817 |       "version": "5.7.2",
7818 |       "resolved": "https://registry.npmmirror.com/typescript/-/typescript-5.7.2.tgz",
7819 |       "integrity": "sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==",
7820 |       "dev": true,
7821 |       "bin": {
7822 |         "tsc": "bin/tsc",
7823 |         "tsserver": "bin/tsserver"
7824 |       },
7825 |       "engines": {
7826 |         "node": ">=14.17"
7827 |       }
7828 |     },
7829 |     "node_modules/undici-types": {
7830 |       "version": "6.20.0",
7831 |       "resolved": "https://registry.npmmirror.com/undici-types/-/undici-types-6.20.0.tgz",
7832 |       "integrity": "sha512-Ny6QZ2Nju20vw1SRHe3d9jVu6gJ+4e3+MMpqu7pqE5HT6WsTSlce++GQmK5UXS8mzV8DSYHrQH+Xrf2jVcuKNg==",
7833 |       "dev": true
7834 |     },
7835 |     "node_modules/union-value": {
7836 |       "version": "1.0.1",
7837 |       "resolved": "https://registry.npmmirror.com/union-value/-/union-value-1.0.1.tgz",
7838 |       "integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==",
7839 |       "dev": true,
7840 |       "dependencies": {
7841 |         "arr-union": "^3.1.0",
7842 |         "get-value": "^2.0.6",
7843 |         "is-extendable": "^0.1.1",
7844 |         "set-value": "^2.0.1"
7845 |       },
7846 |       "engines": {
7847 |         "node": ">=0.10.0"
7848 |       }
7849 |     },
7850 |     "node_modules/union-value/node_modules/is-extendable": {
7851 |       "version": "0.1.1",
7852 |       "resolved": "https://registry.npmmirror.com/is-extendable/-/is-extendable-0.1.1.tgz",
7853 |       "integrity": "sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==",
7854 |       "dev": true,
7855 |       "engines": {
7856 |         "node": ">=0.10.0"
7857 |       }
7858 |     },
7859 |     "node_modules/unset-value": {
7860 |       "version": "1.0.0",
7861 |       "resolved": "https://registry.npmmirror.com/unset-value/-/unset-value-1.0.0.tgz",
7862 |       "integrity": "sha512-PcA2tsuGSF9cnySLHTLSh2qrQiJ70mn+r+Glzxv2TWZblxsxCC52BDlZoPCsz7STd9pN7EZetkWZBAvk4cgZdQ==",
7863 |       "dev": true,
7864 |       "dependencies": {
7865 |         "has-value": "^0.3.1",
7866 |         "isobject": "^3.0.0"
7867 |       },
7868 |       "engines": {
7869 |         "node": ">=0.10.0"
7870 |       }
7871 |     },
7872 |     "node_modules/unset-value/node_modules/has-value": {
7873 |       "version": "0.3.1",
7874 |       "resolved": "https://registry.npmmirror.com/has-value/-/has-value-0.3.1.tgz",
7875 |       "integrity": "sha512-gpG936j8/MzaeID5Yif+577c17TxaDmhuyVgSwtnL/q8UUTySg8Mecb+8Cf1otgLoD7DDH75axp86ER7LFsf3Q==",
7876 |       "dev": true,
7877 |       "dependencies": {
7878 |         "get-value": "^2.0.3",
7879 |         "has-values": "^0.1.4",
7880 |         "isobject": "^2.0.0"
7881 |       },
7882 |       "engines": {
7883 |         "node": ">=0.10.0"
7884 |       }
7885 |     },
7886 |     "node_modules/unset-value/node_modules/has-value/node_modules/isobject": {
7887 |       "version": "2.1.0",
7888 |       "resolved": "https://registry.npmmirror.com/isobject/-/isobject-2.1.0.tgz",
7889 |       "integrity": "sha512-+OUdGJlgjOBZDfxnDjYYG6zp487z0JGNQq3cYQYg5f5hKR+syHMsaztzGeml/4kGG55CSpKSpWTY+jYGgsHLgA==",
7890 |       "dev": true,
7891 |       "dependencies": {
7892 |         "isarray": "1.0.0"
7893 |       },
7894 |       "engines": {
7895 |         "node": ">=0.10.0"
7896 |       }
7897 |     },
7898 |     "node_modules/unset-value/node_modules/has-values": {
7899 |       "version": "0.1.4",
7900 |       "resolved": "https://registry.npmmirror.com/has-values/-/has-values-0.1.4.tgz",
7901 |       "integrity": "sha512-J8S0cEdWuQbqD9//tlZxiMuMNmxB8PlEwvYwuxsTmR1G5RXUePEX/SJn7aD0GMLieuZYSwNH0cQuJGwnYunXRQ==",
7902 |       "dev": true,
7903 |       "engines": {
7904 |         "node": ">=0.10.0"
7905 |       }
7906 |     },
7907 |     "node_modules/update-browserslist-db": {
7908 |       "version": "1.1.1",
7909 |       "resolved": "https://registry.npmmirror.com/update-browserslist-db/-/update-browserslist-db-1.1.1.tgz",
7910 |       "integrity": "sha512-R8UzCaa9Az+38REPiJ1tXlImTJXlVfgHZsglwBD/k6nj76ctsH1E3q4doGrukiLQd3sGQYu56r5+lo5r94l29A==",
7911 |       "dev": true,
7912 |       "funding": [
7913 |         {
7914 |           "type": "opencollective",
7915 |           "url": "https://opencollective.com/browserslist"
7916 |         },
7917 |         {
7918 |           "type": "tidelift",
7919 |           "url": "https://tidelift.com/funding/github/npm/browserslist"
7920 |         },
7921 |         {
7922 |           "type": "github",
7923 |           "url": "https://github.com/sponsors/ai"
7924 |         }
7925 |       ],
7926 |       "dependencies": {
7927 |         "escalade": "^3.2.0",
7928 |         "picocolors": "^1.1.0"
7929 |       },
7930 |       "bin": {
7931 |         "update-browserslist-db": "cli.js"
7932 |       },
7933 |       "peerDependencies": {
7934 |         "browserslist": ">= 4.21.0"
7935 |       }
7936 |     },
7937 |     "node_modules/uri-js": {
7938 |       "version": "4.4.1",
7939 |       "resolved": "https://registry.npmmirror.com/uri-js/-/uri-js-4.4.1.tgz",
7940 |       "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
7941 |       "dev": true,
7942 |       "dependencies": {
7943 |         "punycode": "^2.1.0"
7944 |       }
7945 |     },
7946 |     "node_modules/urix": {
7947 |       "version": "0.1.0",
7948 |       "resolved": "https://registry.npmmirror.com/urix/-/urix-0.1.0.tgz",
7949 |       "integrity": "sha512-Am1ousAhSLBeB9cG/7k7r2R0zj50uDRlZHPGbazid5s9rlF1F/QKYObEKSIunSjIOkJZqwRRLpvewjEkM7pSqg==",
7950 |       "deprecated": "Please see https://github.com/lydell/urix#deprecated",
7951 |       "dev": true
7952 |     },
7953 |     "node_modules/use": {
7954 |       "version": "3.1.1",
7955 |       "resolved": "https://registry.npmmirror.com/use/-/use-3.1.1.tgz",
7956 |       "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==",
7957 |       "dev": true,
7958 |       "engines": {
7959 |         "node": ">=0.10.0"
7960 |       }
7961 |     },
7962 |     "node_modules/uuid": {
7963 |       "version": "11.0.3",
7964 |       "resolved": "https://registry.npmmirror.com/uuid/-/uuid-11.0.3.tgz",
7965 |       "integrity": "sha512-d0z310fCWv5dJwnX1Y/MncBAqGMKEzlBb1AOf7z9K8ALnd0utBX/msg/fA0+sbyN1ihbMsLhrBlnl1ak7Wa0rg==",
7966 |       "dev": true,
7967 |       "funding": [
7968 |         "https://github.com/sponsors/broofa",
7969 |         "https://github.com/sponsors/ctavan"
7970 |       ],
7971 |       "bin": {
7972 |         "uuid": "dist/esm/bin/uuid"
7973 |       }
7974 |     },
7975 |     "node_modules/v8-to-istanbul": {
7976 |       "version": "9.3.0",
7977 |       "resolved": "https://registry.npmmirror.com/v8-to-istanbul/-/v8-to-istanbul-9.3.0.tgz",
7978 |       "integrity": "sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==",
7979 |       "dev": true,
7980 |       "dependencies": {
7981 |         "@jridgewell/trace-mapping": "^0.3.12",
7982 |         "@types/istanbul-lib-coverage": "^2.0.1",
7983 |         "convert-source-map": "^2.0.0"
7984 |       },
7985 |       "engines": {
7986 |         "node": ">=10.12.0"
7987 |       }
7988 |     },
7989 |     "node_modules/w3c-keyname": {
7990 |       "version": "2.2.8",
7991 |       "resolved": "https://registry.npmmirror.com/w3c-keyname/-/w3c-keyname-2.2.8.tgz",
7992 |       "integrity": "sha512-dpojBhNsCNN7T82Tm7k26A6G9ML3NkhDsnw9n/eoxSRlVBB4CEtIQ/KTCLI2Fwf3ataSXRhYFkQi3SlnFwPvPQ==",
7993 |       "dev": true
7994 |     },
7995 |     "node_modules/walker": {
7996 |       "version": "1.0.8",
7997 |       "resolved": "https://registry.npmmirror.com/walker/-/walker-1.0.8.tgz",
7998 |       "integrity": "sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==",
7999 |       "dev": true,
8000 |       "dependencies": {
8001 |         "makeerror": "1.0.12"
8002 |       }
8003 |     },
8004 |     "node_modules/which": {
8005 |       "version": "2.0.2",
8006 |       "resolved": "https://registry.npmmirror.com/which/-/which-2.0.2.tgz",
8007 |       "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
8008 |       "dev": true,
8009 |       "dependencies": {
8010 |         "isexe": "^2.0.0"
8011 |       },
8012 |       "bin": {
8013 |         "node-which": "bin/node-which"
8014 |       },
8015 |       "engines": {
8016 |         "node": ">= 8"
8017 |       }
8018 |     },
8019 |     "node_modules/word-wrap": {
8020 |       "version": "1.2.5",
8021 |       "resolved": "https://registry.npmmirror.com/word-wrap/-/word-wrap-1.2.5.tgz",
8022 |       "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
8023 |       "dev": true,
8024 |       "engines": {
8025 |         "node": ">=0.10.0"
8026 |       }
8027 |     },
8028 |     "node_modules/wrap-ansi": {
8029 |       "version": "7.0.0",
8030 |       "resolved": "https://registry.npmmirror.com/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
8031 |       "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
8032 |       "dev": true,
8033 |       "dependencies": {
8034 |         "ansi-styles": "^4.0.0",
8035 |         "string-width": "^4.1.0",
8036 |         "strip-ansi": "^6.0.0"
8037 |       },
8038 |       "engines": {
8039 |         "node": ">=10"
8040 |       },
8041 |       "funding": {
8042 |         "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
8043 |       }
8044 |     },
8045 |     "node_modules/wrappy": {
8046 |       "version": "1.0.2",
8047 |       "resolved": "https://registry.npmmirror.com/wrappy/-/wrappy-1.0.2.tgz",
8048 |       "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
8049 |       "dev": true
8050 |     },
8051 |     "node_modules/write-file-atomic": {
8052 |       "version": "4.0.2",
8053 |       "resolved": "https://registry.npmmirror.com/write-file-atomic/-/write-file-atomic-4.0.2.tgz",
8054 |       "integrity": "sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==",
8055 |       "dev": true,
8056 |       "dependencies": {
8057 |         "imurmurhash": "^0.1.4",
8058 |         "signal-exit": "^3.0.7"
8059 |       },
8060 |       "engines": {
8061 |         "node": "^12.13.0 || ^14.15.0 || >=16.0.0"
8062 |       }
8063 |     },
8064 |     "node_modules/y18n": {
8065 |       "version": "5.0.8",
8066 |       "resolved": "https://registry.npmmirror.com/y18n/-/y18n-5.0.8.tgz",
8067 |       "integrity": "sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==",
8068 |       "dev": true,
8069 |       "engines": {
8070 |         "node": ">=10"
8071 |       }
8072 |     },
8073 |     "node_modules/yallist": {
8074 |       "version": "3.1.1",
8075 |       "resolved": "https://registry.npmmirror.com/yallist/-/yallist-3.1.1.tgz",
8076 |       "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
8077 |       "dev": true
8078 |     },
8079 |     "node_modules/yaml": {
8080 |       "version": "2.6.1",
8081 |       "resolved": "https://registry.npmmirror.com/yaml/-/yaml-2.6.1.tgz",
8082 |       "integrity": "sha512-7r0XPzioN/Q9kXBro/XPnA6kznR73DHq+GXh5ON7ZozRO6aMjbmiBuKste2wslTFkC5d1dw0GooOCepZXJ2SAg==",
8083 |       "dev": true,
8084 |       "bin": {
8085 |         "yaml": "bin.mjs"
8086 |       },
8087 |       "engines": {
8088 |         "node": ">= 14"
8089 |       }
8090 |     },
8091 |     "node_modules/yargs": {
8092 |       "version": "17.7.2",
8093 |       "resolved": "https://registry.npmmirror.com/yargs/-/yargs-17.7.2.tgz",
8094 |       "integrity": "sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==",
8095 |       "dev": true,
8096 |       "dependencies": {
8097 |         "cliui": "^8.0.1",
8098 |         "escalade": "^3.1.1",
8099 |         "get-caller-file": "^2.0.5",
8100 |         "require-directory": "^2.1.1",
8101 |         "string-width": "^4.2.3",
8102 |         "y18n": "^5.0.5",
8103 |         "yargs-parser": "^21.1.1"
8104 |       },
8105 |       "engines": {
8106 |         "node": ">=12"
8107 |       }
8108 |     },
8109 |     "node_modules/yargs-parser": {
8110 |       "version": "21.1.1",
8111 |       "resolved": "https://registry.npmmirror.com/yargs-parser/-/yargs-parser-21.1.1.tgz",
8112 |       "integrity": "sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==",
8113 |       "dev": true,
8114 |       "engines": {
8115 |         "node": ">=12"
8116 |       }
8117 |     },
8118 |     "node_modules/yocto-queue": {
8119 |       "version": "0.1.0",
8120 |       "resolved": "https://registry.npmmirror.com/yocto-queue/-/yocto-queue-0.1.0.tgz",
8121 |       "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
8122 |       "dev": true,
8123 |       "engines": {
8124 |         "node": ">=10"
8125 |       },
8126 |       "funding": {
8127 |         "url": "https://github.com/sponsors/sindresorhus"
8128 |       }
8129 |     }
8130 |   }
8131 | }
8132 | 


--------------------------------------------------------------------------------
/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "obsidian-projects",
 3 |   "version": "1.17.4",
 4 |   "description": "Plain text project planning for Obsidian",
 5 |   "main": "main.js",
 6 |   "scripts": {
 7 |     "dev": "node esbuild.config.mjs",
 8 |     "build": "tsc -noEmit -skipLibCheck && node esbuild.config.mjs production",
 9 |     "version": "node version-bump.mjs && git add manifest.json versions.json",
10 |     "test": "jest --config jest.config.js",
11 |     "svelte-check": "svelte-check",
12 |     "lint": "eslint ./src",
13 |     "format": "prettier -w ./src",
14 |     "sass-build": "sass ./css/styles.scss ./styles.css",
15 |     "sass-watch": "sass --watch ./css/styles.scss ./styles.css"
16 |   },
17 |   "keywords": [],
18 |   "author": "",
19 |   "license": "MIT",
20 |   "devDependencies": {
21 |     "@eslint/eslintrc": "^3.2.0",
22 |     "@eslint/js": "^9.15.0",
23 |     "@interactjs/interact": "^1.10.27",
24 |     "@interactjs/types": "^1.10.27",
25 |     "@popperjs/core": "^2.11.8",
26 |     "@popperjs/svelte": "^0.1.1",
27 |     "@tsconfig/svelte": "^5.0.4",
28 |     "@types/jest": "^29.5.12",
29 |     "@types/node": "^22.10.1",
30 |     "@types/sortablejs": "^1.15.8",
31 |     "@types/uuid": "^10.0.0",
32 |     "@typescript-eslint/eslint-plugin": "^8.16.0",
33 |     "@typescript-eslint/parser": "^8.16.0",
34 |     "builtin-modules": "^3.3.0",
35 |     "dayjs": "^1.11.11",
36 |     "esbuild": "^0.16.17",
37 |     "esbuild-jest": "^0.5.0",
38 |     "esbuild-plugin-replace": "^1.4.0",
39 |     "esbuild-svelte": "^0.7.4",
40 |     "eslint": "^9.15.0",
41 |     "eslint-plugin-tsdoc": "^0.4.0",
42 |     "fp-ts": "^2.16.6",
43 |     "globals": "^15.12.0",
44 |     "i18next": "^24.0.2",
45 |     "immer": "^10.1.1",
46 |     "jest": "^29.7.0",
47 |     "obsidian": "^1.7.2",
48 |     "obsidian-dataview": "^0.5.67",
49 |     "obsidian-svelte": "0.2.1",
50 |     "prettier": "^3.3.3",
51 |     "prettier-plugin-svelte": "^3.3.0",
52 |     "sass": "^1.77.2",
53 |     "svelte": "^3.59.2",
54 |     "svelte-check": "^3.7.1",
55 |     "svelte-dnd-action": "0.9.52",
56 |     "svelte-i18next": "^2.2.2",
57 |     "svelte-media-queries": "^1.6.2",
58 |     "svelte-preprocess": "^5.1.4",
59 |     "ts-essentials": "^10.0.3",
60 |     "ts-jest": "^29.1.3",
61 |     "tslib": "^2.6.2",
62 |     "typescript": "^5.4.5",
63 |     "uuid": "^11.0.3",
64 |     "yaml": "^2.4.2"
65 |   }
66 | }


--------------------------------------------------------------------------------
/project.inlang/project_id:
--------------------------------------------------------------------------------
1 | 00ebe92dd41d8d9d19893d1e95813da6dca61225cf4e4a63230b2240beb01bca


--------------------------------------------------------------------------------
/project.inlang/settings.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "$schema": "https://inlang.com/schema/project-settings",
 3 |   "sourceLanguageTag": "en",
 4 |   "languageTags": [
 5 |     "en",
 6 |     "zh-CN"
 7 |   ],
 8 |   "modules": [
 9 |     "https://cdn.jsdelivr.net/npm/@inlang/plugin-i18next@4/dist/index.js",
10 |     "https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-empty-pattern@1/dist/index.js",
11 |     "https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-identical-pattern@1/dist/index.js",
12 |     "https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-without-source@1/dist/index.js",
13 |     "https://cdn.jsdelivr.net/npm/@inlang/message-lint-rule-missing-translation@1/dist/index.js"
14 |   ],
15 |   "plugin.inlang.i18next": {
16 |     "pathPattern": "./src/lib/stores/translations/{languageTag}.json",
17 |     "variableReferencePattern": [
18 |       "{{",
19 |       "}}"
20 |     ]
21 |   }
22 | }


--------------------------------------------------------------------------------
/scripts/generate-test-files.py:
--------------------------------------------------------------------------------
 1 | import random
 2 | import string
 3 | import argparse
 4 | import yaml
 5 | import datetime
 6 | 
 7 | parser = argparse.ArgumentParser(
 8 |     prog="generate-test-files",
 9 |     description="Generates large numbers of Markdown files for testing.",
10 | )
11 | 
12 | parser.add_argument("output", help="Output folder for generated Markdown files.")
13 | parser.add_argument(
14 |     "-n",
15 |     "--numfiles",
16 |     type=int,
17 |     required=True,
18 |     help="Number of files to generate.",
19 | )
20 | 
21 | args = parser.parse_args()
22 | 
23 | 
24 | def random_text():
25 |     letters = string.ascii_letters
26 |     return "".join(random.choice(letters) for i in range(10))
27 | 
28 | 
29 | def random_check():
30 |     return bool(random.getrandbits(1))
31 | 
32 | 
33 | def random_date():
34 |     start_date = datetime.date(2022, 1, 1)
35 |     end_date = datetime.date(2023, 1, 1)
36 | 
37 |     time_between_dates = end_date - start_date
38 |     days_between_dates = time_between_dates.days
39 |     random_number_of_days = random.randrange(days_between_dates)
40 |     random_date = start_date + datetime.timedelta(days=random_number_of_days)
41 | 
42 |     return random_date
43 | 
44 | 
45 | def random_status():
46 |     return random.choice(["Backlog", "In progress", "Done"])
47 | 
48 | 
49 | def random_number():
50 |     return random.randrange(1, 100)
51 | 
52 | 
53 | for n in range(args.numfiles):
54 |     path = args.output + "/" + random_text() + ".md"
55 | 
56 |     with open(path, "w") as file:
57 |         frontmatter = {
58 |             "status": random_status(),
59 |             "published": random_check(),
60 |             "due": random_date(),
61 |             "weight": random_number(),
62 |         }
63 | 
64 |         file.write("---\n")
65 |         yaml.dump(frontmatter, file, encoding="utf-8")
66 |         file.write("---\n\n")
67 | 
68 |         file.write("# " + random_text())
69 | 


--------------------------------------------------------------------------------
/src/__mocks__/obsidian.ts:
--------------------------------------------------------------------------------
1 | export const Platform = { isSafari: false };
2 | 


--------------------------------------------------------------------------------
/src/customViewApi.ts:
--------------------------------------------------------------------------------
 1 | import type { DataFrame, DataRecord } from "src/lib/dataframe/dataframe";
 2 | import type { ViewApi } from "src/lib/viewApi";
 3 | import type { ProjectDefinition, ViewId } from "./settings/settings";
 4 | 
 5 | export interface DataQueryResult {
 6 |   data: DataFrame;
 7 |   hasSort: boolean;
 8 |   hasFilter: boolean;
 9 | }
10 | 
11 | /**
12 |  * ProjectViewProps provides various metadata for the views.
13 |  */
14 | export interface ProjectViewProps<T = Record<string, any>> {
15 |   viewId: ViewId;
16 |   project: ProjectDefinition;
17 |   config: T;
18 |   saveConfig: (config: T) => void;
19 |   contentEl: HTMLElement;
20 |   viewApi: ViewApi;
21 |   readonly: boolean;
22 |   getRecordColor: (record: DataRecord) => string | null;
23 |   sortRecords: (records: ReadonlyArray<DataRecord>) => DataRecord[];
24 |   getRecord: (id: string) => DataRecord | undefined;
25 | }
26 | 
27 | /**
28 |  * ProjectView is the base class for all Project views.
29 |  *
30 |  * If you want to create a new built-in view, you need to create a new class
31 |  * that extends this one. Then you need to register it in
32 |  * ProjectsView.getProjectViews().
33 |  */
34 | export abstract class ProjectView<T = Record<string, any>> {
35 |   async onData(result: DataQueryResult): Promise<void> {}
36 |   async onOpen(props: ProjectViewProps<T>): Promise<void> {}
37 |   async onClose(): Promise<void> {}
38 | 
39 |   abstract getViewType(): string;
40 |   abstract getDisplayName(): string;
41 |   abstract getIcon(): string;
42 | }
43 | 


--------------------------------------------------------------------------------
/src/events.ts:
--------------------------------------------------------------------------------
 1 | import { get } from "svelte/store";
 2 | import { dataFrame, dataSource } from "src/lib/stores/dataframe";
 3 | import type { IFileSystemWatcher } from "./lib/filesystem/filesystem";
 4 | import { DataviewDataSource } from "./lib/datasources/dataview/datasource";
 5 | import type { DataSource } from "./lib/datasources";
 6 | 
 7 | /**
 8 |  * registerFileEvents keeps the file index up-to-date while plugin is running.
 9 |  */
10 | export function registerFileEvents(watcher: IFileSystemWatcher) {
11 |   watcher.onCreate(async (file) => {
12 |     withDataSource(async (source) => {
13 |       if (source.includes(file.path)) {
14 |         dataFrame.merge(await source.queryOne(file, get(dataFrame).fields));
15 |       }
16 |     });
17 |   });
18 |   watcher.onRename(async (file, oldPath) => {
19 |     withDataSource(async (source) => {
20 |       if (source.includes(file.path)) {
21 |         dataFrame.deleteRecord(oldPath);
22 |         dataFrame.merge(await source.queryOne(file, get(dataFrame).fields));
23 |       } else if (source.includes(oldPath)) {
24 |         dataFrame.deleteRecord(oldPath);
25 |       }
26 |     });
27 |   });
28 | 
29 |   watcher.onDelete(async (file) => {
30 |     withDataSource(async (source) => {
31 |       const recordExists = !!get(dataFrame).records.find(
32 |         (record) => record.id === file.path
33 |       );
34 | 
35 |       if (recordExists) {
36 |         dataFrame.deleteRecord(file.path);
37 |       }
38 |     });
39 |   });
40 | 
41 |   watcher.onChange(async (file) => {
42 |     withDataSource(async (source) => {
43 |       const recordExists = !!get(dataFrame).records.find(
44 |         (record) => record.id === file.path
45 |       );
46 | 
47 |       if (source.includes(file.path)) {
48 |         dataFrame.merge(await source.queryOne(file, get(dataFrame).fields));
49 |       } else if (recordExists) {
50 |         dataFrame.deleteRecord(file.path);
51 |       }
52 |     });
53 |   });
54 | }
55 | 
56 | /**
57 |  * withDataSource is a helper function to access the current data source.
58 |  */
59 | function withDataSource(callback: (source: DataSource) => Promise<void>) {
60 |   const source = get(dataSource);
61 |   if (!source) {
62 |     return;
63 |   }
64 | 
65 |   // This is a hack to trigger the Dataview query to run again when a file changes.
66 |   if (source instanceof DataviewDataSource) {
67 |     dataSource.set(source);
68 |     return;
69 |   }
70 | 
71 |   return callback(source);
72 | }
73 | 


--------------------------------------------------------------------------------
/src/global.d.ts:
--------------------------------------------------------------------------------
 1 | declare type Item = import("svelte-dnd-action").Item;
 2 | declare type DndEvent<ItemType = Item> =
 3 |   import("svelte-dnd-action").DndEvent<ItemType>;
 4 | declare namespace svelte.JSX {
 5 |   interface HTMLAttributes<T> {
 6 |     onconsider?: (
 7 |       event: CustomEvent<DndEvent<ItemType>> & { target: EventTarget & T }
 8 |     ) => void;
 9 |     onfinalize?: (
10 |       event: CustomEvent<DndEvent<ItemType>> & { target: EventTarget & T }
11 |     ) => void;
12 |   }
13 | }
14 | 


--------------------------------------------------------------------------------
/src/lib/dataApi.ts:
--------------------------------------------------------------------------------
  1 | import dayjs from "dayjs";
  2 | import { produce } from "immer";
  3 | import moment from "moment";
  4 | import { get } from "svelte/store";
  5 | import { v4 as uuidv4 } from "uuid";
  6 | 
  7 | import {
  8 |   isDate,
  9 |   DataFieldType,
 10 |   type DataField,
 11 |   type DataRecord,
 12 |   type DataValue,
 13 |   type Optional,
 14 | } from "./dataframe/dataframe";
 15 | import { nextUniqueProjectName, notEmpty, getNameFromPath } from "./helpers";
 16 | import { decodeFrontMatter, encodeFrontMatter } from "./metadata";
 17 | import { i18n } from "./stores/i18n";
 18 | import { settings } from "./stores/settings";
 19 | import { interpolateTemplate } from "./templates/interpolate";
 20 | 
 21 | import { function as F, task as T, either as E, taskEither as TE } from "fp-ts";
 22 | import {
 23 |   DEFAULT_PROJECT,
 24 |   DEFAULT_VIEW,
 25 |   type ProjectDefinition,
 26 | } from "src/settings/settings";
 27 | import type { IFile, IFileSystem } from "./filesystem/filesystem";
 28 | import { normalizePath } from "obsidian";
 29 | 
 30 | /**
 31 |  * DataApi writes records to file.
 32 |  */
 33 | export class DataApi {
 34 |   constructor(readonly fileSystem: IFileSystem) {}
 35 | 
 36 |   async updateRecord(fields: DataField[], record: DataRecord): Promise<void> {
 37 |     const file = this.fileSystem.getFile(record.id);
 38 |     if (file) {
 39 |       await this.updateFile(file, (data) =>
 40 |         doUpdateRecord(data, fields, record)
 41 |       )();
 42 |     }
 43 |   }
 44 | 
 45 |   async updateRecords(
 46 |     fields: DataField[],
 47 |     records: DataRecord[]
 48 |   ): Promise<void> {
 49 |     await Promise.all(
 50 |       records.map(async (record) => {
 51 |         const file = this.fileSystem.getFile(record.id);
 52 |         if (file) {
 53 |           await this.updateFile(file, (data) =>
 54 |             doUpdateRecord(data, fields, record)
 55 |           )();
 56 |         }
 57 |       })
 58 |     );
 59 |   }
 60 | 
 61 |   async addField(
 62 |     paths: string[],
 63 |     field: DataField,
 64 |     value: Optional<DataValue>
 65 |   ): Promise<void> {
 66 |     await Promise.all(
 67 |       paths
 68 |         .map((path) => this.fileSystem.getFile(path))
 69 |         .filter(notEmpty)
 70 |         .map((file) =>
 71 |           this.updateFile(file, (data) => doAddField(data, field, value))()
 72 |         )
 73 |     );
 74 |   }
 75 | 
 76 |   async renameField(paths: string[], from: string, to: string): Promise<void> {
 77 |     Promise.all(
 78 |       paths
 79 |         .map((path) => this.fileSystem.getFile(path))
 80 |         .filter(notEmpty)
 81 |         .map((file) =>
 82 |           this.updateFile(file, (data) => doRenameField(data, from, to))()
 83 |         )
 84 |     );
 85 |   }
 86 | 
 87 |   async deleteField(paths: string[], name: string): Promise<void> {
 88 |     Promise.all(
 89 |       paths
 90 |         .map((path) => this.fileSystem.getFile(path))
 91 |         .filter(notEmpty)
 92 |         .map((file) =>
 93 |           this.updateFile(file, (data) => doDeleteField(data, name))()
 94 |         )
 95 |     );
 96 |   }
 97 | 
 98 |   async createNote(
 99 |     record: DataRecord,
100 |     fields: DataField[],
101 |     templatePath: string
102 |   ): Promise<void> {
103 |     let content = "";
104 | 
105 |     if (templatePath) {
106 |       const file = this.fileSystem.getFile(templatePath);
107 |       if (file) {
108 |         content = await file.read();
109 |         content = interpolateTemplate(content, {
110 |           title: () => getNameFromPath(record.id),
111 |           date: (format) => moment().format(format || "YYYY-MM-DD"),
112 |           time: (format) => moment().format(format || "HH:mm"),
113 |         });
114 |         if (record.values["tags"]) {
115 |           const templateTags = F.pipe(
116 |             content,
117 |             decodeFrontMatter,
118 |             E.map((frontmatter) => frontmatter["tags"]),
119 |             E.fold(
120 |               () => [],
121 |               (right) => right ?? [] // handle `null`
122 |             )
123 |           );
124 |           //@ts-ignore explict input in `createDataRecord()`
125 |           const tagSet: Set<string> = new Set(
126 |             templateTags.concat(record.values["tags"])
127 |           );
128 |           record.values["tags"] = [...tagSet];
129 |         }
130 |       }
131 |     }
132 | 
133 |     const file = await this.fileSystem.create(record.id, content);
134 | 
135 |     await this.updateFile(file, (data) =>
136 |       doUpdateRecord(data, fields, record)
137 |     )();
138 |   }
139 | 
140 |   updateFile(
141 |     file: IFile,
142 |     cb: (data: string) => E.Either<Error, string>
143 |   ): T.Task<void> {
144 |     return F.pipe(
145 |       TE.tryCatch((): Promise<string> => file.read(), E.toError),
146 |       TE.map(cb),
147 |       TE.chain(TE.fromEither),
148 |       TE.chain((result) => TE.tryCatch(() => file.write(result), E.toError)),
149 |       T.map(
150 |         E.fold(
151 |           (err) => {
152 |             throw err;
153 |           },
154 |           () => {
155 |             // new Notice("Updated file");
156 |           }
157 |         )
158 |       )
159 |     );
160 |   }
161 | 
162 |   async deleteRecord(path: string) {
163 |     const file = this.fileSystem.getFile(path);
164 | 
165 |     if (file) {
166 |       file.delete();
167 |     }
168 |   }
169 | }
170 | 
171 | export function doUpdateRecord(
172 |   data: string,
173 |   fields: DataField[],
174 |   record: DataRecord
175 | ): E.Either<Error, string> {
176 |   return F.pipe(
177 |     data,
178 |     decodeFrontMatter,
179 |     E.map((frontmatter) => {
180 |       return Object.fromEntries(
181 |         Object.entries({ ...frontmatter, ...record.values })
182 |           .map((entry) => {
183 |             if (isDate(entry[1])) {
184 |               const isDatetime = fields.find(
185 |                 (field) =>
186 |                   field.name === entry[0] &&
187 |                   field.type === DataFieldType.Date &&
188 |                   (field.typeConfig?.time ||
189 |                     entry[1].getHours() ||
190 |                     entry[1].getMinutes() ||
191 |                     entry[1].getSeconds() ||
192 |                     entry[1].getMilliseconds())
193 |               );
194 | 
195 |               return produce(entry, (draft) => {
196 |                 draft[1] = dayjs(entry[1]).format(
197 |                   isDatetime ? "YYYY-MM-DDTHH:mm" : "YYYY-MM-DD"
198 |                 );
199 |               });
200 |             }
201 |             return entry;
202 |           })
203 |           .filter(
204 |             (entry) =>
205 |               !fields.find((field) => field.name === entry[0] && field.derived)
206 |           )
207 |       );
208 |     }),
209 |     E.chain((updated) =>
210 |       encodeFrontMatter(data, updated, getDefaultStringType())
211 |     )
212 |   );
213 | }
214 | 
215 | export function doAddField(
216 |   data: string,
217 |   field: DataField,
218 |   value: Optional<DataValue>
219 | ): E.Either<Error, string> {
220 |   return F.pipe(
221 |     data,
222 |     decodeFrontMatter,
223 |     E.map((frontmatter) => ({
224 |       ...frontmatter,
225 |       [field.name]: value,
226 |     })),
227 |     E.chain((frontmatter) =>
228 |       encodeFrontMatter(data, frontmatter, getDefaultStringType())
229 |     )
230 |   );
231 | }
232 | 
233 | export function doDeleteField(data: string, field: string) {
234 |   return F.pipe(
235 |     data,
236 |     decodeFrontMatter,
237 |     E.map((frontmatter) => ({
238 |       ...frontmatter,
239 |       [field]: undefined,
240 |     })),
241 |     E.chain((frontmatter) =>
242 |       encodeFrontMatter(data, frontmatter, getDefaultStringType())
243 |     )
244 |   );
245 | }
246 | 
247 | export function doRenameField(
248 |   data: string,
249 |   from: string,
250 |   to: string
251 | ): E.Either<Error, string> {
252 |   return F.pipe(
253 |     data,
254 |     decodeFrontMatter,
255 |     E.map((frontmatter) => ({
256 |       ...frontmatter,
257 |       [to]: frontmatter[from],
258 |       [from]: undefined,
259 |     })),
260 |     E.chain((frontmatter) =>
261 |       encodeFrontMatter(data, frontmatter, getDefaultStringType())
262 |     )
263 |   );
264 | }
265 | 
266 | export function createProject(): ProjectDefinition {
267 |   return Object.assign({}, DEFAULT_PROJECT, {
268 |     id: uuidv4(),
269 |     name: nextUniqueProjectName(
270 |       get(settings).projects,
271 |       get(i18n).t("modals.project.create.untitled")
272 |     ),
273 |     views: [
274 |       Object.assign({}, DEFAULT_VIEW, {
275 |         id: uuidv4(),
276 |         name: get(i18n).t("views.table.name"),
277 |         type: "table",
278 |       }),
279 |     ],
280 |   });
281 | }
282 | 
283 | export function createDataRecord(
284 |   name: string,
285 |   project: ProjectDefinition,
286 |   values?: Record<string, Optional<DataValue>>
287 | ): DataRecord {
288 |   let path = "";
289 | 
290 |   if (project.dataSource.kind === "folder") {
291 |     path = project.dataSource.config.path;
292 |   }
293 | 
294 |   if (project.newNotesFolder) {
295 |     path = project.newNotesFolder;
296 |   }
297 | 
298 |   if (project.dataSource.kind == "tag") {
299 |     values = {
300 |       ...values,
301 |       tags: [project.dataSource.config.tag.replace("#", "")],
302 |     };
303 |   }
304 | 
305 |   return {
306 |     id: normalizePath(path + "/" + name + ".md"),
307 |     values: values ?? {},
308 |   };
309 | }
310 | 
311 | function getDefaultStringType() {
312 |   return get(settings).preferences?.frontmatter?.quoteStrings ?? "PLAIN";
313 | }
314 | 


--------------------------------------------------------------------------------
/src/lib/dataframe/README.md:
--------------------------------------------------------------------------------
 1 | # Dataframe
 2 | 
 3 | This module contains the main data structure for Projects, the _data frame_.
 4 | 
 5 | A data frame contains _data records_ and _data fields_. You can think of records as the rows in a table, and fields as the columns. The example below shows a data frame with four records, and three fields (`due_date`, `published`, and `hours_spent`).
 6 | 
 7 | | `id`                 | `due_date` | `published` | `hours_spent` |
 8 | | -------------------- | ---------- | ----------- | ------------- |
 9 | | Blog/First draft.md  | 2025-01-01 | `true`      | 7             |
10 | | Blog/Second draft.md | 2025-01-08 | `true`      | 4             |
11 | | Blog/Third draft.md  | 2025-01-15 | `false`     | 2             |
12 | | Blog/Fourth draft.md | 2025-01-22 | `false`     | 1             |
13 | 


--------------------------------------------------------------------------------
/src/lib/dataframe/dataframe.ts:
--------------------------------------------------------------------------------
  1 | import type { FieldConfig } from "src/settings/settings";
  2 | import type { RecordError } from "../datasources/frontmatter/datasource";
  3 | 
  4 | /**
  5 |  * DataFrame is the core data structure that contains structured data for a
  6 |  * collection of notes.
  7 |  */
  8 | export type DataFrame = {
  9 |   /**
 10 |    * fields defines the schema for the data frame. Each field describes the
 11 |    * values in each DataRecord.
 12 |    */
 13 |   readonly fields: DataField[];
 14 | 
 15 |   /**
 16 |    * records holds the data from each note.
 17 |    */
 18 |   readonly records: DataRecord[];
 19 | 
 20 |   readonly errors?: RecordError[];
 21 | };
 22 | 
 23 | /**
 24 |  * DataField holds metadata for a value in DataRecord, for example a front
 25 |  * matter property.
 26 |  */
 27 | export type DataField = {
 28 |   /**
 29 |    * name references the a property (key) in the DataRecord values object.
 30 |    */
 31 |   readonly name: string;
 32 | 
 33 |   /**
 34 |    * type defines the data type for the field.
 35 |    */
 36 |   readonly type: DataFieldType;
 37 | 
 38 |   /**
 39 |    * typeConfig defines user-defined field information.
 40 |    */
 41 |   readonly typeConfig?: FieldConfig;
 42 | 
 43 |   /**
 44 |    * repeated defines whether the field can have multiple values.
 45 |    */
 46 |   readonly repeated: boolean;
 47 | 
 48 |   /**
 49 |    * identifier defines whether this field identifies a DataRecord.
 50 |    */
 51 |   readonly identifier: boolean;
 52 | 
 53 |   /**
 54 |    * derived defines whether this field has been derived from another field.
 55 |    *
 56 |    * Since derived fields are computed from other fields, they can't be
 57 |    * modified.
 58 |    */
 59 |   readonly derived: boolean;
 60 | };
 61 | 
 62 | export enum DataFieldType {
 63 |   String = "string",
 64 |   Number = "number",
 65 |   Boolean = "boolean",
 66 |   Date = "date",
 67 |   List = "multitext",
 68 |   Unknown = "unknown",
 69 | }
 70 | 
 71 | export type DataRecord = {
 72 |   readonly id: string;
 73 |   readonly values: Record<string, Optional<DataValue>>;
 74 | };
 75 | 
 76 | export type DataValue =
 77 |   | string
 78 |   | number
 79 |   | boolean
 80 |   | Date
 81 |   | Array<Optional<DataValue>>;
 82 | 
 83 | export function isOptionalDataValue(
 84 |   value: unknown
 85 | ): value is Optional<DataValue> {
 86 |   switch (typeof value) {
 87 |     case "string":
 88 |       return true;
 89 |     case "number":
 90 |       return true;
 91 |     case "boolean":
 92 |       return true;
 93 |     default:
 94 |       return false;
 95 |   }
 96 | }
 97 | 
 98 | export function isRepeatedDataValue(
 99 |   value: unknown
100 | ): value is Array<Optional<DataValue>> {
101 |   if (Array.isArray(value)) {
102 |     return value.every(isOptionalDataValue);
103 |   }
104 |   return false;
105 | }
106 | 
107 | export type Optional<T> =
108 |   | T
109 |   // undefined means the field has been removed from a DataRecord.
110 |   | undefined
111 |   // null means that while the field exists, it doesn't yet have a value.
112 |   | null;
113 | 
114 | export const emptyDataFrame: DataFrame = {
115 |   records: [],
116 |   fields: [],
117 | };
118 | 
119 | export function isBoolean(
120 |   value: Optional<DataValue> | DataValue
121 | ): value is boolean {
122 |   return typeof value === "boolean";
123 | }
124 | 
125 | export function isString(
126 |   value: Optional<DataValue> | DataValue
127 | ): value is string {
128 |   return typeof value === "string";
129 | }
130 | 
131 | export function isList(value: Optional<DataValue> | DataValue) {
132 |   return Array.isArray(value);
133 | }
134 | 
135 | export function isNumber(
136 |   value: Optional<DataValue> | DataValue
137 | ): value is number {
138 |   return typeof value === "number";
139 | }
140 | 
141 | export function isDate(value: Optional<DataValue> | DataValue): value is Date {
142 |   return value instanceof Date;
143 | }
144 | 
145 | // export function hasValue(value: Optional<DataValue>): value is DataValue {
146 | //   if (value === null || value === undefined) {
147 | //     return true;
148 | //   }
149 | //   return false;
150 | // }
151 | 
152 | export function isOptional<T>(value: unknown): value is Optional<T> {
153 |   return value === null || value === undefined;
154 | }
155 | 
156 | export function isOptionalBoolean(
157 |   value: Optional<DataValue>
158 | ): value is Optional<boolean> {
159 |   return isBoolean(value) || isOptional(value);
160 | }
161 | 
162 | export function isOptionalString(
163 |   value: Optional<DataValue>
164 | ): value is Optional<string> {
165 |   return isString(value) || isOptional(value);
166 | }
167 | 
168 | export function isOptionalList(
169 |   value: Optional<DataValue>
170 | ): value is Optional<Array<Optional<DataValue>>> {
171 |   return isList(value) || isOptional(value);
172 | }
173 | 
174 | export function isOptionalNumber(
175 |   value: Optional<DataValue>
176 | ): value is Optional<number> {
177 |   return isNumber(value) || isOptional(value);
178 | }
179 | 
180 | export function isOptionalDate(
181 |   value: Optional<DataValue>
182 | ): value is Optional<Date> {
183 |   return isDate(value) || isOptional(value);
184 | }
185 | 
186 | export function isStringLink(value: any): boolean {
187 |   if (isString(value)) {
188 |     return /^\[\[(.*)\]\]$/.test(value);
189 |   }
190 |   return false;
191 | }
192 | 


--------------------------------------------------------------------------------
/src/lib/datasources/README.md:
--------------------------------------------------------------------------------
 1 | # Data sources
 2 | 
 3 | This module contains _data sources_ for Projects. Data sources abstracts the logic for extracting data from your notes.
 4 | 
 5 | A data source is responsible for converting a query to a _data frame_, the primary data format for Projects.
 6 | 
 7 | - [dataview](./dataview)
 8 | - [folder](./folder)
 9 | - [tag](./tag)
10 | 
11 | The `frontmatter` data source is an intermediate abstraction for notes that uses frontmatter to define data fields, such as `folder` and `tag`.
12 | 


--------------------------------------------------------------------------------
/src/lib/datasources/dataview/datasource.ts:
--------------------------------------------------------------------------------
  1 | import { produce } from "immer";
  2 | import type { DataviewApi, Link } from "obsidian-dataview";
  3 | import type { TableResult } from "obsidian-dataview/lib/api/plugin-api";
  4 | import {
  5 |   emptyDataFrame,
  6 |   type DataField,
  7 |   type DataFrame,
  8 |   type DataRecord,
  9 | } from "src/lib/dataframe/dataframe";
 10 | import type { IFileSystem } from "src/lib/filesystem/filesystem";
 11 | import { i18n } from "src/lib/stores/i18n";
 12 | import type {
 13 |   ProjectDefinition,
 14 |   ProjectsPluginPreferences,
 15 | } from "src/settings/settings";
 16 | import { get } from "svelte/store";
 17 | import { DataSource } from "..";
 18 | import { parseRecords } from "../helpers";
 19 | import { detectSchema } from "./schema";
 20 | import { standardizeValues } from "./standardize";
 21 | 
 22 | export class UnsupportedCapability extends Error {
 23 |   constructor(message: string) {
 24 |     super(message);
 25 |     this.name = get(i18n).t("errors.missingDataview.title");
 26 |   }
 27 | }
 28 | 
 29 | /**
 30 |  * DataviewDataSource returns a collection of notes using Dataview queries.
 31 |  */
 32 | export class DataviewDataSource extends DataSource {
 33 |   constructor(
 34 |     readonly fileSystem: IFileSystem,
 35 |     project: ProjectDefinition,
 36 |     preferences: ProjectsPluginPreferences,
 37 |     readonly api: DataviewApi
 38 |   ) {
 39 |     super(project, preferences);
 40 |   }
 41 | 
 42 |   async queryOne(): Promise<DataFrame> {
 43 |     return this.queryAll();
 44 |   }
 45 | 
 46 |   async queryAll(): Promise<DataFrame> {
 47 |     if (this.project.dataSource.kind !== "dataview") {
 48 |       return emptyDataFrame;
 49 |     }
 50 | 
 51 |     const result = await this.api.query(
 52 |       this.project.dataSource.config.query ?? "",
 53 |       undefined,
 54 |       {
 55 |         forceId: true,
 56 |       }
 57 |     );
 58 | 
 59 |     if (!result?.successful || result.value.type !== "table") {
 60 |       throw new Error("dataview query failed");
 61 |     }
 62 | 
 63 |     const rows = parseTableResult(result.value);
 64 | 
 65 |     const standardizedRecords = this.standardizeRecords(rows);
 66 | 
 67 |     let fields = this.sortFields(
 68 |       detectSchema(standardizedRecords),
 69 |       result.value.headers
 70 |     );
 71 | 
 72 |     for (const f in this.project.fieldConfig) {
 73 |       fields = fields.map<DataField>((field) =>
 74 |         field.name !== f
 75 |           ? field
 76 |           : {
 77 |               ...field,
 78 |               typeConfig: {
 79 |                 ...this.project.fieldConfig?.[f],
 80 |                 ...field.typeConfig,
 81 |               },
 82 |             }
 83 |       );
 84 |     }
 85 | 
 86 |     const records = parseRecords(standardizedRecords, fields);
 87 | 
 88 |     return { fields, records };
 89 |   }
 90 | 
 91 |   sortFields(fields: DataField[], headers: string[]): DataField[] {
 92 |     return produce(fields, (draft) => {
 93 |       draft.sort((a, b) => {
 94 |         const aval = headers.indexOf(a.name);
 95 |         const bval = headers.indexOf(b.name);
 96 | 
 97 |         const distance = aval - bval;
 98 | 
 99 |         if (distance !== 0) {
100 |           return distance;
101 |         }
102 | 
103 |         return a.name.localeCompare(b.name, undefined, { numeric: true });
104 |       });
105 |     });
106 |   }
107 | 
108 |   includes(path: string): boolean {
109 |     return !this.project.excludedNotes?.includes(path);
110 |   }
111 | 
112 |   readonly(): boolean {
113 |     return true;
114 |   }
115 | 
116 |   standardizeRecords(rows: Array<Record<string, any>>): DataRecord[] {
117 |     const records: DataRecord[] = [];
118 | 
119 |     const columnName = this.api.settings.tableIdColumnName;
120 | 
121 |     rows
122 |       .map((row) => ({ id: row[columnName] as Link, row }))
123 |       .forEach(({ id, row }) =>
124 |         records.push({ id: id.path, values: standardizeValues(row) })
125 |       );
126 | 
127 |     return records;
128 |   }
129 | }
130 | 
131 | function parseTableResult(value: TableResult): Array<Record<string, any>> {
132 |   const headers: string[] = value.headers;
133 | 
134 |   const rows: Array<Record<string, any>> = [];
135 | 
136 |   value.values.forEach((row) => {
137 |     const values: Record<string, any> = {};
138 | 
139 |     headers.forEach((header, index) => {
140 |       const value = row[index];
141 |       values[header] = value;
142 |     });
143 | 
144 |     rows.push(values);
145 |   });
146 | 
147 |   return rows;
148 | }
149 | 


--------------------------------------------------------------------------------
/src/lib/datasources/dataview/schema.ts:
--------------------------------------------------------------------------------
 1 | import { produce } from "immer";
 2 | import type { DataField, DataRecord } from "src/lib/dataframe/dataframe";
 3 | import { detectFields } from "src/lib/datasources/helpers";
 4 | 
 5 | export function detectSchema(records: DataRecord[]): DataField[] {
 6 |   return detectFields(records)
 7 |     .map((field) => ({ ...field, derived: true }))
 8 |     .map((field) =>
 9 |       field.name === "File"
10 |         ? produce(field, (draft) => {
11 |             draft.identifier = true;
12 |             draft.typeConfig = produce(draft.typeConfig ?? {}, (draft) => {
13 |               draft.richText = true;
14 |             });
15 |           })
16 |         : field
17 |     );
18 | }
19 | 


--------------------------------------------------------------------------------
/src/lib/datasources/dataview/standardize.ts:
--------------------------------------------------------------------------------
 1 | import dayjs from "dayjs";
 2 | import type { Link } from "obsidian-dataview";
 3 | import type { DataValue, Optional } from "src/lib/dataframe/dataframe";
 4 | 
 5 | /**
 6 |  * standardizeValues converts a Dataview data structure of values to the common
 7 |  * DataValue format.
 8 |  */
 9 | export function standardizeValues(
10 |   values: Record<string, any>
11 | ): Record<string, Optional<DataValue>> {
12 |   const res: Record<string, Optional<DataValue>> = {};
13 | 
14 |   Object.keys(values).forEach((field) => {
15 |     const value = values[field];
16 | 
17 |     if (!value) {
18 |       return;
19 |     }
20 | 
21 |     if (Array.isArray(value)) {
22 |       value.map((v) => (typeof v === "object" ? standardizeObject(v) : v));
23 |       res[field] = value;
24 |     } else if (typeof value === "object") {
25 |       res[field] = standardizeObject(value);
26 |     } else {
27 |       res[field] = value;
28 |     }
29 |   });
30 | 
31 |   return res;
32 | }
33 | 
34 | function standardizeObject(value: any) {
35 |   if ("path" in value && "display" in value) {
36 |     return (value as Link).toString();
37 |   }
38 |   if ("ts" in value) {
39 |     return dayjs(value.ts).format("YYYY-MM-DD");
40 |   }
41 | }
42 | 


--------------------------------------------------------------------------------
/src/lib/datasources/folder/datasource.ts:
--------------------------------------------------------------------------------
 1 | import { normalizePath } from "obsidian";
 2 | import type { IFileSystem } from "src/lib/filesystem/filesystem";
 3 | import type {
 4 |   ProjectDefinition,
 5 |   ProjectsPluginPreferences,
 6 | } from "src/settings/settings";
 7 | 
 8 | import { FrontMatterDataSource } from "../frontmatter/datasource";
 9 | 
10 | /**
11 |  * FolderDataSource returns a collection of notes within a folder.
12 |  */
13 | export class FolderDataSource extends FrontMatterDataSource {
14 |   constructor(
15 |     readonly fileSystem: IFileSystem,
16 |     project: ProjectDefinition,
17 |     preferences: ProjectsPluginPreferences
18 |   ) {
19 |     super(fileSystem, project, preferences);
20 |   }
21 | 
22 |   includes(path: string): boolean {
23 |     if (this.project.dataSource.kind !== "folder") {
24 |       return false;
25 |     }
26 | 
27 |     if (this.project.excludedNotes?.includes(path)) {
28 |       return false;
29 |     }
30 | 
31 |     let projectPath = normalizePath(this.project.dataSource.config.path);
32 | 
33 |     if (projectPath === "/") {
34 |       projectPath = "";
35 |     }
36 | 
37 |     const normalizedPath = normalizePath(path);
38 | 
39 |     // No need to continue if file is not below the project path.
40 |     if (!normalizedPath.startsWith(projectPath)) {
41 |       return false;
42 |     }
43 | 
44 |     if (!this.project.dataSource.config.recursive) {
45 |       return folderContainsPath(projectPath, normalizedPath);
46 |     } else {
47 |       return folderContainsDeepPath(projectPath, normalizedPath);
48 |     }
49 |   }
50 | }
51 | 
52 | /**
53 |  * Returns whether a folder contains a file path.
54 |  *
55 |  * Assumes both folder path and file path have been normalized.
56 |  *
57 |  * @param folderPath - The path to the root folder, e.g. Work
58 |  * @param filePath - The path to the file to test, e.g. Work/Untitled.md
59 |  * @returns True if the folder contains the given file, else false
60 |  */
61 | function folderContainsPath(folderPath: string, filePath: string): boolean {
62 |   const fileElements = filePath.split("/").slice(0, -1);
63 |   const folderElements = folderPath.split("/").filter((el) => el);
64 | 
65 |   return fileElements.join("/") === folderElements.join("/");
66 | }
67 | 
68 | /**
69 |  * Returns whether a root folder contains a file path under a subfolder.
70 |  *
71 |  * Assumes both folder path and file path have been normalized.
72 |  *
73 |  * @param folderPath - The path to the root folder, e.g. Work
74 |  * @param filePath - The path to the file to test, e.g. Work/Meetings/Untitled.md
75 |  * @returns True if the file exists in any subfolder.
76 |  */
77 | function folderContainsDeepPath(folderPath: string, filePath: string): boolean {
78 |   const fileElements = filePath.split("/").filter((el) => el);
79 |   const folderElements = folderPath.split("/").filter((el) => el);
80 | 
81 |   if (fileElements.length <= folderElements.length) {
82 |     return false;
83 |   }
84 | 
85 |   return (
86 |     fileElements.slice(0, folderElements.length).join("/") ===
87 |     folderElements.join("/")
88 |   );
89 | }
90 | 


--------------------------------------------------------------------------------
/src/lib/datasources/frontmatter/datasource.ts:
--------------------------------------------------------------------------------
  1 | import type {
  2 |   DataField,
  3 |   DataFrame,
  4 |   DataRecord,
  5 | } from "src/lib/dataframe/dataframe";
  6 | import {
  7 |   detectFields,
  8 |   parseRecords,
  9 |   TooManyNotesError,
 10 | } from "src/lib/datasources/helpers";
 11 | 
 12 | import type { IFile, IFileSystem } from "src/lib/filesystem/filesystem";
 13 | import { notUndefined } from "src/lib/helpers";
 14 | import { decodeFrontMatter } from "src/lib/metadata";
 15 | 
 16 | import { array as A, either as E, function as F } from "fp-ts";
 17 | import { standardizeRecord } from "./standardize";
 18 | import { produce } from "immer";
 19 | import type {
 20 |   ProjectDefinition,
 21 |   ProjectsPluginPreferences,
 22 | } from "src/settings/settings";
 23 | import { DataSource } from "..";
 24 | 
 25 | /**
 26 |  * FrontMatterDataSource is a intermediate data source for records that use
 27 |  * front matter to define data. Compare with the Dataview data source which
 28 |  * instead uses the Dataview API to define data.
 29 |  */
 30 | export abstract class FrontMatterDataSource extends DataSource {
 31 |   constructor(
 32 |     readonly fileSystem: IFileSystem,
 33 |     project: ProjectDefinition,
 34 |     preferences: ProjectsPluginPreferences
 35 |   ) {
 36 |     super(project, preferences);
 37 |   }
 38 | 
 39 |   async queryOne(file: IFile, fields: DataField[]): Promise<DataFrame> {
 40 |     return this.queryFiles([file], fields);
 41 |   }
 42 | 
 43 |   async queryAll(): Promise<DataFrame> {
 44 |     const files = this.fileSystem
 45 |       .getAllFiles()
 46 |       .filter(({ path }) => this.includes(path));
 47 | 
 48 |     if (files.length > this.preferences.projectSizeLimit) {
 49 |       throw new TooManyNotesError(
 50 |         files.length,
 51 |         this.preferences.projectSizeLimit
 52 |       );
 53 |     }
 54 | 
 55 |     return this.queryFiles(files);
 56 |   }
 57 | 
 58 |   async queryFiles(files: IFile[], predefinedFields?: DataField[]) {
 59 |     const standardizedRecords = await standardizeRecords(files);
 60 | 
 61 |     const res = A.separate(standardizedRecords);
 62 | 
 63 |     let fields = this.sortFields(detectSchema(res.right));
 64 | 
 65 |     for (const f in this.project.fieldConfig) {
 66 |       fields = fields.map<DataField>((field) =>
 67 |         field.name !== f
 68 |           ? field
 69 |           : {
 70 |               ...field,
 71 |               typeConfig: {
 72 |                 ...this.project.fieldConfig?.[f],
 73 |                 ...field.typeConfig,
 74 |               },
 75 |             }
 76 |       );
 77 |     }
 78 | 
 79 |     for (const predefinedField of predefinedFields ?? []) {
 80 |       fields = fields.map((field) =>
 81 |         field.name !== predefinedField.name
 82 |           ? field
 83 |           : { ...field, type: predefinedField.type }
 84 |       );
 85 |     }
 86 | 
 87 |     const records = parseRecords(res.right, fields);
 88 | 
 89 |     return { fields, records, errors: res.left };
 90 |   }
 91 | 
 92 |   sortFields(fields: DataField[]): DataField[] {
 93 |     return produce(fields, (draft) => {
 94 |       draft.sort((a, b) => {
 95 |         if (a.name === "name" || a.name === "path") {
 96 |           return -1;
 97 |         }
 98 | 
 99 |         if (b.name === "name" || b.name === "path") {
100 |           return 1;
101 |         }
102 | 
103 |         return a.name.localeCompare(b.name, undefined, { numeric: true });
104 |       });
105 |     });
106 |   }
107 | }
108 | 
109 | export class RecordError extends Error {
110 |   constructor(
111 |     readonly recordId: string,
112 |     readonly err: Error
113 |   ) {
114 |     super(err.message);
115 |   }
116 | }
117 | 
118 | export async function standardizeRecords(
119 |   files: IFile[]
120 | ): Promise<E.Either<RecordError, DataRecord>[]> {
121 |   return Promise.all(
122 |     files.map(async (file) => {
123 |       return F.pipe(
124 |         await file.read(),
125 |         decodeFrontMatter,
126 |         E.mapLeft((e) => new RecordError(file.path, e)),
127 |         E.map(filterUndefinedValues),
128 |         E.map((values) => ({
129 |           ...values,
130 |           path: file.path,
131 |           name: `[[${file.path}|${file.basename}]]`,
132 |         })),
133 |         E.map((values) => standardizeRecord(file.path, values))
134 |       );
135 |     })
136 |   );
137 | }
138 | 
139 | function filterUndefinedValues(val: Record<string, any>): Record<string, any> {
140 |   return Object.fromEntries(
141 |     Object.entries(val).filter(([_key, value]) => notUndefined(value))
142 |   );
143 | }
144 | 
145 | export function detectSchema(records: DataRecord[]): DataField[] {
146 |   return detectFields(records)
147 |     .map<DataField>((field) =>
148 |       field.name === "name"
149 |         ? produce(field, (draft) => {
150 |             draft.derived = true;
151 |             draft.typeConfig = produce(field.typeConfig ?? {}, (draft) => {
152 |               draft.richText = true;
153 |             });
154 |           })
155 |         : field
156 |     )
157 |     .map<DataField>((field) =>
158 |       field.name === "path"
159 |         ? produce(field, (draft) => {
160 |             draft.derived = true;
161 |           })
162 |         : field
163 |     );
164 | }
165 | 


--------------------------------------------------------------------------------
/src/lib/datasources/frontmatter/standardize.test.ts:
--------------------------------------------------------------------------------
 1 | import { describe, it, expect } from "@jest/globals";
 2 | import { standardizeRecord } from "./standardize";
 3 | 
 4 | describe("frontmatter", () => {
 5 |   it("standardize", () => {
 6 |     const record = standardizeRecord("foo.md", {
 7 |       link: "[[Foo]]",
 8 |       status: "done",
 9 |       weight: 12,
10 |       published: true,
11 |       due: "2022-09-01",
12 |     });
13 | 
14 |     expect(record).toStrictEqual({
15 |       id: "foo.md",
16 |       values: {
17 |         link: "[[Foo]]",
18 |         status: "done",
19 |         weight: 12,
20 |         published: true,
21 |         due: "2022-09-01",
22 |       },
23 |     });
24 |   });
25 | });
26 | 


--------------------------------------------------------------------------------
/src/lib/datasources/frontmatter/standardize.ts:
--------------------------------------------------------------------------------
 1 | import type { DataRecord } from "../../dataframe/dataframe";
 2 | 
 3 | /**
 4 |  * standardizeValues converts front matter YAML data to the common DataValue
 5 |  * format.
 6 |  */
 7 | export function standardizeRecord(
 8 |   id: string,
 9 |   values: Record<string, any>
10 | ): DataRecord {
11 |   return {
12 |     id,
13 |     values,
14 |   };
15 | }
16 | 


--------------------------------------------------------------------------------
/src/lib/datasources/helpers.test.ts:
--------------------------------------------------------------------------------
  1 | import { test, describe, expect, it } from "@jest/globals";
  2 | import {
  3 |   DataFieldType,
  4 |   type DataField,
  5 |   type DataRecord,
  6 | } from "../dataframe/dataframe";
  7 | import { detectCellType, detectFields, parseRecords } from "./helpers";
  8 | 
  9 | describe("parseRecords", () => {
 10 |   it("parses", () => {
 11 |     const records: DataRecord[] = [
 12 |       {
 13 |         id: "Foo.md",
 14 |         values: { number: 12, text: "Foo", boolean: true },
 15 |       },
 16 |       {
 17 |         id: "Bar.md",
 18 |         values: { number: 12, text: "Bar", boolean: false },
 19 |       },
 20 |       {
 21 |         id: "Baz.md",
 22 |         values: {
 23 |           number: "12",
 24 |           text: 100,
 25 |           boolean: "false",
 26 |           repeated: [1, 2, 3],
 27 |         },
 28 |       },
 29 |     ];
 30 | 
 31 |     const fields: DataField[] = [
 32 |       {
 33 |         name: "number",
 34 |         type: DataFieldType.Number,
 35 |         identifier: false,
 36 |         derived: false,
 37 |         repeated: false,
 38 |         typeConfig: {},
 39 |       },
 40 |       {
 41 |         name: "text",
 42 |         type: DataFieldType.String,
 43 |         identifier: false,
 44 |         derived: false,
 45 |         repeated: false,
 46 |         typeConfig: {},
 47 |       },
 48 |       {
 49 |         name: "boolean",
 50 |         type: DataFieldType.Boolean,
 51 |         identifier: false,
 52 |         derived: false,
 53 |         repeated: false,
 54 |         typeConfig: {},
 55 |       },
 56 |       {
 57 |         name: "repeated",
 58 |         type: DataFieldType.String,
 59 |         identifier: false,
 60 |         derived: false,
 61 |         repeated: true,
 62 |         typeConfig: {},
 63 |       },
 64 |     ];
 65 | 
 66 |     const expected: DataRecord[] = [
 67 |       {
 68 |         id: "Foo.md",
 69 |         values: { number: 12, text: "Foo", boolean: true, repeated: undefined },
 70 |       },
 71 |       {
 72 |         id: "Bar.md",
 73 |         values: {
 74 |           number: 12,
 75 |           text: "Bar",
 76 |           boolean: false,
 77 |           repeated: undefined,
 78 |         },
 79 |       },
 80 |       {
 81 |         id: "Baz.md",
 82 |         values: {
 83 |           number: 12,
 84 |           text: "100",
 85 |           boolean: false,
 86 |           repeated: [1, 2, 3],
 87 |         },
 88 |       },
 89 |     ];
 90 | 
 91 |     expect(parseRecords(records, fields)).toStrictEqual(expected);
 92 |   });
 93 | });
 94 | 
 95 | describe("detectFields", () => {
 96 |   it("detects", () => {
 97 |     const records: DataRecord[] = [
 98 |       {
 99 |         id: "Foo.md",
100 |         values: { number: 12, text: "Foo", boolean: true, nullable: null },
101 |       },
102 |       {
103 |         id: "Bar.md",
104 |         values: { number: 12, text: "Bar", boolean: false, nullable: null },
105 |       },
106 |       {
107 |         id: "Baz.md",
108 |         values: { number: 12, text: 100, boolean: "false", nullable: null },
109 |       },
110 |     ];
111 |     const fields: DataField[] = [
112 |       {
113 |         name: "number",
114 |         type: DataFieldType.Number,
115 |         identifier: false,
116 |         derived: false,
117 |         repeated: false,
118 |         typeConfig: {},
119 |       },
120 |       {
121 |         name: "text",
122 |         type: DataFieldType.String,
123 |         identifier: false,
124 |         derived: false,
125 |         repeated: false,
126 |         typeConfig: {},
127 |       },
128 |       {
129 |         name: "boolean",
130 |         type: DataFieldType.String,
131 |         identifier: false,
132 |         derived: false,
133 |         repeated: false,
134 |         typeConfig: {},
135 |       },
136 |       {
137 |         name: "nullable",
138 |         type: DataFieldType.String,
139 |         identifier: false,
140 |         derived: false,
141 |         repeated: false,
142 |         typeConfig: {},
143 |       },
144 |     ];
145 | 
146 |     expect(detectFields(records)).toStrictEqual(fields);
147 |   });
148 | });
149 | 
150 | describe("detectCellType", () => {
151 |   const cases: [unknown, DataFieldType][] = [
152 |     // Primitive values.
153 |     [null, DataFieldType.Unknown],
154 |     [undefined, DataFieldType.Unknown],
155 |     ["My value", DataFieldType.String],
156 |     ["", DataFieldType.String],
157 |     [12.0, DataFieldType.Number],
158 |     [0, DataFieldType.Number],
159 |     [true, DataFieldType.Boolean],
160 |     [false, DataFieldType.Boolean],
161 | 
162 |     // Repeated values.
163 |     [["foo", "bar"], DataFieldType.String],
164 |     [[null, "bar"], DataFieldType.String],
165 |     [[1, 2], DataFieldType.Number],
166 |     [[1, null], DataFieldType.Number],
167 |     [[true, false], DataFieldType.Boolean],
168 |     [[null, false], DataFieldType.Boolean],
169 |     [[true, 1], DataFieldType.String], // Fall back to String field.
170 |     [[], DataFieldType.String], // Current behavior, but is this what we want?
171 | 
172 |     // Complex values.
173 |     ["2022-01-01", DataFieldType.Date],
174 |     ["2022-01-01T22:35", DataFieldType.Date],
175 |     [{ my: "object" }, DataFieldType.Unknown],
176 |   ];
177 | 
178 |   test.each(cases)("%s should be detected as %s", (value, expected) => {
179 |     expect(detectCellType(value)).toStrictEqual(expected);
180 |   });
181 | });
182 | 


--------------------------------------------------------------------------------
/src/lib/datasources/helpers.ts:
--------------------------------------------------------------------------------
  1 | import dayjs from "dayjs";
  2 | 
  3 | import {
  4 |   DataFieldType,
  5 |   type DataField,
  6 |   type DataRecord,
  7 |   type DataValue,
  8 |   type Optional,
  9 | } from "../dataframe/dataframe";
 10 | 
 11 | /**
 12 |  * Parses the values for each record based on the detected field types.
 13 |  *
 14 |  * If field types matches with the corresponding data types in the records,
 15 |  * this function does nothing.
 16 |  *
 17 |  * In the case where a field contains more than one data type, this function
 18 |  * tries to parse the value in each record to match the field type.
 19 |  *
 20 |  * For example, if the record contains \{ "weight": 12 \}, and the field type is
 21 |  * DataFieldType.String, the resulting record has \{ "weight": "12" \}.
 22 |  */
 23 | export function parseRecords(
 24 |   records: DataRecord[],
 25 |   fields: DataField[]
 26 | ): DataRecord[] {
 27 |   for (const field of fields) {
 28 |     for (const record of records) {
 29 |       const value = record.values[field.name];
 30 | 
 31 |       switch (field.type) {
 32 |         case DataFieldType.Date:
 33 |           if (typeof value === "string") {
 34 |             record.values[field.name] = dayjs(value).toDate();
 35 |           }
 36 |           break;
 37 |         case DataFieldType.Number:
 38 |           if (typeof value === "string") {
 39 |             record.values[field.name] = parseFloat(value);
 40 |           }
 41 |           break;
 42 |         case DataFieldType.Boolean:
 43 |           if (typeof value === "string") {
 44 |             record.values[field.name] = stringToBoolean(value);
 45 |           }
 46 |           break;
 47 |         case DataFieldType.String:
 48 |           if (typeof value !== "object") {
 49 |             record.values[field.name] = value?.toLocaleString();
 50 |           }
 51 |           break;
 52 |       }
 53 |     }
 54 |   }
 55 |   return records;
 56 | }
 57 | 
 58 | /**
 59 |  * Merges a new version of `values` into a copy of data record.
 60 |  *
 61 |  * @param record - The original data record
 62 |  * @param values - The values to merge into the original record
 63 |  * @returns A new data record with the merged values
 64 |  */
 65 | export function updateRecordValues(
 66 |   record: Readonly<DataRecord>,
 67 |   values: Readonly<DataRecord["values"]>
 68 | ): DataRecord {
 69 |   return { ...record, values: { ...record.values, ...values } };
 70 | }
 71 | 
 72 | export function detectFields(records: DataRecord[]): DataField[] {
 73 |   const valuesByField: Record<string, Optional<DataValue>[]> = {};
 74 | 
 75 |   records.forEach((record) => {
 76 |     Object.entries(record.values).forEach(([field, value]) => {
 77 |       valuesByField[field] = [...(valuesByField[field] ?? []), value];
 78 |     });
 79 |   });
 80 | 
 81 |   return Object.entries(valuesByField).map<DataField>(([field, values]) => ({
 82 |     name: field,
 83 |     type: typeFromValues(values),
 84 |     identifier: false,
 85 |     derived: false,
 86 |     repeated: values.some(Array.isArray),
 87 |     typeConfig: {},
 88 |   }));
 89 | }
 90 | 
 91 | // typeFromValues returns the field type for a collection of values. This is an
 92 | // incredibly naïve implementation that needs to be optimized.
 93 | function typeFromValues(values: Optional<DataValue>[]): DataFieldType {
 94 |   const types = values.map((value) => detectCellType(value));
 95 | 
 96 |   if (types.every((t) => t === DataFieldType.Unknown)) {
 97 |     return DataFieldType.String;
 98 |   }
 99 | 
100 |   const result: Record<string, number> = {};
101 | 
102 |   for (const type of types) {
103 |     if (!result[type]) {
104 |       result[type] = 0;
105 |     }
106 |     result[type]++;
107 |   }
108 | 
109 |   const detectedTypes = Object.keys(result).filter(
110 |     (type) => type !== DataFieldType.Unknown
111 |   );
112 | 
113 |   if (detectedTypes.length === 1) {
114 |     return detectedTypes[0] as DataFieldType;
115 |   } else if (detectedTypes.length > 1) {
116 |     return DataFieldType.String;
117 |   } else {
118 |     return DataFieldType.Unknown;
119 |   }
120 | }
121 | 
122 | export function detectCellType(value: unknown): DataFieldType {
123 |   // Standard types
124 |   if (typeof value === "string") {
125 |     if (
126 |       /^\d{4}-\d{2}-\d{2}(T)?(\d{2})?(:\d{2})?(:\d{2})?(.\d{3})?$/.test(value)
127 |     ) {
128 |       return DataFieldType.Date;
129 |     }
130 |     return DataFieldType.String;
131 |   } else if (typeof value === "number") {
132 |     return DataFieldType.Number;
133 |   } else if (typeof value === "boolean") {
134 |     return DataFieldType.Boolean;
135 |   }
136 | 
137 |   if (Array.isArray(value)) {
138 |     return typeFromValues(value);
139 |   }
140 | 
141 |   if (value === null) {
142 |     return DataFieldType.Unknown;
143 |   }
144 | 
145 |   return DataFieldType.Unknown;
146 | }
147 | 
148 | /**
149 |  * Converts a string to a boolean.
150 |  *
151 |  * @param str - The string to convert.
152 |  * @returns The boolean representation of the string.
153 |  */
154 | function stringToBoolean(str: string): boolean {
155 |   switch (str?.toLowerCase()?.trim()) {
156 |     case "true":
157 |     case "yes":
158 |     case "1":
159 |       return true;
160 | 
161 |     case "false":
162 |     case "no":
163 |     case "0":
164 |     case null:
165 |     case undefined:
166 |       return false;
167 | 
168 |     default:
169 |       return !!str;
170 |   }
171 | }
172 | 
173 | /**
174 |  * Thrown to avoid processing more files than the plugin can handle.
175 |  */
176 | export class TooManyNotesError extends Error {
177 |   constructor(n: number, limit: number) {
178 |     const message = `This project contains ${Intl.NumberFormat().format(
179 |       n
180 |     )} notes, which is more than the maximum project size (${Intl.NumberFormat().format(
181 |       limit
182 |     )}). You can increase the default limit in the plugin settings, but be aware that doing so may lead to a poor experience, or even cause the plugin to stop responding.`;
183 | 
184 |     super(message);
185 | 
186 |     this.name = "Too many notes";
187 |   }
188 | }
189 | 


--------------------------------------------------------------------------------
/src/lib/datasources/index.ts:
--------------------------------------------------------------------------------
 1 | import type {
 2 |   ProjectDefinition,
 3 |   ProjectsPluginPreferences,
 4 | } from "src/settings/settings";
 5 | import type { DataField, DataFrame } from "../dataframe/dataframe";
 6 | import type { IFile } from "../filesystem/filesystem";
 7 | 
 8 | /**
 9 |  * DataSource reads data frames from a project.
10 |  */
11 | export abstract class DataSource {
12 |   constructor(
13 |     readonly project: ProjectDefinition,
14 |     readonly preferences: ProjectsPluginPreferences
15 |   ) {}
16 | 
17 |   /**
18 |    * Returns a DataFrame with all records in the project.
19 |    */
20 |   abstract queryAll(): Promise<DataFrame>;
21 | 
22 |   /**
23 |    * Returns a DataFrame with a single record for the given file.
24 |    *
25 |    * @param fields - The existing fields to allow parsing file into the existing schema
26 |    * @returns A dataframe containing a single record
27 |    */
28 |   abstract queryOne(file: IFile, fields: DataField[]): Promise<DataFrame>;
29 | 
30 |   /**
31 |    * Returns whether a path belongs to the current project.
32 |    */
33 |   abstract includes(path: string): boolean;
34 | 
35 |   /**
36 |    * Returns whether the data source is read-only.
37 |    *
38 |    * Read-only data sources are typically derived records where the data
39 |    * source can't determine the original names of the fields.
40 |    */
41 |   readonly(): boolean {
42 |     return false;
43 |   }
44 | }
45 | 


--------------------------------------------------------------------------------
/src/lib/datasources/tag/datasource.ts:
--------------------------------------------------------------------------------
 1 | import type { IFileSystem } from "src/lib/filesystem/filesystem";
 2 | import type {
 3 |   ProjectDefinition,
 4 |   ProjectsPluginPreferences,
 5 | } from "src/settings/settings";
 6 | 
 7 | import { FrontMatterDataSource } from "../frontmatter/datasource";
 8 | 
 9 | /**
10 |  * TagDataSource returns a collection of notes that contains a specific tag.
11 |  */
12 | export class TagDataSource extends FrontMatterDataSource {
13 |   constructor(
14 |     readonly fileSystem: IFileSystem,
15 |     project: ProjectDefinition,
16 |     preferences: ProjectsPluginPreferences
17 |   ) {
18 |     super(fileSystem, project, preferences);
19 |   }
20 | 
21 |   includes(path: string): boolean {
22 |     if (this.project.dataSource.kind !== "tag") {
23 |       return false;
24 |     }
25 | 
26 |     if (this.project.excludedNotes?.includes(path)) {
27 |       return false;
28 |     }
29 | 
30 |     const { tag } = this.project.dataSource.config;
31 | 
32 |     const file = this.fileSystem.getFile(path);
33 | 
34 |     if (file) {
35 |       if (this.project.dataSource.config.hierarchy) {
36 |         for (const fileTag of file.readTags()) {
37 |           if (fileTag.startsWith(tag)) {
38 |             return true;
39 |           }
40 |         }
41 |       } else {
42 |         return file.readTags().has(tag);
43 |       }
44 |     }
45 | 
46 |     return false;
47 |   }
48 | }
49 | 


--------------------------------------------------------------------------------
/src/lib/filesystem/README.md:
--------------------------------------------------------------------------------
1 | # File system
2 | 
3 | Writing unit tests for Obsidian can be tricky, since a lot of the functionality isn't available outside of the Obsidian app.
4 | 
5 | The `filesystem` module abstracts the Obsidian vault so that unit tests can use an in-memory representation of notes.
6 | 


--------------------------------------------------------------------------------
/src/lib/filesystem/filesystem.ts:
--------------------------------------------------------------------------------
 1 | import { either } from "fp-ts";
 2 | import { produce } from "immer";
 3 | import { encodeFrontMatter, decodeFrontMatter } from "../metadata";
 4 | 
 5 | export abstract class IFile {
 6 |   abstract get basename(): string;
 7 |   abstract get path(): string;
 8 | 
 9 |   abstract write(content: string): Promise<void>;
10 |   abstract read(): Promise<string>;
11 |   abstract delete(): Promise<void>;
12 |   abstract readTags(): Set<string>;
13 | 
14 |   async readValue(field: string): Promise<any> {
15 |     const values = await this.readValues();
16 | 
17 |     return values[field];
18 |   }
19 | 
20 |   async writeValue(field: string, value: any): Promise<void> {
21 |     this.writeValues(
22 |       produce(await this.readValues(), (draft) => {
23 |         draft[field] = value;
24 |       })
25 |     );
26 |   }
27 | 
28 |   async readValues(): Promise<Record<string, any>> {
29 |     const data = await this.read();
30 | 
31 |     const values = decodeFrontMatter(data);
32 | 
33 |     return either.isRight(values) ? values.right : {};
34 |   }
35 | 
36 |   async writeValues(values: Record<string, any>): Promise<void> {
37 |     const data = await this.read();
38 | 
39 |     const updatedData = encodeFrontMatter(data, values, "PLAIN");
40 | 
41 |     if (either.isRight(updatedData)) {
42 |       this.write(updatedData.right);
43 |     }
44 |   }
45 | }
46 | 
47 | export interface IFileSystem {
48 |   create(path: string, content: string): Promise<IFile>;
49 |   getFile(path: string): IFile | null;
50 |   getAllFiles(): IFile[];
51 | }
52 | 
53 | export interface IFileSystemWatcher {
54 |   onCreate(callback: (file: IFile) => Promise<void>): void;
55 |   onDelete(callback: (file: IFile) => Promise<void>): void;
56 |   onChange(callback: (file: IFile) => Promise<void>): void;
57 |   onRename(callback: (file: IFile, oldPath: string) => Promise<void>): void;
58 | }
59 | 


--------------------------------------------------------------------------------
/src/lib/filesystem/inmem/filesystem.ts:
--------------------------------------------------------------------------------
 1 | import { IFile, type IFileSystem } from "../filesystem";
 2 | 
 3 | class InMemFile extends IFile {
 4 |   constructor(
 5 |     private readonly _path: string,
 6 |     private _content: string,
 7 |     private fileSystem: InMemFileSystem
 8 |   ) {
 9 |     super();
10 |   }
11 | 
12 |   get basename(): string {
13 |     return this._path.split("/").at(-1) ?? this.path;
14 |   }
15 | 
16 |   get path(): string {
17 |     return this._path;
18 |   }
19 | 
20 |   async read(): Promise<string> {
21 |     return this._content;
22 |   }
23 | 
24 |   async write(content: string): Promise<void> {
25 |     this._content = content;
26 |   }
27 | 
28 |   async delete(): Promise<void> {
29 |     this.fileSystem.delete(this._path);
30 |   }
31 | 
32 |   readTags(): Set<string> {
33 |     throw new Error("Method not implemented.");
34 |   }
35 | }
36 | 
37 | export class InMemFileSystem implements IFileSystem {
38 |   constructor(readonly files: Record<string, InMemFile>) {}
39 | 
40 |   async create(path: string, content: string): Promise<IFile> {
41 |     if (this.files[path]) {
42 |       throw new Error("File already exist");
43 |     }
44 | 
45 |     const file = new InMemFile(path, content, this);
46 | 
47 |     this.files[path] = file;
48 | 
49 |     return file;
50 |   }
51 | 
52 |   async delete(path: string): Promise<void> {
53 |     delete this.files[path];
54 |   }
55 | 
56 |   getAllFiles(): IFile[] {
57 |     return Object.values(this.files);
58 |   }
59 | 
60 |   getFile(path: string): IFile | null {
61 |     return this.files[path] ?? null;
62 |   }
63 | }
64 | 


--------------------------------------------------------------------------------
/src/lib/filesystem/obsidian/filesystem.ts:
--------------------------------------------------------------------------------
  1 | import {
  2 |   App,
  3 |   normalizePath,
  4 |   Plugin,
  5 |   TFile,
  6 |   type CachedMetadata,
  7 | } from "obsidian";
  8 | import { notEmpty } from "src/lib/helpers";
  9 | import {
 10 |   IFile,
 11 |   type IFileSystem,
 12 |   type IFileSystemWatcher,
 13 | } from "../filesystem";
 14 | 
 15 | class ObsidianFile extends IFile {
 16 |   static of(path: string, app: App): IFile {
 17 |     const file = app.vault.getAbstractFileByPath(normalizePath(path));
 18 | 
 19 |     if (file instanceof TFile && file.extension === "md") {
 20 |       return new ObsidianFile(file, app);
 21 |     }
 22 | 
 23 |     throw new Error("Not a file");
 24 |   }
 25 | 
 26 |   constructor(readonly file: TFile, readonly app: App) {
 27 |     super();
 28 |   }
 29 | 
 30 |   get basename(): string {
 31 |     return this.file.basename;
 32 |   }
 33 |   get path(): string {
 34 |     return this.file.path;
 35 |   }
 36 | 
 37 |   read(): Promise<string> {
 38 |     return this.app.vault.read(this.file);
 39 |   }
 40 | 
 41 |   write(content: string): Promise<void> {
 42 |     return this.app.vault.modify(this.file, content);
 43 |   }
 44 | 
 45 |   delete(): Promise<void> {
 46 |     return this.app.vault.trash(this.file, true);
 47 |   }
 48 | 
 49 |   readTags(): Set<string> {
 50 |     const cache = this.app.metadataCache.getFileCache(this.file);
 51 | 
 52 |     if (cache) {
 53 |       return parseTags(cache);
 54 |     }
 55 | 
 56 |     return new Set<string>();
 57 |   }
 58 | }
 59 | 
 60 | export class ObsidianFileSystem implements IFileSystem {
 61 |   constructor(readonly app: App) {}
 62 | 
 63 |   async create(path: string, content: string): Promise<IFile> {
 64 |     const file = await this.app.vault.create(normalizePath(path), content);
 65 | 
 66 |     return new ObsidianFile(file, this.app);
 67 |   }
 68 | 
 69 |   async read(path: string): Promise<string> {
 70 |     const file = this.app.vault.getAbstractFileByPath(normalizePath(path));
 71 |     if (file instanceof TFile) {
 72 |       return this.app.vault.cachedRead(file);
 73 |     }
 74 |     return "";
 75 |   }
 76 | 
 77 |   async write(path: string, content: string): Promise<void> {
 78 |     const file = this.app.vault.getAbstractFileByPath(normalizePath(path));
 79 |     if (file instanceof TFile) {
 80 |       return this.app.vault.modify(file, content);
 81 |     }
 82 |   }
 83 | 
 84 |   async delete(path: string): Promise<void> {
 85 |     const file = this.app.vault.getAbstractFileByPath(normalizePath(path));
 86 |     if (file instanceof TFile) {
 87 |       return this.app.vault.trash(file, true);
 88 |     }
 89 |   }
 90 | 
 91 |   getFile(path: string): IFile | null {
 92 |     if (this.app.vault.getAbstractFileByPath(path)) {
 93 |       return ObsidianFile.of(path, this.app);
 94 |     }
 95 |     return null;
 96 |   }
 97 | 
 98 |   getAllFiles(): IFile[] {
 99 |     return this.app.vault
100 |       .getMarkdownFiles()
101 |       .map((file) => new ObsidianFile(file, this.app));
102 |   }
103 | }
104 | 
105 | // ObsidianFileSystemWatcher is the primary file system watcher. This exists
106 | // mostly for testability, since the obsidian package is difficult to use in
107 | // unit tests.
108 | export class ObsidianFileSystemWatcher implements IFileSystemWatcher {
109 |   constructor(readonly plugin: Plugin) {}
110 | 
111 |   // onCreate registers an event handler that runs when a file has been created.
112 |   onCreate(callback: (file: IFile) => Promise<void>): void {
113 |     this.plugin.registerEvent(
114 |       this.plugin.app.vault.on("create", (file) => {
115 |         if (file instanceof TFile && file.extension === "md") {
116 |           callback(new ObsidianFile(file, this.plugin.app));
117 |         }
118 |       })
119 |     );
120 |   }
121 | 
122 |   // onChange registers an event handler that runs when a file has been modified.
123 |   onChange(callback: (file: IFile) => Promise<void>): void {
124 |     this.plugin.registerEvent(
125 |       this.plugin.app.metadataCache.on("changed", (file) => {
126 |         if (file instanceof TFile && file.extension === "md") {
127 |           callback(new ObsidianFile(file, this.plugin.app));
128 |         }
129 |       })
130 |     );
131 |   }
132 | 
133 |   // onDelete registers an event handler that runs when a file has been deleted.
134 |   onDelete(callback: (file: IFile) => Promise<void>): void {
135 |     this.plugin.registerEvent(
136 |       this.plugin.app.vault.on("delete", (file) => {
137 |         if (file instanceof TFile && file.extension === "md") {
138 |           callback(new ObsidianFile(file, this.plugin.app));
139 |         }
140 |       })
141 |     );
142 |   }
143 | 
144 |   // onRename registers an event handler that runs when a file has been renamed.
145 |   onRename(callback: (file: IFile, oldPath: string) => Promise<void>): void {
146 |     this.plugin.registerEvent(
147 |       this.plugin.app.vault.on("rename", (file, oldPath) => {
148 |         if (file instanceof TFile && file.extension === "md") {
149 |           callback(new ObsidianFile(file, this.plugin.app), oldPath);
150 |         }
151 |       })
152 |     );
153 |   }
154 | }
155 | 
156 | function parseTags(cache: CachedMetadata) {
157 |   const allTags = new Set<string>();
158 | 
159 |   const markdownTags = cache.tags?.map((tag) => tag.tag) ?? [];
160 | 
161 |   markdownTags.forEach((tag) => allTags.add(tag));
162 | 
163 |   parseFrontMatterTags(cache.frontmatter?.["tags"]).forEach((tag) =>
164 |     allTags.add(tag)
165 |   );
166 |   parseFrontMatterTags(cache.frontmatter?.["tag"]).forEach((tag) =>
167 |     allTags.add(tag)
168 |   );
169 | 
170 |   return allTags;
171 | }
172 | 
173 | function parseFrontMatterTags(property: unknown): string[] {
174 |   const res: string[] = [];
175 | 
176 |   if (typeof property === "string") {
177 |     property
178 |       .split(",")
179 |       .map((tag) => "#" + tag.trim())
180 |       .forEach((tag) => res.push(tag));
181 |   } else if (Array.isArray(property)) {
182 |     property
183 |       .filter(notEmpty)
184 |       .map((tag) => "#" + tag.toString())
185 |       .forEach((tag) => res.push(tag));
186 |   }
187 | 
188 |   return res;
189 | }
190 | 


--------------------------------------------------------------------------------
/src/lib/helpers.ts:
--------------------------------------------------------------------------------
  1 | import { normalizePath, TFile } from "obsidian";
  2 | import { get } from "svelte/store";
  3 | 
  4 | import { app } from "src/lib/stores/obsidian";
  5 | import type { ProjectDefinition, ViewDefinition } from "src/settings/settings";
  6 | import { getContext, setContext } from "svelte";
  7 | import type { DataField } from "./dataframe/dataframe";
  8 | 
  9 | /**
 10 |  * Convenience function for filtering null or undefined values in an array.
 11 |  *
 12 |  * @param value - The value to check
 13 |  * @returns Whether value is null or undefined
 14 |  */
 15 | export function notEmpty<T>(value: T | null | undefined): value is T {
 16 |   return value !== null && value !== undefined;
 17 | }
 18 | 
 19 | /**
 20 |  * Convenience function for filtering undefined values in an array.
 21 |  *
 22 |  * @param value - The value to check
 23 |  * @returns Whether value is undefined
 24 |  */
 25 | export function notUndefined<T>(value: T | undefined): value is T {
 26 |   return value !== undefined;
 27 | }
 28 | 
 29 | /**
 30 |  * Returns the given file name with the lowest available sequence number
 31 |  * appended to it.
 32 |  *
 33 |  * @param folderPath - The folder to check against
 34 |  * @param name - The name of the note
 35 |  * @returns A unique file name prefixed with `name`
 36 |  */
 37 | export function nextUniqueFileName(folderPath: string, name: string): string {
 38 |   return uniquify(name, (name) => {
 39 |     return (
 40 |       get(app).vault.getAbstractFileByPath(
 41 |         normalizePath(folderPath + "/" + name + ".md")
 42 |       ) instanceof TFile
 43 |     );
 44 |   });
 45 | }
 46 | 
 47 | /**
 48 |  * Returns the given project name with the lowest available sequence number
 49 |  * appended to it.
 50 |  *
 51 |  * @param projects - The existing projects to check against
 52 |  * @param name - The ideal name for a new project
 53 |  * @returns A unique project name prefixed with `name`
 54 |  */
 55 | 
 56 | export function nextUniqueProjectName(
 57 |   projects: ProjectDefinition[],
 58 |   name: string
 59 | ) {
 60 |   return uniquify(name, (candidate) => {
 61 |     return !!projects.find((project) => project.name === candidate);
 62 |   });
 63 | }
 64 | 
 65 | /**
 66 |  * Returns the given view name with the lowest available sequence number
 67 |  * appended to it.
 68 |  *
 69 |  * @param views - The existing views to check against
 70 |  * @param name - The ideal name for a new view
 71 |  * @returns A unique view name prefixed with `name`
 72 |  */
 73 | export function nextUniqueViewName(views: ViewDefinition[], name: string) {
 74 |   return uniquify(name, (candidate) => {
 75 |     return !!views.find((view) => view.name === candidate);
 76 |   });
 77 | }
 78 | 
 79 | /**
 80 |  * Returns the given field name with the lowest available sequence number
 81 |  * appended to it.
 82 |  *
 83 |  * @param fields - The existing fields to check against
 84 |  * @param name - The ideal name for a new field
 85 |  * @returns A unique field name prefixed with `name`
 86 |  */
 87 | export function nextUniqueFieldName(fields: DataField[], name: string) {
 88 |   return uniquify(name, (candidate) => {
 89 |     return !!fields.find((field) => field.name === candidate);
 90 |   });
 91 | }
 92 | 
 93 | /**
 94 |  * Appends a sequence number to a string, where the number is the lowest
 95 |  * available according to a callback function.
 96 |  *
 97 |  * @param name - The preferred name
 98 |  * @param exists - A predicate for whether a candidate string is already taken
 99 |  * @returns A unique string
100 |  */
101 | function uniquify(name: string, exists: (name: string) => boolean): string {
102 |   if (!exists(name)) {
103 |     return name;
104 |   }
105 | 
106 |   let num = 1;
107 |   while (exists(name + " " + num)) {
108 |     num++;
109 |   }
110 | 
111 |   return name + " " + num;
112 | }
113 | 
114 | /**
115 |  * Returns the name of a note from a path.
116 |  *
117 |  * For example, Daily/2001-01-01.md returns 2001-01-01.
118 |  *
119 |  * @param path - The path to extract name from
120 |  * @returns The name of the note
121 |  */
122 | export function getNameFromPath(path: string): string {
123 |   const start = path.lastIndexOf("/") + 1;
124 |   const end = path.lastIndexOf(".");
125 | 
126 |   return path.substring(start, end);
127 | }
128 | 
129 | export type Context<T> = Readonly<{
130 |   get: () => T;
131 |   set: (value: T) => void;
132 | }>;
133 | 
134 | export function makeContext<T>(): Context<T> {
135 |   const key = Symbol();
136 |   return {
137 |     get: () => getContext(key),
138 |     set: (value: T) => setContext(key, value),
139 |   };
140 | }
141 | 


--------------------------------------------------------------------------------
/src/lib/metadata/README.md:
--------------------------------------------------------------------------------
1 | # Metadata
2 | 
3 | This module contains the logic for encoding and decoding data in notes, mainly from YAML frontmatter.
4 | 


--------------------------------------------------------------------------------
/src/lib/metadata/decode.test.ts:
--------------------------------------------------------------------------------
  1 | import { describe, expect, it } from "@jest/globals";
  2 | import { either as E } from "fp-ts";
  3 | import { decodeFrontMatter, parseYaml, preprocessYaml } from "./decode";
  4 | 
  5 | describe("decodeFrontMatter", () => {
  6 |   it("should decode note with Markdown content", () => {
  7 |     expect(
  8 |       decodeFrontMatter(
  9 |         `
 10 | ---
 11 | status: In progress
 12 | ---
 13 | 
 14 | # My title
 15 | `
 16 |       )
 17 |     ).toStrictEqual(E.right({ status: "In progress" }));
 18 |   });
 19 | 
 20 |   it("should ignore non-leading front matter", () => {
 21 |     expect(
 22 |       decodeFrontMatter(
 23 |         `
 24 | # My title
 25 | 
 26 | ---
 27 | status: In progress
 28 | ---
 29 | `
 30 |       )
 31 |     ).toStrictEqual(E.right({}));
 32 |   });
 33 | 
 34 |   it("should decode note with missing front matter", () => {
 35 |     expect(
 36 |       decodeFrontMatter(
 37 |         `
 38 | # My title
 39 | `
 40 |       )
 41 |     ).toStrictEqual(E.right({}));
 42 |   });
 43 | });
 44 | 
 45 | describe("preprocessYaml", () => {
 46 |   it("should escape internal links", () => {
 47 |     expect(
 48 |       preprocessYaml(`unquoted: [[Untitled.md]]\nquoted: "[[Untitled.md]]"`)
 49 |     ).toStrictEqual(`unquoted: "[[Untitled.md]]"\nquoted: "[[Untitled.md]]"`);
 50 |   });
 51 | 
 52 |   it("should escape embedded images", () => {
 53 |     expect(
 54 |       preprocessYaml(`unquoted: ![[Untitled.md]]\nquoted: "![[Untitled.md]]"`)
 55 |     ).toStrictEqual(`unquoted: "![[Untitled.md]]"\nquoted: "![[Untitled.md]]"`);
 56 |   });
 57 | 
 58 |   it("should escape comma-separated internal links", () => {
 59 |     expect(
 60 |       preprocessYaml(`unquoted: [[Untitled.md]], [[Untitled.md]]`)
 61 |     ).toStrictEqual(`unquoted: "[[Untitled.md]], [[Untitled.md]]"`);
 62 |   });
 63 | 
 64 |   it("shouldn't escape already escaped comma-separated internal links", () => {
 65 |     expect(
 66 |       preprocessYaml(`quoted: "[[Untitled.md]], [[Untitled.md]]"`)
 67 |     ).toStrictEqual(`quoted: "[[Untitled.md]], [[Untitled.md]]"`);
 68 |   });
 69 | });
 70 | 
 71 | describe("parseYaml", () => {
 72 |   it("should parse links", () => {
 73 |     expect(
 74 |       parseYaml(`unquoted: [[Untitled.md]]\nquoted: "[[Untitled.md]]"`)
 75 |     ).toStrictEqual(
 76 |       E.right({
 77 |         unquoted: "[[Untitled.md]]",
 78 |         quoted: "[[Untitled.md]]",
 79 |       })
 80 |     );
 81 |   });
 82 | 
 83 |   it("should parse multiple links", () => {
 84 |     expect(
 85 |       parseYaml(`field: [[Untitled.md]], [[Untitled 1.md]]`)
 86 |     ).toStrictEqual(
 87 |       E.right({
 88 |         field: "[[Untitled.md]], [[Untitled 1.md]]",
 89 |       })
 90 |     );
 91 |   });
 92 | 
 93 |   it("should parse lists", () => {
 94 |     expect(
 95 |       parseYaml(`
 96 | foo:
 97 | - tag1
 98 | - tag2
 99 | - tag3
100 | `)
101 |     ).toStrictEqual(
102 |       E.right({
103 |         foo: ["tag1", "tag2", "tag3"],
104 |       })
105 |     );
106 |   });
107 | 
108 |   // This test documents existing behavior, but not necessary the desired
109 |   // behavior.
110 |   it("should parse tags as comments", () => {
111 |     expect(
112 |       parseYaml(`
113 | foo:
114 | - #tag1
115 | - #tag2
116 | - #tag3
117 | `)
118 |     ).toStrictEqual(
119 |       E.right({
120 |         foo: [null, null, null],
121 |       })
122 |     );
123 |   });
124 | });
125 | 
126 | describe("regression test for issue #160", () => {
127 |   it("should decode space-delimited links", () => {
128 |     expect(
129 |       decodeFrontMatter(
130 |         `
131 | ---
132 | headings:
133 |   - "[[testmeet3 note#Summary|📝]] [[testmeet3 note#Ideas|💡]] [[testmeet3 note#Attendees|🧑‍🤝‍🧑]]"
134 | ---
135 | 
136 | # My title
137 | `
138 |       )
139 |     ).toStrictEqual(
140 |       E.right({
141 |         headings: [
142 |           "[[testmeet3 note#Summary|📝]] [[testmeet3 note#Ideas|💡]] [[testmeet3 note#Attendees|🧑‍🤝‍🧑]]",
143 |         ],
144 |       })
145 |     );
146 |   });
147 | });
148 | 
149 | describe("regression test for issue #175", () => {
150 |   it("should decode note with empty front matter", () => {
151 |     expect(
152 |       decodeFrontMatter(
153 |         `
154 | ---
155 | ---
156 | 
157 | # My title
158 | `
159 |       )
160 |     ).toStrictEqual(E.right({}));
161 |   });
162 | });
163 | 


--------------------------------------------------------------------------------
/src/lib/metadata/decode.ts:
--------------------------------------------------------------------------------
 1 | import { either as E, function as F } from "fp-ts";
 2 | import { parse } from "yaml";
 3 | 
 4 | /**
 5 |  * decodeFrontMatter returns metadata from a note with YAML front matter.
 6 |  */
 7 | export function decodeFrontMatter(
 8 |   data: string
 9 | ): E.Either<Error, Record<string, any>> {
10 |   const delim = "---";
11 | 
12 |   const startPosition = data.indexOf(delim) + delim.length;
13 |   const endPosition = data.slice(startPosition).indexOf(delim) + startPosition;
14 | 
15 |   const isStart = data.slice(0, startPosition).trim() === delim;
16 |   const hasFrontMatter = isStart && endPosition > startPosition;
17 | 
18 |   return hasFrontMatter
19 |     ? parseYaml(data.slice(startPosition, endPosition))
20 |     : E.right({});
21 | }
22 | 
23 | export function parseYaml(data: string): E.Either<Error, Record<string, any>> {
24 |   return F.pipe(
25 |     data,
26 |     (data) => E.right(preprocessYaml(data)),
27 |     E.chain(parseRawYaml)
28 |   );
29 | }
30 | 
31 | function parseRawYaml(data: string): E.Either<Error, Record<string, any>> {
32 |   return E.tryCatch(
33 |     () =>
34 |       parse(data, (_key, value) => {
35 |         if (typeof value === "string") {
36 |           return unquoteInternalLinks(value);
37 |         }
38 |         return value;
39 |       }) || {},
40 |     (e) => (e instanceof Error ? e : new Error("unknown error"))
41 |   );
42 | }
43 | 
44 | /**
45 |  * preprocessYaml prepares YAML content for parsing.
46 |  *
47 |  * Surrounds internal links with quotes to parse them as strings instead of
48 |  * arrays.
49 |  */
50 | export function preprocessYaml(data: string): string {
51 |   const internalLinks = /(\"?\!?\[\[.*\]\]\"?)/g;
52 | 
53 |   const quoteInternalLinks = (line: string) =>
54 |     line.replace(internalLinks, (_match, p1) => {
55 |       if (p1.startsWith('"') && p1.endsWith('"')) {
56 |         return p1; // quoted
57 |       }
58 |       return '"' + p1 + '"'; // unquoted
59 |     });
60 | 
61 |   return data.split("\n").map(quoteInternalLinks).join("\n");
62 | }
63 | 
64 | /**
65 |  * unquoteInternalLinks converts a "[[Link]]" to [[Link]].
66 |  */
67 | function unquoteInternalLinks(value: string) {
68 |   return value.replace(/\"(\!?\[\[.*\]\])\"/g, (_match, p1) => p1);
69 | }
70 | 


--------------------------------------------------------------------------------
/src/lib/metadata/encode.test.ts:
--------------------------------------------------------------------------------
  1 | import { describe, expect, it } from "@jest/globals";
  2 | import { either as E } from "fp-ts";
  3 | import { encodeFrontMatter, stringifyYaml } from "./encode";
  4 | 
  5 | describe("encodeFrontMatter", () => {
  6 |   it("should quote string if it contains illegal characters", () => {
  7 |     expect(
  8 |       encodeFrontMatter(
  9 |         ``,
 10 |         {
 11 |           title1: "Notes: Who Needs Them?",
 12 |           title2: "key:value",
 13 |           title3: "key:",
 14 |           title4: "- Title",
 15 |           title5: "Title-",
 16 |           title6: "-Title",
 17 |         },
 18 |         "PLAIN"
 19 |       )
 20 |     ).toStrictEqual(
 21 |       E.right(`---
 22 | title1: "Notes: Who Needs Them?"
 23 | title2: key:value
 24 | title3: "key:"
 25 | title4: "- Title"
 26 | title5: Title-
 27 | title6: -Title
 28 | ---
 29 | 
 30 | `)
 31 |     );
 32 |   });
 33 | 
 34 |   it("should keep existing Markdown content", () => {
 35 |     expect(
 36 |       encodeFrontMatter(
 37 |         `---
 38 | status: In progress
 39 | ---
 40 | 
 41 | # My title
 42 | `,
 43 |         {
 44 |           status: "Done",
 45 |         },
 46 |         "PLAIN"
 47 |       )
 48 |     ).toStrictEqual(
 49 |       E.right(`---
 50 | status: Done
 51 | ---
 52 | 
 53 | # My title
 54 | `)
 55 |     );
 56 |   });
 57 | 
 58 |   it("should keep existing properties", () => {
 59 |     expect(
 60 |       encodeFrontMatter(
 61 |         `---
 62 | status: In progress
 63 | due: 1979-01-01
 64 | ---
 65 | 
 66 | # My title
 67 | `,
 68 |         {
 69 |           status: "Done",
 70 |         },
 71 |         "PLAIN"
 72 |       )
 73 |     ).toStrictEqual(
 74 |       E.right(`---
 75 | status: Done
 76 | due: 1979-01-01
 77 | ---
 78 | 
 79 | # My title
 80 | `)
 81 |     );
 82 |   });
 83 | 
 84 |   it("should keep existing properties", () => {
 85 |     expect(
 86 |       encodeFrontMatter(
 87 |         ``,
 88 |         {
 89 |           status: null,
 90 |         },
 91 |         "PLAIN"
 92 |       )
 93 |     ).toStrictEqual(
 94 |       E.right(`---
 95 | status:
 96 | ---
 97 | 
 98 | `)
 99 |     );
100 |   });
101 | 
102 |   it("should handle null and undefined", () => {
103 |     expect(
104 |       encodeFrontMatter(
105 |         `---
106 | foo: 1
107 | bar: 2
108 | baz: 3
109 | test: 4
110 | ---
111 | 
112 | # My title
113 | `,
114 |         {
115 |           foo: "5",
116 |           bar: undefined,
117 |           baz: null,
118 |         },
119 |         "PLAIN"
120 |       )
121 |     ).toStrictEqual(
122 |       E.right(`---
123 | foo: "5"
124 | baz:
125 | test: 4
126 | ---
127 | 
128 | # My title
129 | `)
130 |     );
131 |   });
132 | 
133 |   it("should ignore non-leading front matter", () => {
134 |     expect(
135 |       encodeFrontMatter(
136 |         `# My title
137 | 
138 | ---
139 | some text
140 | ---
141 | `,
142 |         {
143 |           status: "Done",
144 |         },
145 |         "PLAIN"
146 |       )
147 |     ).toStrictEqual(
148 |       E.right(`---
149 | status: Done
150 | ---
151 | 
152 | # My title
153 | 
154 | ---
155 | some text
156 | ---
157 | `)
158 |     );
159 |   });
160 | });
161 | 
162 | describe("stringifyYaml", () => {
163 |   it("should strip quotes from string types", () => {
164 |     expect(
165 |       stringifyYaml({ bar: "Hello world", foo: "[[Untitled.md]]" })
166 |     ).toStrictEqual('bar: Hello world\nfoo: "[[Untitled.md]]"\n');
167 |   });
168 | 
169 |   it("should encode non-string types", () => {
170 |     expect(stringifyYaml({ number: 6.25, boolean: true })).toStrictEqual(
171 |       "number: 6.25\nboolean: true\n"
172 |     );
173 |   });
174 | });
175 | 
176 | describe("regression test for issue #95", () => {
177 |   it("should strip quotes from comma-separated list", () => {
178 |     expect(stringifyYaml({ tags: "foo, bar, baz" })).toStrictEqual(
179 |       "tags: foo, bar, baz\n"
180 |     );
181 |   });
182 | });
183 | 
184 | describe("regression test for issue #134", () => {
185 |   it("should not fold long strings", () => {
186 |     expect(
187 |       stringifyYaml({
188 |         longstring:
189 |           "-----------------------------------------------------------------------------------",
190 |       })
191 |     ).toStrictEqual(
192 |       "longstring: -----------------------------------------------------------------------------------\n"
193 |     );
194 |   });
195 | });
196 | 


--------------------------------------------------------------------------------
/src/lib/metadata/encode.ts:
--------------------------------------------------------------------------------
 1 | import { either as E, function as F } from "fp-ts";
 2 | import { stringify } from "yaml";
 3 | import { parseYaml } from "./decode";
 4 | 
 5 | /**
 6 |  * Updates the front matter of a note.
 7 |  *
 8 |  * @param data - The current content of the note, including front matter.
 9 |  * @param frontmatter - The front matter to add to the note.
10 |  * @returns Data with the updated front matter.
11 |  */
12 | export function encodeFrontMatter(
13 |   data: string,
14 |   frontmatter: Record<string, any>,
15 |   defaultStringType: "PLAIN" | "QUOTE_DOUBLE"
16 | ): E.Either<Error, string> {
17 |   const delim = "---";
18 | 
19 |   const startPosition = data.indexOf(delim) + delim.length;
20 |   const endPosition = data.slice(startPosition).indexOf(delim) + startPosition;
21 | 
22 |   const isStart = data.slice(0, startPosition).trim() === delim;
23 |   const hasFrontMatter = isStart && endPosition > startPosition;
24 | 
25 |   return F.pipe(
26 |     parseYaml(hasFrontMatter ? data.slice(startPosition, endPosition) : ""),
27 |     E.map((existing) => Object.assign({}, existing, frontmatter)),
28 |     E.map((fm) => {
29 |       if (Object.entries(fm).length) {
30 |         const d = stringifyYaml(fm, defaultStringType);
31 | 
32 |         return hasFrontMatter
33 |           ? data.slice(0, startPosition + 1) + d + data.slice(endPosition)
34 |           : delim + "\n" + d + delim + "\n\n" + data;
35 |       }
36 | 
37 |       return hasFrontMatter
38 |         ? data.slice(0, startPosition - delim.length) +
39 |             data.slice(endPosition + delim.length + 1)
40 |         : data;
41 |     })
42 |   );
43 | }
44 | 
45 | /**
46 |  * stringifyYaml converts a value to YAML.
47 |  */
48 | export function stringifyYaml(
49 |   value: any,
50 |   defaultStringType: "PLAIN" | "QUOTE_DOUBLE" = "PLAIN"
51 | ): string {
52 |   return F.pipe(value, (value) =>
53 |     stringify(value, {
54 |       lineWidth: 0,
55 |       nullStr: "",
56 |       defaultStringType: defaultStringType,
57 |       defaultKeyType: "PLAIN",
58 |     })
59 |   );
60 | }
61 | 


--------------------------------------------------------------------------------
/src/lib/metadata/index.ts:
--------------------------------------------------------------------------------
1 | export { encodeFrontMatter } from "./encode";
2 | export { decodeFrontMatter } from "./decode";
3 | 


--------------------------------------------------------------------------------
/src/lib/obsidian.ts:
--------------------------------------------------------------------------------
 1 | import {
 2 |   App,
 3 |   Platform,
 4 |   TFile,
 5 |   TFolder,
 6 |   Vault,
 7 |   type TAbstractFile,
 8 | } from "obsidian";
 9 | 
10 | import type { DataRecord } from "./dataframe/dataframe";
11 | 
12 | /**
13 |  * isTFile is a convenience function for filtering arrays of TAbstractFile.
14 |  */
15 | export function isTFile(value: TAbstractFile | null): value is TFile {
16 |   return value instanceof TFile;
17 | }
18 | 
19 | /**
20 |  * isTFolder is a convenience function for filtering arrays of TAbstractFile.
21 |  */
22 | export function isTFolder(value: TAbstractFile | null): value is TFolder {
23 |   return value instanceof TFolder;
24 | }
25 | 
26 | /**
27 |  * filesFromRecords converts an array of records to their corresponding TFiles.
28 |  */
29 | export function filesFromRecords(app: App, records: DataRecord[]): TFile[] {
30 |   return records
31 |     .map((record) => record.id)
32 |     .map((path) => {
33 |       return app.vault.getAbstractFileByPath(path);
34 |     })
35 |     .filter(isTFile);
36 | }
37 | 
38 | /**
39 |  * getFilesInFolder recursively looks for all files in a given folder.
40 |  */
41 | export function getFilesInFolder(folder: TFolder): TFile[] {
42 |   const result: TFile[] = [];
43 |   Vault.recurseChildren(folder, (file) => {
44 |     if (file instanceof TFile) {
45 |       result.push(file);
46 |     }
47 |   });
48 |   return result;
49 | }
50 | 
51 | /**
52 |  * getNotesInFolder recursively looks for all Markdown files in a given folder.
53 |  */
54 | export function getNotesInFolder(folder: TFolder): TFile[] {
55 |   return getFilesInFolder(folder).filter((file) => file.extension === "md");
56 | }
57 | 
58 | /**
59 |  * getFoldersInFolder recursively looks for all folders under a given folder.
60 |  */
61 | export function getFoldersInFolder(folder: TFolder): TFolder[] {
62 |   const result: TFolder[] = [];
63 |   Vault.recurseChildren(folder, (file) => {
64 |     if (file instanceof TFolder) {
65 |       result.push(file);
66 |     }
67 |   });
68 |   return result;
69 | }
70 | 
71 | /**
72 |  * isValidPath returns whether a file path is a valid file name depending on the
73 |  * current OS.
74 |  */
75 | export function isValidPath(path: string): boolean {
76 |   const expr = getIllegalCharacterSet();
77 | 
78 |   if (!expr) {
79 |     return true;
80 |   }
81 | 
82 |   return !expr.test(path);
83 | }
84 | 
85 | function getIllegalCharacterSet(): RegExp | undefined {
86 |   if (Platform.isMacOS) {
87 |     return /[\\\/\|\#\^\[\]]/;
88 |   } else if (Platform.isDesktopApp) {
89 |     // Windows
90 |     return /[\\\/\|\:\<\>\*\"\?]/;
91 |   }
92 |   return undefined;
93 | }
94 | 


--------------------------------------------------------------------------------
/src/lib/stores/README.md:
--------------------------------------------------------------------------------
1 | # Stores
2 | 
3 | This module contains all [Svelte stores](https://svelte.dev/tutorial/writable-stores) for the app.
4 | 


--------------------------------------------------------------------------------
/src/lib/stores/api.ts:
--------------------------------------------------------------------------------
 1 | import { derived } from "svelte/store";
 2 | 
 3 | import { DataApi } from "src/lib/dataApi";
 4 | import { fileSystem } from "./fileSystem";
 5 | 
 6 | export const api = derived(
 7 |   fileSystem,
 8 |   ($fileSystem) => new DataApi($fileSystem)
 9 | );
10 | 


--------------------------------------------------------------------------------
/src/lib/stores/capabilities.ts:
--------------------------------------------------------------------------------
 1 | import { isPluginEnabled } from "obsidian-dataview";
 2 | import { derived } from "svelte/store";
 3 | 
 4 | import { app } from "./obsidian";
 5 | 
 6 | export const capabilities = derived(app, ($app) => {
 7 |   return {
 8 |     dataview: isPluginEnabled($app),
 9 |   };
10 | });
11 | 


--------------------------------------------------------------------------------
/src/lib/stores/customViews.ts:
--------------------------------------------------------------------------------
1 | import { writable } from "svelte/store";
2 | 
3 | import type { ProjectView } from "src/customViewApi";
4 | 
5 | export const customViews = writable<Record<string, ProjectView>>({});
6 | 


--------------------------------------------------------------------------------
/src/lib/stores/dataframe.ts:
--------------------------------------------------------------------------------
  1 | import { produce, castDraft, castImmutable } from "immer";
  2 | import { writable } from "svelte/store";
  3 | 
  4 | import {
  5 |   DataFieldType,
  6 |   type DataField,
  7 |   type DataFrame,
  8 |   type DataRecord,
  9 | } from "src/lib/dataframe/dataframe";
 10 | import type { DataSource } from "../datasources";
 11 | 
 12 | export const dataSource = writable<DataSource | undefined>();
 13 | export const dataFrame = createDataFrame();
 14 | 
 15 | function createDataFrame() {
 16 |   const { update, set, subscribe } = writable<DataFrame>({
 17 |     fields: [],
 18 |     records: [],
 19 |   });
 20 | 
 21 |   return {
 22 |     set,
 23 |     subscribe,
 24 |     addRecord(record: DataRecord) {
 25 |       update((state) =>
 26 |         produce(state, (draft) => {
 27 |           // @ts-ignore
 28 |           draft.records.push(record);
 29 |         })
 30 |       );
 31 |     },
 32 |     updateRecord(record: DataRecord) {
 33 |       update((state) =>
 34 |         produce(state, (draft) => {
 35 |           // @ts-ignore
 36 |           draft.records = castDraft(
 37 |             draft.records
 38 |               .map(castImmutable)
 39 |               // @ts-ignore
 40 |               .map((r) => (r.id === record.id ? record : r))
 41 |           );
 42 |         })
 43 |       );
 44 |     },
 45 |     updateRecords(records: DataRecord[]) {
 46 |       update((state) =>
 47 |         produce(state, (draft) => {
 48 |           // @ts-ignore
 49 |           draft.records = castDraft(
 50 |             draft.records.map(castImmutable).map((r) => {
 51 |               const found = records.find((_r) => _r.id === r.id);
 52 |               // @ts-ignore
 53 |               return found ? found : r;
 54 |             })
 55 |           );
 56 |         })
 57 |       );
 58 |     },
 59 |     deleteRecord(id: string) {
 60 |       update((state) =>
 61 |         produce(state, (draft) => {
 62 |           draft.records = draft.records.filter((record) => record.id !== id);
 63 |         })
 64 |       );
 65 |     },
 66 |     addField(newField: DataField, position?: number) {
 67 |       update((state) =>
 68 |         produce(state, (draft) => {
 69 |           if (position) draft.fields.splice(position, 0, newField);
 70 |           else draft.fields.push(newField);
 71 |         })
 72 |       );
 73 |     },
 74 |     updateField(updated: DataField, oldName?: string) {
 75 |       update((state) =>
 76 |         produce(state, (draft) => {
 77 |           draft.fields = draft.fields
 78 |             .map((field) => (field.name === oldName ? updated : field))
 79 |             .filter((field) => field.name !== oldName);
 80 | 
 81 |           draft.records = draft.records.map((record) =>
 82 |             produce(record, (draft) => {
 83 |               if (oldName) {
 84 |                 // @ts-ignore
 85 |                 draft.values[updated.name] = draft.values[oldName];
 86 |                 delete draft.values[oldName];
 87 |               }
 88 |             })
 89 |           );
 90 |         })
 91 |       );
 92 |     },
 93 |     deleteField(fieldName: string) {
 94 |       update((state) =>
 95 |         produce(state, (draft) => {
 96 |           draft.fields = draft.fields.filter(
 97 |             (field) => field.name !== fieldName
 98 |           );
 99 |         })
100 |       );
101 |     },
102 |     merge(updated: DataFrame) {
103 |       update((existing) =>
104 |         produce(existing, (draft) => {
105 |           // Merge records.
106 |           const recordSet = Object.fromEntries(
107 |             existing.records.map((record) => [record.id, record])
108 |           );
109 |           updated.records.forEach((record) => {
110 |             recordSet[record.id] = record;
111 |           });
112 |           draft.records = castDraft(Object.values(recordSet));
113 | 
114 |           // Merge fields.
115 |           updated.fields.forEach((newField) => {
116 |             const existingField = existing.fields.find(
117 |               (f) => f.name === newField.name
118 |             );
119 | 
120 |             if (existingField) {
121 |               if (existingField.type !== newField.type) {
122 |                 const existingFieldIndex = existing.fields.findIndex(
123 |                   (field) => field.name === newField.name
124 |                 );
125 |                 draft.fields[existingFieldIndex] = {
126 |                   ...newField,
127 |                   type: DataFieldType.String,
128 |                 };
129 |               }
130 |             } else {
131 |               draft.fields.push(newField);
132 |             }
133 |           });
134 | 
135 |           draft.fields = draft.fields.filter((field) =>
136 |             draft.records.some((record) => {
137 |               return (
138 |                 // @ts-ignore
139 |                 record.values[field.name] !== undefined
140 |               );
141 |             })
142 |           );
143 | 
144 |           // Merge errors.
145 |           const updatedIds = updated.records.map((record) => record.id);
146 | 
147 |           // Remove previously errored records.
148 |           draft.errors =
149 |             draft.errors?.filter((err) => !updatedIds.includes(err.recordId)) ??
150 |             [];
151 | 
152 |           // Add new errors.
153 |           draft.errors = [...draft.errors, ...(updated.errors ?? [])];
154 |         })
155 |       );
156 |     },
157 |   };
158 | }
159 | 


--------------------------------------------------------------------------------
/src/lib/stores/events.ts:
--------------------------------------------------------------------------------
 1 | import { Events, type EventRef } from "obsidian";
 2 | import { onDestroy, onMount } from "svelte";
 3 | import { get, writable } from "svelte/store";
 4 | 
 5 | export const events = writable<Events>(new Events());
 6 | 
 7 | export function onEvent(type: string, cb: (...data: any) => void) {
 8 |   let eventRef: EventRef;
 9 | 
10 |   onMount(() => {
11 |     eventRef = get(events).on(type, cb);
12 |   });
13 |   onDestroy(() => {
14 |     get(events).offref(eventRef);
15 |   });
16 | }
17 | 


--------------------------------------------------------------------------------
/src/lib/stores/fileSystem.ts:
--------------------------------------------------------------------------------
1 | import { derived } from "svelte/store";
2 | import { ObsidianFileSystem } from "../filesystem/obsidian/filesystem";
3 | import { app } from "src/lib/stores/obsidian";
4 | 
5 | export const fileSystem = derived(app, ($app) => new ObsidianFileSystem($app));
6 | 


--------------------------------------------------------------------------------
/src/lib/stores/i18n.ts:
--------------------------------------------------------------------------------
 1 | import i18next from "i18next";
 2 | import { createI18nStore } from "svelte-i18next";
 3 | 
 4 | import { moment } from "obsidian";
 5 | 
 6 | import en from "src/lib/stores/translations/en.json";
 7 | import zh_CN from "src/lib/stores/translations/zh-CN.json";
 8 | import uk from "src/lib/stores/translations/uk.json";
 9 | 
10 | i18next.init({
11 |   lng: moment.locale(),
12 |   fallbackLng: {
13 |     "zh-TW": ["zh-CN", "en"],
14 |     default: ["en"],
15 |   },
16 |   resources: {
17 |     en: en,
18 |     "zh-CN": zh_CN,
19 |     uk: uk,
20 |   },
21 |   interpolation: {
22 |     escapeValue: false, // not needed for svelte as it escapes by default
23 |   },
24 | });
25 | 
26 | export const i18n = createI18nStore(i18next);
27 | 


--------------------------------------------------------------------------------
/src/lib/stores/obsidian.ts:
--------------------------------------------------------------------------------
 1 | import type { App } from "obsidian";
 2 | import { writable } from "svelte/store";
 3 | 
 4 | import type ProjectsPlugin from "src/main";
 5 | import type { ProjectsView } from "src/view";
 6 | 
 7 | export const app = writable<App>();
 8 | export const view = writable<ProjectsView>();
 9 | export const plugin = writable<ProjectsPlugin>();
10 | 


--------------------------------------------------------------------------------
/src/lib/stores/settings.ts:
--------------------------------------------------------------------------------
  1 | import { produce, castImmutable } from "immer";
  2 | import { writable } from "svelte/store";
  3 | import { v4 as uuidv4 } from "uuid";
  4 | 
  5 | import { i18n } from "src/lib/stores/i18n";
  6 | import { get } from "svelte/store";
  7 | 
  8 | import {
  9 |   nextUniqueProjectName,
 10 |   nextUniqueViewName,
 11 |   notEmpty,
 12 | } from "src/lib/helpers";
 13 | import {
 14 |   DEFAULT_SETTINGS,
 15 |   type ProjectDefinition,
 16 |   type ProjectId,
 17 |   type ProjectsPluginPreferences,
 18 |   type LatestProjectsPluginSettings,
 19 |   type FieldConfig,
 20 |   type ViewDefinition,
 21 |   type ViewId,
 22 | } from "src/settings/settings";
 23 | 
 24 | function createSettings() {
 25 |   const { set, update, subscribe } = writable<LatestProjectsPluginSettings>(
 26 |     Object.assign({}, DEFAULT_SETTINGS)
 27 |   );
 28 | 
 29 |   return {
 30 |     set,
 31 |     subscribe,
 32 |     addProject(project: ProjectDefinition) {
 33 |       update((state) =>
 34 |         produce(state, (draft) => {
 35 |           // Can only have one default project.
 36 |           if (project.isDefault) {
 37 |             draft.projects = draft.projects.map((project) => ({
 38 |               ...project,
 39 |               isDefault: false,
 40 |             }));
 41 |           }
 42 |           draft.projects.push(project);
 43 |         })
 44 |       );
 45 |     },
 46 |     updatePreferences(prefs: ProjectsPluginPreferences) {
 47 |       update((state) =>
 48 |         produce(state, (draft) => {
 49 |           draft.preferences = prefs;
 50 |         })
 51 |       );
 52 |     },
 53 |     updateProject(project: ProjectDefinition) {
 54 |       update((state) =>
 55 |         produce(state, (draft) => {
 56 |           // Can only have one default project.
 57 |           if (project.isDefault) {
 58 |             draft.projects = draft.projects.map((project) => ({
 59 |               ...project,
 60 |               isDefault: false,
 61 |             }));
 62 |           }
 63 |           draft.projects = draft.projects.map((w) =>
 64 |             w.id === project.id ? project : w
 65 |           );
 66 |         })
 67 |       );
 68 |     },
 69 |     duplicateProject(projectId: ProjectId) {
 70 |       const newId = uuidv4();
 71 |       update((state) =>
 72 |         produce(state, (draft) => {
 73 |           const project = draft.projects.find((p) => p.id === projectId);
 74 | 
 75 |           if (project) {
 76 |             draft.projects.push({
 77 |               ...project,
 78 |               id: newId,
 79 |               name: nextUniqueProjectName(
 80 |                 draft.projects,
 81 |                 project.name +
 82 |                   " " +
 83 |                   get(i18n).t("modals.project.duplicate.suffix")
 84 |               ),
 85 |               views: project.views.map((v) => ({ ...v, id: uuidv4() })),
 86 |             });
 87 |           }
 88 |         })
 89 |       );
 90 |       return newId;
 91 |     },
 92 |     archiveProject(projectId: ProjectId) {
 93 |       update((state) =>
 94 |         produce(state, (draft) => {
 95 |           const project = draft.projects.find((p) => p.id === projectId);
 96 |           if (project) draft.archives.push(project);
 97 |           draft.projects = draft.projects.filter((w) => w.id !== projectId);
 98 |         })
 99 |       );
100 |     },
101 |     restoreArchive(archiveId: ProjectId) {
102 |       update((state) =>
103 |         produce(state, (draft) => {
104 |           const archive = draft.archives.find((a) => a.id === archiveId);
105 |           if (archive) {
106 |             draft.projects.push({
107 |               ...archive,
108 |               name: nextUniqueProjectName(draft.projects, archive.name),
109 |             });
110 |           }
111 |           draft.archives = draft.archives.filter((w) => w.id !== archiveId);
112 |         })
113 |       );
114 |     },
115 |     deleteArchive(projectId: ProjectId) {
116 |       update((state) =>
117 |         produce(state, (draft) => {
118 |           draft.archives = draft.archives.filter((w) => w.id !== projectId);
119 |         })
120 |       );
121 |     },
122 |     deleteProject(projectId: ProjectId) {
123 |       update((state) =>
124 |         produce(state, (draft) => {
125 |           draft.projects = draft.projects.filter((w) => w.id !== projectId);
126 |         })
127 |       );
128 |     },
129 |     updateFieldConfig(
130 |       projectId: ProjectId,
131 |       fieldName: string,
132 |       fields: string[],
133 |       config: FieldConfig
134 |     ) {
135 |       update((state) =>
136 |         produce(state, (draft) => {
137 |           draft.projects = draft.projects.map((project) => {
138 |             if (project.id === projectId) {
139 |               if (project.fieldConfig) {
140 |                 Object.keys(castImmutable(project).fieldConfig)
141 |                   .filter((k) => !fields.includes(k))
142 |                   .forEach((k) => delete project.fieldConfig[k]);
143 |               }
144 | 
145 |               return {
146 |                 ...project,
147 |                 fieldConfig: {
148 |                   ...project.fieldConfig,
149 |                   [fieldName]: config,
150 |                 },
151 |               };
152 |             }
153 |             return project;
154 |           });
155 |         })
156 |       );
157 |     },
158 |     deleteFieldConfig(projectId: ProjectId, fieldName: string) {
159 |       update((state) =>
160 |         produce(state, (draft) => {
161 |           const project = draft.projects.find((p) => p.id === projectId);
162 |           if (project) delete project.fieldConfig[fieldName];
163 |         })
164 |       );
165 |     },
166 |     addView(projectId: ProjectId, view: ViewDefinition) {
167 |       update((state) =>
168 |         produce(state, (draft) => {
169 |           const idx = draft.projects.findIndex((ws) => ws.id === projectId);
170 | 
171 |           if (idx >= 0) {
172 |             const ws = draft.projects[idx];
173 |             if (ws) {
174 |               draft.projects.splice(idx, 1, {
175 |                 ...ws,
176 |                 views: [...ws.views, view],
177 |               });
178 |             }
179 |           }
180 | 
181 |           return draft;
182 |         })
183 |       );
184 |     },
185 |     sortViews(projectId: ProjectId, viewIds: string[]) {
186 |       update((state) =>
187 |         produce(state, (draft) => {
188 |           draft.projects = draft.projects.map((p) =>
189 |             p.id !== projectId
190 |               ? p
191 |               : produce(p, (draft) => {
192 |                   draft.views = viewIds
193 |                     .map((id) => draft.views.find((v) => v.id === id))
194 |                     .filter(notEmpty);
195 |                 })
196 |           );
197 |         })
198 |       );
199 |     },
200 |     renameView(projectId: ProjectId, viewId: ViewId, name: string) {
201 |       update((state) =>
202 |         produce(state, (draft) => {
203 |           const idx = draft.projects.findIndex((p) => p.id === projectId);
204 | 
205 |           if (idx >= 0) {
206 |             const p = draft.projects[idx];
207 | 
208 |             if (p) {
209 |               draft.projects.splice(idx, 1, {
210 |                 ...p,
211 |                 views: p.views.map<ViewDefinition>((view) =>
212 |                   view.id === viewId ? { ...view, name } : view
213 |                 ),
214 |               });
215 |             }
216 |           }
217 |         })
218 |       );
219 |     },
220 |     duplicateView(projectId: ProjectId, viewId: ViewId) {
221 |       const newId = uuidv4();
222 |       update((state) =>
223 |         produce(state, (draft) => {
224 |           const idx = draft.projects.findIndex((ws) => ws.id === projectId);
225 | 
226 |           if (idx >= 0) {
227 |             const p = draft.projects[idx];
228 |             if (p) {
229 |               const view = p.views.find((v) => v.id === viewId);
230 | 
231 |               if (view) {
232 |                 draft.projects.splice(idx, 1, {
233 |                   ...p,
234 |                   views: [
235 |                     ...p.views,
236 |                     {
237 |                       ...view,
238 |                       id: newId,
239 |                       name: nextUniqueViewName(
240 |                         p.views,
241 |                         view.name +
242 |                           " " +
243 |                           get(i18n).t("modals.view.duplicate.suffix")
244 |                       ),
245 |                     },
246 |                   ],
247 |                 });
248 |               }
249 |             }
250 |           }
251 | 
252 |           return draft;
253 |         })
254 |       );
255 |       return newId;
256 |     },
257 |     deleteView(projectId: ProjectId, viewId: ViewId) {
258 |       update((state) =>
259 |         produce(state, (draft) => {
260 |           const idx = draft.projects.findIndex((ws) => ws.id === projectId);
261 | 
262 |           if (idx >= 0) {
263 |             const ws = draft.projects[idx];
264 | 
265 |             if (ws) {
266 |               draft.projects.splice(idx, 1, {
267 |                 ...ws,
268 |                 views: ws.views.filter((view) => view.id !== viewId),
269 |               });
270 |             }
271 |           }
272 |         })
273 |       );
274 |     },
275 |     updateView(projectId: ProjectId, updatedView: ViewDefinition) {
276 |       update((state) =>
277 |         produce(state, (draft) => {
278 |           draft.projects = draft.projects.map((project) => {
279 |             if (project.id === projectId) {
280 |               return {
281 |                 ...project,
282 |                 views: project.views.map((view) => {
283 |                   if (view.id === updatedView.id) {
284 |                     return updatedView;
285 |                   }
286 |                   return view;
287 |                 }),
288 |               };
289 |             }
290 |             return project;
291 |           });
292 |         })
293 |       );
294 |     },
295 |     updateViewConfig(
296 |       projectId: ProjectId,
297 |       viewId: ViewId,
298 |       config: Record<string, any>
299 |     ) {
300 |       update((state) =>
301 |         produce(state, (draft) => {
302 |           draft.projects = draft.projects.map((project) => {
303 |             if (project.id === projectId) {
304 |               return {
305 |                 ...project,
306 |                 views: project.views.map((view) => {
307 |                   if (view.id === viewId) {
308 |                     return {
309 |                       ...view,
310 |                       config,
311 |                     };
312 |                   }
313 |                   return view;
314 |                 }),
315 |               };
316 |             }
317 |             return project;
318 |           });
319 |         })
320 |       );
321 |     },
322 |   };
323 | }
324 | export const settings = createSettings();
325 | 


--------------------------------------------------------------------------------
/src/lib/stores/translations/en.json:
--------------------------------------------------------------------------------
  1 | {
  2 |     "translation": {
  3 |         "data-types": {
  4 |             "string": "Text",
  5 |             "number": "Number",
  6 |             "boolean": "Checkbox",
  7 |             "date": "Date",
  8 |             "unknown": "Unknown data type",
  9 |             "repeated": "Repeated field",
 10 |             "datetime": "Date & time",
 11 |             "list": "List",
 12 |             "tags": "Tags",
 13 |             "aliases": "Aliases"
 14 |         },
 15 |         "datasources": {
 16 |             "folder": "Folder",
 17 |             "tag": "Tag",
 18 |             "dataview": "Dataview"
 19 |         },
 20 |         "commands": {
 21 |             "show-projects": {
 22 |                 "name": "Show projects"
 23 |             },
 24 |             "create-project": {
 25 |                 "name": "Create new project"
 26 |             },
 27 |             "create-note": {
 28 |                 "name": "Create new note"
 29 |             }
 30 |         },
 31 |         "menus": {
 32 |             "project": {
 33 |                 "create": {
 34 |                     "title": "Create project in folder"
 35 |                 }
 36 |             },
 37 |             "tab-header": {
 38 |                 "new-window": {
 39 |                     "title": "Open in new window"
 40 |                 }
 41 |             }
 42 |         },
 43 |         "modals": {
 44 |             "project": {
 45 |                 "create": {
 46 |                     "short-title": "New project",
 47 |                     "untitled": "Untitled project",
 48 |                     "title": "Create new project",
 49 |                     "cta": "Create project",
 50 |                     "existing-name-error": "A project with that name already exists.",
 51 |                     "empty-name-error": "Project name can't be empty."
 52 |                 },
 53 |                 "edit": {
 54 |                     "short-title": "Edit project",
 55 |                     "title": "Edit project",
 56 |                     "cta": "Save"
 57 |                 },
 58 |                 "duplicate": {
 59 |                     "title": "Duplicate project",
 60 |                     "suffix": "Copy"
 61 |                 },
 62 |                 "archive": {
 63 |                     "short-title": "Archive project",
 64 |                     "title": "Archive project",
 65 |                     "message": "Are you sure you want to archive \"{{project}}\"? You can restore it later in Projects plugin's setting tab.",
 66 |                     "notice": "Project archived! If you are using Projects across multiple devices and syncing between them, please upgrade to version 1.17.0 or above for all your devices to avoid losing your archived project configurations.",
 67 |                     "cta": "Archive"
 68 |                 },
 69 |                 "delete": {
 70 |                     "short-title": "Delete project",
 71 |                     "title": "Delete project",
 72 |                     "message": "Are you sure you want to delete \"{{project}}\"? This cannot be undone.",
 73 |                     "cta": "Delete"
 74 |                 },
 75 |                 "name": {
 76 |                     "name": "Name",
 77 |                     "description": ""
 78 |                 },
 79 |                 "default": {
 80 |                     "name": "Set as default",
 81 |                     "description": "Enable to open this project by default."
 82 |                 },
 83 |                 "datasource": {
 84 |                     "name": "Data source",
 85 |                     "description": "Choose how you want to define which notes to include."
 86 |                 },
 87 |                 "path": {
 88 |                     "name": "Path",
 89 |                     "description": "Path to the folder you want to manage. Leave empty to use root folder."
 90 |                 },
 91 |                 "tag": {
 92 |                     "name": "Tag",
 93 |                     "description": "Include all notes that have this tag."
 94 |                 },
 95 |                 "dataview": {
 96 |                     "name": "Use Dataview",
 97 |                     "description": "Use Dataview to query read-only data instead of using paths.",
 98 |                     "error": {
 99 |                         "title": "Dataview is disabled",
100 |                         "message": "Enable the Dataview plugin to continue using this project."
101 |                     }
102 |                 },
103 |                 "query": {
104 |                     "name": "Query",
105 |                     "description": "Only supports TABLE queries."
106 |                 },
107 |                 "recursive": {
108 |                     "name": "Include subfolders",
109 |                     "description": "Manage notes inside subfolders within the project path."
110 |                 },
111 |                 "hierarchy": {
112 |                     "name": "Tag hierarchy",
113 |                     "description": "Manage notes containing sub-tags of the project target tag."
114 |                 },
115 |                 "more-settings": {
116 |                     "name": "More settings",
117 |                     "description": ""
118 |                 },
119 |                 "templates": {
120 |                     "name": "Templates",
121 |                     "description": "Templates to choose from when you create new notes.",
122 |                     "add": "Add template"
123 |                 },
124 |                 "exclude": {
125 |                     "name": "Excluded notes",
126 |                     "description": "Notes to exclude even if they would otherwise be part of the project.",
127 |                     "add": "Add note"
128 |                 },
129 |                 "newNotesFolder": {
130 |                     "name": "Location for new notes",
131 |                     "description": "Folder where all new notes are placed."
132 |                 },
133 |                 "defaultName": {
134 |                     "name": "Default name for new notes",
135 |                     "description": "Supports {{date:YYYY-MM-DD}} and {{time:HHmm}} templates variables.",
136 |                     "invalid": "Contains illegal characters."
137 |                 }
138 |             },
139 |             "archive": {
140 |                 "delete": {
141 |                     "short-title": "Delete archive",
142 |                     "title": "Delete archive",
143 |                     "message": "Are you sure you want to delete \"{{archive}}\"? This cannot be undone.",
144 |                     "cta": "Delete"
145 |                 }
146 |             },
147 |             "view": {
148 |                 "create": {
149 |                     "short-title": "New view",
150 |                     "title": "Add new view",
151 |                     "optional": "Optional",
152 |                     "type": {
153 |                         "name": "Type",
154 |                         "description": ""
155 |                     },
156 |                     "name": {
157 |                         "name": "Name",
158 |                         "description": ""
159 |                     },
160 |                     "cta": "Add view",
161 |                     "existing-name-error": "A view with that name already exists."
162 |                 },
163 |                 "duplicate": {
164 |                     "title": "Duplicate view",
165 |                     "suffix": "Copy"
166 |                 },
167 |                 "delete": {
168 |                     "short-title": "Delete view",
169 |                     "title": "Delete view",
170 |                     "message": "Are you sure you want to delete the view \"{{view}}\"?",
171 |                     "cta": "Delete"
172 |                 }
173 |             },
174 |             "note": {
175 |                 "create": {
176 |                     "short-title": "New note",
177 |                     "title": "Create new note",
178 |                     "name": {
179 |                         "name": "Name",
180 |                         "description": ""
181 |                     },
182 |                     "templatePath": {
183 |                         "name": "Template",
184 |                         "description": "",
185 |                         "none": "None"
186 |                     },
187 |                     "project": {
188 |                         "name": "Project",
189 |                         "description": ""
190 |                     },
191 |                     "name-taken-error": "A note with that name already exists.",
192 |                     "empty-name-error": "Name can't be empty.",
193 |                     "dot-start-error": "File name must not start with a dot.",
194 |                     "create": "Create note",
195 |                     "readonly": {
196 |                         "title": "Read-only project",
197 |                         "message": "{{project}} is a read-only project. Select another project to create a note."
198 |                     },
199 |                     "untitled": "Untitled"
200 |                 },
201 |                 "edit": {
202 |                     "short-title": "Edit note",
203 |                     "title": "Edit note",
204 |                     "save": "Save",
205 |                     "confirm": "Confirm",
206 |                     "no-editable-fields": {
207 |                         "title": "No editable fields",
208 |                         "message": "This note has no editable fields."
209 |                     }
210 |                 }
211 |             },
212 |             "field": {
213 |                 "configure": {
214 |                     "short-title": "Configure field",
215 |                     "title": "Configure field",
216 |                     "name": {
217 |                         "name": "Name",
218 |                         "description": ""
219 |                     },
220 |                     "empty-name-error": "Field name can't be empty.",
221 |                     "existing-name-error": "Can't rename to a existing field name.",
222 |                     "type": {
223 |                         "name": "Type",
224 |                         "description": "Changing type isn't supported yet."
225 |                     },
226 |                     "options": {
227 |                         "name": "Options",
228 |                         "description": "Allows you to auto-complete using predefined values for the field."
229 |                     },
230 |                     "rich-text": {
231 |                         "name": "Enable rich text formatting",
232 |                         "description": "For fields with Markdown content."
233 |                     },
234 |                     "time": {
235 |                         "name": "Enable time",
236 |                         "description": "Recognize this field as Date & time."
237 |                     },
238 |                     "save": "Save"
239 |                 },
240 |                 "create": {
241 |                     "short-title": "New field",
242 |                     "title": "Create new field",
243 |                     "name": {
244 |                         "name": "Name",
245 |                         "description": ""
246 |                     },
247 |                     "untitled": "New field",
248 |                     "empty-name-error": "Field name can't be empty.",
249 |                     "existing-name-error": "A field with that name already exists.",
250 |                     "type": {
251 |                         "name": "Type",
252 |                         "description": ""
253 |                     },
254 |                     "default": {
255 |                         "name": "Default value",
256 |                         "description": ""
257 |                     },
258 |                     "options": {
259 |                         "name": "Options",
260 |                         "description": "Allows you to auto-complete using predefined values for the field."
261 |                     },
262 |                     "rich-text": {
263 |                         "name": "Enable rich text formatting",
264 |                         "description": "For fields with Markdown content."
265 |                     },
266 |                     "create": "Create field"
267 |                 }
268 |             },
269 |             "input": {
270 |                 "cancel": "Cancel"
271 |             },
272 |             "confirm": {
273 |                 "delete": "Delete",
274 |                 "cancel": "Cancel"
275 |             }
276 |         },
277 |         "views": {
278 |             "developer": {
279 |                 "name": "Developer"
280 |             },
281 |             "table": {
282 |                 "name": "Table",
283 |                 "hide-fields": "Hide fields",
284 |                 "rename-field": "Rename field",
285 |                 "rename": "Rename"
286 |             },
287 |             "board": {
288 |                 "name": "Board",
289 |                 "no-status": "No status",
290 |                 "fields": {
291 |                     "status": "Status",
292 |                     "priority": "Priority",
293 |                     "check": "Check",
294 |                     "none": "None"
295 |                 },
296 |                 "unprioritized": "Unprioritized",
297 |                 "include-fields": "Include fields",
298 |                 "settings": {
299 |                     "name": "Board settings",
300 |                     "column-width": {
301 |                         "name": "Column width",
302 |                         "description": "Width of each column in pixels."
303 |                     },
304 |                     "custom-header": {
305 |                         "name": "Customize card header",
306 |                         "description": "Use selected field as the header of cards."
307 |                     },
308 |                     "order-sync-field": {
309 |                         "name": "Sync card order with field",
310 |                         "description": "Field to store the position of cards in the board."
311 |                     }
312 |                 },
313 |                 "note": {
314 |                     "add": "Add note"
315 |                 }
316 |             },
317 |             "calendar": {
318 |                 "name": "Calendar",
319 |                 "new-note": "New note",
320 |                 "fields": {
321 |                     "date": "Date",
322 |                     "check": "Check",
323 |                     "none": "None"
324 |                 },
325 |                 "today": "Today",
326 |                 "weekday": "{{value, datetime}}",
327 |                 "date": "{{value, datetime}}",
328 |                 "interval": "{{from, datetime}} – {{to, datetime}}{{en_separator}}{{custom_year, datetime}}",
329 |                 "intervals": {
330 |                     "month_one": "Month",
331 |                     "month_other": "Months",
332 |                     "monthWithCount_one": "{{count}} month",
333 |                     "monthWithCount_other": "{{count}} months",
334 |                     "week_one": "Week",
335 |                     "week_other": "Weeks",
336 |                     "weekWithCount_one": "{{count}} week",
337 |                     "weekWithCount_other": "{{count}} weeks",
338 |                     "day_one": "Day",
339 |                     "day_other": "Days",
340 |                     "dayWithCount_one": "{{count}} day",
341 |                     "dayWithCount_other": "{{count}} days"
342 |                 }
343 |             },
344 |             "gallery": {
345 |                 "name": "Gallery",
346 |                 "fields": {
347 |                     "cover": "Cover",
348 |                     "none": "None"
349 |                 },
350 |                 "fit-style": {
351 |                     "fill": "Fill image",
352 |                     "fit": "Fit image"
353 |                 },
354 |                 "include-fields": "Include fields",
355 |                 "settings": {
356 |                     "name": "Gallery settings",
357 |                     "card-width": {
358 |                         "name": "Card width",
359 |                         "description": "Width of each card in pixels."
360 |                     }
361 |                 },
362 |                 "empty": "This view is empty."
363 |             }
364 |         },
365 |         "components": {
366 |             "data-grid": {
367 |                 "column": {
368 |                     "configure": "Configure field",
369 |                     "add": "Add field",
370 |                     "insert-left": "Insert left",
371 |                     "insert-right": "Insert right",
372 |                     "rename": "Rename field",
373 |                     "pin": "Pin field",
374 |                     "unpin": "Unpin field",
375 |                     "hide": "Hide field",
376 |                     "delete": "Delete field"
377 |                 },
378 |                 "row": {
379 |                     "add": "Add note",
380 |                     "edit": "Edit note",
381 |                     "delete": "Delete note"
382 |                 },
383 |                 "cell": {
384 |                     "clear": "Clear value"
385 |                 },
386 |                 "sort": {
387 |                     "asc": "Sort A → Z",
388 |                     "desc": "Sort Z → A"
389 |                 },
390 |                 "sortDate": {
391 |                     "asc": "Sort Old → New",
392 |                     "desc": "Sort New → Old"
393 |                 }
394 |             },
395 |             "board": {
396 |                 "column": {
397 |                     "add": {
398 |                         "name": "Add column",
399 |                         "placeholder": "New column",
400 |                         "no-status-field": "Status field required",
401 |                         "derived-status-field": "Current status field is read-only"
402 |                     },
403 |                     "rename": "Rename column",
404 |                     "delete": "Delete column",
405 |                     "expand": "Expand column",
406 |                     "collapse": "Collapse column",
407 |                     "pin": "Pin column",
408 |                     "unpin": "Unpin column"
409 |                 }
410 |             },
411 |             "color": {
412 |                 "label": "Color",
413 |                 "where": "Where",
414 |                 "add": "Add color"
415 |             },
416 |             "filter": {
417 |                 "label": "Filter",
418 |                 "where": "Where",
419 |                 "and": "and",
420 |                 "or": "or",
421 |                 "add": "Add condition"
422 |             },
423 |             "sort": {
424 |                 "label": "Sort",
425 |                 "add": "Add another sort"
426 |             },
427 |             "tag": {
428 |                 "edit": "Edit",
429 |                 "remove": "Remove"
430 |             },
431 |             "multi-text": {
432 |                 "add": "Add an option"
433 |             }
434 |         },
435 |         "toolbar": {
436 |             "view": {
437 |                 "add": "Add view"
438 |             },
439 |             "projects": {
440 |                 "none": "No projects",
441 |                 "options": "More options"
442 |             },
443 |             "read-only": "Read-only",
444 |             "read-only-desc": "You can't create or edit notes in read-only projects."
445 |         },
446 |         "settings": {
447 |             "general": {
448 |                 "size-limit": {
449 |                     "name": "Project size limit",
450 |                     "desc": "Avoid accidentally loading too many notes."
451 |                 },
452 |                 "link-behavior": {
453 |                     "name": "Link behavior",
454 |                     "desc": "Determines what happens when you select the link of a note. Press {{modifier}} while selecting link for opposite behavior.",
455 |                     "options": {
456 |                         "open-editor": "Open editor",
457 |                         "open-note": "Open note"
458 |                     }
459 |                 },
460 |                 "start-of-week": {
461 |                     "name": "Start week on",
462 |                     "options": {
463 |                         "sunday": "Sunday",
464 |                         "monday": "Monday",
465 |                         "default": "Default"
466 |                     }
467 |                 }
468 |             },
469 |             "front-matter": {
470 |                 "heading": "Front matter",
471 |                 "quote-strings": {
472 |                     "name": "Quote strings",
473 |                     "options": {
474 |                         "plain": "If needed",
475 |                         "quote-double": "Always"
476 |                     }
477 |                 }
478 |             },
479 |             "commands": {
480 |                 "name": "Commands",
481 |                 "desc": "Add commands for your favorite projects and views."
482 |             },
483 |             "archives": {
484 |                 "name": "Archives",
485 |                 "desc": "Restore or delete your archived projects.",
486 |                 "empty": "No archived project."
487 |             }
488 |         },
489 |         "errors": {
490 |             "missingDataview": {
491 |                 "title": "Dataview is disabled",
492 |                 "message": "Enable the Dataview plugin to continue using this project."
493 |             }
494 |         },
495 |         "obsidian": {
496 |             "ribbon-tooltip": "Open projects",
497 |             "hover-link-settings": "Projects"
498 |         }
499 |     }
500 | }


--------------------------------------------------------------------------------
/src/lib/stores/translations/uk.json:
--------------------------------------------------------------------------------
  1 | {
  2 |     "translation": {
  3 |         "data-types": {
  4 |             "string": "Текст",
  5 |             "number": "Число",
  6 |             "boolean": "Прапорець",
  7 |             "date": "ДАТА",
  8 |             "unknown": "Невідомий тип даних",
  9 |             "repeated": "Повторюване поле",
 10 |             "datetime": "Дата та час",
 11 |             "list": "Список",
 12 |             "tags": "Мітки",
 13 |             "aliases": "Псевдоніми"
 14 |         },
 15 |         "datasources": {
 16 |             "folder": "Тека",
 17 |             "tag": "Тег",
 18 |             "dataview": "Dataview"
 19 |         },
 20 |         "commands": {
 21 |             "show-projects": {
 22 |                 "name": "Показати проєкти"
 23 |             },
 24 |             "create-project": {
 25 |                 "name": "Створити новий проєкт"
 26 |             },
 27 |             "create-note": {
 28 |                 "name": "Створити нову нотатку"
 29 |             }
 30 |         },
 31 |         "menus": {
 32 |             "project": {
 33 |                 "create": {
 34 |                     "title": "Створити проєкт у теці"
 35 |                 }
 36 |             },
 37 |             "tab-header": {
 38 |                 "new-window": {
 39 |                     "title": "Відкрити в новому вікні"
 40 |                 }
 41 |             }
 42 |         },
 43 |         "modals": {
 44 |             "project": {
 45 |                 "create": {
 46 |                     "short-title": "Новий проєкт",
 47 |                     "untitled": "Проєкт без назви",
 48 |                     "title": "Створити новий проєкт",
 49 |                     "cta": "Створити проєкт",
 50 |                     "existing-name-error": "Проєкт з таким ім'ям вже існує.",
 51 |                     "empty-name-error": "Ім'я проєкту не може бути порожнім."
 52 |                 },
 53 |                 "edit": {
 54 |                     "short-title": "Редагувати проєкт",
 55 |                     "title": "Редагувати проєкт",
 56 |                     "cta": "Зберегти"
 57 |                 },
 58 |                 "duplicate": {
 59 |                     "title": "Дублювати проєкт",
 60 |                     "suffix": "Скопіювати"
 61 |                 },
 62 |                 "archive": {
 63 |                     "short-title": "Архівувати проєкт",
 64 |                     "title": "Архівувати проєкт",
 65 |                     "message": "Are you sure you want to archive \"{{project}}\"? You can restore it later in Projects plugin's setting tab.",
 66 |                     "notice": "Project archived! If you are using Projects across multiple devices and syncing between them, please upgrade to version 1.17.0 or above for all your devices to avoid losing your archived project configurations.",
 67 |                     "cta": "Архів"
 68 |                 },
 69 |                 "delete": {
 70 |                     "short-title": "Видалити проєкт",
 71 |                     "title": "Видалити проєкт",
 72 |                     "message": "Ви впевнені, що бажаєте видалити \"{{project}}\"? Це неможливо скасувати.",
 73 |                     "cta": "Видалити"
 74 |                 },
 75 |                 "name": {
 76 |                     "name": "Назва",
 77 |                     "description": ""
 78 |                 },
 79 |                 "default": {
 80 |                     "name": "Встановити за замовчуванням",
 81 |                     "description": "Увімкніть, щоб відкривати цей проєкт за замовчуванням."
 82 |                 },
 83 |                 "datasource": {
 84 |                     "name": "Джерело даних",
 85 |                     "description": "Виберіть, як ви хочете визначити, які нотатки слід включити."
 86 |                 },
 87 |                 "path": {
 88 |                     "name": "Шлях",
 89 |                     "description": "Шлях до теки, якою потрібно керувати. Залиште порожнім для використання кореневої теки."
 90 |                 },
 91 |                 "tag": {
 92 |                     "name": "Мітка",
 93 |                     "description": "Включити усі нотатки з цією міткою."
 94 |                 },
 95 |                 "dataview": {
 96 |                     "name": "Використовувати Dataview",
 97 |                     "description": "Використовуйте Dataview для запиту даних тільки для читання, замість використання шляхів.",
 98 |                     "error": {
 99 |                         "title": "Dataview вимкнений",
100 |                         "message": "Увімкніть плагін Dataview, щоб продовжити використовувати цей проєкт."
101 |                     }
102 |                 },
103 |                 "query": {
104 |                     "name": "Запит",
105 |                     "description": "Підтримує лише запити TABLE."
106 |                 },
107 |                 "recursive": {
108 |                     "name": "Включати підтеки",
109 |                     "description": "Керування нотатками всередині підтек по шляху проєкту."
110 |                 },
111 |                 "hierarchy": {
112 |                     "name": "Ієрархія міток",
113 |                     "description": "Керування нотатками, що містять суб-мітки головної мітки проєкту."
114 |                 },
115 |                 "more-settings": {
116 |                     "name": "Додаткові налаштування",
117 |                     "description": ""
118 |                 },
119 |                 "templates": {
120 |                     "name": "Шаблони",
121 |                     "description": "Вибрати шаблони для створення нових нотаток.",
122 |                     "add": "Додати шаблон"
123 |                 },
124 |                 "exclude": {
125 |                     "name": "Виключені нотатки",
126 |                     "description": "Нотатки для виключення, навіть якщо вони були б частиною проєкту.",
127 |                     "add": "Додати нотатку"
128 |                 },
129 |                 "newNotesFolder": {
130 |                     "name": "Місце для нових нотаток",
131 |                     "description": "Тека, де будуть створюватися всі нові нотатки."
132 |                 },
133 |                 "defaultName": {
134 |                     "name": "Типове ім'я для нових нотаток",
135 |                     "description": "Підтримує змінні шаблонів {{date:YYYY-MM-DD}} та {{time:HHmm}}.",
136 |                     "invalid": "Містить неприпустимі символи."
137 |                 }
138 |             },
139 |             "archive": {
140 |                 "delete": {
141 |                     "short-title": "Видалити архів",
142 |                     "title": "Видалити архів",
143 |                     "message": "Ви впевнені, що бажаєте видалити \"{{archive}}\"? Це неможливо скасувати.",
144 |                     "cta": "Видалити"
145 |                 }
146 |             },
147 |             "view": {
148 |                 "create": {
149 |                     "short-title": "Новий вигляд",
150 |                     "title": "Додати новий вигляд",
151 |                     "optional": "За бажанням",
152 |                     "type": {
153 |                         "name": "Тип",
154 |                         "description": ""
155 |                     },
156 |                     "name": {
157 |                         "name": "Назва",
158 |                         "description": ""
159 |                     },
160 |                     "cta": "Додати вигляд",
161 |                     "existing-name-error": "Вигляд з таким іменем вже існує."
162 |                 },
163 |                 "duplicate": {
164 |                     "title": "Дублювати вигляд",
165 |                     "suffix": "Скопіювати"
166 |                 },
167 |                 "delete": {
168 |                     "short-title": "Видалити вигляд",
169 |                     "title": "Видалити вигляд",
170 |                     "message": "Ви впевнені, що бажаєте видалити перегляд \"{{view}}\"?",
171 |                     "cta": "Видалити"
172 |                 }
173 |             },
174 |             "note": {
175 |                 "create": {
176 |                     "short-title": "Нова нотатка",
177 |                     "title": "Створити нову нотатку",
178 |                     "name": {
179 |                         "name": "Назва",
180 |                         "description": ""
181 |                     },
182 |                     "templatePath": {
183 |                         "name": "Шаблон",
184 |                         "description": "",
185 |                         "none": "Нічого"
186 |                     },
187 |                     "project": {
188 |                         "name": "Проєкт",
189 |                         "description": ""
190 |                     },
191 |                     "name-taken-error": "Нотатка з таким іменем вже існує.",
192 |                     "empty-name-error": "Ім'я не може бути порожнім.",
193 |                     "dot-start-error": "Ім'я файлу не може починатися з крапки.",
194 |                     "create": "Створити нотатку",
195 |                     "readonly": {
196 |                         "title": "Проект тільки для читання",
197 |                         "message": "{{project}} is a read-only project. Select another project to create a note."
198 |                     },
199 |                     "untitled": "Без назви"
200 |                 },
201 |                 "edit": {
202 |                     "short-title": "Редагувати нотатку",
203 |                     "title": "Редагувати нотатку",
204 |                     "save": "Зберегти",
205 |                     "confirm": "Підтвердити",
206 |                     "no-editable-fields": {
207 |                         "title": "Немає полів для редагування",
208 |                         "message": "Ця нотатка не має полів для редагування."
209 |                     }
210 |                 }
211 |             },
212 |             "field": {
213 |                 "configure": {
214 |                     "short-title": "Налаштувати поле",
215 |                     "title": "Налаштувати поле",
216 |                     "name": {
217 |                         "name": "Назва",
218 |                         "description": ""
219 |                     },
220 |                     "empty-name-error": "Ім'я поля не може бути порожнім.",
221 |                     "existing-name-error": "Неможливо перейменувати на наявну назву поля.",
222 |                     "type": {
223 |                         "name": "Тип",
224 |                         "description": "Зміна типу ще не підтримується."
225 |                     },
226 |                     "options": {
227 |                         "name": "Налаштування",
228 |                         "description": "Дозволяє автозаповнення з використанням попередньо визначених значень для поля."
229 |                     },
230 |                     "rich-text": {
231 |                         "name": "Увімкнути форматування тексту",
232 |                         "description": "Для полів з Markdown вмістом."
233 |                     },
234 |                     "time": {
235 |                         "name": "Увімкнути час",
236 |                         "description": "Розпізнати це поле як Дата і час."
237 |                     },
238 |                     "save": "Зберегти"
239 |                 },
240 |                 "create": {
241 |                     "short-title": "Нове поле",
242 |                     "title": "Створити нове поле",
243 |                     "name": {
244 |                         "name": "Назва",
245 |                         "description": ""
246 |                     },
247 |                     "untitled": "Нове поле",
248 |                     "empty-name-error": "Ім'я поля не може бути порожнім.",
249 |                     "existing-name-error": "Поле з таким іменем вже існує.",
250 |                     "type": {
251 |                         "name": "Тип",
252 |                         "description": ""
253 |                     },
254 |                     "default": {
255 |                         "name": "Типове значення",
256 |                         "description": ""
257 |                     },
258 |                     "options": {
259 |                         "name": "Налаштування",
260 |                         "description": "Дозволяє автозаповнення з використанням попередньо визначених значень для поля."
261 |                     },
262 |                     "rich-text": {
263 |                         "name": "Увімкнути форматування тексту",
264 |                         "description": "Для полів з Markdown вмістом."
265 |                     },
266 |                     "create": "Створити поле"
267 |                 }
268 |             },
269 |             "input": {
270 |                 "cancel": "Скасувати"
271 |             },
272 |             "confirm": {
273 |                 "delete": "Видалити",
274 |                 "cancel": "Скасувати"
275 |             }
276 |         },
277 |         "views": {
278 |             "developer": {
279 |                 "name": "Розробник"
280 |             },
281 |             "table": {
282 |                 "name": "Таблиця",
283 |                 "hide-fields": "Приховати поля",
284 |                 "rename-field": "Перейменувати поле",
285 |                 "rename": "Перейменувати"
286 |             },
287 |             "board": {
288 |                 "name": "Дошка",
289 |                 "no-status": "Без статусу",
290 |                 "fields": {
291 |                     "status": "статус",
292 |                     "priority": "Пріоритет",
293 |                     "check": "Відмітити",
294 |                     "none": "Нічого"
295 |                 },
296 |                 "unprioritized": "Непріоритетні",
297 |                 "include-fields": "Долучати поля",
298 |                 "settings": {
299 |                     "name": "Налаштування дошки",
300 |                     "column-width": {
301 |                         "name": "Ширина стовпця",
302 |                         "description": "Ширина кожного стовпця у пікселях."
303 |                     },
304 |                     "custom-header": {
305 |                         "name": "Налаштувати заголовок картки",
306 |                         "description": "Використовуйте вибране поле як заголовок картки."
307 |                     },
308 |                     "order-sync-field": {
309 |                         "name": "Синхронізувати порядок карт з полем",
310 |                         "description": "Поле для зберігання положення карток на дошці."
311 |                     }
312 |                 },
313 |                 "note": {
314 |                     "add": "Додати нотатку"
315 |                 }
316 |             },
317 |             "calendar": {
318 |                 "name": "Календар",
319 |                 "new-note": "Нова нотатка",
320 |                 "fields": {
321 |                     "date": "ДАТА",
322 |                     "check": "Відмітити",
323 |                     "none": "Стандартний"
324 |                 },
325 |                 "today": "Сьогодні",
326 |                 "weekday": "{{value, datetime}}",
327 |                 "date": "{{value, datetime}}",
328 |                 "interval": "{{from, datetime}} – {{to, datetime}}{{en_separator}}{{custom_year, datetime}}",
329 |                 "intervals": {
330 |                     "month_one": "Місяць",
331 |                     "month_other": "Місяці",
332 |                     "monthWithCount_one": "{{count}} місяць",
333 |                     "monthWithCount_other": "{{count}} місяців",
334 |                     "week_one": "Тиждень",
335 |                     "week_other": "Тижні",
336 |                     "weekWithCount_one": "{{count}} тиждень",
337 |                     "weekWithCount_other": "{{count}} тижня",
338 |                     "day_one": "День",
339 |                     "day_other": "Дні",
340 |                     "dayWithCount_one": "{{count}} день",
341 |                     "dayWithCount_other": "{{count}} днів"
342 |                 }
343 |             },
344 |             "gallery": {
345 |                 "name": "Галерея",
346 |                 "fields": {
347 |                     "cover": "Обкладинка",
348 |                     "none": "Нічого"
349 |                 },
350 |                 "fit-style": {
351 |                     "fill": "Заповнити зображення",
352 |                     "fit": "За розміром зображення"
353 |                 },
354 |                 "include-fields": "Включити поля",
355 |                 "settings": {
356 |                     "name": "Налаштування галереї",
357 |                     "card-width": {
358 |                         "name": "Ширина картки",
359 |                         "description": "Ширина кожної картки у пікселях."
360 |                     }
361 |                 },
362 |                 "empty": "Цей вигляд порожній."
363 |             }
364 |         },
365 |         "components": {
366 |             "data-grid": {
367 |                 "column": {
368 |                     "configure": "Налаштувати поле",
369 |                     "add": "Додати поле",
370 |                     "insert-left": "Вставити зліва",
371 |                     "insert-right": "Вставити зправа",
372 |                     "rename": "Перейменувати поле",
373 |                     "pin": "Закріпити поле",
374 |                     "unpin": "Відкріпити поле",
375 |                     "hide": "Приховати поле",
376 |                     "delete": "Видалити поле"
377 |                 },
378 |                 "row": {
379 |                     "add": "Додати нотатку",
380 |                     "edit": "Редагувати нотатку",
381 |                     "delete": "Видалити нотатку"
382 |                 },
383 |                 "cell": {
384 |                     "clear": "Очистити подання"
385 |                 },
386 |                 "sort": {
387 |                     "asc": "Сортувати А → Я",
388 |                     "desc": "Сортувати Я → А"
389 |                 },
390 |                 "sortDate": {
391 |                     "asc": "Сортувати Старі → Нові",
392 |                     "desc": "Сортувати Нові → Старі"
393 |                 }
394 |             },
395 |             "board": {
396 |                 "column": {
397 |                     "add": {
398 |                         "name": "Додати стовпчик",
399 |                         "placeholder": "Новий стовпець",
400 |                         "no-status-field": "Status field required",
401 |                         "derived-status-field": "Current status field is read-only"
402 |                     },
403 |                     "rename": "Перейменувати стовпець",
404 |                     "delete": "Видалити стовпець",
405 |                     "expand": "Розгорнути стовпець",
406 |                     "collapse": "Згорнути стовпець",
407 |                     "pin": "Закріпити стовпець",
408 |                     "unpin": "Відкріпити стовпець"
409 |                 }
410 |             },
411 |             "color": {
412 |                 "label": "Колір",
413 |                 "where": "Де",
414 |                 "add": "Додати колір"
415 |             },
416 |             "filter": {
417 |                 "label": "Фільтр",
418 |                 "where": "Де",
419 |                 "and": "і",
420 |                 "or": "або",
421 |                 "add": "Додати умову"
422 |             },
423 |             "sort": {
424 |                 "label": "Сортувати",
425 |                 "add": "Додати інше сортування"
426 |             },
427 |             "tag": {
428 |                 "edit": "Редагувати",
429 |                 "remove": "Видалити"
430 |             },
431 |             "multi-text": {
432 |                 "add": "Додати параметр"
433 |             }
434 |         },
435 |         "toolbar": {
436 |             "view": {
437 |                 "add": "Додати вигляд"
438 |             },
439 |             "projects": {
440 |                 "none": "Немає проєктів",
441 |                 "options": "Інші параметри"
442 |             },
443 |             "read-only": "Тільки читання",
444 |             "read-only-desc": "Ви не можете створювати або редагувати нотатки у проєктах лише для читання."
445 |         },
446 |         "settings": {
447 |             "general": {
448 |                 "size-limit": {
449 |                     "name": "Обмеження розміру проєкта",
450 |                     "desc": "Уникати випадкового завантаження занадто багатьох нотаток."
451 |                 },
452 |                 "link-behavior": {
453 |                     "name": "Поведінка посилання",
454 |                     "desc": "Визначає, що відбувається, коли ви вибираєте нотатку. Натисніть {{modifier}} для вибору посилання для протилежної поведінки.",
455 |                     "options": {
456 |                         "open-editor": "Відкрити редактор",
457 |                         "open-note": "Відкрити нотатку"
458 |                     }
459 |                 },
460 |                 "start-of-week": {
461 |                     "name": "Почати тиждень з",
462 |                     "options": {
463 |                         "sunday": "Неділя",
464 |                         "monday": "Понеділок",
465 |                         "default": "За замовчуванням"
466 |                     }
467 |                 }
468 |             },
469 |             "front-matter": {
470 |                 "heading": "Front matter",
471 |                 "quote-strings": {
472 |                     "name": "Цитований рядок",
473 |                     "options": {
474 |                         "plain": "За потреби",
475 |                         "quote-double": "Завжди"
476 |                     }
477 |                 }
478 |             },
479 |             "commands": {
480 |                 "name": "Команди",
481 |                 "desc": "Додайте команди для Ваших улюблених проєктів та переглядів."
482 |             },
483 |             "archives": {
484 |                 "name": "Архіви",
485 |                 "desc": "Відновіть або видаліть архівні проєкти.",
486 |                 "empty": "Немає архівованих проєктів."
487 |             }
488 |         },
489 |         "errors": {
490 |             "missingDataview": {
491 |                 "title": "Dataview вимкнений",
492 |                 "message": "Увімкніть плагін Dataview, щоб продовжити використовувати цей проєкт."
493 |             }
494 |         },
495 |         "obsidian": {
496 |             "ribbon-tooltip": "Відкриті проєкти",
497 |             "hover-link-settings": "Проєкти"
498 |         }
499 |     }
500 | }


--------------------------------------------------------------------------------
/src/lib/stores/translations/zh-CN.json:
--------------------------------------------------------------------------------
  1 | {
  2 |     "translation": {
  3 |         "data-types": {
  4 |             "string": "文本",
  5 |             "number": "数字",
  6 |             "boolean": "复选框",
  7 |             "date": "日期",
  8 |             "unknown": "未知",
  9 |             "repeated": "重复",
 10 |             "datetime": "日期 & 时间",
 11 |             "list": "列表",
 12 |             "tags": "标签",
 13 |             "aliases": "别名"
 14 |         },
 15 |         "datasources": {
 16 |             "folder": "文件夹",
 17 |             "tag": "标签",
 18 |             "dataview": "Dataview"
 19 |         },
 20 |         "commands": {
 21 |             "show-projects": {
 22 |                 "name": "打开项目"
 23 |             },
 24 |             "create-project": {
 25 |                 "name": "新建项目"
 26 |             },
 27 |             "create-note": {
 28 |                 "name": "新建笔记"
 29 |             }
 30 |         },
 31 |         "menus": {
 32 |             "project": {
 33 |                 "create": {
 34 |                     "title": "在文件夹中新建项目"
 35 |                 }
 36 |             },
 37 |             "tab-header": {
 38 |                 "new-window": {
 39 |                     "title": "在新窗口中打开"
 40 |                 }
 41 |             }
 42 |         },
 43 |         "modals": {
 44 |             "project": {
 45 |                 "create": {
 46 |                     "short-title": "新项目",
 47 |                     "untitled": "未命名项目",
 48 |                     "title": "新建项目",
 49 |                     "cta": "新建项目",
 50 |                     "existing-name-error": "项目名称重复。",
 51 |                     "empty-name-error": "项目名不能为空。"
 52 |                 },
 53 |                 "edit": {
 54 |                     "short-title": "编辑项目",
 55 |                     "title": "编辑项目",
 56 |                     "cta": "保存"
 57 |                 },
 58 |                 "duplicate": {
 59 |                     "title": "复制项目",
 60 |                     "suffix": "副本"
 61 |                 },
 62 |                 "archive": {
 63 |                     "short-title": "存档项目",
 64 |                     "title": "存档项目",
 65 |                     "message": "确定要存档项目 \"{{project}}\" 吗？若需要，您可以在 Projects 插件设置中恢复该项目。",
 66 |                     "notice": "存档成功！若您在多个设备间同步使用 Projects，请确保将所有设备上的 Projects 都升级到 1.17.0 版本或以上，以避免存档的项目配置信息丢失。",
 67 |                     "cta": "存档"
 68 |                 },
 69 |                 "delete": {
 70 |                     "short-title": "删除项目",
 71 |                     "title": "删除项目",
 72 |                     "message": "确定要删除项目 \"{{project}}\" 吗？此操作不可撤销。",
 73 |                     "cta": "删除"
 74 |                 },
 75 |                 "name": {
 76 |                     "name": "项目名称",
 77 |                     "description": ""
 78 |                 },
 79 |                 "default": {
 80 |                     "name": "设为默认项目",
 81 |                     "description": "打开 Projects 插件窗口时，默认打开本项目。"
 82 |                 },
 83 |                 "datasource": {
 84 |                     "name": "数据源",
 85 |                     "description": "选择项目的数据来源。"
 86 |                 },
 87 |                 "path": {
 88 |                     "name": "路径",
 89 |                     "description": "目标文件夹路径。若为空值，路径将设为根目录。"
 90 |                 },
 91 |                 "tag": {
 92 |                     "name": "标签",
 93 |                     "description": "管理本仓库中所有含有该标签的笔记。"
 94 |                 },
 95 |                 "dataview": {
 96 |                     "name": "Dataview",
 97 |                     "description": "以 Dataview 查询结果创建只读项目。",
 98 |                     "error": {
 99 |                         "title": "Dataview 插件未启用。",
100 |                         "message": "启用 Dataview 插件以使用本项目。"
101 |                     }
102 |                 },
103 |                 "query": {
104 |                     "name": "查询语句 (Query)",
105 |                     "description": "当前只支持 TABLE 查询语句。"
106 |                 },
107 |                 "recursive": {
108 |                     "name": "管理子文件夹",
109 |                     "description": "管理项目文件夹下的所有子文件夹。"
110 |                 },
111 |                 "hierarchy": {
112 |                     "name": "嵌套标签",
113 |                     "description": "管理所有包含项目主标签及其子标签的笔记。"
114 |                 },
115 |                 "more-settings": {
116 |                     "name": "更多设置",
117 |                     "description": ""
118 |                 },
119 |                 "templates": {
120 |                     "name": "模板",
121 |                     "description": "新建笔记时，从下列模板中选取新笔记模板。",
122 |                     "add": "添加模板"
123 |                 },
124 |                 "exclude": {
125 |                     "name": "排除笔记",
126 |                     "description": "下列笔记将不会被本项目追踪。",
127 |                     "add": "添加笔记"
128 |                 },
129 |                 "newNotesFolder": {
130 |                     "name": "新建笔记位置",
131 |                     "description": "新建的笔记将存放于该文件夹。"
132 |                 },
133 |                 "defaultName": {
134 |                     "name": "默认笔记名称",
135 |                     "description": "支持 {{date:YYYY-MM-DD}} 和 {{time:HHmm}} 格式的日期、时间模板变量。",
136 |                     "invalid": "笔记名包含非法字符。"
137 |                 }
138 |             },
139 |             "archive": {
140 |                 "delete": {
141 |                     "short-title": "删除存档",
142 |                     "title": "删除存档",
143 |                     "message": "确定要删除存档 \"{{archive}}\" 吗？此操作不可撤销。",
144 |                     "cta": "删除"
145 |                 }
146 |             },
147 |             "view": {
148 |                 "create": {
149 |                     "short-title": "新建视图",
150 |                     "title": "新建视图",
151 |                     "optional": "可选",
152 |                     "type": {
153 |                         "name": "视图类型",
154 |                         "description": ""
155 |                     },
156 |                     "name": {
157 |                         "name": "视图名称",
158 |                         "description": ""
159 |                     },
160 |                     "cta": "新建视图",
161 |                     "existing-name-error": "视图名称重复。"
162 |                 },
163 |                 "duplicate": {
164 |                     "title": "复制视图",
165 |                     "suffix": "副本"
166 |                 },
167 |                 "delete": {
168 |                     "short-title": "删除视图",
169 |                     "title": "删除视图",
170 |                     "message": "确定要删除视图 \"{{view}}\" 吗？",
171 |                     "cta": "删除"
172 |                 }
173 |             },
174 |             "note": {
175 |                 "create": {
176 |                     "short-title": "新建笔记",
177 |                     "title": "新建笔记",
178 |                     "name": {
179 |                         "name": "笔记名称",
180 |                         "description": ""
181 |                     },
182 |                     "templatePath": {
183 |                         "name": "模板",
184 |                         "description": "",
185 |                         "none": "None"
186 |                     },
187 |                     "project": {
188 |                         "name": "所属项目",
189 |                         "description": ""
190 |                     },
191 |                     "name-taken-error": "已经存在一个同名文件。",
192 |                     "empty-name-error": "文件名不能为空。",
193 |                     "dot-start-error": "文件名不能以句点开头。",
194 |                     "create": "新建笔记",
195 |                     "readonly": {
196 |                         "title": "只读项目",
197 |                         "message": "{{project}} 是一个只读项目，请选择其他项目以新建笔记。"
198 |                     },
199 |                     "untitled": "未命名"
200 |                 },
201 |                 "edit": {
202 |                     "short-title": "编辑笔记",
203 |                     "title": "编辑笔记元数据",
204 |                     "save": "保存",
205 |                     "confirm": "确认",
206 |                     "no-editable-fields": {
207 |                         "title": "没有可编辑字段。",
208 |                         "message": "这个笔记的元数据没有可编辑字段。"
209 |                     }
210 |                 }
211 |             },
212 |             "field": {
213 |                 "configure": {
214 |                     "short-title": "配置字段",
215 |                     "title": "配置字段",
216 |                     "name": {
217 |                         "name": "字段名称",
218 |                         "description": ""
219 |                     },
220 |                     "empty-name-error": "字段名不能为空。",
221 |                     "existing-name-error": "不能重命名为已有字段。",
222 |                     "type": {
223 |                         "name": "字段类型",
224 |                         "description": "尚不支持修改字段类型。"
225 |                     },
226 |                     "options": {
227 |                         "name": "选项预设",
228 |                         "description": "在填写该字段内容时，将使用下面提供的预设值进行自动补全。"
229 |                     },
230 |                     "rich-text": {
231 |                         "name": "富文本",
232 |                         "description": "依照 Markdown 格式渲染字段内容。"
233 |                     },
234 |                     "time": {
235 |                         "name": "启用时间",
236 |                         "description": "将该字段识别为日期 & 时间格式。"
237 |                     },
238 |                     "save": "保存修改"
239 |                 },
240 |                 "create": {
241 |                     "short-title": "新建字段",
242 |                     "title": "新建字段",
243 |                     "name": {
244 |                         "name": "字段名称",
245 |                         "description": ""
246 |                     },
247 |                     "untitled": "新字段",
248 |                     "empty-name-error": "字段名不能为空。",
249 |                     "existing-name-error": "字段名称重复。",
250 |                     "type": {
251 |                         "name": "字段类型",
252 |                         "description": ""
253 |                     },
254 |                     "default": {
255 |                         "name": "默认值",
256 |                         "description": ""
257 |                     },
258 |                     "options": {
259 |                         "name": "选项预设",
260 |                         "description": "在填写该字段内容时，将使用下面提供的预设值进行自动补全。"
261 |                     },
262 |                     "rich-text": {
263 |                         "name": "富文本",
264 |                         "description": "依照 Markdown 格式渲染字段内容。"
265 |                     },
266 |                     "create": "添加字段"
267 |                 }
268 |             },
269 |             "input": {
270 |                 "cancel": "取消"
271 |             },
272 |             "confirm": {
273 |                 "delete": "删除",
274 |                 "cancel": "取消"
275 |             }
276 |         },
277 |         "views": {
278 |             "developer": {
279 |                 "name": "开发者"
280 |             },
281 |             "table": {
282 |                 "name": "表格",
283 |                 "hide-fields": "隐藏字段",
284 |                 "rename-field": "重命名字段",
285 |                 "rename": "重命名"
286 |             },
287 |             "board": {
288 |                 "name": "看板",
289 |                 "no-status": "未设置状态",
290 |                 "fields": {
291 |                     "status": "状态",
292 |                     "priority": "优先级",
293 |                     "check": "复选框",
294 |                     "none": "未选择"
295 |                 },
296 |                 "unprioritized": "未设置优先级",
297 |                 "include-fields": "展示字段",
298 |                 "settings": {
299 |                     "name": "看板设置",
300 |                     "column-width": {
301 |                         "name": "列宽度",
302 |                         "description": "调整每列的像素宽度。"
303 |                     },
304 |                     "custom-header": {
305 |                         "name": "自定义卡片标题",
306 |                         "description": "将使用所选字段值作为卡片标题。"
307 |                     },
308 |                     "order-sync-field": {
309 |                         "name": "卡片顺序同步字段",
310 |                         "description": "该字段将用于存储卡片在看板列中的位置顺序信息。"
311 |                     }
312 |                 },
313 |                 "note": {
314 |                     "add": "新建笔记"
315 |                 }
316 |             },
317 |             "calendar": {
318 |                 "name": "日历",
319 |                 "new-note": "新建笔记",
320 |                 "fields": {
321 |                     "date": "日期",
322 |                     "check": "复选框",
323 |                     "none": "无"
324 |                 },
325 |                 "today": "今天",
326 |                 "weekday": "{{value, datetime}}",
327 |                 "date": "{{value, datetime}}",
328 |                 "interval": "{{custom_year, datetime}}{{from, datetime}} – {{to, datetime}}",
329 |                 "intervals": {
330 |                     "month_one": "月",
331 |                     "month_other": "月",
332 |                     "monthWithCount_one": "{{count}}月",
333 |                     "monthWithCount_other": "{{count}}月",
334 |                     "week_one": "周",
335 |                     "week_other": "周",
336 |                     "weekWithCount_one": "{{count}}周",
337 |                     "weekWithCount_other": "{{count}}周",
338 |                     "day_one": "日",
339 |                     "day_other": "日",
340 |                     "dayWithCount_one": "{{count}}日",
341 |                     "dayWithCount_other": "{{count}}日"
342 |                 }
343 |             },
344 |             "gallery": {
345 |                 "name": "画册",
346 |                 "fields": {
347 |                     "cover": "图片源",
348 |                     "none": "未选择"
349 |                 },
350 |                 "fit-style": {
351 |                     "fill": "填充",
352 |                     "fit": "适应"
353 |                 },
354 |                 "include-fields": "展示字段",
355 |                 "settings": {
356 |                     "name": "画册设置",
357 |                     "card-width": {
358 |                         "name": "卡片宽度",
359 |                         "description": "调整每张卡片的像素宽度。"
360 |                     }
361 |                 },
362 |                 "empty": "该视图还没有数据。"
363 |             }
364 |         },
365 |         "components": {
366 |             "data-grid": {
367 |                 "column": {
368 |                     "configure": "配置字段",
369 |                     "add": "新建字段",
370 |                     "insert-left": "向左插入字段",
371 |                     "insert-right": "向右插入字段",
372 |                     "rename": "重命名字段",
373 |                     "pin": "固定字段",
374 |                     "unpin": "取消固定",
375 |                     "hide": "隐藏字段",
376 |                     "delete": "删除字段"
377 |                 },
378 |                 "row": {
379 |                     "add": "新建笔记",
380 |                     "edit": "编辑笔记",
381 |                     "delete": "删除笔记"
382 |                 },
383 |                 "cell": {
384 |                     "clear": "清空单元格"
385 |                 },
386 |                 "sort": {
387 |                     "asc": "升序 A → Z",
388 |                     "desc": "降序 Z → A"
389 |                 },
390 |                 "sortDate": {
391 |                     "asc": "按日期升序 旧 → 新",
392 |                     "desc": "按日期降序 新 → 旧"
393 |                 }
394 |             },
395 |             "board": {
396 |                 "column": {
397 |                     "add": {
398 |                         "name": "新建列表",
399 |                         "placeholder": "新列表",
400 |                         "no-status-field": "需要设置状态字段",
401 |                         "derived-status-field": "该状态字段只读，无法添加列"
402 |                     },
403 |                     "rename": "重命名列表",
404 |                     "delete": "删除列表",
405 |                     "expand": "展开列表",
406 |                     "collapse": "折叠列表",
407 |                     "pin": "固定列表",
408 |                     "unpin": "取消固定"
409 |                 }
410 |             },
411 |             "color": {
412 |                 "label": "条件颜色",
413 |                 "where": "当",
414 |                 "add": "添加颜色"
415 |             },
416 |             "filter": {
417 |                 "label": "筛选",
418 |                 "where": "当",
419 |                 "and": "与",
420 |                 "or": "或",
421 |                 "add": "添加筛选条件"
422 |             },
423 |             "sort": {
424 |                 "label": "排序",
425 |                 "add": "添加排序条件"
426 |             },
427 |             "tag": {
428 |                 "edit": "编辑",
429 |                 "remove": "移除"
430 |             },
431 |             "multi-text": {
432 |                 "add": "添加一项"
433 |             }
434 |         },
435 |         "toolbar": {
436 |             "view": {
437 |                 "add": "新建视图"
438 |             },
439 |             "projects": {
440 |                 "none": "尚无项目",
441 |                 "options": "更多选项"
442 |             },
443 |             "read-only": "只读项目",
444 |             "read-only-desc": "不能在只读项目中新增、编辑笔记。"
445 |         },
446 |         "settings": {
447 |             "general": {
448 |                 "size-limit": {
449 |                     "name": "最大条目数量",
450 |                     "desc": "防止意外加载过多条目。"
451 |                 },
452 |                 "link-behavior": {
453 |                     "name": "链接行为",
454 |                     "desc": "选择在 Projects 中点击链接时的行为。按下 {{modifier}} 键时点击将执行另一项。",
455 |                     "options": {
456 |                         "open-editor": "打开元数据编辑器",
457 |                         "open-note": "打开目标笔记"
458 |                     }
459 |                 },
460 |                 "start-of-week": {
461 |                     "name": "一周的第一天",
462 |                     "options": {
463 |                         "sunday": "星期日",
464 |                         "monday": "星期一",
465 |                         "default": "默认"
466 |                     }
467 |                 }
468 |             },
469 |             "front-matter": {
470 |                 "heading": "Front matter",
471 |                 "quote-strings": {
472 |                     "name": "使用引号包裹字符串",
473 |                     "options": {
474 |                         "plain": "必要时",
475 |                         "quote-double": "总是"
476 |                     }
477 |                 }
478 |             },
479 |             "commands": {
480 |                 "name": "命令",
481 |                 "desc": "为你最常用的项目和视图添加命令到命令面板。"
482 |             },
483 |             "archives": {
484 |                 "name": "存档管理",
485 |                 "desc": "恢复或删除已存档项目。",
486 |                 "empty": "没有已存档项目。"
487 |             }
488 |         },
489 |         "errors": {
490 |             "missingDataview": {
491 |                 "title": "Dataview 插件未启用",
492 |                 "message": "启用 Dataview 插件以使用本项目。"
493 |             }
494 |         },
495 |         "obsidian": {
496 |             "ribbon-tooltip": "打开项目",
497 |             "hover-link-settings": "Projects"
498 |         }
499 |     }
500 | }


--------------------------------------------------------------------------------
/src/lib/templates/README.md:
--------------------------------------------------------------------------------
1 | # Templates
2 | 
3 | This module contains the logic for interpolating templates.
4 | 


--------------------------------------------------------------------------------
/src/lib/templates/interpolate.test.ts:
--------------------------------------------------------------------------------
 1 | import { expect, test } from "@jest/globals";
 2 | import { interpolateTemplate } from "./interpolate";
 3 | 
 4 | test("interpolate string data", () => {
 5 |   expect(
 6 |     interpolateTemplate("foo {{title}} bar", { title: () => "something" })
 7 |   ).toStrictEqual("foo something bar");
 8 | 
 9 |   expect(
10 |     interpolateTemplate("foo {{date:YYYY-MM-DD}} bar", {
11 |       date: (format) => format ?? "",
12 |     })
13 |   ).toStrictEqual("foo YYYY-MM-DD bar");
14 | 
15 |   expect(
16 |     interpolateTemplate("foo {{time:HH:mm}} bar", {
17 |       time: (format) => format ?? "",
18 |     })
19 |   ).toStrictEqual("foo HH:mm bar");
20 | 
21 |   expect(
22 |     interpolateTemplate("foo {{ date:YYYY-MM-DD }} bar", {
23 |       date: (format) => format ?? "",
24 |     })
25 |   ).toStrictEqual("foo YYYY-MM-DD bar");
26 | });
27 | 


--------------------------------------------------------------------------------
/src/lib/templates/interpolate.ts:
--------------------------------------------------------------------------------
 1 | /**
 2 |  * Interpolates occurrences of double curly braces.
 3 |  *
 4 |  * The data parameter contains a map of available template variables, for
 5 |  * example `date` and `time`.
 6 |  *
 7 |  * The value of each template variable is a function with an optional argument.
 8 |  * The argument is any text after an optional colon, e.g. \{\{date:YYYY-MM-DD\}\}.
 9 |  */
10 | export function interpolateTemplate(
11 |   template: string,
12 |   data: Record<string, (arg?: string) => string>
13 | ): string {
14 |   return template.replace(/\{\{\s*(.*?)\s*\}\}/g, (_, name) => {
15 |     const [func, arg] = name.split(/:(.*)/s);
16 |     const f = data[func];
17 |     return f ? f(arg) : "";
18 |   });
19 | }
20 | 


--------------------------------------------------------------------------------
/src/lib/viewApi.ts:
--------------------------------------------------------------------------------
 1 | import { get } from "svelte/store";
 2 | 
 3 | import type {
 4 |   DataField,
 5 |   DataRecord,
 6 |   DataValue,
 7 |   Optional,
 8 | } from "./dataframe/dataframe";
 9 | import type { DataApi } from "./dataApi";
10 | import { dataFrame } from "./stores/dataframe";
11 | import type { DataSource } from "./datasources";
12 | 
13 | /**
14 |  * ViewApi provides an write API for views.
15 |  */
16 | export class ViewApi {
17 |   constructor(readonly dataSource: DataSource, readonly dataApi: DataApi) {}
18 | 
19 |   addRecord(record: DataRecord, fields: DataField[], templatePath: string) {
20 |     if (this.dataSource.includes(record.id)) {
21 |       dataFrame.addRecord(record);
22 |     }
23 |     this.dataApi.createNote(record, fields ?? [], templatePath);
24 |   }
25 | 
26 |   updateRecord(record: DataRecord, fields: DataField[]) {
27 |     if (this.dataSource.includes(record.id)) {
28 |       dataFrame.updateRecord(record);
29 |     }
30 |     this.dataApi.updateRecord(fields, record);
31 |   }
32 | 
33 |   async updateRecords(records: DataRecord[], fields: DataField[]) {
34 |     const rs = records.filter((r) => this.dataSource.includes(r.id));
35 |     if (rs) dataFrame.updateRecords(rs);
36 |     await this.dataApi.updateRecords(fields, records);
37 |   }
38 | 
39 |   deleteRecord(recordId: string) {
40 |     if (this.dataSource.includes(recordId)) {
41 |       dataFrame.deleteRecord(recordId);
42 |     }
43 |     this.dataApi.deleteRecord(recordId);
44 |   }
45 | 
46 |   addField(field: DataField, value: Optional<DataValue>, position?: number) {
47 |     dataFrame.addField(field, position);
48 | 
49 |     this.dataApi.addField(
50 |       get(dataFrame).records.map((record) => record.id),
51 |       field,
52 |       value
53 |     );
54 |   }
55 | 
56 |   updateField(field: DataField, oldName?: string) {
57 |     dataFrame.updateField(field, oldName);
58 | 
59 |     if (oldName) {
60 |       this.dataApi.renameField(
61 |         get(dataFrame).records.map((record) => record.id),
62 |         oldName,
63 |         field.name
64 |       );
65 |     }
66 |   }
67 | 
68 |   deleteField(field: string) {
69 |     dataFrame.deleteField(field);
70 |     this.dataApi.deleteField(
71 |       get(dataFrame).records.map((record) => record.id),
72 |       field
73 |     );
74 |   }
75 | }
76 | 


--------------------------------------------------------------------------------
/src/main.ts:
--------------------------------------------------------------------------------
  1 | import dayjs from "dayjs";
  2 | import isoWeek from "dayjs/plugin/isoWeek";
  3 | import localizedFormat from "dayjs/plugin/localizedFormat";
  4 | import { either, task, taskEither } from "fp-ts";
  5 | import { pipe } from "fp-ts/lib/function";
  6 | import { Plugin, TFolder, WorkspaceLeaf, addIcon } from "obsidian";
  7 | import "obsidian-dataview";
  8 | import { createDataRecord, createProject } from "src/lib/dataApi";
  9 | import { api } from "src/lib/stores/api";
 10 | import { i18n } from "src/lib/stores/i18n";
 11 | import { app, plugin } from "src/lib/stores/obsidian";
 12 | import { settings } from "src/lib/stores/settings";
 13 | import { CreateNoteModal } from "src/ui/modals/createNoteModal";
 14 | import { CreateProjectModal } from "src/ui/modals/createProjectModal";
 15 | import { get, type Unsubscriber } from "svelte/store";
 16 | import { registerFileEvents } from "./events";
 17 | import { ObsidianFileSystemWatcher } from "./lib/filesystem/obsidian/filesystem";
 18 | import { ProjectsSettingTab } from "./ui/settings/settings";
 19 | import {
 20 |   migrateSettings,
 21 |   type ProjectDefinition,
 22 |   type ProjectId,
 23 |   type ShowCommand,
 24 |   type ViewId,
 25 | } from "./settings/settings";
 26 | import { ProjectsView, VIEW_TYPE_PROJECTS } from "./view";
 27 | 
 28 | dayjs.extend(isoWeek);
 29 | dayjs.extend(localizedFormat);
 30 | 
 31 | const PROJECTS_PLUGIN_ID = "obsidian-projects";
 32 | 
 33 | export default class ProjectsPlugin extends Plugin {
 34 |   unsubscribeSettings?: Unsubscriber;
 35 | 
 36 |   /**
 37 |    * onload runs when the plugin is enabled.
 38 |    */
 39 |   async onload(): Promise<void> {
 40 |     await this.loadSettings();
 41 | 
 42 |     // Helper function for translation.
 43 |     const { t } = get(i18n);
 44 | 
 45 |     this.addSettingTab(new ProjectsSettingTab(this.app, this));
 46 | 
 47 |     addIcon(
 48 |       "projects-icon",
 49 |       `
 50 |       <g>
 51 |         <path d="m84.42478,20.01081l10.10281,0l0,74.55223l-74.55082,0l0,-10.17944l10.14538,0l0,0.03689l54.26005,0l0,-0.03689l0.04257,0l0,-64.37279zm-18.92858,10.14255l-35.37403,0l0,35.29883l-10.10281,0l0,-45.44137l45.47685,0l0,10.14255l0,-0.00001z" fill="currentColor"/>
 52 |           <g transform="matrix(0.676126 0 0 0.676126 -406.678 -7.59132)">
 53 |             <path d="m719.83653,129.53201l-110.26,0l0,-110.263l110.26,0l0,110.263zm-15,-95.263l-80.26,0l0,80.263l80.26,0l0,-80.263z" fill="currentColor"/>
 54 |           </g>
 55 |       </g>
 56 |       `
 57 |     );
 58 | 
 59 |     this.addRibbonIcon("projects-icon", t("obsidian.ribbon-tooltip"), () => {
 60 |       this.activateView();
 61 |     });
 62 | 
 63 |     this.registerView(
 64 |       VIEW_TYPE_PROJECTS,
 65 |       (leaf) => new ProjectsView(leaf, this)
 66 |     );
 67 | 
 68 |     this.registerHoverLinkSource(VIEW_TYPE_PROJECTS, {
 69 |       defaultMod: true,
 70 |       display: t("obsidian.hover-link-settings"),
 71 |     });
 72 | 
 73 |     // Allow the user to create a project by right-clicking a folder in the
 74 |     // File explorer.
 75 |     this.registerEvent(
 76 |       this.app.workspace.on("file-menu", (menu, file) => {
 77 |         if (file instanceof TFolder) {
 78 |           menu.addItem((item) => {
 79 |             item
 80 |               .setTitle(t("menus.project.create.title"))
 81 |               .setIcon("folder-plus")
 82 |               .onClick(async () => {
 83 |                 const project = createProject();
 84 | 
 85 |                 new CreateProjectModal(
 86 |                   this.app,
 87 |                   t("modals.project.create.title"),
 88 |                   t("modals.project.create.cta"),
 89 |                   settings.addProject,
 90 |                   {
 91 |                     ...project,
 92 |                     name: file.name,
 93 |                     dataSource: {
 94 |                       kind: "folder",
 95 |                       config: {
 96 |                         path: file.path,
 97 |                         recursive: false,
 98 |                       },
 99 |                     },
100 |                   }
101 |                 ).open();
102 |               });
103 |           });
104 |         }
105 |       })
106 |     );
107 | 
108 |     // Command to show the Projects view.
109 |     this.addCommand({
110 |       id: "show-projects",
111 |       name: t("commands.show-projects.name"),
112 |       callback: () => {
113 |         this.activateView();
114 |       },
115 |     });
116 | 
117 |     // Command to create a new project.
118 |     this.addCommand({
119 |       id: "create-project",
120 |       name: t("commands.create-project.name"),
121 |       callback: () => {
122 |         new CreateProjectModal(
123 |           this.app,
124 |           t("modals.project.create.title"),
125 |           t("modals.project.create.cta"),
126 |           settings.addProject,
127 |           createProject()
128 |         ).open();
129 |       },
130 |     });
131 | 
132 |     // Command to create a new note.
133 |     this.addCommand({
134 |       id: "create-note",
135 |       name: t("commands.create-note.name"),
136 |       // checkCallback because we don't want to create notes if there are no
137 |       // projects.
138 |       checkCallback: (checking) => {
139 |         const project = get(settings).projects[0];
140 | 
141 |         if (project) {
142 |           if (!checking) {
143 |             new CreateNoteModal(
144 |               this.app,
145 |               project,
146 |               async (name, templatePath, project) => {
147 |                 const record = createDataRecord(name, project);
148 |                 await get(api).createNote(record, [], templatePath);
149 |               }
150 |             ).open();
151 |           }
152 | 
153 |           return true;
154 |         }
155 | 
156 |         return false;
157 |       },
158 |     });
159 | 
160 |     // Initialize Svelte stores so that Svelte components can access the App and
161 |     // Plugin objects.
162 |     app.set(this.app);
163 |     plugin.set(this);
164 | 
165 |     // Save settings to disk whenever settings has been updated.
166 |     this.unsubscribeSettings = settings.subscribe((value) => {
167 |       this.ensureCommands(value.preferences.commands, value.projects);
168 |       this.saveData(value);
169 |     });
170 | 
171 |     const watcher = new ObsidianFileSystemWatcher(this);
172 | 
173 |     registerFileEvents(watcher);
174 |   }
175 | 
176 |   /**
177 |    * onunload runs when the plugin is disabled. Use it to clean up any resources
178 |    * you've allocated in the onload method.
179 |    */
180 |   async onunload(): Promise<void> {
181 |     if (this.unsubscribeSettings) {
182 |       this.unsubscribeSettings();
183 |     }
184 |   }
185 | 
186 |   /**
187 |    * loadSettings loads settings from disk, migrates it to the latest version,
188 |    * and updates the Svelte store for settings.
189 |    */
190 |   async loadSettings(): Promise<void> {
191 |     return pipe(
192 |       taskEither.tryCatch(() => this.loadData(), either.toError),
193 |       taskEither.map(migrateSettings),
194 |       taskEither.chain(taskEither.fromEither),
195 |       task.map(
196 |         either.fold(
197 |           (err) => {
198 |             throw err;
199 |           },
200 |           (value) => {
201 |             settings.set(value);
202 |           }
203 |         )
204 |       )
205 |     )();
206 |   }
207 | 
208 |   /**
209 |    * activateView opens the main Projects view in a new workspace leaf.
210 |    * */
211 |   async activateView(projectId?: ProjectId, viewId?: ViewId): Promise<void> {
212 |     const leaf = await this.getOrCreateLeaf();
213 | 
214 |     leaf.setViewState({
215 |       type: VIEW_TYPE_PROJECTS,
216 |       active: true,
217 |       state: {
218 |         projectId,
219 |         viewId,
220 |       },
221 |     });
222 |   }
223 | 
224 |   /**
225 |    * getOrCreateLeaf returns a new leaf, or returns an existing leaf if
226 |    * Projects is already open.
227 |    */
228 |   async getOrCreateLeaf(): Promise<WorkspaceLeaf> {
229 |     const existingLeaves =
230 |       this.app.workspace.getLeavesOfType(VIEW_TYPE_PROJECTS);
231 | 
232 |     if (existingLeaves[0]) {
233 |       return existingLeaves[0];
234 |     }
235 | 
236 |     return this.app.workspace.getLeaf("tab");
237 |   }
238 | 
239 |   /**
240 |    * ensureCommands syncs enabled and registered show commands for individual
241 |    * views and projects
242 |    */
243 |   ensureCommands(
244 |     enabledCommands: ShowCommand[],
245 |     projects: ProjectDefinition[]
246 |   ): void {
247 |     const registeredCommandIds = new Set<string>(
248 |       Object.keys(this.app.commands.commands).filter((id) =>
249 |         id.startsWith(`${PROJECTS_PLUGIN_ID}:show:`)
250 |       )
251 |     );
252 | 
253 |     this.removeRedundantCommands(
254 |       enabledCommands,
255 |       projects,
256 |       registeredCommandIds
257 |     );
258 |     this.addMissingCommands(enabledCommands, projects, registeredCommandIds);
259 |   }
260 | 
261 |   /**
262 |    * removeRedundantCommands cleans up registered show commands that have either
263 |    * been disabled from the settings, or where the project or view has been
264 |    * deleted.
265 |    */
266 |   removeRedundantCommands(
267 |     enabledCommands: ShowCommand[],
268 |     projects: ProjectDefinition[],
269 |     registeredCommandIds: Set<string>
270 |   ): void {
271 |     registeredCommandIds.forEach((id) => {
272 |       const enabledCommand = enabledCommands.find(
273 |         (command) => id === getShowCommandId(command, true)
274 |       );
275 | 
276 |       // Unregister command if it's been disabled.
277 |       if (!enabledCommand) {
278 |         this.app.commands.removeCommand(id);
279 |         return;
280 |       }
281 | 
282 |       const project = projects.find((project) => {
283 |         if (enabledCommand.view) {
284 |           return (
285 |             project.id === enabledCommand.project &&
286 |             project.views.find((view) => view.id === enabledCommand.view)
287 |           );
288 |         } else {
289 |           return project.id === enabledCommand.project;
290 |         }
291 |       });
292 | 
293 |       // Unregister command if it's been deleted.
294 |       if (!project) {
295 |         this.app.commands.removeCommand(id);
296 |       }
297 |     });
298 |   }
299 | 
300 |   /**
301 |    * addMissingCommands registers show commands that have been enabled but not
302 |    * registered.
303 |    */
304 |   addMissingCommands(
305 |     enabledCommands: ShowCommand[],
306 |     projects: ProjectDefinition[],
307 |     registeredCommandIds: Set<string>
308 |   ): void {
309 |     enabledCommands.forEach((command) => {
310 |       const globalId = getShowCommandId(command, true);
311 |       const localId = getShowCommandId(command, false);
312 | 
313 |       if (registeredCommandIds.has(globalId)) {
314 |         // Command has been both enabled and registered. All is well.
315 |         return;
316 |       }
317 | 
318 |       const project = projects.find(
319 |         (project) => project.id === command.project
320 |       );
321 | 
322 |       if (project) {
323 |         if (command.view) {
324 |           const view = project?.views.find((view) => view.id === command.view);
325 | 
326 |           if (view) {
327 |             this.addCommand({
328 |               id: localId,
329 |               name: `Show ${project.name} > ${view.name}`,
330 |               callback: () => {
331 |                 this.activateView(project.id, view.id);
332 |               },
333 |             });
334 |           }
335 |         } else {
336 |           this.addCommand({
337 |             id: localId,
338 |             name: `Show ${project.name}`,
339 |             callback: () => {
340 |               this.activateView(project.id);
341 |             },
342 |           });
343 |         }
344 |       }
345 |     });
346 |   }
347 | }
348 | 
349 | /**
350 |  * getShowCommandId returns the command identifier for a Show command.
351 |  *
352 |  * A command id for Show commands has the following structure:
353 |  *
354 |  * show:<project-id>
355 |  * show:<project-id>:<view-id>
356 |  *
357 |  * If `global` is true, the plugin id is prepended to the command id.
358 |  *
359 |  * obsidian-projects:show:<project-id>
360 |  * obsidian-projects:show:<project-id>:<view-id>
361 |  */
362 | function getShowCommandId(cmd: ShowCommand, global: boolean): string {
363 |   const res = [];
364 | 
365 |   if (global) {
366 |     res.push(PROJECTS_PLUGIN_ID);
367 |   }
368 | 
369 |   res.push("show");
370 | 
371 |   if (cmd.project) {
372 |     res.push(cmd.project);
373 |   }
374 |   if (cmd.view) {
375 |     res.push(cmd.view);
376 |   }
377 | 
378 |   return res.join(":");
379 | }
380 | 


--------------------------------------------------------------------------------
/src/obsidianProjects.d.ts:
--------------------------------------------------------------------------------
 1 | import type { DataFrame } from "./lib/dataframe/dataframe";
 2 | 
 3 | declare global {
 4 |   namespace Intl {
 5 |     interface Locale {
 6 |       weekInfo?: WeekInfo;
 7 |       getWeekInfo?: () => WeekInfo;
 8 |     }
 9 |   }
10 |   type WeekInfo = { firstDay: number; weekend: number[]; minimalDays: number };
11 | }
12 | 
13 | declare module "obsidian" {
14 |   interface Plugin {
15 |     onRegisterProjectView?: () => ProjectView;
16 |   }
17 |   interface App {
18 |     commands: {
19 |       listCommands(): Command[];
20 |       removeCommand(id: string): void;
21 |       findCommand(id: string): Command;
22 |       commands: { [id: string]: Command };
23 |     };
24 |     plugins: {
25 |       getPlugin(name: string): Plugin | null;
26 |       plugins: {
27 |         [id: string]: Plugin;
28 |       };
29 |     };
30 |   }
31 |   // https://github.com/Fevol/obsidian-typings
32 |   interface MenuItem {
33 |     /**
34 |      * @internal Add warning styling to the menu item
35 |      * @param warning - Whether the menu item should be styled as a warning
36 |      */
37 |     setWarning(warning: boolean): this;
38 |   }
39 |   interface Vault {
40 |     config: {
41 |       accentColor: string;
42 |     };
43 |   }
44 | }
45 | 


--------------------------------------------------------------------------------
/src/settings/base/settings.ts:
--------------------------------------------------------------------------------
  1 | export type ProjectId = string;
  2 | export type ViewId = string;
  3 | 
  4 | export type ViewType = string;
  5 | 
  6 | export interface ViewDefinition {
  7 |   readonly name: string;
  8 |   readonly id: ViewId;
  9 |   readonly type: ViewType;
 10 |   readonly config: Record<string, any>;
 11 |   readonly filter: FilterDefinition;
 12 |   readonly colors: ColorFilterDefinition;
 13 |   readonly sort: SortDefinition;
 14 | }
 15 | 
 16 | export interface SortDefinition {
 17 |   readonly criteria: SortingCriteria[];
 18 | }
 19 | 
 20 | export interface SortingCriteria {
 21 |   readonly field: string;
 22 |   readonly order: SortOrder;
 23 |   readonly enabled: boolean;
 24 | }
 25 | 
 26 | export type SortOrder = "asc" | "desc";
 27 | 
 28 | export interface FilterDefinition {
 29 |   readonly conjunction?: "and" | "or";
 30 |   readonly conditions: FilterCondition[];
 31 | }
 32 | 
 33 | export interface ColorFilterDefinition {
 34 |   readonly conditions: ColorRule[];
 35 | }
 36 | 
 37 | export interface ColorRule {
 38 |   color: string;
 39 |   condition: FilterCondition;
 40 | }
 41 | 
 42 | export type BaseFilterOperator = "is-empty" | "is-not-empty";
 43 | 
 44 | export type StringFilterOperator =
 45 |   | "is"
 46 |   | "is-not"
 47 |   | "contains"
 48 |   | "not-contains";
 49 | 
 50 | export function isStringFilterOperator(
 51 |   op: FilterOperator
 52 | ): op is StringFilterOperator {
 53 |   return ["is", "is-not", "contains", "not-contains"].includes(op);
 54 | }
 55 | 
 56 | export type NumberFilterOperator = "eq" | "neq" | "lt" | "gt" | "lte" | "gte";
 57 | 
 58 | export function isNumberFilterOperator(
 59 |   op: FilterOperator
 60 | ): op is NumberFilterOperator {
 61 |   return ["eq", "neq", "lt", "gt", "lte", "gte"].includes(op);
 62 | }
 63 | 
 64 | export type BooleanFilterOperator = "is-checked" | "is-not-checked";
 65 | 
 66 | export function isBooleanFilterOperator(
 67 |   op: FilterOperator
 68 | ): op is BooleanFilterOperator {
 69 |   return ["is-checked", "is-not-checked"].includes(op);
 70 | }
 71 | 
 72 | export type DateFilterOperator =
 73 |   | "is-on"
 74 |   | "is-not-on"
 75 |   | "is-before"
 76 |   | "is-after"
 77 |   | "is-on-and-before"
 78 |   | "is-on-and-after";
 79 | 
 80 | export function isDateFilterOperator(
 81 |   op: FilterOperator
 82 | ): op is DateFilterOperator {
 83 |   return [
 84 |     "is-on",
 85 |     "is-not-on",
 86 |     "is-before",
 87 |     "is-after",
 88 |     "is-on-and-before",
 89 |     "is-on-and-after",
 90 |   ].includes(op);
 91 | }
 92 | 
 93 | export type ListFilterOperator =
 94 |   | "has-any-of"
 95 |   | "has-all-of"
 96 |   | "has-none-of"
 97 |   | "has-keyword";
 98 | 
 99 | export function isListFilterOperator(
100 |   op: FilterOperator
101 | ): op is ListFilterOperator {
102 |   return ["has-any-of", "has-all-of", "has-none-of", "has-keyword"].includes(
103 |     op
104 |   );
105 | }
106 | 
107 | export type FilterOperator =
108 |   | BaseFilterOperator
109 |   | StringFilterOperator
110 |   | NumberFilterOperator
111 |   | BooleanFilterOperator
112 |   | DateFilterOperator
113 |   | ListFilterOperator;
114 | 
115 | export type FilterOperatorType =
116 |   | "unary"
117 |   | "binary-text"
118 |   | "binary-number"
119 |   | "binary-date"
120 |   | "binary-multitext";
121 | 
122 | export const filterOperatorTypes: Record<FilterOperator, FilterOperatorType> = {
123 |   "is-empty": "unary",
124 |   "is-not-empty": "unary",
125 |   is: "binary-text",
126 |   "is-not": "binary-text",
127 |   contains: "binary-text",
128 |   "not-contains": "binary-text",
129 |   eq: "binary-number",
130 |   neq: "binary-number",
131 |   lt: "binary-number",
132 |   gt: "binary-number",
133 |   lte: "binary-number",
134 |   gte: "binary-number",
135 |   "is-checked": "unary",
136 |   "is-not-checked": "unary",
137 |   "is-on": "binary-date",
138 |   "is-not-on": "binary-date",
139 |   "is-before": "binary-date",
140 |   "is-after": "binary-date",
141 |   "is-on-and-before": "binary-date",
142 |   "is-on-and-after": "binary-date",
143 |   "has-any-of": "binary-multitext",
144 |   "has-all-of": "binary-multitext",
145 |   "has-none-of": "binary-multitext",
146 |   "has-keyword": "binary-text",
147 | };
148 | 
149 | export function getFilterOperatorType(
150 |   op: FilterOperator | undefined
151 | ): FilterOperatorType | undefined {
152 |   return op ? filterOperatorTypes[op] : undefined;
153 | }
154 | 
155 | export interface FilterCondition {
156 |   readonly field: string;
157 |   readonly operator: FilterOperator;
158 |   readonly value?: string;
159 |   readonly enabled: boolean;
160 | }
161 | 
162 | export type StringFieldConfig = {
163 |   options?: string[];
164 |   richText?: boolean;
165 | };
166 | 
167 | export type DateFieldConfig = {
168 |   time?: boolean;
169 | };
170 | 
171 | export type FieldConfig = StringFieldConfig & DateFieldConfig;
172 | 
173 | export type ShowCommand = {
174 |   readonly project: string;
175 |   readonly view?: string;
176 | };
177 | 
178 | export type LinkBehavior = "open-note" | "open-editor";
179 | 
180 | export type FirstDayOfWeek = "sunday" | "monday" | "default";
181 | 
182 | export type ProjectsPluginPreferences = {
183 |   readonly projectSizeLimit: number;
184 |   readonly frontmatter: {
185 |     readonly quoteStrings: "PLAIN" | "QUOTE_DOUBLE";
186 |   };
187 |   readonly locale: {
188 |     firstDayOfWeek: FirstDayOfWeek;
189 |   };
190 |   readonly commands: ShowCommand[];
191 |   readonly linkBehavior: LinkBehavior;
192 | };
193 | 
194 | export type UnsavedViewDefinition = Omit<
195 |   ViewDefinition,
196 |   "name" | "id" | "type"
197 | >;
198 | 
199 | export const DEFAULT_VIEW: UnsavedViewDefinition = {
200 |   config: {},
201 |   filter: { conjunction: "and", conditions: [] },
202 |   colors: { conditions: [] },
203 |   sort: { criteria: [] },
204 | };
205 | 


--------------------------------------------------------------------------------
/src/settings/settings.test.ts:
--------------------------------------------------------------------------------
  1 | import { describe, expect, it } from "@jest/globals";
  2 | import { migrate } from "./settings";
  3 | import type * as v1 from "./v1/settings";
  4 | import type * as v2 from "./v2/settings";
  5 | import type * as base from "./base/settings";
  6 | 
  7 | describe("migrate from v1 to v2", () => {
  8 |   it("migrates default settings", () => {
  9 |     expect(migrate(v1demo)).toStrictEqual(v2demo);
 10 |   });
 11 | });
 12 | 
 13 | const v1demo: v1.ProjectsPluginSettings<
 14 |   v1.ProjectDefinition<base.ViewDefinition>
 15 | > = {
 16 |   version: 1,
 17 |   projects: [
 18 |     {
 19 |       path: "Projects - Demo Project",
 20 |       recursive: false,
 21 |       fieldConfig: {},
 22 |       defaultName: "",
 23 |       templates: [],
 24 |       dataview: false,
 25 |       query: "",
 26 |       excludedNotes: [],
 27 |       isDefault: false,
 28 |       name: "Demo project",
 29 |       id: "861e5eaf-162e-4c4b-be1e-7556e2a8c889",
 30 |       views: [
 31 |         {
 32 |           config: {
 33 |             fieldConfig: {
 34 |               name: {
 35 |                 width: 360,
 36 |               },
 37 |               path: {
 38 |                 hide: true,
 39 |               },
 40 |             },
 41 |           },
 42 |           filter: {
 43 |             conditions: [],
 44 |           },
 45 |           colors: {
 46 |             conditions: [],
 47 |           },
 48 |           sort: {
 49 |             criteria: [],
 50 |           },
 51 |           name: "Table",
 52 |           id: "0a53aff7-804d-466d-977d-444b9ca6d13a",
 53 |           type: "table",
 54 |         },
 55 |         {
 56 |           config: {
 57 |             groupByField: "status",
 58 |             priorityField: "weight",
 59 |           },
 60 |           filter: {
 61 |             conditions: [],
 62 |           },
 63 |           colors: {
 64 |             conditions: [],
 65 |           },
 66 |           sort: {
 67 |             criteria: [],
 68 |           },
 69 |           name: "Board",
 70 |           id: "d62f729f-3148-4a5b-93e2-781ff5be7542",
 71 |           type: "board",
 72 |         },
 73 |         {
 74 |           config: {
 75 |             interval: "month",
 76 |             dateField: "due",
 77 |             checkField: "published",
 78 |           },
 79 |           filter: {
 80 |             conditions: [],
 81 |           },
 82 |           colors: {
 83 |             conditions: [],
 84 |           },
 85 |           sort: {
 86 |             criteria: [],
 87 |           },
 88 |           name: "Calendar",
 89 |           id: "1f1b74a7-ab7b-4fb5-8a18-0cb18f997aa7",
 90 |           type: "calendar",
 91 |         },
 92 |         {
 93 |           config: {
 94 |             coverField: "image",
 95 |           },
 96 |           filter: {
 97 |             conditions: [],
 98 |           },
 99 |           colors: {
100 |             conditions: [],
101 |           },
102 |           sort: {
103 |             criteria: [],
104 |           },
105 |           name: "Gallery",
106 |           id: "64713d5a-683d-4f19-9cf9-d90dde311fc8",
107 |           type: "gallery",
108 |         },
109 |       ],
110 |     },
111 |   ],
112 |   preferences: {
113 |     frontmatter: {
114 |       quoteStrings: "PLAIN",
115 |     },
116 |     locale: {
117 |       firstDayOfWeek: "default",
118 |     },
119 |     projectSizeLimit: 1000,
120 |     commands: [],
121 |     linkBehavior: "open-editor",
122 |   },
123 | };
124 | 
125 | const v2demo: v2.ProjectsPluginSettings<
126 |   v2.ProjectDefinition<base.ViewDefinition>,
127 |   base.ProjectsPluginPreferences
128 | > = {
129 |   version: 2,
130 |   projects: [
131 |     {
132 |       fieldConfig: {},
133 |       defaultName: "",
134 |       templates: [],
135 |       excludedNotes: [],
136 |       isDefault: false,
137 |       dataSource: {
138 |         kind: "folder",
139 |         config: {
140 |           path: "Projects - Demo Project",
141 |           recursive: false,
142 |         },
143 |       },
144 |       newNotesFolder: "",
145 |       views: [
146 |         {
147 |           config: {
148 |             fieldConfig: {
149 |               name: {
150 |                 width: 360,
151 |               },
152 |               path: {
153 |                 hide: true,
154 |               },
155 |             },
156 |           },
157 |           filter: {
158 |             conditions: [],
159 |           },
160 |           colors: {
161 |             conditions: [],
162 |           },
163 |           sort: {
164 |             criteria: [],
165 |           },
166 |           name: "Table",
167 |           id: "0a53aff7-804d-466d-977d-444b9ca6d13a",
168 |           type: "table",
169 |         },
170 |         {
171 |           config: {
172 |             groupByField: "status",
173 |             priorityField: "weight",
174 |           },
175 |           filter: {
176 |             conditions: [],
177 |           },
178 |           colors: {
179 |             conditions: [],
180 |           },
181 |           sort: {
182 |             criteria: [],
183 |           },
184 |           name: "Board",
185 |           id: "d62f729f-3148-4a5b-93e2-781ff5be7542",
186 |           type: "board",
187 |         },
188 |         {
189 |           config: {
190 |             interval: "month",
191 |             dateField: "due",
192 |             checkField: "published",
193 |           },
194 |           filter: {
195 |             conditions: [],
196 |           },
197 |           colors: {
198 |             conditions: [],
199 |           },
200 |           sort: {
201 |             criteria: [],
202 |           },
203 |           name: "Calendar",
204 |           id: "1f1b74a7-ab7b-4fb5-8a18-0cb18f997aa7",
205 |           type: "calendar",
206 |         },
207 |         {
208 |           config: {
209 |             coverField: "image",
210 |           },
211 |           filter: {
212 |             conditions: [],
213 |           },
214 |           colors: {
215 |             conditions: [],
216 |           },
217 |           sort: {
218 |             criteria: [],
219 |           },
220 |           name: "Gallery",
221 |           id: "64713d5a-683d-4f19-9cf9-d90dde311fc8",
222 |           type: "gallery",
223 |         },
224 |       ],
225 |       name: "Demo project",
226 |       id: "861e5eaf-162e-4c4b-be1e-7556e2a8c889",
227 |     },
228 |   ],
229 |   archives: [],
230 |   preferences: {
231 |     projectSizeLimit: 1000,
232 |     frontmatter: {
233 |       quoteStrings: "PLAIN",
234 |     },
235 |     locale: {
236 |       firstDayOfWeek: "default",
237 |     },
238 |     commands: [],
239 |     linkBehavior: "open-editor",
240 |   },
241 | };
242 | 


--------------------------------------------------------------------------------
/src/settings/settings.ts:
--------------------------------------------------------------------------------
  1 | import { either } from "fp-ts";
  2 | 
  3 | import * as base from "./base/settings";
  4 | import * as v1 from "./v1/settings";
  5 | import * as v2 from "./v2/settings";
  6 | 
  7 | export * from "./base/settings";
  8 | 
  9 | // These types are backwards-compatible and does not yet need versioning.
 10 | export type ViewDefinition = base.ViewDefinition;
 11 | export type ProjectPreferences = base.ProjectsPluginPreferences;
 12 | 
 13 | // This defines the latest version of the project definition.
 14 | export type ProjectDefinition = v2.ProjectDefinition<ViewDefinition>;
 15 | 
 16 | // Defines the latest version of the plugin settings.
 17 | export type LatestProjectsPluginSettings = v2.ProjectsPluginSettings<
 18 |   ProjectDefinition,
 19 |   ProjectPreferences
 20 | >;
 21 | 
 22 | export const DEFAULT_SETTINGS = v2.DEFAULT_SETTINGS;
 23 | export const DEFAULT_PROJECT = v2.DEFAULT_PROJECT;
 24 | export const DEFAULT_VIEW = base.DEFAULT_VIEW;
 25 | 
 26 | /**
 27 |  * migrateSettings accepts the value from Plugin.loadData() and returns the most
 28 |  * recent settings. If needed, it applies any necessary migrations.
 29 |  */
 30 | export function migrateSettings(
 31 |   settings: any
 32 | ): either.Either<Error, LatestProjectsPluginSettings> {
 33 |   if (!settings) {
 34 |     return either.right(Object.assign({}, v2.DEFAULT_SETTINGS));
 35 |   }
 36 | 
 37 |   if ("version" in settings && typeof settings.version === "number") {
 38 |     if (settings.version === 1) {
 39 |       return either.right(migrate(v1.resolve(settings)));
 40 |     } else if (settings.version === 2) {
 41 |       return either.right(v2.resolve(settings));
 42 |     } else {
 43 |       return either.left(new Error("Unknown settings version"));
 44 |     }
 45 |   }
 46 | 
 47 |   return either.left(new Error("Missing settings version"));
 48 | }
 49 | 
 50 | export function migrate(
 51 |   v1settings: v1.ProjectsPluginSettings<
 52 |     v1.ProjectDefinition<base.ViewDefinition>
 53 |   >
 54 | ): LatestProjectsPluginSettings {
 55 |   return {
 56 |     version: 2,
 57 |     projects: v1settings.projects.map(migrateProject),
 58 |     archives: [],
 59 |     preferences: v1settings.preferences,
 60 |   };
 61 | }
 62 | 
 63 | function migrateProject(
 64 |   v1project: v1.ProjectDefinition<base.ViewDefinition>
 65 | ): v2.ProjectDefinition<base.ViewDefinition> {
 66 |   const {
 67 |     name,
 68 |     id,
 69 |     fieldConfig,
 70 |     templates,
 71 |     defaultName,
 72 |     excludedNotes,
 73 |     isDefault,
 74 |     views,
 75 |   } = v1project;
 76 | 
 77 |   const common = {
 78 |     name,
 79 |     id,
 80 |     fieldConfig,
 81 |     defaultName,
 82 |     templates,
 83 |     excludedNotes,
 84 |     isDefault,
 85 |     views,
 86 |   };
 87 | 
 88 |   return {
 89 |     ...common,
 90 |     newNotesFolder: "",
 91 |     dataSource: migrateDataSource(v1project),
 92 |   };
 93 | }
 94 | 
 95 | function migrateDataSource(
 96 |   project: v1.ProjectDefinition<base.ViewDefinition>
 97 | ): v2.DataSource {
 98 |   if (project.dataview) {
 99 |     return {
100 |       kind: "dataview",
101 |       config: {
102 |         query: project.query,
103 |       },
104 |     };
105 |   }
106 | 
107 |   return {
108 |     kind: "folder",
109 |     config: {
110 |       path: project.path,
111 |       recursive: project.recursive,
112 |     },
113 |   };
114 | }
115 | 


--------------------------------------------------------------------------------
/src/settings/v1/settings.test.ts:
--------------------------------------------------------------------------------
 1 | import { describe, expect, it } from "@jest/globals";
 2 | import { resolve } from "./settings";
 3 | 
 4 | describe("resolve v2", () => {
 5 |   it("resolves minimum", () => {
 6 |     const got = resolve({ version: 1 });
 7 | 
 8 |     expect(got).toStrictEqual({
 9 |       version: 1,
10 |       projects: [],
11 |       preferences: {
12 |         frontmatter: {
13 |           quoteStrings: "PLAIN",
14 |         },
15 |         locale: {
16 |           firstDayOfWeek: "default",
17 |         },
18 |         projectSizeLimit: 1000,
19 |         commands: [],
20 |         linkBehavior: "open-editor",
21 |       },
22 |     });
23 |   });
24 | 
25 |   it("resolves an empty project with defaults", () => {
26 |     const got = resolve({ version: 1, projects: [{ name: "Foo", id: "foo" }] });
27 | 
28 |     expect(got).toStrictEqual({
29 |       version: 1,
30 |       projects: [
31 |         {
32 |           name: "Foo",
33 |           id: "foo",
34 |           fieldConfig: {},
35 |           defaultName: "",
36 |           templates: [],
37 |           excludedNotes: [],
38 |           isDefault: false,
39 |           views: [],
40 |           dataview: false,
41 |           path: "",
42 |           query: "",
43 |           recursive: false,
44 |         },
45 |       ],
46 |       preferences: {
47 |         frontmatter: {
48 |           quoteStrings: "PLAIN",
49 |         },
50 |         locale: {
51 |           firstDayOfWeek: "default",
52 |         },
53 |         projectSizeLimit: 1000,
54 |         commands: [],
55 |         linkBehavior: "open-editor",
56 |       },
57 |     });
58 |   });
59 | });
60 | 


--------------------------------------------------------------------------------
/src/settings/v1/settings.ts:
--------------------------------------------------------------------------------
  1 | import {
  2 |   DEFAULT_VIEW,
  3 |   type FieldConfig,
  4 |   type ProjectId,
  5 |   type ProjectsPluginPreferences,
  6 |   type ViewDefinition,
  7 | } from "../base/settings";
  8 | 
  9 | export type ProjectDefinition<ViewDefinition> = {
 10 |   readonly name: string;
 11 |   readonly id: ProjectId;
 12 |   readonly path: string;
 13 |   readonly recursive: boolean;
 14 |   readonly fieldConfig: { [field: string]: FieldConfig };
 15 |   readonly views: ViewDefinition[];
 16 |   readonly defaultName: string;
 17 |   readonly templates: string[];
 18 |   readonly dataview: boolean;
 19 |   readonly query: string;
 20 |   readonly excludedNotes: string[];
 21 |   readonly isDefault: boolean;
 22 | };
 23 | 
 24 | export type ProjectsPluginSettings<ProjectDefinition> = {
 25 |   readonly version: 1;
 26 |   readonly lastProjectId?: string | undefined;
 27 |   readonly lastViewId?: string | undefined;
 28 |   readonly projects: ProjectDefinition[];
 29 |   readonly preferences: ProjectsPluginPreferences;
 30 | };
 31 | 
 32 | export const DEFAULT_SETTINGS: ProjectsPluginSettings<
 33 |   ProjectDefinition<ViewDefinition>
 34 | > = {
 35 |   version: 1,
 36 |   projects: [],
 37 |   preferences: {
 38 |     projectSizeLimit: 1000,
 39 |     frontmatter: {
 40 |       quoteStrings: "PLAIN",
 41 |     },
 42 |     locale: {
 43 |       firstDayOfWeek: "default",
 44 |     },
 45 |     commands: [],
 46 |     linkBehavior: "open-editor",
 47 |   },
 48 | };
 49 | 
 50 | export type UnsavedProjectDefinition = Omit<
 51 |   ProjectDefinition<ViewDefinition>,
 52 |   "name" | "id" | "views"
 53 | >;
 54 | 
 55 | export const DEFAULT_PROJECT: UnsavedProjectDefinition = {
 56 |   path: "",
 57 |   recursive: false,
 58 |   fieldConfig: {},
 59 |   defaultName: "",
 60 |   templates: [],
 61 |   dataview: false,
 62 |   query: "",
 63 |   excludedNotes: [],
 64 |   isDefault: false,
 65 | };
 66 | 
 67 | export type UnresolvedSettings = {
 68 |   readonly version: 1;
 69 | } & Partial<
 70 |   ProjectsPluginSettings<Partial<ProjectDefinition<Partial<ViewDefinition>>>>
 71 | >;
 72 | 
 73 | export function resolve(
 74 |   unresolved: UnresolvedSettings
 75 | ): ProjectsPluginSettings<ProjectDefinition<ViewDefinition>> {
 76 |   return {
 77 |     ...DEFAULT_SETTINGS,
 78 |     ...unresolved,
 79 |     projects: unresolved.projects?.map(resolveProject) ?? [],
 80 |   };
 81 | }
 82 | 
 83 | function resolveProject(
 84 |   unresolved: Partial<ProjectDefinition<Partial<ViewDefinition>>>
 85 | ): ProjectDefinition<ViewDefinition> {
 86 |   const { name, id } = unresolved;
 87 | 
 88 |   if (name && id) {
 89 |     return {
 90 |       ...DEFAULT_PROJECT,
 91 |       ...unresolved,
 92 |       name,
 93 |       id,
 94 |       views: unresolved.views?.map(resolveView) ?? [],
 95 |     };
 96 |   }
 97 | 
 98 |   throw new Error("Invalid project definition");
 99 | }
100 | 
101 | function resolveView(unresolved: Partial<ViewDefinition>): ViewDefinition {
102 |   const { name, id, type } = unresolved;
103 | 
104 |   if (name && id && type) {
105 |     return {
106 |       ...DEFAULT_VIEW,
107 |       ...unresolved,
108 |       name,
109 |       id,
110 |       type,
111 |     };
112 |   }
113 | 
114 |   throw new Error("Invalid view definition");
115 | }
116 | 


--------------------------------------------------------------------------------
/src/settings/v2/settings.test.ts:
--------------------------------------------------------------------------------
  1 | import { describe, expect, it } from "@jest/globals";
  2 | import { resolve } from "./settings";
  3 | import type { ShowCommand } from "../settings";
  4 | 
  5 | describe("resolve v2", () => {
  6 |   it("resolves minimum", () => {
  7 |     const got = resolve({ version: 2 });
  8 | 
  9 |     expect(got).toStrictEqual({
 10 |       version: 2,
 11 |       projects: [],
 12 |       archives: [],
 13 |       preferences: {
 14 |         frontmatter: {
 15 |           quoteStrings: "PLAIN",
 16 |         },
 17 |         locale: {
 18 |           firstDayOfWeek: "default",
 19 |         },
 20 |         projectSizeLimit: 1000,
 21 |         commands: [],
 22 |         linkBehavior: "open-editor",
 23 |       },
 24 |     });
 25 |   });
 26 | 
 27 |   it("resolves an empty project with defaults", () => {
 28 |     const got = resolve({ version: 2, projects: [{ name: "Foo", id: "foo" }] });
 29 | 
 30 |     expect(got).toStrictEqual({
 31 |       version: 2,
 32 |       projects: [
 33 |         {
 34 |           name: "Foo",
 35 |           id: "foo",
 36 |           fieldConfig: {},
 37 |           defaultName: "",
 38 |           templates: [],
 39 |           excludedNotes: [],
 40 |           isDefault: false,
 41 |           dataSource: {
 42 |             kind: "folder",
 43 |             config: {
 44 |               path: "",
 45 |               recursive: false,
 46 |             },
 47 |           },
 48 |           newNotesFolder: "",
 49 |           views: [],
 50 |         },
 51 |       ],
 52 |       archives: [],
 53 |       preferences: {
 54 |         frontmatter: {
 55 |           quoteStrings: "PLAIN",
 56 |         },
 57 |         locale: {
 58 |           firstDayOfWeek: "default",
 59 |         },
 60 |         projectSizeLimit: 1000,
 61 |         commands: [],
 62 |         linkBehavior: "open-editor",
 63 |       },
 64 |     });
 65 |   });
 66 | });
 67 | 
 68 | describe("clean up commands", () => {
 69 |   it("uniquify commands and remove orphan ones", () => {
 70 |     const validCommands: ShowCommand[] = [
 71 |       { project: "sample-project" },
 72 |       { project: "sample-project", view: "project-view" },
 73 |       { project: "sample-archive" },
 74 |       { project: "sample-archive", view: "archive-view" },
 75 |     ];
 76 |     const invalidCommands: ShowCommand[] = [
 77 |       { project: "unknown-project" },
 78 |       { project: "sample-project", view: "unknown-view" },
 79 |       { project: "unknown-archive" },
 80 |       { project: "sample-archive", view: "unknown-view" },
 81 |     ];
 82 |     const duplicatedCommands: ShowCommand[] = [
 83 |       { project: "sample-project" },
 84 |       { project: "sample-archive", view: "archive-view" },
 85 |     ];
 86 | 
 87 |     const got = resolve({
 88 |       version: 2,
 89 |       projects: [
 90 |         {
 91 |           name: "Sample Project",
 92 |           id: "sample-project",
 93 |           fieldConfig: {},
 94 |           defaultName: "",
 95 |           templates: [],
 96 |           excludedNotes: [],
 97 |           isDefault: false,
 98 |           dataSource: {
 99 |             kind: "folder",
100 |             config: {
101 |               path: "",
102 |               recursive: false,
103 |             },
104 |           },
105 |           newNotesFolder: "",
106 |           views: [
107 |             {
108 |               name: "Table",
109 |               id: "project-view",
110 |               type: "table",
111 |               config: {},
112 |               filter: { conditions: [] },
113 |               colors: { conditions: [] },
114 |               sort: { criteria: [] },
115 |             },
116 |           ],
117 |         },
118 |       ],
119 |       archives: [
120 |         {
121 |           name: "Archived Project",
122 |           id: "sample-archive",
123 |           fieldConfig: {},
124 |           defaultName: "",
125 |           templates: [],
126 |           excludedNotes: [],
127 |           isDefault: false,
128 |           dataSource: {
129 |             kind: "folder",
130 |             config: {
131 |               path: "",
132 |               recursive: false,
133 |             },
134 |           },
135 |           newNotesFolder: "",
136 |           views: [
137 |             {
138 |               name: "Table",
139 |               id: "archive-view",
140 |               type: "table",
141 |               config: {},
142 |               filter: { conditions: [] },
143 |               colors: { conditions: [] },
144 |               sort: { criteria: [] },
145 |             },
146 |           ],
147 |         },
148 |       ],
149 |       preferences: {
150 |         projectSizeLimit: 1000,
151 |         frontmatter: {
152 |           quoteStrings: "PLAIN",
153 |         },
154 |         locale: {
155 |           firstDayOfWeek: "default",
156 |         },
157 |         commands: [...validCommands, ...invalidCommands, ...duplicatedCommands],
158 |         linkBehavior: "open-editor",
159 |       },
160 |     });
161 | 
162 |     expect(got).toStrictEqual({
163 |       ...got,
164 |       preferences: {
165 |         projectSizeLimit: 1000,
166 |         frontmatter: {
167 |           quoteStrings: "PLAIN",
168 |         },
169 |         locale: {
170 |           firstDayOfWeek: "default",
171 |         },
172 | 
173 |         commands: validCommands,
174 |         linkBehavior: "open-editor",
175 |       },
176 |     });
177 |   });
178 | });
179 | 


--------------------------------------------------------------------------------
/src/settings/v2/settings.ts:
--------------------------------------------------------------------------------
  1 | import type {
  2 |   FieldConfig,
  3 |   ProjectId,
  4 |   ProjectsPluginPreferences,
  5 |   ShowCommand,
  6 |   ViewDefinition,
  7 | } from "../base/settings";
  8 | import { DEFAULT_VIEW } from "../base/settings";
  9 | 
 10 | export type ProjectDefinition<ViewDefinition> = {
 11 |   readonly name: string;
 12 |   readonly id: ProjectId;
 13 | 
 14 |   readonly fieldConfig: { [field: string]: FieldConfig };
 15 |   readonly views: ViewDefinition[];
 16 |   readonly defaultName: string;
 17 |   readonly templates: string[];
 18 |   readonly excludedNotes: string[];
 19 |   readonly isDefault: boolean;
 20 |   readonly dataSource: DataSource;
 21 |   readonly newNotesFolder: string;
 22 | };
 23 | 
 24 | export type DataSource = FolderDataSource | TagDataSource | DataviewDataSource;
 25 | 
 26 | export type FolderDataSource = {
 27 |   readonly kind: "folder";
 28 |   readonly config: {
 29 |     readonly path: string;
 30 |     readonly recursive: boolean;
 31 |   };
 32 | };
 33 | 
 34 | export type TagDataSource = {
 35 |   readonly kind: "tag";
 36 |   readonly config: {
 37 |     readonly tag: string;
 38 |     readonly hierarchy: boolean;
 39 |   };
 40 | };
 41 | 
 42 | export type DataviewDataSource = {
 43 |   readonly kind: "dataview";
 44 |   readonly config: {
 45 |     readonly query: string;
 46 |   };
 47 | };
 48 | 
 49 | export type UnsavedProjectDefinition = Omit<
 50 |   ProjectDefinition<ViewDefinition>,
 51 |   "name" | "id"
 52 | >;
 53 | 
 54 | export type ProjectsPluginSettings<T, P> = {
 55 |   readonly version: 2;
 56 |   readonly projects: T[];
 57 |   readonly archives: T[];
 58 |   readonly preferences: P;
 59 | };
 60 | 
 61 | export const DEFAULT_PROJECT: UnsavedProjectDefinition = {
 62 |   fieldConfig: {},
 63 |   defaultName: "",
 64 |   templates: [],
 65 |   excludedNotes: [],
 66 |   isDefault: false,
 67 |   dataSource: {
 68 |     kind: "folder",
 69 |     config: {
 70 |       path: "",
 71 |       recursive: false,
 72 |     },
 73 |   },
 74 |   newNotesFolder: "",
 75 |   views: [],
 76 | };
 77 | 
 78 | export const DEFAULT_SETTINGS: ProjectsPluginSettings<
 79 |   ProjectDefinition<ViewDefinition>,
 80 |   ProjectsPluginPreferences
 81 | > = {
 82 |   version: 2,
 83 |   projects: [],
 84 |   archives: [],
 85 |   preferences: {
 86 |     projectSizeLimit: 1000,
 87 |     frontmatter: {
 88 |       quoteStrings: "PLAIN",
 89 |     },
 90 |     locale: {
 91 |       firstDayOfWeek: "default",
 92 |     },
 93 |     commands: [],
 94 |     linkBehavior: "open-editor",
 95 |   },
 96 | };
 97 | 
 98 | export type UnresolvedSettings = {
 99 |   readonly version: 2;
100 | } & Partial<
101 |   ProjectsPluginSettings<
102 |     Partial<ProjectDefinition<Partial<ViewDefinition>>>,
103 |     Partial<ProjectsPluginPreferences>
104 |   >
105 | >;
106 | 
107 | export function resolve(
108 |   unresolved: UnresolvedSettings
109 | ): ProjectsPluginSettings<
110 |   ProjectDefinition<ViewDefinition>,
111 |   ProjectsPluginPreferences
112 | > {
113 |   const projects = unresolved.projects?.map(resolveProject) ?? [];
114 |   const archives = unresolved.archives?.map(resolveProject) ?? [];
115 |   const preferences = resolvePreferences(unresolved.preferences ?? {});
116 | 
117 |   const commands = cleanUpCommands(preferences.commands, [
118 |     ...projects,
119 |     ...archives,
120 |   ]);
121 | 
122 |   return {
123 |     version: 2,
124 |     projects,
125 |     archives,
126 |     preferences: {
127 |       ...preferences,
128 |       commands,
129 |     },
130 |   };
131 | }
132 | 
133 | function resolveProject(
134 |   unresolved: Partial<ProjectDefinition<Partial<ViewDefinition>>>
135 | ): ProjectDefinition<ViewDefinition> {
136 |   const { name, id } = unresolved;
137 | 
138 |   if (name && id) {
139 |     return {
140 |       ...DEFAULT_PROJECT,
141 |       ...unresolved,
142 |       name,
143 |       id,
144 |       views: unresolved.views?.map(resolveView) ?? [],
145 |     };
146 |   }
147 | 
148 |   throw new Error("Invalid project definition");
149 | }
150 | 
151 | function resolveView(unresolved: Partial<ViewDefinition>): ViewDefinition {
152 |   const { name, id, type } = unresolved;
153 | 
154 |   if (name && id && type) {
155 |     return {
156 |       ...DEFAULT_VIEW,
157 |       ...unresolved,
158 |       name,
159 |       id,
160 |       type,
161 |     };
162 |   }
163 | 
164 |   throw new Error("Invalid view definition");
165 | }
166 | 
167 | export const DEFAULT_PREFERENCES: ProjectsPluginPreferences = {
168 |   projectSizeLimit: 1000,
169 |   frontmatter: {
170 |     quoteStrings: "PLAIN",
171 |   },
172 |   locale: {
173 |     firstDayOfWeek: "default",
174 |   },
175 |   commands: [],
176 |   linkBehavior: "open-editor",
177 | };
178 | 
179 | export function resolvePreferences(
180 |   unresolved: Partial<ProjectsPluginPreferences>
181 | ): ProjectsPluginPreferences {
182 |   return {
183 |     ...DEFAULT_PREFERENCES,
184 |     ...unresolved,
185 |   };
186 | }
187 | 
188 | const cleanUpCommands = (
189 |   commands: ShowCommand[],
190 |   allProjects: ProjectDefinition<ViewDefinition>[]
191 | ): ShowCommand[] => {
192 |   const uniquified = removeDuplicateCommands(commands);
193 |   return removeOrphanCommands(allProjects, uniquified);
194 | };
195 | 
196 | const removeDuplicateCommands = (commands: ShowCommand[]): ShowCommand[] =>
197 |   commands.filter(
198 |     (cmd, index, self) =>
199 |       index ===
200 |       self.findIndex(
201 |         (curr) => curr.project === cmd.project && curr.view === cmd.view
202 |       )
203 |   );
204 | 
205 | const removeOrphanCommands = (
206 |   allProjects: ProjectDefinition<ViewDefinition>[],
207 |   commands: ShowCommand[]
208 | ): ShowCommand[] =>
209 |   commands.filter((cmd) =>
210 |     allProjects.some(
211 |       (project) =>
212 |         project.id === cmd.project &&
213 |         (!cmd.view || project.views.some((view) => view.id === cmd.view))
214 |     )
215 |   );
216 | 


--------------------------------------------------------------------------------
/src/ui/app/App.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { onMount } from "svelte";
  3 | 
  4 |   import { createProject } from "src/lib/dataApi";
  5 |   import { api } from "src/lib/stores/api";
  6 |   import { i18n } from "src/lib/stores/i18n";
  7 |   import { app } from "src/lib/stores/obsidian";
  8 |   import { settings } from "src/lib/stores/settings";
  9 |   import { ViewApi } from "src/lib/viewApi";
 10 |   import { CreateProjectModal } from "src/ui/modals/createProjectModal";
 11 | 
 12 |   import Toolbar from "./toolbar/Toolbar.svelte";
 13 |   import { createDemoProject } from "./onboarding/demoProject";
 14 |   import { OnboardingModal } from "./onboarding/onboardingModal";
 15 |   import View from "./View.svelte";
 16 |   import DataFrameProvider from "./DataFrameProvider.svelte";
 17 |   import type {
 18 |     ProjectId,
 19 |     ViewDefinition,
 20 |     ViewId,
 21 |   } from "src/settings/settings";
 22 | 
 23 |   export let projectId: ProjectId | undefined;
 24 |   export let viewId: ViewId | undefined;
 25 | 
 26 |   $: ({ projects } = $settings);
 27 | 
 28 |   $: defaultProject = projects.find((project) => project.isDefault);
 29 | 
 30 |   $: project =
 31 |     projects.find((project) => projectId === project.id) ||
 32 |     defaultProject ||
 33 |     projects[0];
 34 | 
 35 |   $: views = project?.views || [];
 36 |   $: views, viewId, setView();
 37 | 
 38 |   let view: ViewDefinition | undefined;
 39 |   const setView = () => {
 40 |     const t = views.find((view) => viewId === view.id);
 41 |     if (!t) {
 42 |       viewId = views[0]?.id;
 43 |       view = views[0];
 44 |     } else {
 45 |       view = t;
 46 |     }
 47 |   };
 48 | 
 49 |   onMount(() => {
 50 |     if (!projects.length) {
 51 |       new OnboardingModal(
 52 |         $app,
 53 |         // Create from scratch.
 54 |         () => {
 55 |           new CreateProjectModal(
 56 |             $app,
 57 |             $i18n.t("modals.project.create.title"),
 58 |             $i18n.t("modals.project.create.cta"),
 59 |             settings.addProject,
 60 |             createProject()
 61 |           ).open();
 62 |         },
 63 |         // Try demo project.
 64 |         () => {
 65 |           createDemoProject($app.vault);
 66 |         }
 67 |       ).open();
 68 |     }
 69 |   });
 70 | </script>
 71 | 
 72 | <!--
 73 | 	@component
 74 | 
 75 | 	App is the main application component and coordinates between the View and
 76 | 	the Toolbar.
 77 | -->
 78 | <div class="projects-container">
 79 |   <Toolbar
 80 |     {projects}
 81 |     projectId={project?.id}
 82 |     onProjectChange={(id) => (projectId = id)}
 83 |     viewId={view?.id}
 84 |     onViewChange={(id) => (viewId = id)}
 85 |   />
 86 | 
 87 |   <div class="projects-main">
 88 |     {#if project}
 89 |       <DataFrameProvider {project} let:frame let:source>
 90 |         {#if project && view && source}
 91 |           <View
 92 |             {project}
 93 |             {view}
 94 |             readonly={source.readonly()}
 95 |             api={new ViewApi(source, $api)}
 96 |             onConfigChange={settings.updateViewConfig}
 97 |             {frame}
 98 |           />
 99 |         {/if}
100 |         <slot {project} {view} {source} {frame} />
101 |       </DataFrameProvider>
102 |     {/if}
103 |   </div>
104 | </div>
105 | 
106 | <style>
107 |   .projects-container {
108 |     display: flex;
109 |     flex-direction: column;
110 |     height: 100%;
111 |   }
112 | 
113 |   .projects-main {
114 |     flex: 1;
115 |     display: flex;
116 |     flex-direction: column;
117 |     min-height: 0;
118 |   }
119 | </style>
120 | 


--------------------------------------------------------------------------------
/src/ui/app/DataFrameProvider.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { getAPI, isPluginEnabled, type DataviewApi } from "obsidian-dataview";
  3 |   import { Callout, Loading, Typography } from "obsidian-svelte";
  4 |   import type { DataSource } from "../../lib/datasources";
  5 |   import { FolderDataSource } from "src/lib/datasources/folder/datasource";
  6 |   import { TagDataSource } from "src/lib/datasources/tag/datasource";
  7 |   import { dataFrame, dataSource } from "src/lib/stores/dataframe";
  8 |   import { fileSystem } from "src/lib/stores/fileSystem";
  9 |   import { i18n } from "src/lib/stores/i18n";
 10 |   import { app } from "src/lib/stores/obsidian";
 11 |   import { settings } from "src/lib/stores/settings";
 12 |   import type { ProjectDefinition } from "src/settings/settings";
 13 |   import { get } from "svelte/store";
 14 |   import {
 15 |     DataviewDataSource,
 16 |     UnsupportedCapability,
 17 |   } from "src/lib/datasources/dataview/datasource";
 18 | 
 19 |   export let project: ProjectDefinition;
 20 | 
 21 |   // These shenanigans prevent queries to run when any of the views change.
 22 |   // Even if an object didn't change, reassigning it still causes an update.
 23 |   $: disassembedProject = disassemble(project);
 24 | 
 25 |   // Strings are different though. Even if you reassign a string value, it won't
 26 |   // trigger an update if it's the same string.
 27 |   $: projectAsText = JSON.stringify(disassembedProject);
 28 | 
 29 |   // This only runs if the JSON representation of a project (without views) has
 30 |   // changed.
 31 |   $: reassembledProject = reassemble(projectAsText);
 32 | 
 33 |   // Setting a new data source causes the query to run.
 34 |   $: dataSource.set(resolveDataSource(reassembledProject));
 35 | 
 36 |   function disassemble(
 37 |     project: ProjectDefinition
 38 |   ): Omit<ProjectDefinition, "views"> {
 39 |     const { views: _, ...foo } = project;
 40 |     return foo;
 41 |   }
 42 | 
 43 |   function reassemble(text: string): ProjectDefinition {
 44 |     const res: Omit<ProjectDefinition, "views"> = JSON.parse(text);
 45 |     return { ...res, views: [] };
 46 |   }
 47 | 
 48 |   let querying: Promise<void>;
 49 | 
 50 |   $: {
 51 |     // Perform a full refresh of the data frame whenever the data source
 52 |     // changes.
 53 |     querying = (async () => {
 54 |       if ($dataSource) {
 55 |         dataFrame.set(await $dataSource.queryAll());
 56 |       }
 57 |     })();
 58 |   }
 59 | 
 60 |   function getDataviewAPI(): DataviewApi | undefined {
 61 |     if (isPluginEnabled($app)) {
 62 |       return getAPI($app);
 63 |     } else {
 64 |       throw new UnsupportedCapability(
 65 |         get(i18n).t("errors.missingDataview.message")
 66 |       );
 67 |     }
 68 |   }
 69 | 
 70 |   // resolveDataSource selects the data source to use based on the project
 71 |   // settings.
 72 |   function resolveDataSource(project: ProjectDefinition): DataSource {
 73 |     switch (project.dataSource.kind) {
 74 |       case "dataview":
 75 |         const dataviewApi = getDataviewAPI();
 76 | 
 77 |         if (!dataviewApi) {
 78 |           throw new Error(
 79 |             "Couldn't connect to Dataview. Is the Dataview plugin enabled?"
 80 |           );
 81 |         }
 82 | 
 83 |         return new DataviewDataSource(
 84 |           $fileSystem,
 85 |           project,
 86 |           $settings.preferences,
 87 |           dataviewApi
 88 |         );
 89 |       case "tag":
 90 |         return new TagDataSource($fileSystem, project, $settings.preferences);
 91 |       default:
 92 |         return new FolderDataSource(
 93 |           $fileSystem,
 94 |           project,
 95 |           $settings.preferences
 96 |         );
 97 |     }
 98 |   }
 99 | 
100 |   const wait = () => new Promise((res) => setTimeout(res, 500));
101 | </script>
102 | 
103 | {#await querying}
104 |   {#await wait() then}
105 |     <Loading />
106 |   {/await}
107 | {:then}
108 |   <slot frame={$dataFrame} source={$dataSource} />
109 | {:catch error}
110 |   <div style="padding: var(--size-4-3)">
111 |     <Callout title={error.name} icon="zap" variant="danger">
112 |       <Typography variant="body">{error.message}</Typography>
113 |     </Callout>
114 |   </div>
115 | {/await}
116 | 


--------------------------------------------------------------------------------
/src/ui/app/View.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import type { DataFrame, DataRecord } from "src/lib/dataframe/dataframe";
  3 |   import { settings } from "src/lib/stores/settings";
  4 |   import type { ViewApi } from "src/lib/viewApi";
  5 |   import type {
  6 |     ProjectDefinition,
  7 |     ProjectId,
  8 |     SortDefinition,
  9 |     ViewDefinition,
 10 |     ViewId,
 11 |   } from "src/settings/settings";
 12 |   import { applyFilter, matchesCondition } from "./filterFunctions";
 13 | 
 14 |   import { useView } from "./useView";
 15 |   import { applySort, sortRecords } from "./viewSort";
 16 | 
 17 |   /**
 18 |    * Specify the project.
 19 |    */
 20 |   export let project: ProjectDefinition;
 21 | 
 22 |   /**
 23 |    * Specify the view.
 24 |    */
 25 |   export let view: ViewDefinition;
 26 | 
 27 |   /**
 28 |    * Specify the data to display in the view.
 29 |    */
 30 |   export let frame: DataFrame;
 31 | 
 32 |   /**
 33 |    * Specify whether the view is read-only.
 34 |    */
 35 |   export let readonly: boolean;
 36 | 
 37 |   /**
 38 |    * Specify the API for updating the data.
 39 |    */
 40 |   export let api: ViewApi;
 41 | 
 42 |   /**
 43 |    * Specify a callback for updating the view configuration.
 44 |    */
 45 |   export let onConfigChange: (
 46 |     projectId: ProjectId,
 47 |     viewId: ViewId,
 48 |     cfg: Record<string, any>
 49 |   ) => void;
 50 | 
 51 |   function handleConfigChange(config: Record<string, any>) {
 52 |     onConfigChange(project.id, view.id, config);
 53 |   }
 54 | 
 55 |   // Clean up any filter conditions for non-existing fields.
 56 |   $: {
 57 |     const fieldNames = frame.fields.map((field) => field.name);
 58 | 
 59 |     if (
 60 |       viewFilter.conditions.length !==
 61 |       viewFilter.conditions.filter((cond) => fieldNames.includes(cond.field))
 62 |         .length
 63 |     ) {
 64 |       settings.updateView(project.id, {
 65 |         ...view,
 66 |         filter: {
 67 |           conjunction: viewFilter?.conjunction ?? "and",
 68 |           conditions: viewFilter.conditions.filter((cond) =>
 69 |             fieldNames.includes(cond.field)
 70 |           ),
 71 |         },
 72 |       });
 73 |     }
 74 |   }
 75 | 
 76 |   $: viewFilter = view.filter ?? { conjunction: "and", conditions: [] };
 77 |   $: filteredFrame = applyFilter(frame, viewFilter);
 78 | 
 79 |   $: viewSort =
 80 |     view.sort.criteria.length > 0
 81 |       ? view.sort
 82 |       : ({
 83 |           criteria: [{ field: "path", order: "asc", enabled: true }],
 84 |         } satisfies SortDefinition);
 85 | 
 86 |   $: sortedFrame = applySort(filteredFrame, viewSort);
 87 | 
 88 |   let recordCache: Record<string, DataRecord | undefined>;
 89 |   $: {
 90 |     frame;
 91 |     recordCache = {};
 92 |   }
 93 | 
 94 |   function getRecordColor(record: DataRecord): string | null {
 95 |     const colorFilter = view.colors ?? { conditions: [] };
 96 |     for (const cond of colorFilter.conditions) {
 97 |       if (cond.condition?.enabled ?? true) {
 98 |         if (matchesCondition(cond.condition, record)) {
 99 |           return cond.color;
100 |         }
101 |       }
102 |     }
103 |     return null;
104 |   }
105 | 
106 |   const applyViewSortToRecords = (
107 |     records: ReadonlyArray<DataRecord>
108 |   ): Array<DataRecord> => {
109 |     return sortRecords([...records], viewSort);
110 |   };
111 | 
112 |   const getRecord = (id: string) => {
113 |     return (
114 |       recordCache[id] ??
115 |       (recordCache[id] = frame.records.find((record) => record.id === id))
116 |     );
117 |   };
118 | </script>
119 | 
120 | <!--
121 | 	@component
122 | 
123 | 	View dynamically selects the component to use based on a ViewDefinition.
124 | -->
125 | <div
126 |   use:useView={{
127 |     view,
128 |     dataProps: {
129 |       data: sortedFrame,
130 |       hasSort: view.sort.criteria.filter((c) => c.enabled).length > 0,
131 |       hasFilter: view.filter.conditions.filter((c) => c.enabled).length > 0,
132 |     },
133 |     viewApi: api,
134 |     project,
135 |     readonly,
136 |     config: view.config,
137 |     onConfigChange: handleConfigChange,
138 |     getRecordColor: getRecordColor,
139 |     sortRecords: applyViewSortToRecords,
140 |     getRecord,
141 |   }}
142 | />
143 | 
144 | <style>
145 |   div {
146 |     width: 100%;
147 |     height: 100%;
148 |   }
149 | </style>
150 | 


--------------------------------------------------------------------------------
/src/ui/app/filterFunctions.ts:
--------------------------------------------------------------------------------
  1 | import { produce } from "immer";
  2 | import dayjs from "dayjs";
  3 | import {
  4 |   type DataFrame,
  5 |   type DataRecord,
  6 |   type DataValue,
  7 |   type Optional,
  8 |   isNumber,
  9 |   isOptionalString,
 10 |   isOptionalNumber,
 11 |   isOptionalBoolean,
 12 |   isOptionalDate,
 13 |   isOptionalList,
 14 | } from "src/lib/dataframe/dataframe";
 15 | import {
 16 |   isBooleanFilterOperator,
 17 |   isNumberFilterOperator,
 18 |   isStringFilterOperator,
 19 |   isDateFilterOperator,
 20 |   isListFilterOperator,
 21 |   type BaseFilterOperator,
 22 |   type BooleanFilterOperator,
 23 |   type FilterCondition,
 24 |   type FilterDefinition,
 25 |   type NumberFilterOperator,
 26 |   type StringFilterOperator,
 27 |   type DateFilterOperator,
 28 |   type ListFilterOperator,
 29 | } from "src/settings/settings";
 30 | 
 31 | export function matchesCondition(
 32 |   cond: FilterCondition,
 33 |   record: DataRecord
 34 | ): boolean {
 35 |   const { operator } = cond;
 36 | 
 37 |   const value: Optional<DataValue> = record.values[cond.field];
 38 | 
 39 |   if (operator === "is-empty" || operator === "is-not-empty") {
 40 |     return baseFns[operator](value);
 41 |   }
 42 | 
 43 |   if (isOptionalList(value) && isListFilterOperator(operator)) {
 44 |     if (operator === "has-keyword") {
 45 |       return listFns[operator](value ?? [], cond.value);
 46 |     } else {
 47 |       return listFns[operator](
 48 |         value ?? [],
 49 |         cond.value ? JSON.parse(cond.value) : undefined
 50 |       );
 51 |     }
 52 |   }
 53 | 
 54 |   if (isOptionalString(value) && isStringFilterOperator(operator)) {
 55 |     return stringFns[operator](value, cond.value);
 56 |   } else if (isOptionalNumber(value) && isNumberFilterOperator(operator)) {
 57 |     return numberFns[operator](
 58 |       value,
 59 |       cond.value ? parseFloat(cond.value) : undefined
 60 |     );
 61 |   } else if (isOptionalBoolean(value) && isBooleanFilterOperator(operator)) {
 62 |     return booleanFns[operator](value);
 63 |   } else if (isOptionalDate(value) && isDateFilterOperator(operator)) {
 64 |     return dateFns[operator](
 65 |       value,
 66 |       cond.value ? dayjs(cond.value).toDate() : undefined
 67 |     );
 68 |   }
 69 | 
 70 |   return false;
 71 | }
 72 | 
 73 | export function matchesFilterConditions(
 74 |   filter: FilterDefinition,
 75 |   record: DataRecord
 76 | ) {
 77 |   const validConds = filter.conditions.filter((cond) => {
 78 |     return cond?.enabled ?? true;
 79 |   });
 80 | 
 81 |   if (!validConds.length) return true;
 82 | 
 83 |   if (filter.conjunction === "or") {
 84 |     return validConds.some((cond) => matchesCondition(cond, record));
 85 |   }
 86 |   return validConds.every((cond) => matchesCondition(cond, record));
 87 | }
 88 | 
 89 | export function applyFilter(
 90 |   frame: DataFrame,
 91 |   filter: FilterDefinition
 92 | ): DataFrame {
 93 |   return produce(frame, (draft) => {
 94 |     draft.records = draft.records.filter((record) =>
 95 |       // @ts-ignore
 96 |       matchesFilterConditions(filter, record)
 97 |     );
 98 |   });
 99 | }
100 | 
101 | export const baseFns: Record<
102 |   BaseFilterOperator,
103 |   (value: Optional<DataValue>) => boolean
104 | > = {
105 |   "is-empty": (value) => value === undefined || value === null,
106 |   "is-not-empty": (value) => value !== undefined && value !== null,
107 | };
108 | 
109 | export const stringFns: Record<
110 |   StringFilterOperator,
111 |   (left: Optional<string>, right?: string) => boolean
112 | > = {
113 |   is: (left, right) => (left ? left == right : false),
114 |   "is-not": (left, right) => (left ? left != right : true),
115 |   contains: (left, right) => (left ? left.contains(right ?? "") : false),
116 |   "not-contains": (left, right) => (left ? !left.contains(right ?? "") : true),
117 | };
118 | 
119 | export const numberFns: Record<
120 |   NumberFilterOperator,
121 |   (left: Optional<number>, right?: number) => boolean
122 | > = {
123 |   eq: (left, right) => left === right,
124 |   neq: (left, right) => left !== right,
125 |   lt: (left, right) => isNumber(left) && isNumber(right) && left < right,
126 |   gt: (left, right) => isNumber(left) && isNumber(right) && left > right,
127 |   lte: (left, right) => isNumber(left) && isNumber(right) && left <= right,
128 |   gte: (left, right) => isNumber(left) && isNumber(right) && left >= right,
129 | };
130 | 
131 | export const booleanFns: Record<
132 |   BooleanFilterOperator,
133 |   (value: Optional<boolean>) => boolean
134 | > = {
135 |   "is-checked": (value) => value === true,
136 |   "is-not-checked": (value) => value === false,
137 | };
138 | 
139 | export const dateFns: Record<
140 |   DateFilterOperator,
141 |   (left: Optional<Date>, right?: Optional<Date>) => boolean
142 | > = {
143 |   "is-on": (left, right) => {
144 |     return left && right ? left.getTime() == right.getTime() : false;
145 |   },
146 |   "is-not-on": (left, right) =>
147 |     left && right ? left.getTime() != right.getTime() : true,
148 |   "is-before": (left, right) =>
149 |     left && right ? left.getTime() < right.getTime() : false,
150 |   "is-after": (left, right) =>
151 |     left && right ? left.getTime() > right.getTime() : false,
152 |   "is-on-and-before": (left, right) =>
153 |     left && right ? left.getTime() <= right.getTime() : false,
154 |   "is-on-and-after": (left, right) =>
155 |     left && right ? left.getTime() >= right.getTime() : false,
156 | };
157 | 
158 | export const listFns_multitext: Record<
159 |   Exclude<ListFilterOperator, "has-keyword">,
160 |   (left: Optional<DataValue>[], right?: Optional<DataValue>[]) => boolean
161 | > = {
162 |   "has-any-of": (left, right) => {
163 |     return right ? right.some((value) => left.includes(value)) : false;
164 |   },
165 |   "has-all-of": (left, right) => {
166 |     return right ? right.every((value) => left.includes(value)) : false;
167 |   },
168 |   "has-none-of": (left, right) => {
169 |     return !(right ? right.some((value) => left.includes(value)) : false);
170 |   },
171 | };
172 | 
173 | export const listFns_text: Record<
174 |   "has-keyword",
175 |   (left: Optional<DataValue>[], right?: string) => boolean
176 | > = {
177 |   "has-keyword": (left, right) => {
178 |     return right
179 |       ? left.some((value) => String(value).contains(String(right)))
180 |       : false;
181 |   },
182 | };
183 | 
184 | export const listFns = {
185 |   ...listFns_multitext,
186 |   ...listFns_text,
187 | };
188 | 


--------------------------------------------------------------------------------
/src/ui/app/onboarding/Onboarding.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Button, ModalButtonGroup, Typography } from "obsidian-svelte";
 3 | 
 4 |   import TabContainer from "./TabContainer.svelte";
 5 | 
 6 |   export let onCreate: () => void;
 7 |   export let onTry: () => void;
 8 | </script>
 9 | 
10 | <div class="center">
11 |   <Typography variant="h1">Get started with Projects</Typography>
12 |   <Typography variant="body">
13 |     Projects lets you manage groups of related notes using
14 |     <a href="https://help.obsidian.md/Editing+and+formatting/Properties">
15 |       front matter</a
16 |     >. For example, a folder with the blog posts you're working on.
17 |   </Typography>
18 | 
19 |   <pre><code
20 |       >---
21 | status: Backlog
22 | due: 2023-01-01
23 | published: false
24 | ---
25 | 
26 | # My blog post</code
27 |     ></pre>
28 | 
29 |   <Typography variant="body">
30 |     Start from scratch, or explore a demo project 👇
31 |   </Typography>
32 | 
33 |   <ModalButtonGroup>
34 |     <Button variant="primary" on:click={() => onCreate()}>
35 |       Create new project
36 |     </Button>
37 |     <Button
38 |       variant="default"
39 |       tooltip="Creates a new folder at the root of your vault with example notes."
40 |       on:click={() => onTry()}
41 |     >
42 |       Try a demo project
43 |     </Button>
44 |   </ModalButtonGroup>
45 |   <p
46 |     style={"color: var(--text-muted); margin-top: 45px; font-size: var(--font-ui-smaller);"}
47 |   >
48 |     <strong>Psst! 👋</strong> Next time you can create your projects using any of
49 |     the following ways:
50 |   </p>
51 |   <TabContainer
52 |     options={["Projects view", "Command palette", "File explorer"]}
53 |     let:selected
54 |   >
55 |     {#if selected === "File explorer"}
56 |       <ol>
57 |         <li>
58 |           Right-click a folder in <strong>File explorer</strong>.
59 |         </li>
60 |         <li>Click <strong>Create project in folder</strong>.</li>
61 |       </ol>
62 |     {:else if selected === "Command palette"}
63 |       <ol>
64 |         <li>Open the <strong>Command palette</strong>.</li>
65 |         <li>Search for <strong>Create new project</strong></li>
66 |         <li>Press <strong>Enter</strong>.</li>
67 |       </ol>
68 |     {:else}
69 |       <ol>
70 |         <li>
71 |           In the top-right corner of the <strong>Projects</strong>
72 |           view, click
73 |           <strong>New</strong>.
74 |         </li>
75 |         <li>Click <strong>New project</strong>.</li>
76 |       </ol>
77 |     {/if}
78 |   </TabContainer>
79 | </div>
80 | 
81 | <style>
82 |   pre {
83 |     background-color: var(--background-primary-alt);
84 |     border-radius: var(--radius-s);
85 |     padding: 8px;
86 |   }
87 |   ol {
88 |     margin: 0;
89 |     padding: 0 22px;
90 |   }
91 | </style>
92 | 


--------------------------------------------------------------------------------
/src/ui/app/onboarding/TabContainer.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let options: string[];
 3 | 
 4 |   let selected: string = options[0] ?? "";
 5 | </script>
 6 | 
 7 | <div>
 8 |   <div class="header">
 9 |     {#each options as option}
10 |       <div
11 |         class="clickable-icon"
12 |         class:is-active={option === selected}
13 |         on:keypress
14 |         on:click={() => {
15 |           selected = option;
16 |         }}
17 |       >
18 |         {option}
19 |       </div>
20 |     {/each}
21 |   </div>
22 |   <div class="card nomargin">
23 |     <slot {selected} />
24 |   </div>
25 | </div>
26 | 
27 | <style>
28 |   .nomargin {
29 |     margin: 0;
30 |     padding: 8px;
31 |   }
32 | 
33 |   .header {
34 |     display: flex;
35 |     gap: 4px;
36 |     margin-bottom: 4px;
37 |   }
38 | </style>
39 | 


--------------------------------------------------------------------------------
/src/ui/app/onboarding/demoProject.ts:
--------------------------------------------------------------------------------
  1 | import dayjs from "dayjs";
  2 | import { normalizePath, stringifyYaml, type Vault } from "obsidian";
  3 | import { v4 as uuidv4 } from "uuid";
  4 | 
  5 | import { settings } from "src/lib/stores/settings";
  6 | import type { BoardConfig } from "src/ui/views/Board/types";
  7 | import type { CalendarConfig } from "src/ui/views/Calendar/types";
  8 | import type { GalleryConfig } from "src/ui/views/Gallery/types";
  9 | import type { TableConfig } from "src/ui/views/Table/types";
 10 | import { DEFAULT_PROJECT, DEFAULT_VIEW } from "src/settings/settings";
 11 | 
 12 | export async function createDemoProject(vault: Vault) {
 13 |   const demoFolder = "Projects - Demo Project";
 14 | 
 15 |   await vault.createFolder(demoFolder);
 16 | 
 17 |   const startDate = dayjs();
 18 | 
 19 |   const files = {
 20 |     "The Best Notes You'll Ever Make": {
 21 |       status: "Done",
 22 |       due: startDate.subtract(2, "weeks").format("YYYY-MM-DD"),
 23 |       published: true,
 24 |       weight: 1,
 25 |       tags: ["note-taking"],
 26 |       image:
 27 |         "https://images.unsplash.com/photo-1455390582262-044cdead277a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=300&q=80",
 28 |     },
 29 |     "The Easiest Way to Start Taking Notes": {
 30 |       status: "Done",
 31 |       due: startDate.subtract(1, "weeks").format("YYYY-MM-DD"),
 32 |       published: true,
 33 |       weight: 2,
 34 |       tags: ["note-taking", "obsidian"],
 35 |       image:
 36 |         "https://images.unsplash.com/photo-1488190211105-8b0e65b80b4e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=300&q=80",
 37 |     },
 38 |     "Why You Should Be Taking More Notes": {
 39 |       status: "Doing",
 40 |       due: startDate.format("YYYY-MM-DD"),
 41 |       published: false,
 42 |       weight: 3,
 43 |       tags: ["note-taking", "pkm"],
 44 |       image:
 45 |         "https://images.unsplash.com/photo-1501504905252-473c47e087f8?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=300&q=80",
 46 |     },
 47 |     "What I Learned From Taking 15,000 Notes": {
 48 |       status: "Backlog",
 49 |       due: startDate.add(1, "weeks").format("YYYY-MM-DD"),
 50 |       published: false,
 51 |       weight: 4,
 52 |       tags: ["pkm", "obsidian"],
 53 |       image:
 54 |         "https://images.unsplash.com/photo-1550592704-6c76defa9985?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=300&q=80",
 55 |     },
 56 |     "5 Mistakes I Made When I Started Using Obsidian": {
 57 |       status: "Backlog",
 58 |       due: startDate.add(2, "weeks").format("YYYY-MM-DD"),
 59 |       published: false,
 60 |       tags: ["obsidian"],
 61 |       image:
 62 |         "https://images.unsplash.com/photo-1471107340929-a87cd0f5b5f3?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=300&q=80",
 63 |     },
 64 |   };
 65 |   for (const [linkText, data] of Object.entries(files)) {
 66 |     const content = "---\n" + stringifyYaml(data) + "---\n\n" + "# " + linkText;
 67 | 
 68 |     await vault.create(
 69 |       normalizePath(demoFolder + "/" + linkText + ".md"),
 70 |       content
 71 |     );
 72 |   }
 73 | 
 74 |   const tableConfig: TableConfig = {
 75 |     fieldConfig: {
 76 |       name: {
 77 |         width: 360,
 78 |       },
 79 |       path: {
 80 |         hide: true,
 81 |       },
 82 |     },
 83 |   };
 84 | 
 85 |   const boardConfig: BoardConfig = {
 86 |     groupByField: "status",
 87 |     orderSyncField: "weight",
 88 |   };
 89 | 
 90 |   const calendarConfig: CalendarConfig = {
 91 |     interval: "month",
 92 |     dateField: "due",
 93 |     checkField: "published",
 94 |   };
 95 | 
 96 |   const galleryConfig: GalleryConfig = {
 97 |     coverField: "image",
 98 |   };
 99 | 
100 |   settings.addProject(
101 |     Object.assign({}, DEFAULT_PROJECT, {
102 |       name: "Demo project",
103 |       id: uuidv4(),
104 |       path: demoFolder,
105 |       dataSource: {
106 |         kind: "folder",
107 |         config: {
108 |           path: demoFolder,
109 |           recursive: false,
110 |         },
111 |       },
112 |       views: [
113 |         Object.assign({}, DEFAULT_VIEW, {
114 |           name: "Table",
115 |           id: uuidv4(),
116 |           type: "table",
117 |           config: tableConfig,
118 |         }),
119 |         Object.assign({}, DEFAULT_VIEW, {
120 |           name: "Board",
121 |           id: uuidv4(),
122 |           type: "board",
123 |           config: boardConfig,
124 |         }),
125 |         Object.assign({}, DEFAULT_VIEW, {
126 |           name: "Calendar",
127 |           id: uuidv4(),
128 |           type: "calendar",
129 |           config: calendarConfig,
130 |         }),
131 |         Object.assign({}, DEFAULT_VIEW, {
132 |           name: "Gallery",
133 |           id: uuidv4(),
134 |           type: "gallery",
135 |           config: galleryConfig,
136 |         }),
137 |       ],
138 |     })
139 |   );
140 | }
141 | 


--------------------------------------------------------------------------------
/src/ui/app/onboarding/onboardingModal.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | 
 3 | import Onboarding from "./Onboarding.svelte";
 4 | 
 5 | export class OnboardingModal extends Modal {
 6 |   component?: Onboarding;
 7 | 
 8 |   constructor(
 9 |     readonly app: App,
10 |     readonly onCreate: () => void,
11 |     readonly onTry: () => void
12 |   ) {
13 |     super(app);
14 |   }
15 | 
16 |   onOpen() {
17 |     this.component = new Onboarding({
18 |       target: this.contentEl,
19 |       props: {
20 |         onCreate: () => {
21 |           this.onCreate();
22 |           this.close();
23 |         },
24 |         onTry: () => {
25 |           this.onTry();
26 |           this.close();
27 |         },
28 |       },
29 |     });
30 |   }
31 | }
32 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/ProjectSelect.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { produce } from "immer";
  3 |   import { Menu, Notice } from "obsidian";
  4 |   import { IconButton, Select } from "obsidian-svelte";
  5 | 
  6 |   import { i18n } from "src/lib/stores/i18n";
  7 |   import { app } from "src/lib/stores/obsidian";
  8 |   import { settings } from "src/lib/stores/settings";
  9 |   import { ConfirmDialogModal } from "src/ui/modals/confirmDialog";
 10 |   import { CreateProjectModal } from "src/ui/modals/createProjectModal";
 11 |   import type { ProjectDefinition, ProjectId } from "src/settings/settings";
 12 |   import { Flair } from "src/ui/components/Flair";
 13 | 
 14 |   export let projectId: ProjectId | undefined;
 15 |   export let projects: ProjectDefinition[];
 16 | 
 17 |   $: project = projects.find((project) => project.id === projectId);
 18 | 
 19 |   export let onProjectChange: (projectId: ProjectId) => void;
 20 |   export let onProjectAdd: () => void;
 21 | </script>
 22 | 
 23 | <span>
 24 |   <Select
 25 |     value={projectId ?? ""}
 26 |     options={produce(
 27 |       projects.map((project) => ({
 28 |         label: project.name,
 29 |         value: project.id,
 30 |       })),
 31 |       (draft) => {
 32 |         draft.sort((a, b) =>
 33 |           a.label.localeCompare(b.label, undefined, { numeric: true })
 34 |         );
 35 |       }
 36 |     )}
 37 |     on:change={({ detail: value }) => onProjectChange(value)}
 38 |     placeholder={$i18n.t("toolbar.projects.none") ?? ""}
 39 |   />
 40 | 
 41 |   <IconButton
 42 |     icon="more-vertical"
 43 |     size="sm"
 44 |     disabled={!projects.length}
 45 |     tooltip={$i18n.t("toolbar.projects.options")}
 46 |     onClick={(event) => {
 47 |       const menu = new Menu();
 48 | 
 49 |       menu.addItem((item) => {
 50 |         item
 51 |           .setTitle($i18n.t("modals.project.edit.short-title"))
 52 |           .setIcon("edit")
 53 |           .onClick(() => {
 54 |             if (project) {
 55 |               new CreateProjectModal(
 56 |                 $app,
 57 |                 $i18n.t("modals.project.edit.title"),
 58 |                 $i18n.t("modals.project.edit.cta"),
 59 |                 settings.updateProject,
 60 |                 project
 61 |               ).open();
 62 |             }
 63 |           });
 64 |       });
 65 | 
 66 |       menu.addItem((item) => {
 67 |         item
 68 |           .setTitle($i18n.t("modals.project.duplicate.title"))
 69 |           .setIcon("copy")
 70 |           .onClick(() => {
 71 |             if (projectId) {
 72 |               const id = settings.duplicateProject(projectId);
 73 |               onProjectChange(id);
 74 |             }
 75 |           });
 76 |       });
 77 | 
 78 |       menu.addItem((item) => {
 79 |         item
 80 |           .setTitle($i18n.t("modals.project.archive.short-title"))
 81 |           .setIcon("archive")
 82 |           .onClick(() => {
 83 |             new ConfirmDialogModal(
 84 |               $app,
 85 |               $i18n.t("modals.project.archive.title"),
 86 |               $i18n.t("modals.project.archive.message", {
 87 |                 project: project?.name ?? "",
 88 |               }),
 89 |               $i18n.t("modals.project.archive.cta"),
 90 |               () => {
 91 |                 if (projectId) {
 92 |                   if ($settings.archives.length === 0) {
 93 |                     new Notice($i18n.t("modals.project.archive.notice"), 15000);
 94 |                   }
 95 |                   settings.archiveProject(projectId);
 96 |                 }
 97 |               }
 98 |             ).open();
 99 |           });
100 |       });
101 | 
102 |       menu.addItem((item) => {
103 |         item
104 |           .setTitle($i18n.t("modals.project.delete.short-title"))
105 |           .setIcon("trash")
106 |           .setWarning(true)
107 |           .onClick(() => {
108 |             new ConfirmDialogModal(
109 |               $app,
110 |               $i18n.t("modals.project.delete.title"),
111 |               $i18n.t("modals.project.delete.message", {
112 |                 project: project?.name ?? "",
113 |               }),
114 |               $i18n.t("modals.project.delete.cta"),
115 |               () => {
116 |                 if (projectId) {
117 |                   settings.deleteProject(projectId);
118 |                 }
119 |               }
120 |             ).open();
121 |           });
122 |       });
123 | 
124 |       menu.showAtMouseEvent(event);
125 |     }}
126 |   />
127 |   <IconButton
128 |     icon="folder-plus"
129 |     size="md"
130 |     tooltip={$i18n.t("modals.project.create.title")}
131 |     onClick={() => onProjectAdd()}
132 |   />
133 |   {#if project?.dataSource.kind === "dataview"}
134 |     <Flair variant="primary" tooltip={$i18n.t("toolbar.read-only-desc") ?? ""}
135 |       >{$i18n.t("toolbar.read-only")}</Flair
136 |     >
137 |   {/if}
138 | </span>
139 | 
140 | <style>
141 |   span {
142 |     display: flex;
143 |     align-items: center;
144 |     gap: 4px;
145 |   }
146 | </style>
147 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/ShadowViewItem.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Icon, IconButton } from "obsidian-svelte";
 3 |   /**
 4 |    * Specifies the button label.
 5 |    */
 6 |   export let label: string;
 7 | 
 8 |   /**
 9 |    * Specifies the button id.
10 |    */
11 |   export let id: string;
12 | 
13 |   /**
14 |    *  Specifies whether the button is active.
15 |    */
16 |   export let active: boolean = false;
17 | 
18 |   /**
19 |    * Specifies an optional icon.
20 |    */
21 |   export let icon: string = "";
22 | </script>
23 | 
24 | <div data-id={id}>
25 |   {#if icon}
26 |     <Icon name={icon} />
27 |   {/if}
28 |   {label}
29 |   {#if active}
30 |     <IconButton icon="chevron-down" size="sm" nopadding />
31 |   {/if}
32 | </div>
33 | 
34 | <style>
35 |   div {
36 |     visibility: visible;
37 |     border: 1px solid var(--interactive-accent);
38 |     background-color: var(--background-modifier-hover);
39 | 
40 |     display: inline-flex;
41 |     justify-content: center;
42 |     align-items: center;
43 |     gap: var(--size-4-1);
44 | 
45 |     height: 1.8rem;
46 |     padding: 0 8px;
47 |     min-width: min-content;
48 | 
49 |     font-size: var(--font-ui-small);
50 |     border-radius: var(--radius-s);
51 | 
52 |     overflow: hidden;
53 |     white-space: nowrap;
54 |     text-overflow: ellipsis;
55 |   }
56 | </style>
57 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/Toolbar.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import ViewToolbar from "src/ui/components/Layout/ViewToolbar.svelte";
  3 |   import { createProject } from "src/lib/dataApi";
  4 |   import { i18n } from "src/lib/stores/i18n";
  5 |   import { app } from "src/lib/stores/obsidian";
  6 |   import { dataFrame } from "src/lib/stores/dataframe";
  7 |   import { settings } from "src/lib/stores/settings";
  8 |   import { AddViewModal } from "src/ui/modals/addViewModal";
  9 |   import { ConfirmDialogModal } from "src/ui/modals/confirmDialog";
 10 |   import { CreateProjectModal } from "src/ui/modals/createProjectModal";
 11 |   import { Flair } from "src/ui/components/Flair";
 12 | 
 13 |   import ProjectSelect from "./ProjectSelect.svelte";
 14 |   import ViewSelect from "./ViewSelect.svelte";
 15 |   import { InspectorModal } from "src/ui/modals/inspector";
 16 |   import type {
 17 |     ProjectDefinition,
 18 |     ProjectId,
 19 |     ViewId,
 20 |   } from "src/settings/settings";
 21 |   import { produce } from "immer";
 22 |   import ProjectViewOptions from "./viewOptions/ProjectViewOptions.svelte";
 23 | 
 24 |   export let projects: ProjectDefinition[];
 25 | 
 26 |   export let projectId: ProjectId | undefined;
 27 |   export let onProjectChange: (projectId: ProjectId) => void;
 28 | 
 29 |   export let viewId: ViewId | undefined;
 30 |   export let onViewChange: (viewId: ViewId) => void;
 31 | 
 32 |   $: project = projects.find((project) => project.id === projectId);
 33 |   $: views = project?.views ?? [];
 34 | 
 35 |   $: errors = $dataFrame.errors ?? [];
 36 | 
 37 |   $: view = projects
 38 |     .find((project) => project.id === projectId)
 39 |     ?.views?.find((view) => view.id === viewId);
 40 | </script>
 41 | 
 42 | <!--
 43 | 	@component
 44 | 
 45 | 	Toolbar lets the user manage projects and views.
 46 | -->
 47 | <ViewToolbar variant="primary">
 48 |   <svelte:fragment slot="info">
 49 |     {#if errors.length}
 50 |       <Flair
 51 |         variant="error"
 52 |         on:click={() => {
 53 |           new InspectorModal($app, "Project inspector", errors).open();
 54 |         }}
 55 |         >{`${errors.length} ${errors.length === 1 ? "error" : "errors"}`}</Flair
 56 |       >
 57 |     {/if}
 58 |   </svelte:fragment>
 59 | 
 60 |   <ProjectSelect
 61 |     slot="left"
 62 |     {projectId}
 63 |     {projects}
 64 |     {onProjectChange}
 65 |     onProjectAdd={() =>
 66 |       new CreateProjectModal(
 67 |         $app,
 68 |         $i18n.t("modals.project.create.title"),
 69 |         $i18n.t("modals.project.create.cta"),
 70 |         (project) => {
 71 |           settings.addProject(project);
 72 |           projectId = project.id;
 73 |           onProjectChange(project.id);
 74 |         },
 75 |         createProject()
 76 |       ).open()}
 77 |   />
 78 | 
 79 |   <div slot="middle">
 80 |     {#if project}
 81 |       <ViewSelect
 82 |         {viewId}
 83 |         {views}
 84 |         viewExists={(name) =>
 85 |           !!project?.views.find((view) => view.name === name)}
 86 |         onViewSort={(viewIds) => {
 87 |           if (projectId) {
 88 |             settings.sortViews(projectId, viewIds);
 89 |           }
 90 |         }}
 91 |         onViewAdd={() => {
 92 |           if (project) {
 93 |             new AddViewModal($app, project, (projectId, view) => {
 94 |               settings.addView(projectId, view);
 95 |               onViewChange(view.id);
 96 |             }).open();
 97 |           }
 98 |         }}
 99 |         onViewRename={(viewId, name) => {
100 |           if (projectId) {
101 |             settings.renameView(projectId, viewId, name);
102 |           }
103 |         }}
104 |         {onViewChange}
105 |         onViewDuplicate={(viewId) => {
106 |           if (projectId) {
107 |             const id = settings.duplicateView(projectId, viewId);
108 |             onViewChange(id);
109 |           }
110 |         }}
111 |         onViewDelete={(viewId) => {
112 |           new ConfirmDialogModal(
113 |             $app,
114 |             $i18n.t("modals.view.delete.title"),
115 |             $i18n.t("modals.view.delete.message", {
116 |               view: view?.name ?? "",
117 |             }),
118 |             $i18n.t("modals.view.delete.cta"),
119 |             () => {
120 |               if (projectId) {
121 |                 settings.deleteView(projectId, viewId);
122 |               }
123 |             }
124 |           ).open();
125 |         }}
126 |       />
127 |     {/if}
128 |   </div>
129 |   <svelte:fragment slot="right">
130 |     {#if view}
131 |       <ProjectViewOptions
132 |         {view}
133 |         fields={$dataFrame.fields}
134 |         onFilterChange={(filter) => {
135 |           if (projectId && view) {
136 |             settings.updateView(
137 |               projectId,
138 |               produce(view, (draft) => {
139 |                 draft.filter = filter;
140 |               })
141 |             );
142 |           }
143 |         }}
144 |         onColorChange={(filter) => {
145 |           if (projectId && view) {
146 |             settings.updateView(
147 |               projectId,
148 |               produce(view, (draft) => {
149 |                 draft.colors = filter;
150 |               })
151 |             );
152 |           }
153 |         }}
154 |         onSortChange={(filter) => {
155 |           if (projectId && view) {
156 |             settings.updateView(
157 |               projectId,
158 |               produce(view, (draft) => {
159 |                 draft.sort = filter;
160 |               })
161 |             );
162 |           }
163 |         }}
164 |       />
165 |     {/if}
166 |   </svelte:fragment>
167 | </ViewToolbar>
168 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/ViewItem.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { Menu } from "obsidian";
  3 |   import { Icon, IconButton, TextInput } from "obsidian-svelte";
  4 |   import { createEventDispatcher } from "svelte";
  5 |   import { i18n } from "src/lib/stores/i18n";
  6 | 
  7 |   /**
  8 |    * Specifies the button label.
  9 |    */
 10 |   export let label: string;
 11 | 
 12 |   /**
 13 |    * Specifies the button id.
 14 |    */
 15 |   export let id: string;
 16 | 
 17 |   /**
 18 |    *  Specifies whether the button is active.
 19 |    */
 20 |   export let active: boolean = false;
 21 | 
 22 |   /**
 23 |    * Specifies an optional icon.
 24 |    */
 25 |   export let icon: string = "";
 26 | 
 27 |   /**
 28 |    * Specifies a function to determine if the label is valid.
 29 |    */
 30 |   export let onValidate: (name: string) => boolean;
 31 | 
 32 |   // Store original value to be able to roll back.
 33 |   let fallback: string = label;
 34 | 
 35 |   function rollback() {
 36 |     label = fallback;
 37 |   }
 38 | 
 39 |   let editing: boolean = false;
 40 | 
 41 |   let inputRef: HTMLInputElement;
 42 | 
 43 |   $: if (inputRef && editing) {
 44 |     inputRef.focus();
 45 |     inputRef.select();
 46 |   }
 47 | 
 48 |   $: error = !onValidate(label);
 49 | 
 50 |   const dispatch = createEventDispatcher<{
 51 |     rename: string;
 52 |     duplicate: void;
 53 |     delete: void;
 54 |   }>();
 55 | </script>
 56 | 
 57 | <!--
 58 | 	@component
 59 | 
 60 | 	ViewItem is a button that can be renamed and deleted.
 61 | -->
 62 | <div
 63 |   data-id={id}
 64 |   class:active
 65 |   class:error
 66 |   on:dblclick={() => (editing = true)}
 67 |   on:click
 68 |   on:keydown
 69 | >
 70 |   {#if icon}
 71 |     <Icon name={icon} />
 72 |   {/if}
 73 | 
 74 |   {#if editing}
 75 |     <TextInput
 76 |       noPadding
 77 |       embed
 78 |       bind:ref={inputRef}
 79 |       bind:value={label}
 80 |       width={label.length + "ch"}
 81 |       on:keydown={(event) => {
 82 |         if (event.key === "Enter") {
 83 |           editing = false;
 84 | 
 85 |           if (fallback == label) {
 86 |             return;
 87 |           }
 88 | 
 89 |           if (!error) {
 90 |             fallback = label;
 91 | 
 92 |             dispatch("rename", label);
 93 |           } else {
 94 |             rollback();
 95 |           }
 96 |         }
 97 |         if (event.key === "Escape") {
 98 |           editing = false;
 99 | 
100 |           rollback();
101 |         }
102 |       }}
103 |       on:blur={() => {
104 |         if (editing) {
105 |           editing = false;
106 |           if (!error) {
107 |             fallback = label;
108 | 
109 |             dispatch("rename", label);
110 |           } else {
111 |             rollback();
112 |           }
113 |         } else {
114 |           return;
115 |         }
116 |       }}
117 |     />
118 |   {:else}
119 |     {label}
120 |   {/if}
121 | 
122 |   {#if active}
123 |     <IconButton
124 |       icon="chevron-down"
125 |       size="sm"
126 |       nopadding
127 |       onClick={(event) => {
128 |         const menu = new Menu();
129 | 
130 |         menu.addItem((item) => {
131 |           item
132 |             .setTitle($i18n.t("modals.view.duplicate.title"))
133 |             .setIcon("copy")
134 |             .onClick(() => {
135 |               dispatch("duplicate");
136 |             });
137 |         });
138 | 
139 |         menu.addItem((item) => {
140 |           item
141 |             .setTitle($i18n.t("modals.view.delete.title"))
142 |             .setIcon("trash")
143 |             .setWarning(true)
144 |             .onClick(() => {
145 |               dispatch("delete");
146 |             });
147 |         });
148 | 
149 |         menu.showAtMouseEvent(event);
150 |       }}
151 |     />
152 |   {/if}
153 | </div>
154 | 
155 | <style>
156 |   div {
157 |     display: inline-flex;
158 |     justify-content: center;
159 |     align-items: center;
160 |     gap: var(--size-4-1);
161 | 
162 |     height: 1.8rem;
163 |     padding: 0 8px;
164 |     min-width: min-content;
165 | 
166 |     font-size: var(--font-ui-small);
167 |     border-radius: var(--radius-s);
168 | 
169 |     overflow: hidden;
170 |     white-space: nowrap;
171 |     text-overflow: ellipsis;
172 | 
173 |     border: 1px solid transparent;
174 |   }
175 |   div:hover {
176 |     background-color: var(--background-modifier-hover);
177 |   }
178 |   .active {
179 |     background-color: var(--background-modifier-hover);
180 |   }
181 |   .error {
182 |     border: 1px solid var(--background-modifier-error);
183 |   }
184 | </style>
185 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/ViewSelect.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { customViews } from "src/lib/stores/customViews";
  3 |   import type { ViewDefinition, ViewId } from "src/settings/settings";
  4 |   import { Icon, Button, IconButton } from "obsidian-svelte";
  5 |   import { i18n } from "src/lib/stores/i18n";
  6 |   import {
  7 |     dndzone,
  8 |     TRIGGERS,
  9 |     SHADOW_ITEM_MARKER_PROPERTY_NAME,
 10 |   } from "svelte-dnd-action";
 11 |   import ViewItem from "./ViewItem.svelte";
 12 |   import ShadowViewItem from "./ShadowViewItem.svelte";
 13 | 
 14 |   export let viewId: ViewId | undefined;
 15 |   export let views: ViewDefinition[];
 16 |   export let onViewChange: (viewId: ViewId) => void;
 17 |   export let onViewDelete: (viewId: ViewId) => void;
 18 |   export let onViewAdd: () => void;
 19 |   export let onViewDuplicate: (viewId: ViewId) => void;
 20 |   export let onViewRename: (viewId: ViewId, name: string) => void;
 21 |   export let onViewSort: (viewIds: ViewId[]) => void;
 22 |   export let viewExists: (name: string) => boolean;
 23 | 
 24 |   let dragItem: ViewDefinition | undefined;
 25 | 
 26 |   function iconFromViewType(type: string) {
 27 |     return $customViews[type]?.getIcon() ?? "";
 28 |   }
 29 | 
 30 |   const flipDurationMs = 200;
 31 | 
 32 |   function handleDndConsider({
 33 |     detail,
 34 |   }: CustomEvent<DndEvent<ViewDefinition>>) {
 35 |     if (detail.info.trigger === TRIGGERS.DRAG_STARTED) {
 36 |       dragItem = views.find((v) => v.id === detail.info.id);
 37 |     }
 38 |     views = detail.items;
 39 |   }
 40 | 
 41 |   function handleDndFinalize({
 42 |     detail,
 43 |   }: CustomEvent<DndEvent<ViewDefinition>>) {
 44 |     views = detail.items;
 45 |     onViewSort(detail.items.map((i) => i.id));
 46 |     if (detail.info.trigger === TRIGGERS.DROPPED_INTO_ZONE) {
 47 |       dragItem = views.find((v) => v.id === detail.info.id);
 48 |     }
 49 |     if (dragItem) {
 50 |       dragItem = undefined;
 51 |     }
 52 |   }
 53 | 
 54 |   function transformDraggedElement(draggedEl: HTMLElement | undefined) {
 55 |     if (draggedEl) draggedEl.empty();
 56 |   }
 57 | 
 58 |   function isShadowItem(view: ViewDefinition) {
 59 |     // @ts-ignore
 60 |     return view[SHADOW_ITEM_MARKER_PROPERTY_NAME];
 61 |   }
 62 | </script>
 63 | 
 64 | {#if views.length}
 65 |   <section
 66 |     use:dndzone={{
 67 |       type: "view-select",
 68 |       items: views,
 69 |       flipDurationMs,
 70 |       dropTargetStyle: {
 71 |         outline: "none",
 72 |       },
 73 |       morphDisabled: false,
 74 |       transformDraggedElement,
 75 |       // centreDraggedOnCursor: true,
 76 |     }}
 77 |     on:consider={handleDndConsider}
 78 |     on:finalize={handleDndFinalize}
 79 |   >
 80 |     {#each views as v (v.id)}
 81 |       {#if !isShadowItem(v)}
 82 |         <div>
 83 |           <ViewItem
 84 |             id={v.id}
 85 |             active={viewId === v.id}
 86 |             label={v.name}
 87 |             icon={iconFromViewType(v.type)}
 88 |             on:click={() => onViewChange(v.id)}
 89 |             on:rename={({ detail: name }) => {
 90 |               onViewRename(v.id, name);
 91 |             }}
 92 |             on:delete={() => {
 93 |               onViewDelete(v.id);
 94 |             }}
 95 |             on:duplicate={() => {
 96 |               onViewDuplicate(v.id);
 97 |             }}
 98 |             onValidate={(name) => {
 99 |               // Check if view has it's original name.
100 |               if (name === v.name) {
101 |                 return true;
102 |               }
103 | 
104 |               return name !== "" && !viewExists(name);
105 |             }}
106 |           />
107 |         </div>
108 |       {:else}
109 |         <div>
110 |           <ShadowViewItem
111 |             id={v.id}
112 |             active={dragItem?.id === viewId}
113 |             label={v.name}
114 |             icon={iconFromViewType(v.type)}
115 |           />
116 |         </div>
117 |       {/if}
118 |     {/each}
119 |     <IconButton
120 |       icon="plus"
121 |       size="sm"
122 |       onClick={() => {
123 |         onViewAdd();
124 |       }}
125 |       tooltip={$i18n.t("toolbar.view.add")}
126 |     />
127 |   </section>
128 | {:else}
129 |   <Button
130 |     variant="plain"
131 |     on:click={() => {
132 |       onViewAdd();
133 |     }}
134 |   >
135 |     <Icon name="plus" size="sm" />
136 |     {$i18n.t("toolbar.view.add")}
137 |   </Button>
138 | {/if}
139 | 
140 | <style>
141 |   section {
142 |     display: inline-flex;
143 |     align-items: center;
144 |     gap: 4px;
145 |   }
146 | </style>
147 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/PopoverButton.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Button, Icon, Popover } from "obsidian-svelte";
 3 |   import { Flair } from "src/ui/components/Flair";
 4 | 
 5 |   export let label: string;
 6 |   export let icon: string;
 7 |   export let count: number;
 8 |   export let disabled: boolean;
 9 | 
10 |   let ref: HTMLButtonElement;
11 |   let isOpen: boolean = false;
12 | </script>
13 | 
14 | <Button
15 |   bind:ref
16 |   on:click={() => {
17 |     isOpen = !isOpen;
18 |   }}
19 |   {disabled}
20 | >
21 |   <Icon name={icon} />
22 |   {label}
23 |   {#if count}
24 |     <Flair variant="primary">{count}</Flair>
25 |   {/if}
26 | </Button>
27 | <Popover
28 |   className={"projects--popover"}
29 |   anchorEl={ref}
30 |   open={isOpen}
31 |   onClose={() => {
32 |     isOpen = false;
33 |   }}
34 |   placement="auto"
35 | >
36 |   <slot />
37 | </Popover>
38 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/ProjectViewOptions.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import type {
 3 |     ColorFilterDefinition,
 4 |     FilterDefinition,
 5 |     SortDefinition,
 6 |     ViewDefinition,
 7 |   } from "src/settings/settings";
 8 |   import type { DataField } from "src/lib/dataframe/dataframe";
 9 |   import FilterOptionsButton from "./filter/FilterOptionsButton.svelte";
10 |   import ColorOptionsButton from "./color/ColorOptionsButton.svelte";
11 |   import SortOptionsButton from "./sort/SortOptionsButton.svelte";
12 | 
13 |   export let view: ViewDefinition | undefined;
14 |   export let fields: DataField[];
15 | 
16 |   export let onColorChange: (color: ColorFilterDefinition) => void;
17 |   export let onFilterChange: (filter: FilterDefinition) => void;
18 |   export let onSortChange: (sort: SortDefinition) => void;
19 | </script>
20 | 
21 | <ColorOptionsButton
22 |   value={view?.colors}
23 |   onChange={onColorChange}
24 |   {fields}
25 |   disabled={!view}
26 | />
27 | 
28 | <FilterOptionsButton
29 |   value={view?.filter}
30 |   onChange={onFilterChange}
31 |   {fields}
32 |   disabled={!view}
33 | />
34 | 
35 | <SortOptionsButton
36 |   value={view?.sort}
37 |   onChange={onSortChange}
38 |   {fields}
39 |   disabled={!view}
40 | />
41 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/color/ColorOptions.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { produce } from "immer";
  3 |   import dayjs from "dayjs";
  4 |   import { dndzone } from "svelte-dnd-action";
  5 |   import {
  6 |     Button,
  7 |     IconButton,
  8 |     Icon,
  9 |     Select,
 10 |     TextInput,
 11 |     NumberInput,
 12 |     ColorInput,
 13 |     Checkbox,
 14 |     // DateInput,
 15 |     // DatetimeInput,
 16 |   } from "obsidian-svelte";
 17 |   import DateInput from "src/ui/components/DateInput.svelte";
 18 |   import DatetimeInput from "src/ui/components/DatetimeInput.svelte";
 19 |   import { TagsInput } from "src/ui/components/TagsInput";
 20 |   import HorizontalGroup from "src/ui/components/HorizontalGroup/HorizontalGroup.svelte";
 21 |   import type { DataField } from "src/lib/dataframe/dataframe";
 22 |   import {
 23 |     filterOperatorTypes,
 24 |     getFilterOperatorType,
 25 |     type ColorFilterDefinition,
 26 |     type FilterOperator,
 27 |   } from "src/settings/settings";
 28 |   import {
 29 |     setColor,
 30 |     type ColorRuleWithId,
 31 |     setField,
 32 |     setOperator,
 33 |     withIds,
 34 |     setValue,
 35 |     setEnabled,
 36 |     removeCondition,
 37 |     addCondition,
 38 |     getFieldByName,
 39 |     getOperatorsByField,
 40 |     stripIds,
 41 |   } from "./helpers";
 42 |   import { fieldsToSelectOptions } from "../helpers";
 43 |   import { i18n } from "src/lib/stores/i18n";
 44 | 
 45 |   export let filter: ColorFilterDefinition;
 46 |   export let fields: DataField[];
 47 |   export let onFilterChange: (filter: ColorFilterDefinition) => void;
 48 | 
 49 |   $: fieldOptions = fieldsToSelectOptions(fields);
 50 | 
 51 |   $: rules = withIds(filter.conditions);
 52 | 
 53 |   const handleColorChange = (i: number) => (event: Event) => {
 54 |     if (event.currentTarget instanceof HTMLInputElement) {
 55 |       filter = setColor(filter, i, event.currentTarget.value);
 56 |       onFilterChange(filter);
 57 |     }
 58 |   };
 59 | 
 60 |   const handleFieldChange =
 61 |     (i: number) =>
 62 |     ({ detail }: CustomEvent<string>) => {
 63 |       filter = setField(filter, i, detail);
 64 |       onFilterChange(filter);
 65 |     };
 66 | 
 67 |   const handleOperatorChange =
 68 |     (i: number) =>
 69 |     ({ detail }: CustomEvent<string>) => {
 70 |       if (
 71 |         getFilterOperatorType(detail as FilterOperator) !==
 72 |         getFilterOperatorType(filter.conditions[i]?.condition.operator)
 73 |       ) {
 74 |         filter = setValue(filter, i, "");
 75 |       }
 76 |       filter = setOperator(filter, i, detail as FilterOperator);
 77 |       onFilterChange(filter);
 78 |     };
 79 | 
 80 |   const handleValueChange = (i: number) => (event: FocusEvent) => {
 81 |     if (event.currentTarget instanceof HTMLInputElement) {
 82 |       filter = setValue(filter, i, event.currentTarget.value);
 83 |       onFilterChange(filter);
 84 |     }
 85 |   };
 86 | 
 87 |   const handleStatusChange =
 88 |     (i: number) =>
 89 |     ({ detail }: CustomEvent<boolean>) => {
 90 |       filter = setEnabled(filter, i, detail);
 91 |       onFilterChange(filter);
 92 |     };
 93 | 
 94 |   const handleConditionRemove = (i: number) => (event: MouseEvent) => {
 95 |     event.stopPropagation();
 96 |     filter = removeCondition(filter, i);
 97 |     onFilterChange(filter);
 98 |   };
 99 | 
100 |   function handleConditionAdd() {
101 |     filter = addCondition(filter, fields);
102 |     onFilterChange(filter);
103 |   }
104 | 
105 |   const flipDurationMs = 200;
106 | 
107 |   function handleDndConsider(e: CustomEvent<DndEvent<ColorRuleWithId>>) {
108 |     rules = e.detail.items;
109 |   }
110 | 
111 |   function handleDndFinalize(e: CustomEvent<DndEvent<ColorRuleWithId>>) {
112 |     filter = produce(filter, (draft) => {
113 |       draft.conditions = stripIds(e.detail.items);
114 |     });
115 |     onFilterChange(filter);
116 |   }
117 | </script>
118 | 
119 | <div style="display: flex; flex-direction: column; gap: 8px;">
120 |   <div
121 |     style="display: flex; flex-direction: column; gap: 8px;"
122 |     use:dndzone={{
123 |       type: "color conditions",
124 |       items: rules,
125 |       flipDurationMs,
126 |       dropTargetStyle: {
127 |         outline: "none",
128 |         borderRadius: "5px",
129 |         background: "hsla(var(--interactive-accent-hsl), 0.3)",
130 |         transition: "all 150ms ease-in-out",
131 |       },
132 |     }}
133 |     on:consider={handleDndConsider}
134 |     on:finalize={handleDndFinalize}
135 |   >
136 |     {#each rules as rule, i (rule.id)}
137 |       {@const field = getFieldByName(fields, rule.condition.field)}
138 |       <HorizontalGroup>
139 |         <Icon name="grip-vertical" />
140 |         <ColorInput value={rule.color} on:change={handleColorChange(i)} />
141 |         <div class="setting-item-name">
142 |           {$i18n.t("components.color.where")}
143 |         </div>
144 |         <Select
145 |           value={rule.condition.field}
146 |           options={fieldOptions}
147 |           on:change={handleFieldChange(i)}
148 |         />
149 |         <Select
150 |           value={rule.condition.operator}
151 |           on:change={handleOperatorChange(i)}
152 |           options={field ? getOperatorsByField(field) : []}
153 |         />
154 | 
155 |         {#if filterOperatorTypes[rule.condition.operator] === "binary-text"}
156 |           <TextInput
157 |             value={rule.condition.value ?? ""}
158 |             on:blur={handleValueChange(i)}
159 |           />
160 |         {:else if filterOperatorTypes[rule.condition.operator] === "binary-number"}
161 |           <NumberInput
162 |             value={parseFloat(rule.condition.value ?? "")}
163 |             on:blur={handleValueChange(i)}
164 |           />
165 |         {:else if filterOperatorTypes[rule.condition.operator] === "binary-date"}
166 |           {#if field?.typeConfig?.time}
167 |             <DatetimeInput
168 |               value={dayjs(rule.condition.value ?? "").toDate()}
169 |               on:blur={handleValueChange(i)}
170 |             />
171 |           {:else}
172 |             <DateInput
173 |               value={dayjs(rule.condition.value ?? "").toDate()}
174 |               on:blur={handleValueChange(i)}
175 |             />
176 |           {/if}
177 |         {:else if filterOperatorTypes[rule.condition.operator] === "binary-multitext"}
178 |           <TagsInput
179 |             strict={rule.condition.field === "binary-multitext"}
180 |             unique={true}
181 |             value={rule.condition.value ? JSON.parse(rule.condition.value) : []}
182 |             on:change={(event) => {
183 |               filter = setValue(filter, i, event.detail);
184 |               onFilterChange(filter);
185 |             }}
186 |           />
187 |         {/if}
188 |         <Checkbox
189 |           checked={rule.condition?.enabled ?? true}
190 |           on:check={handleStatusChange(i)}
191 |         />
192 |         <IconButton icon="trash" onClick={handleConditionRemove(i)} />
193 |       </HorizontalGroup>
194 |     {/each}
195 |   </div>
196 |   <HorizontalGroup>
197 |     <Button variant="plain" on:click={handleConditionAdd}
198 |       ><Icon name="plus" />{$i18n.t("components.color.add")}</Button
199 |     >
200 |   </HorizontalGroup>
201 | </div>
202 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/color/ColorOptionsButton.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import type { ColorFilterDefinition } from "src/settings/settings";
 3 |   import type { DataField } from "src/lib/dataframe/dataframe";
 4 |   import ColorOptions from "./ColorOptions.svelte";
 5 |   import PopoverButton from "../PopoverButton.svelte";
 6 |   import { i18n } from "src/lib/stores/i18n";
 7 | 
 8 |   export let value: ColorFilterDefinition | undefined;
 9 |   export let onChange: (value: ColorFilterDefinition) => void;
10 | 
11 |   export let fields: DataField[];
12 |   export let disabled: boolean = false;
13 | </script>
14 | 
15 | <PopoverButton
16 |   label={$i18n.t("components.color.label")}
17 |   icon="palette"
18 |   count={value?.conditions.length ?? 0}
19 |   {disabled}
20 | >
21 |   <ColorOptions
22 |     filter={value ?? {
23 |       conditions: [],
24 |     }}
25 |     onFilterChange={onChange}
26 |     {fields}
27 |   />
28 | </PopoverButton>
29 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/color/helpers.ts:
--------------------------------------------------------------------------------
  1 | import { produce } from "immer";
  2 | import { DataFieldType, type DataField } from "src/lib/dataframe/dataframe";
  3 | import { v4 as uuidv4 } from "uuid";
  4 | import type {
  5 |   BaseFilterOperator,
  6 |   ColorFilterDefinition,
  7 |   ColorRule,
  8 |   FilterOperator,
  9 | } from "src/settings/settings";
 10 | import { get } from "svelte/store";
 11 | import { app } from "src/lib/stores/obsidian";
 12 | 
 13 | export type ColorRuleWithId = ColorRule & { readonly id: string };
 14 | 
 15 | export function setColor(
 16 |   value: ColorFilterDefinition,
 17 |   pos: number,
 18 |   color: string
 19 | ) {
 20 |   return produce(value, (draft) => {
 21 |     draft.conditions = draft.conditions.map((cond, idx) =>
 22 |       idx !== pos ? cond : { ...cond, color }
 23 |     );
 24 |   });
 25 | }
 26 | 
 27 | export function setField(
 28 |   value: ColorFilterDefinition,
 29 |   pos: number,
 30 |   field: string
 31 | ) {
 32 |   return produce(value, (draft) => {
 33 |     draft.conditions = draft.conditions.map((cond, idx) =>
 34 |       idx !== pos
 35 |         ? cond
 36 |         : {
 37 |             ...cond,
 38 |             condition: {
 39 |               ...cond.condition,
 40 |               field,
 41 |               operator: "is-empty",
 42 |             },
 43 |           }
 44 |     );
 45 |   });
 46 | }
 47 | export function setOperator(
 48 |   value: ColorFilterDefinition,
 49 |   pos: number,
 50 |   operator: FilterOperator
 51 | ) {
 52 |   return produce(value, (draft) => {
 53 |     draft.conditions = draft.conditions.map<ColorRule>((cond, idx) =>
 54 |       idx !== pos
 55 |         ? cond
 56 |         : {
 57 |             ...cond,
 58 |             condition: {
 59 |               ...cond.condition,
 60 |               operator,
 61 |             },
 62 |           }
 63 |     );
 64 |   });
 65 | }
 66 | 
 67 | export function withIds<T>(values: T[]): Array<T & { id: string }> {
 68 |   return values.map((cond) => ({ ...cond, id: uuidv4() }));
 69 | }
 70 | 
 71 | export function stripIds<T>(
 72 |   values: Array<T & { id: string }>
 73 | ): Array<Omit<T, "id">> {
 74 |   return values.map((value) => {
 75 |     const { id, ...rest } = value;
 76 |     return rest;
 77 |   });
 78 | }
 79 | 
 80 | export function setValue(
 81 |   filter: ColorFilterDefinition,
 82 |   pos: number,
 83 |   value: string
 84 | ) {
 85 |   return produce(filter, (draft) => {
 86 |     draft.conditions = draft.conditions.map((cond, idx) =>
 87 |       idx !== pos
 88 |         ? cond
 89 |         : {
 90 |             ...cond,
 91 |             condition: {
 92 |               ...cond.condition,
 93 |               value,
 94 |             },
 95 |           }
 96 |     );
 97 |   });
 98 | }
 99 | 
100 | export function setEnabled(
101 |   value: ColorFilterDefinition,
102 |   pos: number,
103 |   enabled: boolean
104 | ) {
105 |   return produce(value, (draft) => {
106 |     draft.conditions = draft.conditions.map((cond, idx) =>
107 |       idx !== pos
108 |         ? cond
109 |         : {
110 |             ...cond,
111 |             condition: {
112 |               ...cond.condition,
113 |               enabled,
114 |             },
115 |           }
116 |     );
117 |   });
118 | }
119 | 
120 | export function addCondition(
121 |   filter: ColorFilterDefinition,
122 |   fields: DataField[]
123 | ) {
124 |   return produce(filter, (draft) => {
125 |     draft.conditions.push({
126 |       color: get(app).vault.config.accentColor ?? "#a882ff", // Obsidian purple
127 |       condition: {
128 |         field: fields.at(0)?.name ?? "",
129 |         operator: "is-not-empty",
130 |         enabled: true,
131 |       },
132 |     });
133 |   });
134 | }
135 | 
136 | export function removeCondition(filter: ColorFilterDefinition, pos: number) {
137 |   return produce(filter, (draft) => {
138 |     draft.conditions.splice(pos, 1);
139 |   });
140 | }
141 | 
142 | export function getFieldByName(
143 |   fields: DataField[],
144 |   fieldName: string
145 | ): DataField | undefined {
146 |   return fields.find((field) => field.name === fieldName);
147 | }
148 | 
149 | export function getOperatorsByField(field: DataField): Array<{
150 |   label: string;
151 |   value: FilterOperator;
152 | }> {
153 |   const baseOperators: Array<{
154 |     label: string;
155 |     value: BaseFilterOperator;
156 |   }> = [
157 |     { label: "is not empty", value: "is-not-empty" },
158 |     { label: "is empty", value: "is-empty" },
159 |   ];
160 | 
161 |   if (field.repeated) {
162 |     return [
163 |       ...baseOperators,
164 |       { label: "has any of", value: "has-any-of" },
165 |       { label: "has all of", value: "has-all-of" },
166 |       { label: "has none of", value: "has-none-of" },
167 |       { label: "has keyword", value: "has-keyword" },
168 |     ];
169 |   }
170 | 
171 |   switch (field.type) {
172 |     case DataFieldType.String:
173 |       return [
174 |         ...baseOperators,
175 |         { label: "is", value: "is" },
176 |         { label: "is not", value: "is-not" },
177 |         { label: "contains", value: "contains" },
178 |         { label: "does not contain", value: "not-contains" },
179 |       ];
180 |     case DataFieldType.Boolean:
181 |       return [
182 |         ...baseOperators,
183 |         { label: "is checked", value: "is-checked" },
184 |         { label: "is not checked", value: "is-not-checked" },
185 |       ];
186 |     case DataFieldType.Number:
187 |       return [
188 |         ...baseOperators,
189 |         { label: "=", value: "eq" },
190 |         { label: "≠", value: "neq" },
191 |         { label: "<", value: "lt" },
192 |         { label: ">", value: "gt" },
193 |         { label: "≤", value: "lte" },
194 |         { label: "≥", value: "gte" },
195 |       ];
196 |     case DataFieldType.Date:
197 |       return [
198 |         ...baseOperators,
199 |         { label: "is on", value: "is-on" },
200 |         { label: "is not on", value: "is-not-on" },
201 |         { label: "is before", value: "is-before" },
202 |         { label: "is after", value: "is-after" },
203 |         { label: "is on and before", value: "is-on-and-before" },
204 |         { label: "is on and after", value: "is-on-and-after" },
205 |       ];
206 |   }
207 | 
208 |   return baseOperators;
209 | }
210 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/filter/FilterOptions.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { produce } from "immer";
  3 |   import dayjs from "dayjs";
  4 |   import {
  5 |     Button,
  6 |     IconButton,
  7 |     Icon,
  8 |     Select,
  9 |     TextInput,
 10 |     NumberInput,
 11 |     Checkbox,
 12 |     // DateInput,
 13 |     // DatetimeInput,
 14 |   } from "obsidian-svelte";
 15 |   import DateInput from "src/ui/components/DateInput.svelte";
 16 |   import DatetimeInput from "src/ui/components/DatetimeInput.svelte";
 17 |   import { TagsInput } from "src/ui/components/TagsInput";
 18 |   import HorizontalGroup from "src/ui/components/HorizontalGroup/HorizontalGroup.svelte";
 19 |   import type { DataField } from "src/lib/dataframe/dataframe";
 20 |   import {
 21 |     filterOperatorTypes,
 22 |     getFilterOperatorType,
 23 |     type FilterDefinition,
 24 |     type FilterOperator,
 25 |   } from "src/settings/settings";
 26 |   import { fieldsToSelectOptions } from "../helpers";
 27 |   import {
 28 |     addCondition,
 29 |     getFieldByName,
 30 |     getOperatorsByField,
 31 |     removeCondition,
 32 |     setField,
 33 |     setOperator,
 34 |     setValue,
 35 |   } from "./helpers";
 36 |   import { i18n } from "src/lib/stores/i18n";
 37 | 
 38 |   export let filter: FilterDefinition;
 39 |   export let fields: DataField[];
 40 |   export let onFilterChange: (filter: FilterDefinition) => void;
 41 | 
 42 |   $: fieldOptions = fieldsToSelectOptions(fields);
 43 | 
 44 |   const handleConjunctionChange = ({ detail }: CustomEvent<string>) => {
 45 |     filter = { ...filter, conjunction: detail as "and" | "or" };
 46 |     onFilterChange(filter);
 47 |   };
 48 | 
 49 |   const handleFieldChange =
 50 |     (i: number) =>
 51 |     ({ detail }: CustomEvent<string>) => {
 52 |       filter = setField(filter, i, detail);
 53 |       onFilterChange(filter);
 54 |     };
 55 | 
 56 |   const handleOperatorChange =
 57 |     (i: number) =>
 58 |     ({ detail }: CustomEvent<string>) => {
 59 |       if (
 60 |         getFilterOperatorType(detail as FilterOperator) !==
 61 |         getFilterOperatorType(filter.conditions[i]?.operator)
 62 |       ) {
 63 |         //TODO: potential type conversion here.
 64 |         filter = setValue(filter, i, "");
 65 |       }
 66 |       filter = setOperator(filter, i, detail as FilterOperator);
 67 |       onFilterChange(filter);
 68 |     };
 69 | 
 70 |   const handleValueChange = (i: number) => (event: FocusEvent) => {
 71 |     if (event.currentTarget instanceof HTMLInputElement) {
 72 |       filter = setValue(filter, i, event.currentTarget.value);
 73 |       onFilterChange(filter);
 74 |     }
 75 |   };
 76 | 
 77 |   const handleStatusChange =
 78 |     (i: number) =>
 79 |     ({ detail }: CustomEvent<boolean>) => {
 80 |       filter = produce(filter, (draft) => {
 81 |         draft.conditions = draft.conditions.map((cond, idx) =>
 82 |           idx !== i ? cond : { ...cond, enabled: detail as boolean }
 83 |         );
 84 |       });
 85 |       onFilterChange(filter);
 86 |     };
 87 | 
 88 |   const handleConditionRemove = (i: number) => (event: MouseEvent) => {
 89 |     event.stopPropagation();
 90 |     filter = removeCondition(filter, i);
 91 |     onFilterChange(filter);
 92 |   };
 93 | 
 94 |   function handleConditionAdd() {
 95 |     filter = addCondition(filter, fields);
 96 |     onFilterChange(filter);
 97 |   }
 98 | </script>
 99 | 
100 | <div style="display: flex; flex-direction: column; gap: 8px;">
101 |   {#each filter.conditions as condition, i}
102 |     {@const field = getFieldByName(fields, condition.field)}
103 |     <HorizontalGroup>
104 |       <div class="setting-item-name" style="width: 8ch">
105 |         {#if i === 0}
106 |           {$i18n.t("components.filter.where")}
107 |         {:else}
108 |           <Select
109 |             value={filter.conjunction ?? "and"}
110 |             disabled={i !== 1}
111 |             options={[
112 |               { label: $i18n.t("components.filter.and"), value: "and" },
113 |               { label: $i18n.t("components.filter.or"), value: "or" },
114 |             ]}
115 |             on:change={handleConjunctionChange}
116 |           />
117 |         {/if}
118 |       </div>
119 |       <Select
120 |         value={condition.field}
121 |         options={fieldOptions}
122 |         on:change={handleFieldChange(i)}
123 |       />
124 |       <Select
125 |         value={condition.operator}
126 |         on:change={handleOperatorChange(i)}
127 |         options={field ? getOperatorsByField(field) : []}
128 |       />
129 |       {#if filterOperatorTypes[condition.operator] === "binary-text"}
130 |         <TextInput
131 |           value={condition.value ?? ""}
132 |           on:blur={handleValueChange(i)}
133 |         />
134 |       {:else if filterOperatorTypes[condition.operator] === "binary-number"}
135 |         <NumberInput
136 |           value={parseFloat(condition.value ?? "")}
137 |           on:blur={handleValueChange(i)}
138 |         />
139 |       {:else if filterOperatorTypes[condition.operator] === "binary-date"}
140 |         {#if field?.typeConfig?.time}
141 |           <DatetimeInput
142 |             value={dayjs(condition.value ?? "").toDate()}
143 |             on:blur={handleValueChange(i)}
144 |           />
145 |         {:else}
146 |           <DateInput
147 |             value={dayjs(condition.value ?? "").toDate()}
148 |             on:blur={handleValueChange(i)}
149 |           />
150 |         {/if}
151 |       {:else if filterOperatorTypes[condition.operator] === "binary-multitext"}
152 |         <TagsInput
153 |           strict={condition.field === "binary-multitext"}
154 |           unique={true}
155 |           value={condition.value ? JSON.parse(condition.value) : []}
156 |           on:change={(event) => {
157 |             filter = setValue(filter, i, event.detail);
158 |             onFilterChange(filter);
159 |           }}
160 |         />
161 |       {/if}
162 |       <Checkbox
163 |         checked={condition?.enabled ?? true}
164 |         on:check={handleStatusChange(i)}
165 |       />
166 |       <IconButton icon="trash" onClick={handleConditionRemove(i)} />
167 |     </HorizontalGroup>
168 |   {/each}
169 |   <HorizontalGroup>
170 |     <Button variant="plain" on:click={handleConditionAdd}
171 |       ><Icon name="plus" />{$i18n.t("components.filter.add")}</Button
172 |     >
173 |   </HorizontalGroup>
174 | </div>
175 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/filter/FilterOptionsButton.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import type { DataField } from "src/lib/dataframe/dataframe";
 3 |   import type { FilterDefinition } from "src/settings/settings";
 4 |   import FilterOptions from "./FilterOptions.svelte";
 5 |   import PopoverButton from "../PopoverButton.svelte";
 6 |   import { i18n } from "src/lib/stores/i18n";
 7 | 
 8 |   export let value: FilterDefinition | undefined;
 9 |   export let onChange: (value: FilterDefinition) => void;
10 | 
11 |   export let fields: DataField[];
12 |   export let disabled: boolean = false;
13 | </script>
14 | 
15 | <PopoverButton
16 |   label={$i18n.t("components.filter.label")}
17 |   icon="filter"
18 |   count={value?.conditions.length ?? 0}
19 |   {disabled}
20 | >
21 |   <FilterOptions
22 |     filter={value ?? {
23 |       conjunction: "and",
24 |       conditions: [],
25 |     }}
26 |     {fields}
27 |     onFilterChange={onChange}
28 |   />
29 | </PopoverButton>
30 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/filter/helpers.ts:
--------------------------------------------------------------------------------
  1 | import { produce } from "immer";
  2 | import { DataFieldType, type DataField } from "src/lib/dataframe/dataframe";
  3 | import type {
  4 |   BaseFilterOperator,
  5 |   FilterDefinition,
  6 |   FilterOperator,
  7 | } from "src/settings/settings";
  8 | 
  9 | export function setField(filter: FilterDefinition, pos: number, field: string) {
 10 |   return produce(filter, (draft) => {
 11 |     draft.conditions = draft.conditions.map((cond, idx) =>
 12 |       idx !== pos
 13 |         ? cond
 14 |         : {
 15 |             ...cond,
 16 |             field,
 17 |             operator: "is-empty",
 18 |           }
 19 |     );
 20 |   });
 21 | }
 22 | 
 23 | export function setOperator(
 24 |   filter: FilterDefinition,
 25 |   pos: number,
 26 |   operator: FilterOperator
 27 | ) {
 28 |   return produce(filter, (draft) => {
 29 |     draft.conditions = draft.conditions.map((cond, idx) =>
 30 |       idx !== pos ? cond : { ...cond, operator }
 31 |     );
 32 |   });
 33 | }
 34 | 
 35 | export function setValue(filter: FilterDefinition, pos: number, value: string) {
 36 |   return produce(filter, (draft) => {
 37 |     draft.conditions = draft.conditions.map((cond, idx) =>
 38 |       idx !== pos ? cond : { ...cond, value }
 39 |     );
 40 |   });
 41 | }
 42 | 
 43 | export function removeCondition(filter: FilterDefinition, pos: number) {
 44 |   return produce(filter, (draft) => {
 45 |     draft.conditions.splice(pos, 1);
 46 |   });
 47 | }
 48 | 
 49 | export function addCondition(filter: FilterDefinition, fields: DataField[]) {
 50 |   return produce(filter, (draft) => {
 51 |     draft.conditions.push({
 52 |       field: fields.at(0)?.name ?? "",
 53 |       operator: "is-not-empty",
 54 |       enabled: true,
 55 |     });
 56 |   });
 57 | }
 58 | 
 59 | export function getFieldByName(
 60 |   fields: DataField[],
 61 |   fieldName: string
 62 | ): DataField | undefined {
 63 |   return fields.find((field) => field.name === fieldName);
 64 | }
 65 | 
 66 | export function getOperatorsByField(field: DataField): Array<{
 67 |   label: string;
 68 |   value: FilterOperator;
 69 | }> {
 70 |   const baseOperators: Array<{
 71 |     label: string;
 72 |     value: BaseFilterOperator;
 73 |   }> = [
 74 |     { label: "is not empty", value: "is-not-empty" },
 75 |     { label: "is empty", value: "is-empty" },
 76 |   ];
 77 | 
 78 |   if (field.repeated) {
 79 |     return [
 80 |       ...baseOperators,
 81 |       { label: "has any of", value: "has-any-of" },
 82 |       { label: "has all of", value: "has-all-of" },
 83 |       { label: "has none of", value: "has-none-of" },
 84 |       { label: "has keyword", value: "has-keyword" },
 85 |     ];
 86 |   }
 87 | 
 88 |   switch (field.type) {
 89 |     case DataFieldType.String:
 90 |       return [
 91 |         ...baseOperators,
 92 |         { label: "is", value: "is" },
 93 |         { label: "is not", value: "is-not" },
 94 |         { label: "contains", value: "contains" },
 95 |         { label: "does not contain", value: "not-contains" },
 96 |       ];
 97 |     case DataFieldType.Boolean:
 98 |       return [
 99 |         ...baseOperators,
100 |         { label: "is checked", value: "is-checked" },
101 |         { label: "is not checked", value: "is-not-checked" },
102 |       ];
103 |     case DataFieldType.Number:
104 |       return [
105 |         ...baseOperators,
106 |         { label: "=", value: "eq" },
107 |         { label: "≠", value: "neq" },
108 |         { label: "<", value: "lt" },
109 |         { label: ">", value: "gt" },
110 |         { label: "≤", value: "lte" },
111 |         { label: "≥", value: "gte" },
112 |       ];
113 |     case DataFieldType.Date:
114 |       return [
115 |         ...baseOperators,
116 |         { label: "is on", value: "is-on" },
117 |         { label: "is not on", value: "is-not-on" },
118 |         { label: "is before", value: "is-before" },
119 |         { label: "is after", value: "is-after" },
120 |         { label: "is on and before", value: "is-on-and-before" },
121 |         { label: "is on and after", value: "is-on-and-after" },
122 |       ];
123 |   }
124 | 
125 |   return baseOperators;
126 | }
127 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/helpers.ts:
--------------------------------------------------------------------------------
 1 | import type { DataField } from "src/lib/dataframe/dataframe";
 2 | 
 3 | export type SelectOption = { label: string; value: string };
 4 | 
 5 | export function fieldsToSelectOptions(fields: DataField[]): SelectOption[] {
 6 |   return fields.map((field) => ({
 7 |     label: field.name,
 8 |     value: field.name,
 9 |   }));
10 | }
11 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/sort/SortOptions.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Button, IconButton, Icon, Select, Checkbox } from "obsidian-svelte";
 3 |   import HorizontalGroup from "src/ui/components/HorizontalGroup/HorizontalGroup.svelte";
 4 |   import type { DataField } from "src/lib/dataframe/dataframe";
 5 |   import type { SortDefinition } from "src/settings/settings";
 6 |   import {
 7 |     addCriterium,
 8 |     getFieldByName,
 9 |     getOrderByField,
10 |     removeCriterium,
11 |     setEnabled,
12 |     setField,
13 |     setOrder,
14 |   } from "./helpers";
15 |   import { fieldsToSelectOptions } from "../helpers";
16 |   import { i18n } from "src/lib/stores/i18n";
17 | 
18 |   export let value: SortDefinition;
19 |   export let onChange: (value: SortDefinition) => void;
20 |   export let fields: DataField[];
21 | 
22 |   $: fieldOptions = fieldsToSelectOptions(fields);
23 | 
24 |   const handleFieldChange =
25 |     (i: number) =>
26 |     ({ detail }: CustomEvent<string>) => {
27 |       value = setField(value, i, detail);
28 |       onChange(value);
29 |     };
30 | 
31 |   const handleOrderChange =
32 |     (i: number) =>
33 |     ({ detail }: CustomEvent<string>) => {
34 |       if (detail === "asc" || detail === "desc") {
35 |         value = setOrder(value, i, detail);
36 |         onChange(value);
37 |       }
38 |     };
39 | 
40 |   const handleStatusChange =
41 |     (i: number) =>
42 |     ({ detail }: CustomEvent<boolean>) => {
43 |       value = setEnabled(value, i, detail);
44 |       onChange(value);
45 |     };
46 | 
47 |   const handleConditionRemove = (i: number) => (event: MouseEvent) => {
48 |     event.stopPropagation();
49 |     value = removeCriterium(value, i);
50 |     onChange(value);
51 |   };
52 | 
53 |   const handleConditionAdd = () => {
54 |     value = addCriterium(value, fields);
55 |     onChange(value);
56 |   };
57 | </script>
58 | 
59 | <div style="display: flex; flex-direction: column; gap: 8px;">
60 |   {#each value.criteria as criterium, i}
61 |     {@const field = getFieldByName(fields, criterium.field)}
62 | 
63 |     <HorizontalGroup>
64 |       <Select
65 |         value={criterium.field}
66 |         options={fieldOptions}
67 |         on:change={handleFieldChange(i)}
68 |       />
69 |       <Select
70 |         value={criterium.order}
71 |         on:change={handleOrderChange(i)}
72 |         options={field ? getOrderByField(field) : []}
73 |       />
74 |       <Checkbox checked={criterium.enabled} on:check={handleStatusChange(i)} />
75 |       <IconButton icon="trash" onClick={handleConditionRemove(i)} />
76 |     </HorizontalGroup>
77 |   {/each}
78 |   <HorizontalGroup>
79 |     <Button variant="plain" on:click={handleConditionAdd}
80 |       ><Icon name="plus" />{$i18n.t("components.sort.add")}</Button
81 |     >
82 |   </HorizontalGroup>
83 | </div>
84 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/sort/SortOptionsButton.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import type { DataField } from "src/lib/dataframe/dataframe";
 3 |   import type { SortDefinition } from "src/settings/settings";
 4 |   import SortOptions from "./SortOptions.svelte";
 5 |   import PopoverButton from "../PopoverButton.svelte";
 6 |   import { i18n } from "src/lib/stores/i18n";
 7 | 
 8 |   export let value: SortDefinition | undefined;
 9 |   export let onChange: (value: SortDefinition) => void;
10 | 
11 |   export let fields: DataField[];
12 |   export let disabled: boolean = false;
13 | </script>
14 | 
15 | <PopoverButton
16 |   label={$i18n.t("components.sort.label")}
17 |   icon="sort-desc"
18 |   count={value?.criteria.length ?? 0}
19 |   {disabled}
20 | >
21 |   <SortOptions
22 |     value={value ?? {
23 |       criteria: [],
24 |     }}
25 |     {fields}
26 |     {onChange}
27 |   />
28 | </PopoverButton>
29 | 


--------------------------------------------------------------------------------
/src/ui/app/toolbar/viewOptions/sort/helpers.ts:
--------------------------------------------------------------------------------
 1 | import { produce } from "immer";
 2 | import { DataFieldType, type DataField } from "src/lib/dataframe/dataframe";
 3 | import type { SortDefinition, SortOrder } from "src/settings/settings";
 4 | 
 5 | export function setField(value: SortDefinition, pos: number, field: string) {
 6 |   return produce(value, (draft) => {
 7 |     draft.criteria = draft.criteria.map((cond, idx) =>
 8 |       idx !== pos
 9 |         ? cond
10 |         : {
11 |             ...cond,
12 |             field: field,
13 |             order: "asc",
14 |           }
15 |     );
16 |   });
17 | }
18 | 
19 | export function setOrder(value: SortDefinition, pos: number, order: SortOrder) {
20 |   return produce(value, (draft) => {
21 |     draft.criteria = draft.criteria.map((cond, idx) =>
22 |       idx !== pos ? cond : { ...cond, order }
23 |     );
24 |   });
25 | }
26 | 
27 | export function setEnabled(
28 |   value: SortDefinition,
29 |   pos: number,
30 |   enabled: boolean
31 | ) {
32 |   return produce(value, (draft) => {
33 |     draft.criteria = draft.criteria.map((cond, idx) =>
34 |       idx !== pos ? cond : { ...cond, enabled }
35 |     );
36 |   });
37 | }
38 | 
39 | export function addCriterium(value: SortDefinition, fields: DataField[]) {
40 |   return produce(value, (draft) => {
41 |     draft.criteria.push({
42 |       field: fields.at(0)?.name ?? "",
43 |       order: "asc",
44 |       enabled: true,
45 |     });
46 |   });
47 | }
48 | 
49 | export function removeCriterium(value: SortDefinition, pos: number) {
50 |   return produce(value, (draft) => {
51 |     draft.criteria.splice(pos, 1);
52 |   });
53 | }
54 | 
55 | export function getFieldByName(
56 |   fields: DataField[],
57 |   fieldName: string
58 | ): DataField | undefined {
59 |   return fields.find((field) => field.name === fieldName);
60 | }
61 | 
62 | export function getOrderByField(field: DataField): Array<{
63 |   label: string;
64 |   value: SortOrder;
65 | }> {
66 |   switch (field.type) {
67 |     case DataFieldType.String:
68 |       return [
69 |         { label: "A → Z", value: "asc" },
70 |         { label: "Z → A", value: "desc" },
71 |       ];
72 |     case DataFieldType.Number:
73 |       return [
74 |         { label: "1 → 9", value: "asc" },
75 |         { label: "9 → 1", value: "desc" },
76 |       ];
77 |     case DataFieldType.Boolean:
78 |       return [
79 |         { label: "False → True", value: "asc" },
80 |         { label: "True → False", value: "desc" },
81 |       ];
82 |     case DataFieldType.Date:
83 |       return [
84 |         { label: "Oldest → Newest", value: "asc" },
85 |         { label: "Newest → Oldest", value: "desc" },
86 |       ];
87 |     default:
88 |       return [
89 |         { label: "Asc", value: "asc" },
90 |         { label: "Desc", value: "desc" },
91 |       ];
92 |   }
93 | }
94 | 


--------------------------------------------------------------------------------
/src/ui/app/useView.ts:
--------------------------------------------------------------------------------
 1 | import { get } from "svelte/store";
 2 | 
 3 | import type {
 4 |   DataQueryResult,
 5 |   ProjectView,
 6 |   ProjectViewProps,
 7 | } from "src/customViewApi";
 8 | import type { DataRecord } from "src/lib/dataframe/dataframe";
 9 | import { customViews } from "src/lib/stores/customViews";
10 | import type { ViewApi } from "src/lib/viewApi";
11 | import type { ProjectDefinition, ViewDefinition } from "src/settings/settings";
12 | 
13 | export interface ViewProps {
14 |   view: ViewDefinition;
15 |   dataProps: DataQueryResult;
16 |   config: Record<string, any>;
17 |   onConfigChange: (config: Record<string, any>) => void;
18 |   viewApi: ViewApi;
19 |   readonly: boolean;
20 |   project: ProjectDefinition;
21 |   getRecordColor: (record: DataRecord) => string | null;
22 |   sortRecords: ProjectViewProps["sortRecords"];
23 |   getRecord: ProjectViewProps["getRecord"];
24 | }
25 | 
26 | export function useView(node: HTMLElement, props: ViewProps) {
27 |   // Keep track of previous view id to determine if view should be invalidated.
28 |   let viewId: string;
29 |   const projectId = props.project.id;
30 |   let projectView: ProjectView<Record<string, any>> | undefined;
31 | 
32 |   const update = (newprops: ViewProps) => {
33 |     // User switched to a different view.
34 |     const dirty =
35 |       newprops.view.id !== viewId || newprops.project.id !== projectId;
36 | 
37 |     if (dirty) {
38 |       // Clean up previous view.
39 |       projectView?.onClose();
40 | 
41 |       node.empty();
42 | 
43 |       // Look up the next view.
44 |       projectView = get(customViews)[newprops.view.type];
45 | 
46 |       if (projectView) {
47 |         projectView.onOpen({
48 |           contentEl: node,
49 |           viewId: newprops.view.id,
50 |           project: newprops.project,
51 |           viewApi: newprops.viewApi,
52 |           readonly: newprops.readonly,
53 |           config: newprops.config,
54 |           saveConfig: newprops.onConfigChange,
55 |           getRecordColor: newprops.getRecordColor,
56 |           sortRecords: newprops.sortRecords,
57 |           getRecord: newprops.getRecord,
58 |         });
59 |         projectView.onData(newprops.dataProps);
60 |       }
61 | 
62 |       viewId = newprops.view.id;
63 |     } else {
64 |       projectView?.onData(newprops.dataProps);
65 |     }
66 |   };
67 | 
68 |   update(props);
69 | 
70 |   return {
71 |     update,
72 |     destroy() {
73 |       projectView?.onClose();
74 |     },
75 |   };
76 | }
77 | 


--------------------------------------------------------------------------------
/src/ui/app/viewSort.test.ts:
--------------------------------------------------------------------------------
  1 | import { describe, expect, it } from "@jest/globals";
  2 | import { applySort } from "./viewSort";
  3 | 
  4 | describe("applySort", () => {
  5 |   const frame = {
  6 |     fields: [],
  7 |     records: [
  8 |       {
  9 |         id: "Alice.md",
 10 |         values: {
 11 |           author: "Alice",
 12 |           age: 1,
 13 |           due: new Date(Date.UTC(2001, 1, 1)),
 14 |           weight: 10,
 15 |         },
 16 |       },
 17 |       {
 18 |         id: "Charlie.md",
 19 |         values: {
 20 |           author: "Charlie",
 21 |           age: 3,
 22 |           due: new Date(Date.UTC(2021, 1, 1)),
 23 |           weight: 100,
 24 |         },
 25 |       },
 26 |       {
 27 |         id: "Bob.md",
 28 |         values: {
 29 |           author: "Bob",
 30 |           age: 2,
 31 |           due: new Date(Date.UTC(2011, 1, 1)),
 32 |           weight: 100,
 33 |         },
 34 |       },
 35 |     ],
 36 |   };
 37 | 
 38 |   it("sort by string asc", () => {
 39 |     const sorted = applySort(frame, {
 40 |       criteria: [{ field: "author", order: "asc", enabled: true }],
 41 |     });
 42 | 
 43 |     expect(sorted).toStrictEqual({
 44 |       fields: [],
 45 |       records: [
 46 |         {
 47 |           id: "Alice.md",
 48 |           values: {
 49 |             author: "Alice",
 50 |             age: 1,
 51 |             due: new Date(Date.UTC(2001, 1, 1)),
 52 |             weight: 10,
 53 |           },
 54 |         },
 55 |         {
 56 |           id: "Bob.md",
 57 |           values: {
 58 |             author: "Bob",
 59 |             age: 2,
 60 |             due: new Date(Date.UTC(2011, 1, 1)),
 61 |             weight: 100,
 62 |           },
 63 |         },
 64 |         {
 65 |           id: "Charlie.md",
 66 |           values: {
 67 |             author: "Charlie",
 68 |             age: 3,
 69 |             due: new Date(Date.UTC(2021, 1, 1)),
 70 |             weight: 100,
 71 |           },
 72 |         },
 73 |       ],
 74 |     });
 75 |   });
 76 | 
 77 |   it("sort by string desc", () => {
 78 |     const sorted = applySort(frame, {
 79 |       criteria: [{ field: "author", order: "desc", enabled: true }],
 80 |     });
 81 | 
 82 |     expect(sorted).toStrictEqual({
 83 |       fields: [],
 84 |       records: [
 85 |         {
 86 |           id: "Charlie.md",
 87 |           values: {
 88 |             author: "Charlie",
 89 |             age: 3,
 90 |             due: new Date(Date.UTC(2021, 1, 1)),
 91 |             weight: 100,
 92 |           },
 93 |         },
 94 |         {
 95 |           id: "Bob.md",
 96 |           values: {
 97 |             author: "Bob",
 98 |             age: 2,
 99 |             due: new Date(Date.UTC(2011, 1, 1)),
100 |             weight: 100,
101 |           },
102 |         },
103 |         {
104 |           id: "Alice.md",
105 |           values: {
106 |             author: "Alice",
107 |             age: 1,
108 |             due: new Date(Date.UTC(2001, 1, 1)),
109 |             weight: 10,
110 |           },
111 |         },
112 |       ],
113 |     });
114 |   });
115 | 
116 |   it("sort by number asc", () => {
117 |     const sorted = applySort(frame, {
118 |       criteria: [{ field: "age", order: "asc", enabled: true }],
119 |     });
120 | 
121 |     expect(sorted).toStrictEqual({
122 |       fields: [],
123 |       records: [
124 |         {
125 |           id: "Alice.md",
126 |           values: {
127 |             author: "Alice",
128 |             age: 1,
129 |             due: new Date(Date.UTC(2001, 1, 1)),
130 |             weight: 10,
131 |           },
132 |         },
133 |         {
134 |           id: "Bob.md",
135 |           values: {
136 |             author: "Bob",
137 |             age: 2,
138 |             due: new Date(Date.UTC(2011, 1, 1)),
139 |             weight: 100,
140 |           },
141 |         },
142 |         {
143 |           id: "Charlie.md",
144 |           values: {
145 |             author: "Charlie",
146 |             age: 3,
147 |             due: new Date(Date.UTC(2021, 1, 1)),
148 |             weight: 100,
149 |           },
150 |         },
151 |       ],
152 |     });
153 |   });
154 | 
155 |   it("sort by number desc", () => {
156 |     const sorted = applySort(frame, {
157 |       criteria: [{ field: "age", order: "desc", enabled: true }],
158 |     });
159 | 
160 |     expect(sorted).toStrictEqual({
161 |       fields: [],
162 |       records: [
163 |         {
164 |           id: "Charlie.md",
165 |           values: {
166 |             author: "Charlie",
167 |             age: 3,
168 |             due: new Date(Date.UTC(2021, 1, 1)),
169 |             weight: 100,
170 |           },
171 |         },
172 |         {
173 |           id: "Bob.md",
174 |           values: {
175 |             author: "Bob",
176 |             age: 2,
177 |             due: new Date(Date.UTC(2011, 1, 1)),
178 |             weight: 100,
179 |           },
180 |         },
181 |         {
182 |           id: "Alice.md",
183 |           values: {
184 |             author: "Alice",
185 |             age: 1,
186 |             due: new Date(Date.UTC(2001, 1, 1)),
187 |             weight: 10,
188 |           },
189 |         },
190 |       ],
191 |     });
192 |   });
193 | 
194 |   it("sort by date asc", () => {
195 |     const sorted = applySort(frame, {
196 |       criteria: [{ field: "due", order: "asc", enabled: true }],
197 |     });
198 | 
199 |     expect(sorted).toStrictEqual({
200 |       fields: [],
201 |       records: [
202 |         {
203 |           id: "Alice.md",
204 |           values: {
205 |             author: "Alice",
206 |             age: 1,
207 |             due: new Date(Date.UTC(2001, 1, 1)),
208 |             weight: 10,
209 |           },
210 |         },
211 |         {
212 |           id: "Bob.md",
213 |           values: {
214 |             author: "Bob",
215 |             age: 2,
216 |             due: new Date(Date.UTC(2011, 1, 1)),
217 |             weight: 100,
218 |           },
219 |         },
220 |         {
221 |           id: "Charlie.md",
222 |           values: {
223 |             author: "Charlie",
224 |             age: 3,
225 |             due: new Date(Date.UTC(2021, 1, 1)),
226 |             weight: 100,
227 |           },
228 |         },
229 |       ],
230 |     });
231 |   });
232 | 
233 |   it("sort by date desc", () => {
234 |     const sorted = applySort(frame, {
235 |       criteria: [{ field: "due", order: "desc", enabled: true }],
236 |     });
237 | 
238 |     expect(sorted).toStrictEqual({
239 |       fields: [],
240 |       records: [
241 |         {
242 |           id: "Charlie.md",
243 |           values: {
244 |             author: "Charlie",
245 |             age: 3,
246 |             due: new Date(Date.UTC(2021, 1, 1)),
247 |             weight: 100,
248 |           },
249 |         },
250 |         {
251 |           id: "Bob.md",
252 |           values: {
253 |             author: "Bob",
254 |             age: 2,
255 |             due: new Date(Date.UTC(2011, 1, 1)),
256 |             weight: 100,
257 |           },
258 |         },
259 |         {
260 |           id: "Alice.md",
261 |           values: {
262 |             author: "Alice",
263 |             age: 1,
264 |             due: new Date(Date.UTC(2001, 1, 1)),
265 |             weight: 10,
266 |           },
267 |         },
268 |       ],
269 |     });
270 |   });
271 | 
272 |   it("sort by number (asc) and string (asc)", () => {
273 |     const sorted = applySort(frame, {
274 |       criteria: [
275 |         { field: "weight", order: "asc", enabled: true },
276 |         { field: "author", order: "asc", enabled: true },
277 |       ],
278 |     });
279 | 
280 |     expect(sorted).toStrictEqual({
281 |       fields: [],
282 |       records: [
283 |         {
284 |           id: "Alice.md",
285 |           values: {
286 |             author: "Alice",
287 |             age: 1,
288 |             due: new Date(Date.UTC(2001, 1, 1)),
289 |             weight: 10,
290 |           },
291 |         },
292 |         {
293 |           id: "Bob.md",
294 |           values: {
295 |             author: "Bob",
296 |             age: 2,
297 |             due: new Date(Date.UTC(2011, 1, 1)),
298 |             weight: 100,
299 |           },
300 |         },
301 |         {
302 |           id: "Charlie.md",
303 |           values: {
304 |             author: "Charlie",
305 |             age: 3,
306 |             due: new Date(Date.UTC(2021, 1, 1)),
307 |             weight: 100,
308 |           },
309 |         },
310 |       ],
311 |     });
312 |   });
313 | });
314 | 
315 | describe("natural sort", () => {
316 |   const frame = {
317 |     fields: [],
318 |     records: [
319 |       {
320 |         id: "Section 1.md",
321 |         values: {
322 |           section: "1.Introduction",
323 |         },
324 |       },
325 |       {
326 |         id: "Section 11.md",
327 |         values: {
328 |           section: "11.References",
329 |         },
330 |       },
331 |       {
332 |         id: "Section 3.md",
333 |         values: {
334 |           section: "3.Results",
335 |         },
336 |       },
337 |       {
338 |         id: "Section 10.md",
339 |         values: {
340 |           section: "10.Acknowledgement",
341 |         },
342 |       },
343 |       {
344 |         id: "Section 2.md",
345 |         values: {
346 |           section: "2.Methods",
347 |         },
348 |       },
349 |     ],
350 |   };
351 | 
352 |   it("should sort strings containing numbers naturally", () => {
353 |     const sorted = applySort(frame, {
354 |       criteria: [{ field: "section", order: "asc", enabled: true }],
355 |     });
356 | 
357 |     expect(sorted).toStrictEqual({
358 |       fields: [],
359 |       records: [
360 |         {
361 |           id: "Section 1.md",
362 |           values: {
363 |             section: "1.Introduction",
364 |           },
365 |         },
366 |         {
367 |           id: "Section 2.md",
368 |           values: {
369 |             section: "2.Methods",
370 |           },
371 |         },
372 |         {
373 |           id: "Section 3.md",
374 |           values: {
375 |             section: "3.Results",
376 |           },
377 |         },
378 |         {
379 |           id: "Section 10.md",
380 |           values: {
381 |             section: "10.Acknowledgement",
382 |           },
383 |         },
384 |         {
385 |           id: "Section 11.md",
386 |           values: {
387 |             section: "11.References",
388 |           },
389 |         },
390 |       ],
391 |     });
392 |   });
393 | });
394 | 
395 | describe("sort empty values to the end", () => {
396 |   const frame = {
397 |     fields: [],
398 |     records: [
399 |       {
400 |         id: "Bob.md",
401 |         values: {
402 |           author: null,
403 |           age: 2,
404 |           due: new Date(Date.UTC(2011, 1, 1)),
405 |         },
406 |       },
407 |       {
408 |         id: "Eve.md",
409 |         values: {
410 |           author: "",
411 |           age: 3,
412 |           due: new Date(Date.UTC(2031, 1, 1)),
413 |         },
414 |       },
415 |       {
416 |         id: "David.md",
417 |         values: {
418 |           author: undefined,
419 |           age: 4,
420 |           due: new Date(Date.UTC(2025, 1, 1)),
421 |         },
422 |       },
423 |       {
424 |         id: "Alice.md",
425 |         values: {
426 |           author: "Alice",
427 |           age: 1,
428 |           due: undefined,
429 |         },
430 |       },
431 |       {
432 |         id: "Charlie.md",
433 |         values: {
434 |           author: "Charlie",
435 |           age: null,
436 |           due: new Date(Date.UTC(2021, 1, 1)),
437 |         },
438 |       },
439 |     ],
440 |   };
441 | 
442 |   it("sort by string asc", () => {
443 |     const sorted = applySort(frame, {
444 |       criteria: [{ field: "author", order: "asc", enabled: true }],
445 |     });
446 | 
447 |     expect(sorted).toStrictEqual({
448 |       fields: [],
449 |       records: [
450 |         {
451 |           id: "Eve.md",
452 |           values: {
453 |             author: "",
454 |             age: 3,
455 |             due: new Date(Date.UTC(2031, 1, 1)),
456 |           },
457 |         },
458 |         {
459 |           id: "Alice.md",
460 |           values: {
461 |             author: "Alice",
462 |             age: 1,
463 |             due: undefined,
464 |           },
465 |         },
466 |         {
467 |           id: "Charlie.md",
468 |           values: {
469 |             author: "Charlie",
470 |             age: null,
471 |             due: new Date(Date.UTC(2021, 1, 1)),
472 |           },
473 |         },
474 |         {
475 |           id: "Bob.md",
476 |           values: {
477 |             author: null,
478 |             age: 2,
479 |             due: new Date(Date.UTC(2011, 1, 1)),
480 |           },
481 |         },
482 |         {
483 |           id: "David.md",
484 |           values: {
485 |             author: undefined,
486 |             age: 4,
487 |             due: new Date(Date.UTC(2025, 1, 1)),
488 |           },
489 |         },
490 |       ],
491 |     });
492 |   });
493 | 
494 |   it("sort by string desc", () => {
495 |     const sorted = applySort(frame, {
496 |       criteria: [{ field: "author", order: "desc", enabled: true }],
497 |     });
498 | 
499 |     expect(sorted).toStrictEqual({
500 |       fields: [],
501 |       records: [
502 |         {
503 |           id: "Charlie.md",
504 |           values: {
505 |             author: "Charlie",
506 |             age: null,
507 |             due: new Date(Date.UTC(2021, 1, 1)),
508 |           },
509 |         },
510 |         {
511 |           id: "Alice.md",
512 |           values: {
513 |             author: "Alice",
514 |             age: 1,
515 |             due: undefined,
516 |           },
517 |         },
518 |         {
519 |           id: "Eve.md",
520 |           values: {
521 |             author: "",
522 |             age: 3,
523 |             due: new Date(Date.UTC(2031, 1, 1)),
524 |           },
525 |         },
526 |         {
527 |           id: "Bob.md",
528 |           values: {
529 |             author: null,
530 |             age: 2,
531 |             due: new Date(Date.UTC(2011, 1, 1)),
532 |           },
533 |         },
534 |         {
535 |           id: "David.md",
536 |           values: {
537 |             author: undefined,
538 |             age: 4,
539 |             due: new Date(Date.UTC(2025, 1, 1)),
540 |           },
541 |         },
542 |       ],
543 |     });
544 |   });
545 | 
546 |   it("sort by number asc", () => {
547 |     const sorted = applySort(frame, {
548 |       criteria: [{ field: "age", order: "asc", enabled: true }],
549 |     });
550 | 
551 |     expect(sorted).toStrictEqual({
552 |       fields: [],
553 |       records: [
554 |         {
555 |           id: "Alice.md",
556 |           values: {
557 |             author: "Alice",
558 |             age: 1,
559 |             due: undefined,
560 |           },
561 |         },
562 |         {
563 |           id: "Bob.md",
564 |           values: {
565 |             author: null,
566 |             age: 2,
567 |             due: new Date(Date.UTC(2011, 1, 1)),
568 |           },
569 |         },
570 |         {
571 |           id: "Eve.md",
572 |           values: {
573 |             author: "",
574 |             age: 3,
575 |             due: new Date(Date.UTC(2031, 1, 1)),
576 |           },
577 |         },
578 |         {
579 |           id: "David.md",
580 |           values: {
581 |             author: undefined,
582 |             age: 4,
583 |             due: new Date(Date.UTC(2025, 1, 1)),
584 |           },
585 |         },
586 |         {
587 |           id: "Charlie.md",
588 |           values: {
589 |             author: "Charlie",
590 |             age: null,
591 |             due: new Date(Date.UTC(2021, 1, 1)),
592 |           },
593 |         },
594 |       ],
595 |     });
596 |   });
597 | 
598 |   it("sort by number desc", () => {
599 |     const sorted = applySort(frame, {
600 |       criteria: [{ field: "age", order: "desc", enabled: true }],
601 |     });
602 | 
603 |     expect(sorted).toStrictEqual({
604 |       fields: [],
605 |       records: [
606 |         {
607 |           id: "David.md",
608 |           values: {
609 |             author: undefined,
610 |             age: 4,
611 |             due: new Date(Date.UTC(2025, 1, 1)),
612 |           },
613 |         },
614 |         {
615 |           id: "Eve.md",
616 |           values: {
617 |             author: "",
618 |             age: 3,
619 |             due: new Date(Date.UTC(2031, 1, 1)),
620 |           },
621 |         },
622 |         {
623 |           id: "Bob.md",
624 |           values: {
625 |             author: null,
626 |             age: 2,
627 |             due: new Date(Date.UTC(2011, 1, 1)),
628 |           },
629 |         },
630 |         {
631 |           id: "Alice.md",
632 |           values: {
633 |             author: "Alice",
634 |             age: 1,
635 |             due: undefined,
636 |           },
637 |         },
638 |         {
639 |           id: "Charlie.md",
640 |           values: {
641 |             author: "Charlie",
642 |             age: null,
643 |             due: new Date(Date.UTC(2021, 1, 1)),
644 |           },
645 |         },
646 |       ],
647 |     });
648 |   });
649 | 
650 |   it("sort by date asc", () => {
651 |     const sorted = applySort(frame, {
652 |       criteria: [{ field: "due", order: "asc", enabled: true }],
653 |     });
654 | 
655 |     expect(sorted).toStrictEqual({
656 |       fields: [],
657 |       records: [
658 |         {
659 |           id: "Bob.md",
660 |           values: {
661 |             author: null,
662 |             age: 2,
663 |             due: new Date(Date.UTC(2011, 1, 1)),
664 |           },
665 |         },
666 |         {
667 |           id: "Charlie.md",
668 |           values: {
669 |             author: "Charlie",
670 |             age: null,
671 |             due: new Date(Date.UTC(2021, 1, 1)),
672 |           },
673 |         },
674 |         {
675 |           id: "David.md",
676 |           values: {
677 |             author: undefined,
678 |             age: 4,
679 |             due: new Date(Date.UTC(2025, 1, 1)),
680 |           },
681 |         },
682 |         {
683 |           id: "Eve.md",
684 |           values: {
685 |             author: "",
686 |             age: 3,
687 |             due: new Date(Date.UTC(2031, 1, 1)),
688 |           },
689 |         },
690 |         {
691 |           id: "Alice.md",
692 |           values: {
693 |             author: "Alice",
694 |             age: 1,
695 |             due: undefined,
696 |           },
697 |         },
698 |       ],
699 |     });
700 |   });
701 | 
702 |   it("sort by date desc", () => {
703 |     const sorted = applySort(frame, {
704 |       criteria: [{ field: "due", order: "desc", enabled: true }],
705 |     });
706 | 
707 |     expect(sorted).toStrictEqual({
708 |       fields: [],
709 |       records: [
710 |         {
711 |           id: "Eve.md",
712 |           values: {
713 |             author: "",
714 |             age: 3,
715 |             due: new Date(Date.UTC(2031, 1, 1)),
716 |           },
717 |         },
718 |         {
719 |           id: "David.md",
720 |           values: {
721 |             author: undefined,
722 |             age: 4,
723 |             due: new Date(Date.UTC(2025, 1, 1)),
724 |           },
725 |         },
726 |         {
727 |           id: "Charlie.md",
728 |           values: {
729 |             author: "Charlie",
730 |             age: null,
731 |             due: new Date(Date.UTC(2021, 1, 1)),
732 |           },
733 |         },
734 |         {
735 |           id: "Bob.md",
736 |           values: {
737 |             author: null,
738 |             age: 2,
739 |             due: new Date(Date.UTC(2011, 1, 1)),
740 |           },
741 |         },
742 |         {
743 |           id: "Alice.md",
744 |           values: {
745 |             author: "Alice",
746 |             age: 1,
747 |             due: undefined,
748 |           },
749 |         },
750 |       ],
751 |     });
752 |   });
753 | 
754 |   it("sort by string (asc) and date (desc)", () => {
755 |     const sorted = applySort(frame, {
756 |       criteria: [
757 |         { field: "author", order: "asc", enabled: true },
758 |         { field: "due", order: "desc", enabled: true },
759 |       ],
760 |     });
761 | 
762 |     expect(sorted).toStrictEqual({
763 |       fields: [],
764 |       records: [
765 |         {
766 |           id: "Eve.md",
767 |           values: {
768 |             author: "",
769 |             age: 3,
770 |             due: new Date(Date.UTC(2031, 1, 1)),
771 |           },
772 |         },
773 |         {
774 |           id: "Alice.md",
775 |           values: {
776 |             author: "Alice",
777 |             age: 1,
778 |             due: undefined,
779 |           },
780 |         },
781 |         {
782 |           id: "Charlie.md",
783 |           values: {
784 |             author: "Charlie",
785 |             age: null,
786 |             due: new Date(Date.UTC(2021, 1, 1)),
787 |           },
788 |         },
789 |         {
790 |           id: "David.md",
791 |           values: {
792 |             author: undefined,
793 |             age: 4,
794 |             due: new Date(Date.UTC(2025, 1, 1)),
795 |           },
796 |         },
797 |         {
798 |           id: "Bob.md",
799 |           values: {
800 |             author: null,
801 |             age: 2,
802 |             due: new Date(Date.UTC(2011, 1, 1)),
803 |           },
804 |         },
805 |       ],
806 |     });
807 |   });
808 | });
809 | 


--------------------------------------------------------------------------------
/src/ui/app/viewSort.ts:
--------------------------------------------------------------------------------
  1 | import { produce } from "immer";
  2 | import {
  3 |   isNumber,
  4 |   isDate,
  5 |   isBoolean,
  6 |   type DataFrame,
  7 | } from "../../lib/dataframe/dataframe";
  8 | import type { SortDefinition, SortingCriteria } from "src/settings/settings";
  9 | import type { DataRecord } from "../../lib/dataframe/dataframe";
 10 | 
 11 | export function applySort(frame: DataFrame, sort: SortDefinition): DataFrame {
 12 |   return produce(frame, (draft) => {
 13 |     //@ts-ignore
 14 |     sortRecords(draft.records, sort);
 15 |   });
 16 | }
 17 | 
 18 | /**
 19 |  * Sorts records in place. This method mutates the array
 20 |  * and returns a reference to the same array.
 21 |  *
 22 |  * @param records - the records to be sorted
 23 |  * @param sort - the definition for sorting the records
 24 |  */
 25 | export function sortRecords(records: DataRecord[], sort: SortDefinition) {
 26 |   return records.sort((a, b): number => {
 27 |     let res = 0;
 28 | 
 29 |     const enabledCriteria = sort.criteria.filter((c) => c.enabled);
 30 |     for (const criteria of enabledCriteria) {
 31 |       res = sortCriteria(a, b, criteria);
 32 |       if (res !== 0) {
 33 |         break;
 34 |       }
 35 |     }
 36 | 
 37 |     return res;
 38 |   });
 39 | }
 40 | 
 41 | function isEmpty(value: any): boolean {
 42 |   return value === undefined || value === null;
 43 | }
 44 | 
 45 | function sortCriteria(
 46 |   a: DataRecord,
 47 |   b: DataRecord,
 48 |   criteria: SortingCriteria
 49 | ): number {
 50 |   let aval = a.values[criteria.field];
 51 |   let bval = b.values[criteria.field];
 52 | 
 53 |   const isAsc = criteria.order === "asc";
 54 | 
 55 |   if (!isEmpty(aval) && isEmpty(bval)) return -1;
 56 |   if (isEmpty(aval) && !isEmpty(bval)) return 1;
 57 |   if (isEmpty(aval) && isEmpty(bval)) return 0;
 58 | 
 59 |   if (isNumber(aval) && isNumber(bval)) {
 60 |     return sortNumber(aval, bval, isAsc);
 61 |   }
 62 |   if (isDate(aval) && isDate(bval)) {
 63 |     return sortDate(aval, bval, isAsc);
 64 |   }
 65 |   if (isBoolean(aval) && isBoolean(bval)) {
 66 |     return sortBoolean(aval, bval, isAsc);
 67 |   }
 68 | 
 69 |   aval = aval?.toString().toLocaleLowerCase() ?? "";
 70 |   bval = bval?.toString().toLocaleLowerCase() ?? "";
 71 | 
 72 |   const nameLinkRegExp = /^\[\[(.*?)\|(.*?)\]\]$/;
 73 |   if (criteria.field === "name") {
 74 |     aval = aval.match(nameLinkRegExp)?.[2] || aval;
 75 |     bval = bval.match(nameLinkRegExp)?.[2] || bval;
 76 |   }
 77 | 
 78 |   return sortString(aval, bval, isAsc);
 79 | }
 80 | 
 81 | function sortNumber(a: number, b: number, asc: boolean): number {
 82 |   if (a < b) {
 83 |     return asc ? -1 : 1;
 84 |   }
 85 |   if (a > b) {
 86 |     return asc ? 1 : -1;
 87 |   }
 88 |   return 0;
 89 | }
 90 | 
 91 | function sortDate(a: Date, b: Date, asc: boolean): number {
 92 |   if (a.getTime() < b.getTime()) {
 93 |     return asc ? -1 : 1;
 94 |   }
 95 |   if (a.getTime() > b.getTime()) {
 96 |     return asc ? 1 : -1;
 97 |   }
 98 |   return 0;
 99 | }
100 | 
101 | function sortBoolean(a: boolean, b: boolean, asc: boolean): number {
102 |   if (a === false && b === true) {
103 |     return asc ? -1 : 1;
104 |   }
105 |   if (a === true && b === false) {
106 |     return asc ? 1 : -1;
107 |   }
108 |   return 0;
109 | }
110 | 
111 | function sortString(a: string, b: string, asc: boolean): number {
112 |   return asc
113 |     ? a.localeCompare(b, undefined, { numeric: true })
114 |     : b.localeCompare(a, undefined, { numeric: true });
115 | }
116 | 


--------------------------------------------------------------------------------
/src/ui/components/Accordion/Accordion.svelte:
--------------------------------------------------------------------------------
1 | <div>
2 |   <slot />
3 | </div>
4 | 


--------------------------------------------------------------------------------
/src/ui/components/Accordion/AccordionItem.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Icon } from "obsidian-svelte";
 3 |   import { slide } from "svelte/transition";
 4 | 
 5 |   let open: boolean = false;
 6 | </script>
 7 | 
 8 | <section>
 9 |   <header on:click={() => (open = !open)} on:keypress>
10 |     <slot name="header" />
11 |     <Icon name={open ? "chevron-up" : "chevron-down"} />
12 |   </header>
13 | 
14 |   {#if open}
15 |     <div transition:slide={{ duration: 200 }}>
16 |       <slot />
17 |     </div>
18 |   {/if}
19 | </section>
20 | 
21 | <style>
22 |   section {
23 |     border-top: 1px solid var(--background-modifier-border);
24 |   }
25 | 
26 |   div {
27 |     padding: 8px;
28 |     background-color: var(--background-primary-alt);
29 |   }
30 | 
31 |   header {
32 |     display: flex;
33 |     align-items: center;
34 |     gap: 4px;
35 |     padding: 8px;
36 |     justify-content: space-between;
37 |   }
38 | </style>
39 | 


--------------------------------------------------------------------------------
/src/ui/components/Accordion/index.ts:
--------------------------------------------------------------------------------
1 | export { default as Accordion } from "./Accordion.svelte";
2 | export { default as AccordionItem } from "./AccordionItem.svelte";
3 | 


--------------------------------------------------------------------------------
/src/ui/components/Box/Box.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let direction: "row" | "column" = "column";
 3 |   export let gap: number = 0;
 4 |   export let padding: number = 0;
 5 |   export let margin: number = 0;
 6 | </script>
 7 | 
 8 | <div
 9 |   style:flex-direction={direction}
10 |   style:gap={gap + "px"}
11 |   style:padding={padding + "px"}
12 |   style:margin={margin + "px"}
13 |   {...$$restProps}
14 | >
15 |   <slot />
16 | </div>
17 | 
18 | <style>
19 |   div {
20 |     display: flex;
21 |   }
22 | </style>
23 | 


--------------------------------------------------------------------------------
/src/ui/components/Box/index.ts:
--------------------------------------------------------------------------------
1 | export { default as Box } from "./Box.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/CardMetadata/CardMetadata.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Icon } from "obsidian-svelte";
 3 |   import {
 4 |     DataFieldType,
 5 |     type DataField,
 6 |     type DataRecord,
 7 |   } from "src/lib/dataframe/dataframe";
 8 |   import { setContext } from "svelte";
 9 |   import Checkbox from "./Checkbox.svelte";
10 |   import Tags from "./Tags.svelte";
11 |   import Text from "./Text.svelte";
12 |   import Date from "./Date.svelte";
13 |   import Datetime from "./Datetime.svelte";
14 |   import Number from "./Number.svelte";
15 | 
16 |   export let fields: DataField[];
17 |   export let record: DataRecord;
18 | 
19 |   setContext<string>("sourcePath", record.id);
20 | </script>
21 | 
22 | {#each fields as field (field.name)}
23 |   {@const value = record.values[field.name]}
24 |   {#if value !== undefined && value !== null}
25 |     <div class="field-label">
26 |       <div class="setting-item-description" style:margin-bottom={"4px"}>
27 |         {field.name}
28 |       </div>
29 |       {#if field.repeated}
30 |         {#if field.type === DataFieldType.String}
31 |           <Tags {field} {value} />
32 |         {/if}
33 |       {:else if field.type === DataFieldType.Boolean}
34 |         <Checkbox {field} {value} />
35 |       {:else if field.type === DataFieldType.String}
36 |         <Text {field} {value} />
37 |       {:else if field.type === DataFieldType.Number}
38 |         <Number {field} {value} />
39 |       {:else if field.type === DataFieldType.Date}
40 |         {#if field.typeConfig?.time}
41 |           <Datetime {value} {field} />
42 |         {:else}
43 |           <Date {value} {field} />
44 |         {/if}
45 |       {:else}
46 |         <Icon name="slash" />
47 |       {/if}
48 |     </div>
49 |   {/if}
50 | {/each}
51 | 
52 | <style>
53 |   .field-label {
54 |     margin-bottom: 8px;
55 |   }
56 | 
57 |   .field-label:last-child {
58 |     margin-bottom: 0;
59 |   }
60 | </style>
61 | 


--------------------------------------------------------------------------------
/src/ui/components/CardMetadata/Checkbox.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Switch } from "obsidian-svelte";
 3 |   import {
 4 |     DataFieldType,
 5 |     type DataField,
 6 |     type DataValue,
 7 |     type Optional,
 8 |   } from "src/lib/dataframe/dataframe";
 9 | 
10 |   export let value: Optional<DataValue>;
11 |   export let field: DataField;
12 | </script>
13 | 
14 | {#if field.type === DataFieldType.Boolean && !field.repeated && typeof value === "boolean"}
15 |   <Switch checked={value} disabled />
16 | {/if}
17 | 


--------------------------------------------------------------------------------
/src/ui/components/CardMetadata/Date.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     DataFieldType,
 4 |     type DataField,
 5 |     type DataValue,
 6 |     type Optional,
 7 |   } from "src/lib/dataframe/dataframe";
 8 | 
 9 |   export let value: Optional<DataValue>;
10 |   export let field: DataField;
11 | </script>
12 | 
13 | {#if field.type === DataFieldType.Date && !field.repeated && value instanceof Date}
14 |   {Intl.DateTimeFormat("default", {
15 |     year: "numeric",
16 |     month: "numeric",
17 |     day: "numeric",
18 |   }).format(value)}
19 | {/if}
20 | 


--------------------------------------------------------------------------------
/src/ui/components/CardMetadata/Datetime.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     DataFieldType,
 4 |     type DataField,
 5 |     type DataValue,
 6 |     type Optional,
 7 |   } from "src/lib/dataframe/dataframe";
 8 | 
 9 |   export let value: Optional<DataValue>;
10 |   export let field: DataField;
11 | </script>
12 | 
13 | {#if field.type === DataFieldType.Date && !field.repeated && value instanceof Date}
14 |   {Intl.DateTimeFormat("default", {
15 |     year: "numeric",
16 |     month: "numeric",
17 |     day: "numeric",
18 |     hour: "numeric",
19 |     minute: "numeric",
20 |     hour12: false,
21 |   }).format(value)}
22 | {/if}
23 | 


--------------------------------------------------------------------------------
/src/ui/components/CardMetadata/Number.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     DataFieldType,
 4 |     type DataField,
 5 |     type DataValue,
 6 |     type Optional,
 7 |   } from "src/lib/dataframe/dataframe";
 8 | 
 9 |   export let value: Optional<DataValue>;
10 |   export let field: DataField;
11 | </script>
12 | 
13 | {#if field.type === DataFieldType.Number && !field.repeated && typeof value === "number"}
14 |   {Intl.NumberFormat().format(value)}
15 | {/if}
16 | 


--------------------------------------------------------------------------------
/src/ui/components/CardMetadata/Tags.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     DataFieldType,
 4 |     type DataField,
 5 |     type DataValue,
 6 |     type Optional,
 7 |   } from "src/lib/dataframe/dataframe";
 8 |   import { TagList } from "../TagList";
 9 | 
10 |   export let value: Optional<DataValue>;
11 |   export let field: DataField;
12 | </script>
13 | 
14 | {#if field.type === DataFieldType.String && field.repeated && Array.isArray(value)}
15 |   <TagList richText={field.typeConfig?.richText ?? false} values={value || []} />
16 | {/if}
17 | 


--------------------------------------------------------------------------------
/src/ui/components/CardMetadata/Text.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { MarkdownRenderer } from "obsidian";
 3 |   import type {
 4 |     DataField,
 5 |     DataValue,
 6 |     Optional,
 7 |   } from "src/lib/dataframe/dataframe";
 8 |   import { app, view } from "src/lib/stores/obsidian";
 9 |   import { handleHoverLink } from "src/ui/views/helpers";
10 |   import { getContext } from "svelte";
11 | 
12 |   export let value: Optional<DataValue>;
13 |   export let field: DataField;
14 | 
15 |   const sourcePath = getContext<string>("sourcePath") ?? "";
16 | 
17 |   function useMarkdown(node: HTMLElement) {
18 |     if (typeof value === "string") {
19 |       MarkdownRenderer.render($app, value, node, sourcePath, $view);
20 |     }
21 |   }
22 | 
23 |   function handleClick(event: MouseEvent) {
24 |     const targetEl = event.target as HTMLElement;
25 |     const closestAnchor =
26 |       targetEl.tagName === "A" ? targetEl : targetEl.closest("a");
27 | 
28 |     if (!closestAnchor) {
29 |       return;
30 |     }
31 | 
32 |     event.stopPropagation();
33 | 
34 |     if (closestAnchor.hasClass("internal-link")) {
35 |       event.preventDefault();
36 | 
37 |       const href = closestAnchor.getAttr("href");
38 |       const newLeaf = event.button === 1 || event.ctrlKey || event.metaKey;
39 | 
40 |       if (href) {
41 |         $app.workspace.openLinkText(href, sourcePath, newLeaf);
42 |       }
43 |     }
44 |   }
45 | </script>
46 | 
47 | {#if field.typeConfig?.richText}
48 |   <div
49 |     use:useMarkdown
50 |     on:click={handleClick}
51 |     on:mouseover={(event) => handleHoverLink(event, sourcePath)}
52 |     on:focus
53 |     on:keypress
54 |   />
55 | {:else if typeof value === "string"}
56 |   <div>
57 |     {value}
58 |   </div>
59 | {/if}
60 | 
61 | <style>
62 |   div {
63 |     overflow: hidden;
64 |     text-overflow: ellipsis;
65 |     display: -webkit-box;
66 |     -webkit-line-clamp: 4; /* number of lines to show */
67 |     line-clamp: 4;
68 |     -webkit-box-orient: vertical;
69 |   }
70 | 
71 |   div :global(p:first-child) {
72 |     margin-top: 0;
73 |   }
74 | 
75 |   div :global(p:last-child) {
76 |     margin-bottom: 0;
77 |   }
78 | </style>
79 | 


--------------------------------------------------------------------------------
/src/ui/components/ColorItem/ColorItem.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let color: string | null;
 3 | </script>
 4 | 
 5 | <div class="color-item">
 6 |   {#if color}
 7 |     <span
 8 |       style="margin-right: 8px; background-color: {color}; min-width: 5px; border-radius: 9999px;"
 9 |     />
10 |   {/if}
11 |   <div class="card-layout">
12 |     <div class="card-header">
13 |       <slot name="header" />
14 |     </div>
15 |     <slot />
16 |   </div>
17 | </div>
18 | 
19 | <style>
20 |   .color-item {
21 |     display: flex;
22 |   }
23 |   .card-layout {
24 |     overflow: hidden;
25 |     flex: 1;
26 |   }
27 |   .card-header {
28 |     font-size: 16px;
29 |     margin-bottom: 8px;
30 |   }
31 | 
32 |   .card-header:last-child {
33 |     margin-bottom: 0;
34 |   }
35 | </style>
36 | 


--------------------------------------------------------------------------------
/src/ui/components/DateInput.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { createEventDispatcher } from "svelte";
 3 |   import dayjs from "dayjs";
 4 | 
 5 |   /**
 6 |    * Specifies the date value.
 7 |    */
 8 |   export let value: Date | null;
 9 | 
10 |   /**
11 |    * Specifies whether to remove decorations so that it can be embedded in other
12 |    * components.
13 |    */
14 |   export let embed: boolean = false;
15 | 
16 |   const dispatch = createEventDispatcher<{
17 |     change: Date | null;
18 |     input: Date | null;
19 |   }>();
20 | 
21 |   function handleChange(event: Event) {
22 |     if (event.currentTarget instanceof HTMLInputElement) {
23 |       dispatch(
24 |         "change",
25 |         event.currentTarget.value
26 |           ? dayjs(event.currentTarget.value).toDate()
27 |           : null
28 |       );
29 |     }
30 |   }
31 | 
32 |   function handleInput(event: Event) {
33 |     if (event.currentTarget instanceof HTMLInputElement) {
34 |       dispatch(
35 |         "input",
36 |         event.currentTarget.value
37 |           ? dayjs(event.currentTarget.value).toDate()
38 |           : null
39 |       );
40 |     }
41 |   }
42 | </script>
43 | 
44 | <input
45 |   type="date"
46 |   class:embed
47 |   value={value ? dayjs(value).format("YYYY-MM-DD") : null}
48 |   max="9999-12-31"
49 |   on:change={handleChange}
50 |   on:input={handleInput}
51 |   on:blur
52 | />
53 | 
54 | <style>
55 |   input {
56 |     border-radius: 9999px;
57 |     border: 0;
58 |     background-color: var(--background-modifier-hover);
59 |     font-family: var(--font-default);
60 |     padding-left: var(--size-4-6);
61 |   }
62 | 
63 |   .embed {
64 |     margin: 0 8px;
65 |   }
66 | </style>
67 | 


--------------------------------------------------------------------------------
/src/ui/components/DatetimeInput.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { createEventDispatcher } from "svelte";
 3 |   import dayjs from "dayjs";
 4 | 
 5 |   /**
 6 |    * Specifies the date time value.
 7 |    */
 8 |   export let value: Date | null;
 9 | 
10 |   /**
11 |    * Specifies whether to remove decorations so that it can be embedded in other
12 |    * components.
13 |    */
14 |   export let embed: boolean = false;
15 | 
16 |   const dispatch = createEventDispatcher<{
17 |     change: Date | null;
18 |     input: Date | null;
19 |   }>();
20 | 
21 |   function handleChange(event: Event) {
22 |     if (event.currentTarget instanceof HTMLInputElement) {
23 |       dispatch(
24 |         "change",
25 |         event.currentTarget.value
26 |           ? dayjs(event.currentTarget.value).toDate()
27 |           : null
28 |       );
29 |     }
30 |   }
31 | 
32 |   function handleInput(event: Event) {
33 |     if (event.currentTarget instanceof HTMLInputElement) {
34 |       dispatch(
35 |         "input",
36 |         event.currentTarget.value
37 |           ? dayjs(event.currentTarget.value).toDate()
38 |           : null
39 |       );
40 |     }
41 |   }
42 | </script>
43 | 
44 | <input
45 |   type="datetime-local"
46 |   class:embed
47 |   value={value ? dayjs(value).format("YYYY-MM-DDTHH:mm") : null}
48 |   max="9999-12-31T23:59"
49 |   on:change={handleChange}
50 |   on:input={handleInput}
51 |   on:blur
52 | />
53 | 
54 | <style>
55 |   input {
56 |     border-radius: 9999px;
57 |     border: 0;
58 |     background-color: var(--background-modifier-hover);
59 |     font-family: var(--font-default);
60 |     padding-left: var(--size-4-6);
61 |   }
62 | 
63 |   .embed {
64 |     margin: 0 8px;
65 |   }
66 | </style>
67 | 


--------------------------------------------------------------------------------
/src/ui/components/Field/Field.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Typography } from "obsidian-svelte";
 3 | 
 4 |   export let name: string;
 5 | </script>
 6 | 
 7 | <div>
 8 |   <Typography variant="label" nomargin>{name}</Typography>
 9 |   <slot />
10 | </div>
11 | 
12 | <style>
13 |   div {
14 |     display: flex;
15 |     align-items: center;
16 |     justify-content: flex-end;
17 |     gap: 8px;
18 |   }
19 | </style>
20 | 


--------------------------------------------------------------------------------
/src/ui/components/Field/index.ts:
--------------------------------------------------------------------------------
1 | export { default as Field } from "./Field.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/FieldControl/FieldControl.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     Autocomplete,
 4 |     // DateInput,
 5 |     // DatetimeInput,
 6 |     NumberInput,
 7 |     Switch,
 8 |     TextInput,
 9 |   } from "obsidian-svelte";
10 |   import DateInput from "../DateInput.svelte";
11 |   import DatetimeInput from "../DatetimeInput.svelte";
12 |   import dayjs from "dayjs";
13 | 
14 |   import { TagList } from "src/ui/components/TagList";
15 |   import {
16 |     DataFieldType,
17 |     isBoolean,
18 |     isDate,
19 |     isNumber,
20 |     isOptionalList,
21 |     isString,
22 |     type DataField,
23 |     type DataValue,
24 |     type Optional,
25 |   } from "src/lib/dataframe/dataframe";
26 | 
27 |   export let field: DataField;
28 |   export let value: Optional<DataValue>;
29 |   let cachedValue: Optional<Date> = isDate(value) ? value : null; // store the proposing value
30 |   export let onChange: (value: Optional<DataValue>) => void;
31 |   export let readonly: boolean = false;
32 | 
33 |   $: options =
34 |     field.typeConfig?.options?.map((option) => ({
35 |       label: option,
36 |       description: "",
37 |     })) ?? [];
38 | </script>
39 | 
40 | {#if field.type === DataFieldType.Boolean}
41 |   <Switch
42 |     checked={isBoolean(value) ? value : false}
43 |     on:check={({ detail }) => onChange(detail)}
44 |   />
45 | {:else if field.repeated && isOptionalList(value)}
46 |   <TagList edit={!readonly} values={value ?? []} {onChange} />
47 | {:else if field.type === DataFieldType.String}
48 |   {#if options.length > 0}
49 |     <Autocomplete
50 |       value={isString(value) ? value : ""}
51 |       {options}
52 |       on:change={({ detail }) => onChange(detail)}
53 |     />
54 |   {:else}
55 |     <TextInput
56 |       value={isString(value) ? value : ""}
57 |       on:input={({ detail: value }) => onChange(value)}
58 |       {readonly}
59 |     />
60 |   {/if}
61 | {:else if field.type === DataFieldType.Number}
62 |   <NumberInput
63 |     value={isNumber(value) ? value : null}
64 |     on:input={({ detail: value }) =>
65 |       onChange(value !== null ? value : undefined)}
66 |   />
67 | {:else if field.type === DataFieldType.Date}
68 |   {#if field.typeConfig?.time}
69 |     <DatetimeInput
70 |       value={isDate(value) ? value : null}
71 |       on:input={({ detail: value }) => (cachedValue = value)}
72 |       on:blur={() => onChange(cachedValue)}
73 |     />
74 |   {:else}
75 |     <DateInput
76 |       value={isDate(value) ? value : null}
77 |       on:change={({ detail: value }) => (cachedValue = value)}
78 |       on:blur={() => {
79 |         if (!cachedValue || !isDate(value)) {
80 |           onChange(cachedValue);
81 |           return;
82 |         }
83 |         const cachedDate = dayjs(cachedValue);
84 |         const newDatetime = dayjs(value)
85 |           .set("year", cachedDate.year())
86 |           .set("month", cachedDate.month())
87 |           .set("date", cachedDate.date());
88 |         onChange(newDatetime.toDate());
89 |       }}
90 |     />
91 |   {/if}
92 | {/if}
93 | 


--------------------------------------------------------------------------------
/src/ui/components/FieldControl/index.ts:
--------------------------------------------------------------------------------
1 | export { default as FieldControl } from "./FieldControl.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/FileListInput/FileListInput.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { produce } from "immer";
 3 |   import { Button, FileAutocomplete, IconButton } from "obsidian-svelte";
 4 | 
 5 |   import { getFilesInFolder } from "src/lib/obsidian";
 6 |   import { app } from "src/lib/stores/obsidian";
 7 | 
 8 |   export let paths: string[];
 9 |   export let onPathsChange: (value: string[]) => void;
10 |   export let buttonText: string;
11 | </script>
12 | 
13 | {#each paths as path, i}
14 |   <div>
15 |     <FileAutocomplete
16 |       value={path}
17 |       on:change={({ detail: value }) => {
18 |         onPathsChange(
19 |           produce(paths, (draft) => {
20 |             draft[i] = value;
21 |             return draft;
22 |           })
23 |         );
24 |       }}
25 |       files={getFilesInFolder($app.vault.getRoot())}
26 |       getLabel={(file) => file.path}
27 |       width="100%"
28 |     />
29 |     <IconButton
30 |       icon="x"
31 |       onClick={() => {
32 |         onPathsChange(paths.filter((_, j) => j !== i));
33 |       }}
34 |     />
35 |   </div>
36 | {/each}
37 | 
38 | <Button
39 |   on:click={() => {
40 |     onPathsChange([...paths, ""]);
41 |   }}>{buttonText}</Button
42 | >
43 | 
44 | <style>
45 |   div {
46 |     display: flex;
47 |     align-items: center;
48 |     justify-content: space-between;
49 |     gap: 4px;
50 |     padding-bottom: 4px;
51 |     width: 100%;
52 |   }
53 | 
54 |   div:first-child {
55 |     flex: 1;
56 |   }
57 | </style>
58 | 


--------------------------------------------------------------------------------
/src/ui/components/FileListInput/index.ts:
--------------------------------------------------------------------------------
1 | export { default as FileListInput } from "./FileListInput.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/Flair/Flair.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let variant: "primary" | "error";
 3 |   export let tooltip: string = "";
 4 | </script>
 5 | 
 6 | <span
 7 |   aria-label={tooltip}
 8 |   class="flair"
 9 |   class:mod-pop={variant === "primary"}
10 |   class:error={variant === "error"}
11 |   on:click
12 |   on:keypress><slot /></span
13 | >
14 | 
15 | <style>
16 |   span {
17 |     color: var(--text-on-accent);
18 |     display: flex;
19 |     align-items: center;
20 |     gap: var(--size-4-1);
21 |   }
22 | 
23 |   .error {
24 |     background-color: var(--background-modifier-error);
25 |   }
26 | </style>
27 | 


--------------------------------------------------------------------------------
/src/ui/components/Flair/index.ts:
--------------------------------------------------------------------------------
1 | export { default as Flair } from "./Flair.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/HorizontalGroup/HorizontalGroup.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let fullWidth: boolean = false;
 3 |   export let alignItems: string = "center";
 4 |   export let padding: boolean = false;
 5 | </script>
 6 | 
 7 | <div class:padding class:fullWidth style={`align-items: ${alignItems}`}>
 8 |   <slot />
 9 | </div>
10 | 
11 | <style>
12 |   div {
13 |     display: flex;
14 |     gap: 8px;
15 |   }
16 | 
17 |   .padding {
18 |     padding: 8px;
19 |   }
20 | 
21 |   .fullWidth {
22 |     width: 100%;
23 |     justify-content: space-between;
24 |   }
25 | </style>
26 | 


--------------------------------------------------------------------------------
/src/ui/components/HorizontalGroup/index.ts:
--------------------------------------------------------------------------------
1 | export { default as HorizontalGroup } from "./HorizontalGroup.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/InternalLink.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { createEventDispatcher } from "svelte";
 3 |   /**
 4 |    * Specifies the link text.
 5 |    */
 6 |   export let linkText: string;
 7 |   /**
 8 |    * Specifies the path to the source file.
 9 |    */
10 |   export let sourcePath: string;
11 |   /**
12 |    * Specifies a tooltip to display when hovering the link.
13 |    */
14 |   export let tooltip = "";
15 |   /**
16 |    * Specifies whether the link is resolved.
17 |    */
18 |   export let resolved;
19 | 
20 |   const dispatch = createEventDispatcher<{
21 |     open: { linkText: string; sourcePath: string; newLeaf: boolean };
22 |     hover: {
23 |       event: MouseEvent;
24 |       linkText: string;
25 |       sourcePath: string;
26 |     };
27 |   }>();
28 |   let aria = {};
29 |   if (tooltip) {
30 |     aria = {
31 |       "aria-label": tooltip,
32 |       "aria-label-position": "top",
33 |     };
34 |   }
35 | </script>
36 | 
37 | <a
38 |   href={linkText}
39 |   data-href={linkText}
40 |   class={`internal-link`}
41 |   class:is-unresolved={!resolved}
42 |   target="_blank"
43 |   rel="noopener"
44 |   on:click={(event) => {
45 |     event.stopPropagation();
46 |     event.preventDefault();
47 | 
48 |     dispatch("open", {
49 |       linkText,
50 |       sourcePath,
51 |       newLeaf: event.ctrlKey || event.metaKey,
52 |     });
53 |   }}
54 |   on:mouseover={(event) => {
55 |     event.stopPropagation();
56 |     event.preventDefault();
57 | 
58 |     dispatch("hover", {
59 |       event,
60 |       linkText,
61 |       sourcePath,
62 |     });
63 |   }}
64 |   on:focus
65 |   {...aria}
66 | >
67 |   <slot />
68 | </a>
69 | 
70 | <style>
71 |   .is-unresolved {
72 |     opacity: 0.5;
73 |   }
74 | </style>
75 | 


--------------------------------------------------------------------------------
/src/ui/components/Layout/ViewContent.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let padding: boolean = false;
 3 | </script>
 4 | 
 5 | <div class:padding>
 6 |   <slot />
 7 | </div>
 8 | 
 9 | <style>
10 |   div {
11 |     flex: 1;
12 |     overflow: auto;
13 |   }
14 | 
15 |   .padding {
16 |     padding: 24px;
17 |   }
18 | </style>
19 | 


--------------------------------------------------------------------------------
/src/ui/components/Layout/ViewHeader.svelte:
--------------------------------------------------------------------------------
1 | <div>
2 |   <slot />
3 | </div>
4 | 


--------------------------------------------------------------------------------
/src/ui/components/Layout/ViewLayout.svelte:
--------------------------------------------------------------------------------
 1 | <div>
 2 |   <slot />
 3 | </div>
 4 | 
 5 | <style>
 6 |   div {
 7 |     height: 100%;
 8 |     display: flex;
 9 |     flex-direction: column;
10 |   }
11 | </style>
12 | 


--------------------------------------------------------------------------------
/src/ui/components/Layout/ViewToolbar.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let variant: "primary" | "secondary";
 3 |   let clientWidth: number;
 4 | 
 5 |   $: isMobile = clientWidth < 480;
 6 | </script>
 7 | 
 8 | <div
 9 |   class="container"
10 |   class:primary={variant === "primary"}
11 |   class:secondary={variant === "secondary"}
12 |   class:isMobile
13 |   bind:clientWidth
14 | >
15 |   <div class="left">
16 |     <slot name="left" />
17 |   </div>
18 |   <slot name="info" />
19 |   <div class="middle">
20 |     <slot name="middle" />
21 |   </div>
22 |   <div class="right">
23 |     <slot name="right" />
24 |   </div>
25 | </div>
26 | 
27 | <style>
28 |   .container {
29 |     display: flex;
30 |     justify-content: space-between;
31 |     padding: var(--size-4-2);
32 |     gap: var(--size-4-2);
33 |     border-bottom: 1px solid var(--background-modifier-border);
34 |     align-items: center;
35 |     width: auto;
36 |   }
37 |   .middle {
38 |     flex: 1;
39 |     overflow-x: auto;
40 |     text-align: center;
41 |     min-width: 200px;
42 |   }
43 |   .right {
44 |     display: flex;
45 |     align-items: center;
46 |     gap: var(--size-4-2);
47 |     flex-wrap: wrap;
48 |   }
49 |   .isMobile {
50 |     flex-direction: column;
51 |     align-items: stretch;
52 |   }
53 |   .isMobile .right {
54 |     align-items: stretch;
55 |   }
56 | 
57 |   .primary {
58 |     background-color: var(--background-primary);
59 |   }
60 |   .secondary {
61 |     background-color: var(--background-primary-alt);
62 |   }
63 | </style>
64 | 


--------------------------------------------------------------------------------
/src/ui/components/Layout/index.ts:
--------------------------------------------------------------------------------
1 | export { default as ViewContent } from "./ViewContent.svelte";
2 | export { default as ViewHeader } from "./ViewHeader.svelte";
3 | export { default as ViewLayout } from "./ViewLayout.svelte";
4 | export { default as ViewToolbar } from "./ViewToolbar.svelte";
5 | 


--------------------------------------------------------------------------------
/src/ui/components/MultiTextInput/MultiTextInput.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { produce } from "immer";
  3 |   import { Button, Icon, IconButton, TextInput } from "obsidian-svelte";
  4 |   import { dndzone } from "svelte-dnd-action";
  5 |   import { i18n } from "src/lib/stores/i18n";
  6 | 
  7 |   export let options: string[];
  8 |   export let onChange: (options: string[]) => void;
  9 | 
 10 |   type OptionItem = { id: number; value: string };
 11 |   $: optionItems = options.map((option, i) => {
 12 |     return { id: i, value: option };
 13 |   });
 14 | 
 15 |   function handleOptionAdd() {
 16 |     onChange(
 17 |       produce(options, (draft) => {
 18 |         draft.push("");
 19 |       })
 20 |     );
 21 |   }
 22 | 
 23 |   function handleOptionRemove(i: number) {
 24 |     return () => {
 25 |       onChange(
 26 |         produce(options, (draft) => {
 27 |           draft.splice(i, 1);
 28 |         })
 29 |       );
 30 |     };
 31 |   }
 32 | 
 33 |   const flipDurationMs = 200;
 34 | 
 35 |   function handleOptionChange(i: number) {
 36 |     return (event: FocusEvent) => {
 37 |       if (event.currentTarget instanceof HTMLInputElement) {
 38 |         onChange(
 39 |           produce(options, (draft) => {
 40 |             if (event.currentTarget instanceof HTMLInputElement) {
 41 |               draft.splice(i, 1, event.currentTarget.value);
 42 |             }
 43 |           })
 44 |         );
 45 |       }
 46 |     };
 47 |   }
 48 | 
 49 |   function handleDndConsider(e: CustomEvent<DndEvent<OptionItem>>) {
 50 |     optionItems = e.detail.items;
 51 |   }
 52 | 
 53 |   function handleDndFinalize(e: CustomEvent<DndEvent<OptionItem>>) {
 54 |     onChange(e.detail.items.map((item) => item.value));
 55 |   }
 56 | </script>
 57 | 
 58 | <div>
 59 |   <div
 60 |     use:dndzone={{
 61 |       type: "multi-text",
 62 |       items: optionItems,
 63 |       flipDurationMs,
 64 |       dropTargetStyle: {
 65 |         outline: "none",
 66 |         borderRadius: "5px",
 67 |         background: "hsla(var(--interactive-accent-hsl), 0.3)",
 68 |         transition: "all 150ms ease-in-out",
 69 |       },
 70 |     }}
 71 |     on:consider={handleDndConsider}
 72 |     on:finalize={handleDndFinalize}
 73 |   >
 74 |     {#each optionItems as optionItem, i (optionItem.id)}
 75 |       <span>
 76 |         <span class="dnd-item">
 77 |           <Icon name="grip-vertical" />
 78 |           <TextInput
 79 |             width="100%"
 80 |             value={optionItem.value}
 81 |             on:blur={handleOptionChange(i)}
 82 |           />
 83 |           <IconButton icon="cross" onClick={handleOptionRemove(i)} />
 84 |         </span>
 85 |       </span>
 86 |     {/each}
 87 |   </div>
 88 |   <Button variant="plain" on:click={handleOptionAdd}>
 89 |     <Icon name="plus" />
 90 |     {$i18n.t("components.multi-text.add")}
 91 |   </Button>
 92 | </div>
 93 | 
 94 | <style>
 95 |   div {
 96 |     display: flex;
 97 |     flex-direction: column;
 98 |     gap: 4px;
 99 |     width: 100%;
100 |   }
101 |   .dnd-item {
102 |     display: flex;
103 |     gap: 4px;
104 |     align-items: center;
105 |   }
106 | </style>
107 | 


--------------------------------------------------------------------------------
/src/ui/components/TagList/RichTextTag.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { MarkdownRenderer } from "obsidian";
 3 |   import { view } from "src/lib/stores/obsidian";
 4 |   import { getContext } from "svelte";
 5 |   const sourcePath = getContext<string>("sourcePath") ?? "";
 6 | 
 7 |   import { app } from "src/lib/stores/obsidian";
 8 |   import { handleHoverLink } from "src/ui/views/helpers";
 9 | 
10 |   export let value: string;
11 |   export let richText: boolean = false;
12 | 
13 |   function useMarkdown(node: HTMLElement, value: string) {
14 |     MarkdownRenderer.renderMarkdown(value, node, sourcePath, $view);
15 | 
16 |     return {
17 |       update(newValue: string) {
18 |         node.empty();
19 |         MarkdownRenderer.renderMarkdown(newValue, node, sourcePath, $view);
20 |       },
21 |     };
22 |   }
23 | 
24 |   function handleClick(event: MouseEvent) {
25 |     const targetEl = event.target as HTMLElement;
26 |     const closestAnchor =
27 |       targetEl.tagName === "A" ? targetEl : targetEl.closest("a");
28 | 
29 |     if (!closestAnchor) {
30 |       return;
31 |     }
32 | 
33 |     event.stopPropagation();
34 | 
35 |     if (closestAnchor.hasClass("internal-link")) {
36 |       event.preventDefault();
37 | 
38 |       const href = closestAnchor.getAttr("href");
39 |       const newLeaf = event.button === 1 || event.ctrlKey || event.metaKey;
40 | 
41 |       if (href) {
42 |         $app.workspace.openLinkText(href, sourcePath, newLeaf);
43 |       }
44 |     }
45 |   }
46 | </script>
47 | 
48 | {#if richText}
49 |   <div
50 |     use:useMarkdown={value}
51 |     on:click={handleClick}
52 |     on:mouseover={(event) => {
53 |       handleHoverLink(event, sourcePath);
54 |     }}
55 |     on:focus
56 |     on:keypress
57 |   />
58 | {:else}
59 |   <div>{value}</div>
60 | {/if}
61 | 
62 | <style>
63 |   div {
64 |     background-color: var(--tag-background);
65 |     border: var(--tag-border-width) solid var(--tag-border-color);
66 |     border-radius: var(--tag-radius);
67 |     color: var(--tag-color);
68 |     font-size: var(--tag-size);
69 |     text-decoration: var(--tag-decoration);
70 |     padding: var(--tag-padding-y) var(--tag-padding-x);
71 |     line-height: 1;
72 | 
73 |     display: inline-flex;
74 |     align-items: center;
75 |     gap: var(--size-4-1);
76 |   }
77 | 
78 |   div :global(p:first-child) {
79 |     margin-top: 0;
80 |   }
81 | 
82 |   div :global(p:last-child) {
83 |     margin-bottom: 0;
84 |   }
85 | </style>
86 | 


--------------------------------------------------------------------------------
/src/ui/components/TagList/TagList.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { IconButton, Tag } from "obsidian-svelte";
 3 |   import {
 4 |     isString,
 5 |     type DataValue,
 6 |     type Optional,
 7 |   } from "src/lib/dataframe/dataframe";
 8 | 
 9 |   import { app } from "src/lib/stores/obsidian";
10 |   import { InputDialogModal } from "src/ui/modals/inputDialog";
11 |   import RichTextTag from "src/ui/components/TagList/RichTextTag.svelte";
12 | 
13 |   export let values: Optional<DataValue>[];
14 |   export let richText: boolean = false;
15 |   export let edit: boolean = false;
16 | 
17 |   export let onChange: (values: Optional<DataValue>[]) => void = () => {};
18 | 
19 |   $: stringValues = values.filter(isString);
20 | </script>
21 | 
22 | <div class:edit>
23 |   {#if edit}
24 |     {#each stringValues as value, i}
25 |       <Tag>
26 |         {value}
27 |         <IconButton
28 |           icon="cross"
29 |           size="xs"
30 |           nopadding
31 |           onClick={() => {
32 |             onChange(values.filter((_, j) => i !== j));
33 |           }}
34 |         />
35 |       </Tag>
36 |     {/each}
37 |     <IconButton
38 |       icon="plus"
39 |       nopadding
40 |       onClick={() => {
41 |         new InputDialogModal($app, "Add list item", "Add", (value) => {
42 |           onChange([...values, value]);
43 |         }).open();
44 |       }}
45 |     />
46 |   {:else}
47 |     {#each values as value}
48 |       <RichTextTag {richText} value={value?.toString() ?? ""} />
49 |     {/each}
50 |   {/if}
51 | </div>
52 | 
53 | <style>
54 |   div {
55 |     display: flex;
56 |     align-items: center;
57 |     gap: 4px;
58 |     overflow: hidden;
59 |     padding: 4px;
60 |   }
61 | 
62 |   .edit {
63 |     flex-wrap: wrap;
64 |   }
65 | </style>
66 | 


--------------------------------------------------------------------------------
/src/ui/components/TagList/index.ts:
--------------------------------------------------------------------------------
1 | export { default as TagList } from "./TagList.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/TagsInput/Tag/Tag.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { IconButton } from "obsidian-svelte";
  3 |   import { Menu } from "obsidian";
  4 |   import type { DataValue } from "src/lib/dataframe/dataframe";
  5 |   import { createEventDispatcher } from "svelte";
  6 |   import { TagInput } from "../TagInput";
  7 |   import { i18n } from "src/lib/stores/i18n";
  8 | 
  9 |   export let tag: DataValue;
 10 |   export let selected: boolean = false;
 11 |   export let editing: boolean = false;
 12 |   export let duplicate: boolean = false;
 13 | 
 14 |   let ref: HTMLDivElement;
 15 | 
 16 |   $: if (ref && selected) {
 17 |     ref.focus();
 18 |   }
 19 | 
 20 |   function handleContextMenu(event: MouseEvent) {
 21 |     const menu = new Menu();
 22 |     menu.addItem((item) => {
 23 |       item
 24 |         .setTitle($i18n.t("components.tag.edit"))
 25 |         .setIcon("edit")
 26 |         .onClick((event) => {
 27 |           menu.close();
 28 |           dispatch("edit");
 29 |           event.stopPropagation();
 30 |           event.preventDefault();
 31 |         });
 32 |     });
 33 |     menu.addSeparator();
 34 |     menu.addItem((item) => {
 35 |       item
 36 |         .setTitle($i18n.t("components.tag.remove"))
 37 |         .setIcon("trash-2")
 38 |         .setWarning(true)
 39 |         .onClick((event) => {
 40 |           menu.close();
 41 |           dispatch("delete");
 42 |           event.stopPropagation();
 43 |           event.preventDefault();
 44 |         });
 45 |     });
 46 |     menu.showAtMouseEvent(event);
 47 |   }
 48 | 
 49 |   const dispatch = createEventDispatcher<{
 50 |     edit: void;
 51 |     input: string;
 52 |     update: DataValue;
 53 |     escape: void;
 54 |     delete: void;
 55 |     navigatePrev: void;
 56 |     navigateNext: void;
 57 |   }>();
 58 | 
 59 |   export let handleClick: (event: MouseEvent) => void;
 60 | </script>
 61 | 
 62 | {#if editing}
 63 |   <TagInput
 64 |     bind:ref
 65 |     value={tag?.toString() ?? ""}
 66 |     on:submit={(event) => {
 67 |       dispatch("update", event.detail);
 68 |       editing = false;
 69 |     }}
 70 |     on:escape={() => {
 71 |       dispatch("escape");
 72 |       editing = false;
 73 |     }}
 74 |   />
 75 | {:else}
 76 |   <div
 77 |     class="tag"
 78 |     class:duplicate
 79 |     tabindex="-1"
 80 |     bind:this={ref}
 81 |     on:click={handleClick}
 82 |     on:dblclick={() => {
 83 |       dispatch("edit");
 84 |     }}
 85 |     on:contextmenu={handleContextMenu}
 86 |     on:keydown={(event) => {
 87 |       switch (event.key) {
 88 |         case "Enter":
 89 |           event.preventDefault();
 90 |           dispatch("edit");
 91 |           break;
 92 |         case "Delete":
 93 |           dispatch("delete");
 94 |           break;
 95 |         case "ArrowLeft":
 96 |           dispatch("navigatePrev");
 97 |           break;
 98 |         case "ArrowRight":
 99 |           dispatch("navigateNext");
100 |           break;
101 |         case "ArrowUp":
102 |           dispatch("navigatePrev");
103 |           break;
104 |         case "ArrowDown":
105 |           dispatch("navigateNext");
106 |           break;
107 |         case "Backspace":
108 |           dispatch("navigatePrev");
109 |           dispatch("delete");
110 |           break;
111 |       }
112 |     }}
113 |   >
114 |     {tag}
115 |     <IconButton
116 |       icon="cross"
117 |       size="xs"
118 |       nopadding
119 |       onClick={(event) => {
120 |         event.stopPropagation();
121 |         event.preventDefault();
122 |         dispatch("delete");
123 |       }}
124 |     />
125 |   </div>
126 | {/if}
127 | 
128 | <style>
129 |   .tag {
130 |     background-color: var(--tag-background);
131 |     border: var(--tag-border-width) solid var(--tag-border-color);
132 | 
133 |     border-radius: var(--tag-radius);
134 |     color: var(--tag-color);
135 |     font-size: var(--tag-size);
136 |     text-decoration: var(--tag-decoration);
137 |     padding: var(--tag-padding-y) var(--tag-padding-x);
138 |     line-height: 1;
139 | 
140 |     display: inline-flex;
141 |     align-items: center;
142 |     gap: var(--size-4-1);
143 |   }
144 | 
145 |   .tag:hover {
146 |     cursor: var(--cursor-link);
147 |     background-color: var(--tag-background-hover);
148 |     border: var(--tag-border-width) solid var(--tag-border-color-hover);
149 |     color: var(--tag-color-hover);
150 |     text-decoration: var(--tag-decoration-hover);
151 |   }
152 | 
153 |   .tag:focus {
154 |     border-radius: var(--pill-radius);
155 |     left: var(--pill-focus-left-adjust);
156 |     height: 100%;
157 |     box-shadow: 0 0 0 1px var(--background-modifier-border-focus),
158 |       inset 0 0 0 1px var(--background-modifier-border-focus);
159 |   }
160 | 
161 |   .duplicate {
162 |     animation: multi-select-highlight 2000ms ease-in;
163 |   }
164 | </style>
165 | 


--------------------------------------------------------------------------------
/src/ui/components/TagsInput/Tag/index.ts:
--------------------------------------------------------------------------------
1 | export { default as Tag } from "./Tag.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/TagsInput/TagInput/TagInput.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { createEventDispatcher } from "svelte";
 3 |   export let ref: HTMLDivElement;
 4 | 
 5 |   export let value: string;
 6 |   const rollback = value;
 7 | 
 8 |   const reset = () => {
 9 |     value = "";
10 |   };
11 | 
12 |   const dispatch = createEventDispatcher<{
13 |     input: string;
14 |     submit: string;
15 |     focus: FocusEvent;
16 |     escape: void;
17 |     navigatePrev: void;
18 |   }>();
19 |   $: dispatch("input", value);
20 | </script>
21 | 
22 | <div
23 |   contenteditable="true"
24 |   bind:textContent={value}
25 |   bind:this={ref}
26 |   on:click={(event) => {
27 |     event.stopPropagation();
28 |   }}
29 |   on:focus={(event) => {
30 |     if (value !== "" && event.target instanceof Node) {
31 |       window.getSelection()?.selectAllChildren(event.target); // The second condition is used for type assertion
32 |     }
33 |     dispatch("focus", event);
34 |   }}
35 |   on:keydown={(event) => {
36 |     if (value === "") {
37 |       switch (event.key) {
38 |         case "Enter":
39 |           event.preventDefault();
40 |           break;
41 |         case "ArrowLeft":
42 |           dispatch("navigatePrev");
43 |           break;
44 |         case "ArrowUp":
45 |           dispatch("navigatePrev");
46 |           break;
47 |         case "Backspace":
48 |           dispatch("navigatePrev");
49 |           break;
50 |         case "Escape":
51 |           dispatch("escape");
52 |           break;
53 |       }
54 |       return;
55 |     } else {
56 |       switch (event.key) {
57 |         case "Enter":
58 |           event.preventDefault();
59 |           if (value == rollback) {
60 |             dispatch("escape");
61 |           } else {
62 |             dispatch("submit", value);
63 |             reset();
64 |           }
65 |           break;
66 |         case "Escape":
67 |           dispatch("escape");
68 |           value = rollback;
69 |           break;
70 |       }
71 |     }
72 |   }}
73 |   on:blur={() => {
74 |     if (value == rollback) {
75 |       dispatch("escape");
76 |     } else {
77 |       dispatch("submit", value);
78 |       reset();
79 |     }
80 |   }}
81 | />
82 | 
83 | <style>
84 |   div {
85 |     min-width: 1px;
86 |     max-width: max-content;
87 |     box-sizing: border-box;
88 | 
89 |     cursor: text;
90 |     font-family: var(--font-interface);
91 |     color: var(--text-normal);
92 |     background-color: transparent;
93 |     border: none;
94 |     overflow-x: auto;
95 |     white-space: nowrap;
96 |   }
97 | </style>
98 | 


--------------------------------------------------------------------------------
/src/ui/components/TagsInput/TagInput/index.ts:
--------------------------------------------------------------------------------
1 | export { default as TagInput } from "./TagInput.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/components/TagsInput/TagsInput.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { useClickOutside } from "obsidian-svelte";
  3 |   import { createEventDispatcher } from "svelte";
  4 |   import type { DataValue } from "src/lib/dataframe/dataframe";
  5 |   import { TagInput } from "./TagInput";
  6 |   import { Tag } from "./Tag";
  7 | 
  8 |   // determine whether duplicate tag can be accepted
  9 |   export let unique: boolean = false;
 10 |   // check invalid characters for preserved fields
 11 |   export let strict: boolean = false;
 12 |   export let invalidChars: string[] = [
 13 |     ".",
 14 |     ",",
 15 |     ";",
 16 |     ":",
 17 |     "#",
 18 |     "<",
 19 |     ">",
 20 |     "?",
 21 |     "\\",
 22 |     " ",
 23 |     " ", // ban unintentional nbsp
 24 |   ];
 25 |   export let value: DataValue[];
 26 |   let inputRef: HTMLDivElement;
 27 | 
 28 |   let editing: boolean = false;
 29 |   let selectedTag: number = -1; // -1 indicates that no tag is selected
 30 |   let activeInput: number = -1; // -1 indicates that no tag is being modified
 31 |   let duplicateTag: number = -1; // -1 indicates that no tag detected as duplicate
 32 | 
 33 |   const dispatch = createEventDispatcher();
 34 | 
 35 |   function onChange(newValue: DataValue, position: number) {
 36 |     if (validate(newValue.toString())) {
 37 |       value[position] = newValue;
 38 |       dispatch("change", JSON.stringify(value));
 39 |     } else {
 40 |       activeInput = -1;
 41 |     }
 42 |   }
 43 | 
 44 |   function onDelete(position: number) {
 45 |     value.splice(position, 1);
 46 |     dispatch("change", JSON.stringify(value));
 47 |     if (selectedTag === value.length || value.length === 0) {
 48 |       selectedTag = -1;
 49 |       inputRef.focus();
 50 |     }
 51 |   }
 52 | 
 53 |   function onAdd(newValue: DataValue) {
 54 |     if (validate(newValue.toString())) {
 55 |       value.push(newValue);
 56 |       dispatch("change", JSON.stringify(value));
 57 |     } else {
 58 |       activeInput = -1;
 59 |     }
 60 |   }
 61 | 
 62 |   function navigatePrev() {
 63 |     if (selectedTag == -1) {
 64 |       selectedTag = value.length - 1;
 65 |     } else if (selectedTag > value.length - 1 || selectedTag == 0) {
 66 |       return;
 67 |     } else {
 68 |       selectedTag -= 1;
 69 |     }
 70 |   }
 71 | 
 72 |   function navigateNext() {
 73 |     if (selectedTag == value.length - 1) {
 74 |       selectedTag = -1;
 75 |       inputRef.focus();
 76 |     } else if (selectedTag == -1) {
 77 |       return;
 78 |     } else {
 79 |       selectedTag += 1;
 80 |     }
 81 |   }
 82 | 
 83 |   const validate = (tag: string) => {
 84 |     if (!tag || tag === "") {
 85 |       return false;
 86 |     }
 87 |     if (strict && invalidChars.some((char) => tag.includes(char))) {
 88 |       return false;
 89 |     }
 90 |     if (unique && value.includes(tag)) {
 91 |       duplicateTag = value.findIndex((v) => v.toString() === tag);
 92 |       return false;
 93 |     }
 94 | 
 95 |     duplicateTag = -1;
 96 |     return true;
 97 |   };
 98 | </script>
 99 | 
100 | <div>
101 |   <div
102 |     class="container"
103 |     class:editing
104 |     tabindex="-1"
105 |     on:mousedown|stopPropagation={() => {}}
106 |     on:click|stopPropagation={(event) => {
107 |       editing = true;
108 |       inputRef.focus();
109 |     }}
110 |     on:keydown|stopPropagation={() => {}}
111 |     use:useClickOutside={() => {
112 |       editing = false;
113 |     }}
114 |   >
115 |     {#each value as eachtag, i}
116 |       <Tag
117 |         bind:tag={eachtag}
118 |         selected={selectedTag === i}
119 |         editing={activeInput === i}
120 |         duplicate={duplicateTag === i}
121 |         handleClick={(event) => {
122 |           selectedTag = i;
123 |           editing = true;
124 |           event.stopPropagation();
125 |         }}
126 |         on:edit={() => {
127 |           editing = true;
128 |           activeInput = i;
129 |         }}
130 |         on:navigatePrev={navigatePrev}
131 |         on:navigateNext={navigateNext}
132 |         on:update={({ detail: tag }) => {
133 |           onChange(tag, i);
134 |         }}
135 |         on:escape={() => {
136 |           activeInput = -1;
137 |         }}
138 |         on:delete={() => {
139 |           onDelete(i);
140 |         }}
141 |       />
142 |     {/each}
143 |     <TagInput
144 |       value=""
145 |       bind:ref={inputRef}
146 |       on:focus={() => {
147 |         selectedTag = -1;
148 |         activeInput = -1;
149 |         editing = true;
150 |       }}
151 |       on:submit={({ detail: tag }) => {
152 |         onAdd(tag);
153 |       }}
154 |       on:navigatePrev={navigatePrev}
155 |       on:escape={() => {
156 |         activeInput = -1;
157 |       }}
158 |     />
159 |   </div>
160 | </div>
161 | 
162 | <style>
163 |   .container {
164 |     display: inline-flex;
165 |     flex-wrap: nowrap;
166 | 
167 |     gap: var(--size-4-1);
168 |     overflow: hidden;
169 |     padding: var(--size-4-1) var(--size-4-2);
170 |     outline: none;
171 | 
172 |     align-items: center;
173 |     vertical-align: top;
174 | 
175 |     width: 121pt; /*default width of input element*/
176 |     min-height: var(--input-height);
177 |     cursor: text;
178 |     background: var(--background-modifier-form-field);
179 |     border: var(--input-border-width) solid var(--background-modifier-border);
180 |     border-radius: var(--input-radius);
181 |     color: var(--text-normal);
182 |     font-size: var(--font-ui-small);
183 |   }
184 | 
185 |   .editing {
186 |     flex-wrap: wrap;
187 |     overflow: auto;
188 | 
189 |     box-shadow: 0 0 0 2px var(--background-modifier-border-focus);
190 |     border-color: var(--background-modifier-border-focus);
191 |     transition: box-shadow 0.15s ease-in-out, border 0.15s ease-in-out;
192 |   }
193 | </style>
194 | 


--------------------------------------------------------------------------------
/src/ui/components/TagsInput/index.ts:
--------------------------------------------------------------------------------
1 | export { default as TagsInput } from "./TagsInput.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/modals/addViewModal.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | import type {
 3 |   ProjectDefinition,
 4 |   ProjectId,
 5 |   ViewDefinition,
 6 | } from "src/settings/settings";
 7 | 
 8 | import AddView from "./components/AddView.svelte";
 9 | 
10 | export class AddViewModal extends Modal {
11 |   component?: AddView;
12 | 
13 |   constructor(
14 |     app: App,
15 |     readonly project: ProjectDefinition,
16 |     readonly onSave: (projectId: ProjectId, view: ViewDefinition) => void
17 |   ) {
18 |     super(app);
19 |   }
20 | 
21 |   onOpen() {
22 |     this.component = new AddView({
23 |       target: this.contentEl,
24 |       props: {
25 |         project: this.project,
26 |         onSave: (projectId: ProjectId, view: ViewDefinition) => {
27 |           this.onSave(projectId, view);
28 |           this.close();
29 |         },
30 |       },
31 |     });
32 |   }
33 | 
34 |   onClose() {
35 |     if (this.component) {
36 |       this.component.$destroy();
37 |     }
38 |   }
39 | }
40 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/AddView.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import {
  3 |     Button,
  4 |     ModalButtonGroup,
  5 |     ModalContent,
  6 |     ModalLayout,
  7 |     Select,
  8 |     SettingItem,
  9 |     TextInput,
 10 |   } from "obsidian-svelte";
 11 |   import { v4 as uuidv4 } from "uuid";
 12 | 
 13 |   import { nextUniqueViewName } from "src/lib/helpers";
 14 |   import { customViews } from "src/lib/stores/customViews";
 15 |   import { i18n } from "src/lib/stores/i18n";
 16 |   import { settings } from "src/lib/stores/settings";
 17 |   import {
 18 |     DEFAULT_VIEW,
 19 |     type ProjectDefinition,
 20 |     type ProjectId,
 21 |     type ViewDefinition,
 22 |     type ViewType,
 23 |   } from "src/settings/settings";
 24 | 
 25 |   export let onSave: (projectId: ProjectId, view: ViewDefinition) => void;
 26 |   export let project: ProjectDefinition;
 27 | 
 28 |   let name: string = "";
 29 |   let type: ViewType = "table";
 30 | 
 31 |   const options = Object.values($customViews).map((view) => {
 32 |     if (
 33 |       ["table", "board", "calendar", "gallery"].includes(view.getViewType()) // Maybe we need a enum of integrated view types here
 34 |     ) {
 35 |       return {
 36 |         label: $i18n.t(["views", view.getViewType(), "name"].join(".")),
 37 |         value: view.getViewType(),
 38 |       };
 39 |     } else {
 40 |       return {
 41 |         label: view.getDisplayName(),
 42 |         value: view.getViewType(),
 43 |       };
 44 |     }
 45 |   });
 46 | 
 47 |   $: selectedOption = options.find((option) => option.value === type);
 48 | 
 49 |   $: nameError = validateName(name);
 50 | 
 51 |   function validateName(name: string) {
 52 |     if (project.views.find((view) => view.name === name)) {
 53 |       return $i18n.t("modals.view.create.existing-name-error");
 54 |     }
 55 |     return "";
 56 |   }
 57 | </script>
 58 | 
 59 | <ModalLayout title={$i18n.t("modals.view.create.title")}>
 60 |   <ModalContent>
 61 |     <SettingItem
 62 |       name={$i18n.t("modals.view.create.type.name")}
 63 |       description={$i18n.t("modals.view.create.type.description") ?? ""}
 64 |     >
 65 |       <Select
 66 |         value={type}
 67 |         {options}
 68 |         on:change={({ detail: value }) => {
 69 |           type = value;
 70 |         }}
 71 |       />
 72 |     </SettingItem>
 73 | 
 74 |     <SettingItem
 75 |       name={$i18n.t("modals.view.create.name.name")}
 76 |       description={$i18n.t("modals.view.create.name.description") ?? ""}
 77 |     >
 78 |       <TextInput
 79 |         value={name}
 80 |         on:input={({ detail: value }) => (name = value)}
 81 |         placeholder={$i18n.t("modals.view.create.optional") ?? ""}
 82 |         error={!!nameError}
 83 |         helperText={nameError}
 84 |       />
 85 |     </SettingItem>
 86 | 
 87 |     <SettingItem
 88 |       name={$i18n.t("modals.note.create.project.name")}
 89 |       description={$i18n.t("modals.note.create.project.description") ?? ""}
 90 |     >
 91 |       <Select
 92 |         value={project.id}
 93 |         on:change={({ detail: id }) => {
 94 |           const res = $settings.projects.find((w) => w.id === id);
 95 |           if (res) {
 96 |             project = res;
 97 |           }
 98 |         }}
 99 |         options={$settings.projects.map((project) => ({
100 |           label: project.name,
101 |           value: project.id,
102 |         }))}
103 |       />
104 |     </SettingItem>
105 |   </ModalContent>
106 |   <ModalButtonGroup>
107 |     <Button
108 |       variant="primary"
109 |       on:click={() => {
110 |         onSave(
111 |           project.id,
112 |           Object.assign({}, DEFAULT_VIEW, {
113 |             id: uuidv4(),
114 |             name:
115 |               name ||
116 |               nextUniqueViewName(project.views, selectedOption?.label ?? type),
117 |             type,
118 |           })
119 |         );
120 |       }}>{$i18n.t("modals.view.create.cta")}</Button
121 |     >
122 |   </ModalButtonGroup>
123 | </ModalLayout>
124 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/CenterBox.svelte:
--------------------------------------------------------------------------------
 1 | <div><slot /></div>
 2 | 
 3 | <style>
 4 |   div {
 5 |     width: 100%;
 6 |     height: 100%;
 7 |     display: flex;
 8 |     align-items: center;
 9 |     justify-content: center;
10 |     flex: 1;
11 |   }
12 | </style>
13 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/ConfigureField.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import {
  3 |     Button,
  4 |     ModalButtonGroup,
  5 |     ModalContent,
  6 |     ModalLayout,
  7 |     Select,
  8 |     SettingItem,
  9 |     Switch,
 10 |     TextInput,
 11 |   } from "obsidian-svelte";
 12 |   import MultiTextInput from "src/ui/components/MultiTextInput/MultiTextInput.svelte";
 13 |   import { DataFieldType, type DataField } from "src/lib/dataframe/dataframe";
 14 |   import { i18n } from "src/lib/stores/i18n";
 15 | 
 16 |   export let title: string;
 17 |   export let field: DataField;
 18 |   export let editable: boolean;
 19 |   export let existingFields: DataField[];
 20 |   export let onSave: (field: DataField) => void;
 21 | 
 22 |   $: fieldNameError = validateFieldName(field.name);
 23 | 
 24 |   function validateFieldName(fieldName: string) {
 25 |     if (fieldName.trim() === "") {
 26 |       return $i18n.t("modals.field.configure.empty-name-error");
 27 |     }
 28 |     if (existingFields.findIndex((field) => field.name === fieldName) !== -1)
 29 |       return $i18n.t("modals.field.configure.existing-name-error");
 30 |     return "";
 31 |   }
 32 | 
 33 |   function handleNameChange(value: CustomEvent<string>) {
 34 |     field = {
 35 |       ...field,
 36 |       name: value.detail,
 37 |     };
 38 |   }
 39 | 
 40 |   function handleTypeChange(value: CustomEvent<string>) {
 41 |     field = {
 42 |       ...field,
 43 |       type: value.detail as DataFieldType,
 44 |     };
 45 |   }
 46 | 
 47 |   function handleOptionsChange(options: string[]) {
 48 |     field = {
 49 |       ...field,
 50 |       typeConfig: {
 51 |         ...field.typeConfig,
 52 |         options,
 53 |       },
 54 |     };
 55 |   }
 56 | 
 57 |   function handleRichTextChange({ detail: richText }: CustomEvent<boolean>) {
 58 |     field = {
 59 |       ...field,
 60 |       typeConfig: {
 61 |         ...field.typeConfig,
 62 |         richText,
 63 |       },
 64 |     };
 65 |   }
 66 | 
 67 |   function handleTimeChange({ detail: time }: CustomEvent<boolean>) {
 68 |     field = {
 69 |       ...field,
 70 |       typeConfig: {
 71 |         ...field.typeConfig,
 72 |         time,
 73 |       },
 74 |     };
 75 |   }
 76 | 
 77 |   $: options = [
 78 |     { label: $i18n.t("data-types.string"), value: DataFieldType.String },
 79 |     { label: $i18n.t("data-types.number"), value: DataFieldType.Number },
 80 |     { label: $i18n.t("data-types.boolean"), value: DataFieldType.Boolean },
 81 |     { label: $i18n.t("data-types.date"), value: DataFieldType.Date },
 82 |     { label: $i18n.t("data-types.unknown"), value: DataFieldType.Unknown },
 83 |   ];
 84 | </script>
 85 | 
 86 | <ModalLayout {title}>
 87 |   <ModalContent>
 88 |     <SettingItem name={$i18n.t("modals.field.configure.name.name")}>
 89 |       <TextInput
 90 |         readonly={!editable}
 91 |         value={field.name}
 92 |         error={!!fieldNameError}
 93 |         helperText={fieldNameError}
 94 |         on:input={handleNameChange}
 95 |       />
 96 |     </SettingItem>
 97 |     <SettingItem
 98 |       name={$i18n.t("modals.field.configure.type.name")}
 99 |       description={$i18n.t("modals.field.configure.type.description")}
100 |     >
101 |       <Select
102 |         disabled
103 |         value={field.type}
104 |         {options}
105 |         on:change={handleTypeChange}
106 |       />
107 |     </SettingItem>
108 |     {#if field.type === DataFieldType.String && !field.repeated && !field.identifier}
109 |       <SettingItem
110 |         name={$i18n.t("modals.field.configure.options.name")}
111 |         description={$i18n.t("modals.field.configure.options.description")}
112 |         vertical
113 |       >
114 |         <MultiTextInput
115 |           options={field.typeConfig?.options ?? []}
116 |           onChange={handleOptionsChange}
117 |         />
118 |       </SettingItem>
119 |       <SettingItem
120 |         name={$i18n.t("modals.field.configure.rich-text.name")}
121 |         description={$i18n.t("modals.field.configure.rich-text.description")}
122 |       >
123 |         <Switch
124 |           checked={field.typeConfig?.richText ?? false}
125 |           on:check={handleRichTextChange}
126 |         />
127 |       </SettingItem>
128 |     {/if}
129 |     {#if field.type === DataFieldType.String && field.repeated && !field.identifier}
130 |       <SettingItem
131 |         name={$i18n.t("modals.field.configure.rich-text.name")}
132 |         description={$i18n.t("modals.field.configure.rich-text.description")}
133 |       >
134 |         <Switch
135 |           checked={field.typeConfig?.richText ?? false}
136 |           on:check={handleRichTextChange}
137 |         />
138 |       </SettingItem>
139 |     {/if}
140 |     {#if field.type === DataFieldType.Date && !field.repeated}
141 |       <SettingItem
142 |         name={$i18n.t("modals.field.configure.time.name")}
143 |         description={$i18n.t("modals.field.configure.time.description")}
144 |       >
145 |         <Switch
146 |           checked={field.typeConfig?.time ?? false}
147 |           on:check={handleTimeChange}
148 |         />
149 |       </SettingItem>
150 |     {/if}
151 |   </ModalContent>
152 |   <ModalButtonGroup>
153 |     <Button
154 |       variant="primary"
155 |       disabled={!!fieldNameError}
156 |       on:click={() => {
157 |         // uniquify options items and omit empty
158 |         if (field?.typeConfig && field.typeConfig?.options) {
159 |           const options = field.typeConfig.options;
160 |           field = {
161 |             ...field,
162 |             typeConfig: {
163 |               ...field.typeConfig,
164 |               options: [...new Set(options)].filter((v) => v !== ""),
165 |             },
166 |           };
167 |         }
168 | 
169 |         onSave(field);
170 |       }}>{$i18n.t("modals.field.configure.save")}</Button
171 |     >
172 |   </ModalButtonGroup>
173 | </ModalLayout>
174 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/ConfirmDialog.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     Button,
 4 |     ModalButtonGroup,
 5 |     ModalContent,
 6 |     ModalLayout,
 7 |     Typography,
 8 |   } from "obsidian-svelte";
 9 | 
10 |   import { i18n } from "src/lib/stores/i18n";
11 | 
12 |   export let title: string;
13 |   export let message: string;
14 |   export let cta: string;
15 |   export let onConfirm: () => void;
16 |   export let onCancel: () => void;
17 | </script>
18 | 
19 | <ModalLayout {title}>
20 |   <ModalContent>
21 |     <Typography variant="body">{message}</Typography>
22 |   </ModalContent>
23 |   <ModalButtonGroup>
24 |     <Button
25 |       variant={cta === $i18n.t("modals.confirm.delete")
26 |         ? "destructive"
27 |         : "primary"}
28 |       on:click={() => {
29 |         onConfirm();
30 |       }}>{cta}</Button
31 |     >
32 |     <Button
33 |       on:click={() => {
34 |         onCancel();
35 |       }}
36 |     >
37 |       {$i18n.t("modals.confirm.cancel")}
38 |     </Button>
39 |   </ModalButtonGroup>
40 | </ModalLayout>
41 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/CreateField.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import {
  3 |     Button,
  4 |     ModalButtonGroup,
  5 |     ModalContent,
  6 |     ModalLayout,
  7 |     Select,
  8 |     SettingItem,
  9 |     TextInput,
 10 |     NumberInput,
 11 |     // DateInput,
 12 |     // DatetimeInput,
 13 |     Switch,
 14 |   } from "obsidian-svelte";
 15 |   import { TagsInput } from "src/ui/components/TagsInput";
 16 |   import MultiTextInput from "src/ui/components/MultiTextInput/MultiTextInput.svelte";
 17 |   import dayjs from "dayjs";
 18 |   import {
 19 |     DataFieldType,
 20 |     type Optional,
 21 |     type DataField,
 22 |     type DataValue,
 23 |   } from "src/lib/dataframe/dataframe";
 24 |   import { i18n } from "src/lib/stores/i18n";
 25 |   import { onMount } from "svelte";
 26 |   import DateInput from "src/ui/components/DateInput.svelte";
 27 |   import DatetimeInput from "src/ui/components/DatetimeInput.svelte";
 28 | 
 29 |   export let existingFields: DataField[];
 30 |   export let defaultName: string;
 31 |   let inputRef: HTMLInputElement;
 32 | 
 33 |   export let field: DataField = {
 34 |     name: defaultName,
 35 |     type: DataFieldType.String,
 36 |     repeated: false,
 37 |     derived: false,
 38 |     identifier: false,
 39 |   };
 40 | 
 41 |   let value: Optional<DataValue> = ""; // text, number and boolean
 42 |   let listValue: string = "[]";
 43 |   let dateValue: Optional<Date> = new Date();
 44 | 
 45 |   export let onCreate: (field: DataField, value: Optional<DataValue>) => void;
 46 | 
 47 |   $: fieldNameError = validateFieldName(field.name);
 48 | 
 49 |   function validateFieldName(fieldName: string) {
 50 |     if (fieldName.trim() === "") {
 51 |       return $i18n.t("modals.field.create.empty-name-error");
 52 |     }
 53 | 
 54 |     if (existingFields.findIndex((field) => field.name === fieldName) !== -1) {
 55 |       return $i18n.t("modals.field.create.existing-name-error");
 56 |     }
 57 | 
 58 |     return "";
 59 |   }
 60 | 
 61 |   type Conversions = {
 62 |     [K in DataFieldType]: {
 63 |       [L in DataFieldType]: (v: any) => any;
 64 |     };
 65 |   };
 66 | 
 67 |   const conversions: Conversions = {
 68 |     [DataFieldType.String]: {
 69 |       [DataFieldType.String]: (v: string) => v,
 70 |       [DataFieldType.Number]: (v: number) => v.toString(),
 71 |       [DataFieldType.Boolean]: (v: boolean) => v.toString(),
 72 |       [DataFieldType.Date]: (v: string) => v.toString(),
 73 |       [DataFieldType.List]: (v: Array<string>) => v.toString(),
 74 |       [DataFieldType.Unknown]: () => null,
 75 |     },
 76 |     [DataFieldType.Number]: {
 77 |       [DataFieldType.String]: (v: string) => parseInt(v),
 78 |       [DataFieldType.Number]: (v: number) => v,
 79 |       [DataFieldType.Boolean]: (v: boolean) => (v ? 1 : 0),
 80 |       [DataFieldType.Date]: (v: string) => dayjs(v).toDate().getTime(),
 81 |       [DataFieldType.List]: (v: Array<string>) => parseInt(v.toString()),
 82 |       [DataFieldType.Unknown]: () => null,
 83 |     },
 84 |     [DataFieldType.Boolean]: {
 85 |       [DataFieldType.String]: (v: string) => !!v,
 86 |       [DataFieldType.Number]: (v: number) => !!v,
 87 |       [DataFieldType.Boolean]: (v: boolean) => v,
 88 |       [DataFieldType.Date]: (v: string) => !!v,
 89 |       [DataFieldType.List]: (v: Array<string>) => !!v.toString(),
 90 |       [DataFieldType.Unknown]: () => null,
 91 |     },
 92 |     [DataFieldType.Date]: {
 93 |       [DataFieldType.String]: (v: string) => dayjs(v).format("YYYY-MM-DD"),
 94 |       [DataFieldType.Number]: (v: number) => dayjs(v).format("YYYY-MM-DD"),
 95 |       [DataFieldType.Boolean]: () => dayjs().format("YYYY-MM-DD"),
 96 |       [DataFieldType.Date]: (v: string) => v,
 97 |       [DataFieldType.List]: (v: Array<string>) =>
 98 |         dayjs(v.toString()).format("YYYY-MM-DD"),
 99 |       [DataFieldType.Unknown]: () => null,
100 |     },
101 |     [DataFieldType.List]: {
102 |       [DataFieldType.String]: (v: string) => [v],
103 |       [DataFieldType.Number]: (v: number) => [v],
104 |       [DataFieldType.Boolean]: (v: boolean) => [v],
105 |       [DataFieldType.Date]: (v: string) => [v],
106 |       [DataFieldType.List]: (v: Array<string>) => v,
107 |       [DataFieldType.Unknown]: () => null,
108 |     },
109 |     [DataFieldType.Unknown]: {
110 |       [DataFieldType.String]: () => null,
111 |       [DataFieldType.Number]: () => null,
112 |       [DataFieldType.Boolean]: () => null,
113 |       [DataFieldType.Date]: () => null,
114 |       [DataFieldType.List]: () => null,
115 |       [DataFieldType.Unknown]: () => null,
116 |     },
117 |   };
118 | 
119 |   function convert(
120 |     origValue: Optional<DataValue>,
121 |     from: DataFieldType,
122 |     to: DataFieldType
123 |   ) {
124 |     if (origValue === undefined || origValue === null) {
125 |       return null;
126 |     }
127 | 
128 |     // list and date uses separated values to avoid conversion runs into chaos
129 |     if (
130 |       to === DataFieldType.List ||
131 |       to === DataFieldType.Date ||
132 |       from === DataFieldType.List ||
133 |       from === DataFieldType.Date
134 |     ) {
135 |       return origValue;
136 |     }
137 | 
138 |     return conversions[to][from](origValue);
139 |   }
140 | 
141 |   function handleTypeChange(event: CustomEvent<string>) {
142 |     const from = field.type;
143 |     const to = event.detail as DataFieldType;
144 |     if (to === DataFieldType.List) {
145 |       field = {
146 |         ...field,
147 |         type: to,
148 |         repeated: true,
149 |       };
150 |     } else {
151 |       value = convert(value, from, to);
152 |       field = {
153 |         ...field,
154 |         type: to,
155 |         repeated: false,
156 |       };
157 |     }
158 |   }
159 | 
160 |   function handleOptionsChange(textOptions: string[]) {
161 |     field = {
162 |       ...field,
163 |       typeConfig: {
164 |         ...field.typeConfig,
165 |         options: textOptions,
166 |       },
167 |     };
168 |   }
169 | 
170 |   function handleRichTextChange({ detail: richText }: CustomEvent<boolean>) {
171 |     field = {
172 |       ...field,
173 |       typeConfig: {
174 |         ...field.typeConfig,
175 |         richText,
176 |       },
177 |     };
178 |   }
179 | 
180 |   function handleTimeChange({ detail: time }: CustomEvent<boolean>) {
181 |     field = {
182 |       ...field,
183 |       typeConfig: {
184 |         ...field.typeConfig,
185 |         time,
186 |       },
187 |     };
188 |   }
189 | 
190 |   const options = [
191 |     { label: $i18n.t("data-types.string"), value: DataFieldType.String },
192 |     { label: $i18n.t("data-types.number"), value: DataFieldType.Number },
193 |     { label: $i18n.t("data-types.boolean"), value: DataFieldType.Boolean },
194 |     { label: $i18n.t("data-types.date"), value: DataFieldType.Date },
195 |     { label: $i18n.t("data-types.list"), value: DataFieldType.List },
196 |   ];
197 | 
198 |   onMount(() => {
199 |     if (inputRef) inputRef.select();
200 |   });
201 | </script>
202 | 
203 | <ModalLayout title={$i18n.t("modals.field.create.title")}>
204 |   <ModalContent>
205 |     <SettingItem
206 |       name={$i18n.t("modals.field.create.name.name")}
207 |       description={$i18n.t("modals.field.create.name.description") ?? ""}
208 |     >
209 |       <TextInput
210 |         bind:ref={inputRef}
211 |         value={field.name}
212 |         on:input={(event) => (field = { ...field, name: event.detail })}
213 |         autoFocus
214 |         error={!!fieldNameError}
215 |         helperText={fieldNameError}
216 |         on:keydown={(ev) => {
217 |           if (ev.key === "Enter" && !fieldNameError) {
218 |             ev.preventDefault();
219 |             onCreate(field, value);
220 |           }
221 |         }}
222 |       />
223 |     </SettingItem>
224 | 
225 |     <SettingItem
226 |       name={$i18n.t("modals.field.create.type.name")}
227 |       description={$i18n.t("modals.field.create.type.description")}
228 |     >
229 |       <Select value={field.type} {options} on:change={handleTypeChange} />
230 |     </SettingItem>
231 | 
232 |     <SettingItem
233 |       name={$i18n.t("modals.field.create.default.name")}
234 |       description={$i18n.t("modals.field.create.default.description")}
235 |     >
236 |       {#if field.type === DataFieldType.List}
237 |         <TagsInput
238 |           value={JSON.parse(listValue)}
239 |           on:change={(event) => {
240 |             listValue = event.detail;
241 |           }}
242 |         />
243 |       {:else if field.type === DataFieldType.String}
244 |         <TextInput
245 |           value={value?.toString() ?? ""}
246 |           on:input={(event) => (value = event.detail)}
247 |           on:keydown={(ev) => {
248 |             if (ev.key === "Enter" && !fieldNameError) {
249 |               ev.preventDefault();
250 |               onCreate(field, value);
251 |             }
252 |           }}
253 |         />
254 |       {:else if field.type === DataFieldType.Number}
255 |         <NumberInput
256 |           bind:ref={inputRef}
257 |           value={parseInt((value ?? "").toString())}
258 |           on:input={(event) => (value = event.detail)}
259 |           on:keydown={(ev) => {
260 |             if (ev.key === "Enter" && !fieldNameError) {
261 |               ev.preventDefault();
262 |               onCreate(field, value);
263 |             }
264 |           }}
265 |         />
266 |       {:else if field.type === DataFieldType.Date}
267 |         {#if field.typeConfig?.time}
268 |           <DatetimeInput
269 |             value={dateValue ?? new Date()}
270 |             on:input={({ detail: value }) => {
271 |               dateValue = value;
272 |             }}
273 |           />
274 |         {:else}
275 |           <DateInput
276 |             value={dateValue ?? new Date()}
277 |             on:input={({ detail: value }) => {
278 |               dateValue = value;
279 |             }}
280 |           />
281 |         {/if}
282 |       {:else if field.type === DataFieldType.Boolean}
283 |         <Switch
284 |           checked={value ? true : false}
285 |           on:check={(ev) => {
286 |             value = ev.detail;
287 |           }}
288 |         />
289 |       {/if}
290 |     </SettingItem>
291 |     {#if !field.repeated && field.type === DataFieldType.String}
292 |       <SettingItem
293 |         name={$i18n.t("modals.field.create.options.name")}
294 |         description={$i18n.t("modals.field.create.options.description")}
295 |         vertical
296 |       >
297 |         <MultiTextInput
298 |           options={field.typeConfig?.options ?? []}
299 |           onChange={handleOptionsChange}
300 |         />
301 |       </SettingItem>
302 |       <SettingItem
303 |         name={$i18n.t("modals.field.configure.rich-text.name")}
304 |         description={$i18n.t("modals.field.configure.rich-text.description")}
305 |       >
306 |         <Switch
307 |           checked={field.typeConfig?.richText ?? false}
308 |           on:check={handleRichTextChange}
309 |         />
310 |       </SettingItem>
311 |     {/if}
312 |     {#if !field.repeated && field.type === DataFieldType.Date}
313 |       <SettingItem
314 |         name={$i18n.t("modals.field.configure.time.name")}
315 |         description={$i18n.t("modals.field.configure.time.description")}
316 |       >
317 |         <Switch
318 |           checked={field.typeConfig?.time ?? false}
319 |           on:check={handleTimeChange}
320 |         />
321 |       </SettingItem>
322 |     {/if}
323 |   </ModalContent>
324 |   <ModalButtonGroup>
325 |     <Button
326 |       variant={"primary"}
327 |       disabled={!!fieldNameError}
328 |       on:click={() => {
329 |         if (field.repeated) {
330 |           onCreate(
331 |             { ...field, type: DataFieldType.String }, // remove the temporary `list` type declaration
332 |             JSON.parse(listValue)
333 |           );
334 |         } else if (field.type === DataFieldType.Date) {
335 |           onCreate(
336 |             field,
337 |             // If no date(time) value specified still add today's date / current time
338 |             dayjs(dateValue ?? "").format(
339 |               field.typeConfig?.time ? "YYYY-MM-DDTHH:mm" : "YYYY-MM-DD"
340 |             )
341 |           );
342 |         } else if (field.type === DataFieldType.String) {
343 |           // uniquify options items and omit empty
344 |           if (field?.typeConfig && field.typeConfig?.options) {
345 |             const options = field.typeConfig.options;
346 |             field = {
347 |               ...field,
348 |               typeConfig: {
349 |                 ...field.typeConfig,
350 |                 options: [...new Set(options)].filter((v) => v !== ""),
351 |               },
352 |             };
353 |           }
354 |           onCreate(field, value);
355 |         } else {
356 |           onCreate(field, value);
357 |         }
358 |       }}
359 |     >
360 |       {$i18n.t("modals.field.create.create")}
361 |     </Button>
362 |   </ModalButtonGroup>
363 | </ModalLayout>
364 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/CreateNote.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { normalizePath, TFile } from "obsidian";
  3 |   import {
  4 |     Button,
  5 |     ModalButtonGroup,
  6 |     ModalContent,
  7 |     ModalLayout,
  8 |     Select,
  9 |     SettingItem,
 10 |     TextInput,
 11 |   } from "obsidian-svelte";
 12 | 
 13 |   import { isValidPath } from "src/lib/obsidian";
 14 |   import { i18n } from "src/lib/stores/i18n";
 15 |   import { app } from "src/lib/stores/obsidian";
 16 |   import { settings } from "src/lib/stores/settings";
 17 |   import type { ProjectDefinition } from "src/settings/settings";
 18 |   import { onMount } from "svelte";
 19 | 
 20 |   let inputRef: HTMLInputElement;
 21 | 
 22 |   export let name: string;
 23 |   export let project: ProjectDefinition;
 24 |   export let onSave: (
 25 |     name: string,
 26 |     templatePath: string,
 27 |     project: ProjectDefinition
 28 |   ) => void;
 29 | 
 30 |   let templatePath = project.templates.at(0) ?? "";
 31 | 
 32 |   $: nameError = validateName(name);
 33 | 
 34 |   function getNewNotesFolder(project: ProjectDefinition) {
 35 |     if (project.newNotesFolder) {
 36 |       return project.newNotesFolder;
 37 |     }
 38 | 
 39 |     if (project.dataSource.kind === "folder") {
 40 |       return project.dataSource.config.path;
 41 |     }
 42 | 
 43 |     return "";
 44 |   }
 45 | 
 46 |   function validateName(name: string) {
 47 |     if (name.trim() === "") {
 48 |       return $i18n.t("modals.note.create.empty-name-error");
 49 |     }
 50 | 
 51 |     const existingFile = $app.vault.getAbstractFileByPath(
 52 |       normalizePath(getNewNotesFolder(project) + "/" + name + ".md")
 53 |     );
 54 | 
 55 |     if (existingFile instanceof TFile) {
 56 |       return $i18n.t("modals.note.create.name-taken-error");
 57 |     }
 58 | 
 59 |     if (!isValidPath(name)) {
 60 |       return $i18n.t("modals.project.defaultName.invalid");
 61 |     }
 62 | 
 63 |     if (name.startsWith(".")) {
 64 |       return $i18n.t("modals.note.create.dot-start-error");
 65 |     }
 66 | 
 67 |     return "";
 68 |   }
 69 | 
 70 |   onMount(() => {
 71 |     if (inputRef) inputRef.select();
 72 |   });
 73 | </script>
 74 | 
 75 | <ModalLayout title={$i18n.t("modals.note.create.title")}>
 76 |   <ModalContent>
 77 |     <SettingItem
 78 |       name={$i18n.t("modals.note.create.name.name")}
 79 |       description={$i18n.t("modals.note.create.name.description") ?? ""}
 80 |     >
 81 |       <TextInput
 82 |         bind:ref={inputRef}
 83 |         value={name}
 84 |         on:input={({ detail: value }) => (name = value)}
 85 |         autoFocus
 86 |         error={!!nameError}
 87 |         helperText={nameError}
 88 |         on:keydown={(ev) => {
 89 |           if (ev.key === "Enter" && !nameError) {
 90 |             ev.preventDefault();
 91 |             onSave(name, templatePath, project);
 92 |           }
 93 |         }}
 94 |       />
 95 |     </SettingItem>
 96 | 
 97 |     <SettingItem
 98 |       name={$i18n.t("modals.note.create.project.name")}
 99 |       description={$i18n.t("modals.note.create.project.description") ?? ""}
100 |     >
101 |       <Select
102 |         value={project.id}
103 |         on:change={({ detail: id }) => {
104 |           const res = $settings.projects.find((w) => w.id === id);
105 |           if (res) {
106 |             project = res;
107 |           }
108 |         }}
109 |         options={$settings.projects.map((project) => ({
110 |           label: project.name,
111 |           value: project.id,
112 |         }))}
113 |       />
114 |     </SettingItem>
115 | 
116 |     {#if project.templates.length}
117 |       <SettingItem
118 |         name={$i18n.t("modals.note.create.templatePath.name")}
119 |         description={$i18n.t("modals.note.create.templatePath.description") ??
120 |           ""}
121 |       >
122 |         <Select
123 |           value={templatePath}
124 |           on:change={({ detail: value }) => (templatePath = value)}
125 |           options={project.templates.map((path) => ({
126 |             label: path,
127 |             value: path,
128 |           }))}
129 |           placeholder={$i18n.t("modals.note.create.templatePath.none") ?? ""}
130 |           allowEmpty
131 |         />
132 |       </SettingItem>
133 |     {/if}
134 |   </ModalContent>
135 |   <ModalButtonGroup>
136 |     <Button
137 |       variant={"primary"}
138 |       disabled={!!nameError}
139 |       on:click={() => {
140 |         onSave(name, templatePath, project);
141 |       }}
142 |     >
143 |       {$i18n.t("modals.note.create.create")}
144 |     </Button>
145 |   </ModalButtonGroup>
146 | </ModalLayout>
147 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/CreateProject.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import moment from "moment";
  3 |   import {
  4 |     Button,
  5 |     Callout,
  6 |     FileAutocomplete,
  7 |     ModalButtonGroup,
  8 |     ModalContent,
  9 |     ModalLayout,
 10 |     Select,
 11 |     SettingItem,
 12 |     Switch,
 13 |     TextArea,
 14 |     TextInput,
 15 |     Typography,
 16 |   } from "obsidian-svelte";
 17 | 
 18 |   import { FileListInput } from "src/ui/components/FileListInput";
 19 |   import { Accordion, AccordionItem } from "src/ui/components/Accordion";
 20 |   import { notEmpty } from "src/lib/helpers";
 21 |   import { getFoldersInFolder, isValidPath } from "src/lib/obsidian";
 22 |   import { capabilities } from "src/lib/stores/capabilities";
 23 |   import { i18n } from "src/lib/stores/i18n";
 24 |   import { app } from "src/lib/stores/obsidian";
 25 |   import { settings } from "src/lib/stores/settings";
 26 |   import { interpolateTemplate } from "src/lib/templates/interpolate";
 27 |   import type { ProjectDefinition } from "src/settings/settings";
 28 | 
 29 |   export let title: string;
 30 |   export let cta: string;
 31 |   export let onSave: (project: ProjectDefinition) => void;
 32 |   export let project: ProjectDefinition;
 33 | 
 34 |   let originalName = project.name;
 35 | 
 36 |   $: projects = $settings.projects;
 37 | 
 38 |   $: defaultName = interpolateTemplate(project.defaultName ?? "", {
 39 |     date: (format) => moment().format(format || "YYYY-MM-DD"),
 40 |     time: (format) => moment().format(format || "HH:mm"),
 41 |   });
 42 | 
 43 |   $: ({ name } = project);
 44 |   $: nameError = validateName(name);
 45 | 
 46 |   const dataSourceOptions = [
 47 |     { label: $i18n.t("datasources.folder"), value: "folder" },
 48 |     { label: $i18n.t("datasources.tag"), value: "tag" },
 49 |   ];
 50 | 
 51 |   if ($capabilities.dataview) {
 52 |     dataSourceOptions.push({
 53 |       label: $i18n.t("datasources.dataview"),
 54 |       value: "dataview",
 55 |     });
 56 |   }
 57 | 
 58 |   function handleDataSourceChange({ detail: value }: CustomEvent<string>) {
 59 |     switch (value) {
 60 |       case "folder":
 61 |         project = {
 62 |           ...project,
 63 |           dataSource: {
 64 |             kind: "folder",
 65 |             config: { path: "", recursive: false },
 66 |           },
 67 |         };
 68 |         break;
 69 |       case "tag":
 70 |         project = {
 71 |           ...project,
 72 |           dataSource: { kind: "tag", config: { tag: "", hierarchy: false } },
 73 |         };
 74 |         break;
 75 |       case "dataview":
 76 |         project = {
 77 |           ...project,
 78 |           dataSource: { kind: "dataview", config: { query: "" } },
 79 |         };
 80 |         break;
 81 |     }
 82 |   }
 83 | 
 84 |   function validateName(name: string) {
 85 |     if (name === originalName) {
 86 |       return "";
 87 |     }
 88 | 
 89 |     if (name.trim() === "") {
 90 |       return $i18n.t("modals.project.create.empty-name-error");
 91 |     }
 92 | 
 93 |     if (projects.find((project) => project.name === name)) {
 94 |       return $i18n.t("modals.project.create.existing-name-error");
 95 |     }
 96 | 
 97 |     return "";
 98 |   }
 99 | </script>
100 | 
101 | <ModalLayout {title}>
102 |   <ModalContent>
103 |     <SettingItem
104 |       name={$i18n.t("modals.project.name.name")}
105 |       description={$i18n.t("modals.project.name.description") ?? ""}
106 |     >
107 |       <TextInput
108 |         value={project.name}
109 |         on:input={({ detail: name }) => (project = { ...project, name })}
110 |         autoFocus
111 |         error={!!nameError}
112 |         helperText={nameError}
113 |       />
114 |     </SettingItem>
115 |     <SettingItem
116 |       name={$i18n.t("modals.project.default.name")}
117 |       description={$i18n.t("modals.project.default.description") ?? ""}
118 |     >
119 |       <Switch
120 |         checked={project.isDefault ?? false}
121 |         on:check={({ detail: isDefault }) =>
122 |           (project = { ...project, isDefault })}
123 |       />
124 |     </SettingItem>
125 | 
126 |     <SettingItem
127 |       name={$i18n.t("modals.project.datasource.name")}
128 |       description={$i18n.t("modals.project.datasource.description")}
129 |     >
130 |       <Select
131 |         value={project.dataSource.kind}
132 |         options={dataSourceOptions}
133 |         on:change={handleDataSourceChange}
134 |       />
135 |     </SettingItem>
136 | 
137 |     {#if project.dataSource.kind === "folder"}
138 |       <SettingItem
139 |         name={$i18n.t("modals.project.path.name")}
140 |         description={$i18n.t("modals.project.path.description") ?? ""}
141 |         vertical
142 |       >
143 |         <FileAutocomplete
144 |           files={getFoldersInFolder($app.vault.getRoot())}
145 |           value={project.dataSource.config.path}
146 |           on:change={({ detail: path }) => {
147 |             if (project.dataSource.kind === "folder") {
148 |               project = {
149 |                 ...project,
150 |                 dataSource: {
151 |                   kind: project.dataSource.kind,
152 |                   config: { ...project.dataSource.config, path },
153 |                 },
154 |               };
155 |             }
156 |           }}
157 |           getLabel={(file) => file.path}
158 |           placeholder={"/"}
159 |           width="100%"
160 |         />
161 |       </SettingItem>
162 | 
163 |       <SettingItem
164 |         name={$i18n.t("modals.project.recursive.name")}
165 |         description={$i18n.t("modals.project.recursive.description") ?? ""}
166 |       >
167 |         <Switch
168 |           checked={project.dataSource.config.recursive}
169 |           on:check={({ detail: recursive }) => {
170 |             if (project.dataSource.kind === "folder") {
171 |               project = {
172 |                 ...project,
173 |                 dataSource: {
174 |                   kind: project.dataSource.kind,
175 |                   config: { ...project.dataSource.config, recursive },
176 |                 },
177 |               };
178 |             }
179 |           }}
180 |         />
181 |       </SettingItem>
182 |     {/if}
183 | 
184 |     {#if project.dataSource.kind === "tag"}
185 |       <SettingItem
186 |         name={$i18n.t("modals.project.tag.name")}
187 |         description={$i18n.t("modals.project.tag.description") ?? ""}
188 |         vertical
189 |       >
190 |         <TextInput
191 |           placeholder="#tag"
192 |           value={project.dataSource.config.tag ?? ""}
193 |           on:input={({ detail: tag }) => {
194 |             if (project.dataSource.kind === "tag") {
195 |               project = {
196 |                 ...project,
197 |                 dataSource: {
198 |                   kind: project.dataSource.kind,
199 |                   config: { ...project.dataSource.config, tag },
200 |                 },
201 |               };
202 |             }
203 |           }}
204 |           width="100%"
205 |         />
206 |       </SettingItem>
207 | 
208 |       <SettingItem
209 |         name={$i18n.t("modals.project.hierarchy.name")}
210 |         description={$i18n.t("modals.project.hierarchy.description")}
211 |       >
212 |         <Switch
213 |           checked={project.dataSource.config.hierarchy}
214 |           on:check={({ detail: hierarchy }) => {
215 |             if (project.dataSource.kind === "tag") {
216 |               project = {
217 |                 ...project,
218 |                 dataSource: {
219 |                   kind: project.dataSource.kind,
220 |                   config: { ...project.dataSource.config, hierarchy },
221 |                 },
222 |               };
223 |             }
224 |           }}
225 |         />
226 |       </SettingItem>
227 |     {/if}
228 | 
229 |     {#if project.dataSource.kind === "dataview"}
230 |       {#if $capabilities.dataview}
231 |         <SettingItem
232 |           name={$i18n.t("modals.project.query.name")}
233 |           description={$i18n.t("modals.project.query.description") ?? ""}
234 |           vertical
235 |         >
236 |           <TextArea
237 |             placeholder={`TABLE status AS "Status" FROM "Work"`}
238 |             value={project.dataSource.config.query ?? ""}
239 |             on:input={({ detail: query }) => {
240 |               if (project.dataSource.kind === "dataview") {
241 |                 project = {
242 |                   ...project,
243 |                   dataSource: {
244 |                     kind: project.dataSource.kind,
245 |                     config: { ...project.dataSource.config, query },
246 |                   },
247 |                 };
248 |               }
249 |             }}
250 |             rows={6}
251 |             width="100%"
252 |           />
253 |         </SettingItem>
254 |       {:else}
255 |         <Callout
256 |           title={$i18n.t("modals.project.dataview.error.title")}
257 |           icon="zap"
258 |           variant="danger"
259 |         >
260 |           <Typography variant="body">
261 |             {$i18n.t("modals.project.dataview.error.message")}
262 |           </Typography>
263 |         </Callout>
264 |       {/if}
265 |     {/if}
266 | 
267 |     <Accordion>
268 |       <AccordionItem>
269 |         <div slot="header" class="setting-item-info" style:margin-top="8px">
270 |           <div class="setting-item-name">
271 |             {$i18n.t("modals.project.more-settings.name")}
272 |           </div>
273 |         </div>
274 |         <SettingItem
275 |           name={$i18n.t("modals.project.newNotesFolder.name")}
276 |           description={$i18n.t("modals.project.newNotesFolder.description") ??
277 |             ""}
278 |         >
279 |           <FileAutocomplete
280 |             files={getFoldersInFolder($app.vault.getRoot())}
281 |             value={project.newNotesFolder}
282 |             placeholder={project.dataSource.kind === "folder"
283 |               ? project.dataSource.config.path
284 |               : "/"}
285 |             on:change={({ detail: newNotesFolder }) => {
286 |               project = {
287 |                 ...project,
288 |                 newNotesFolder,
289 |               };
290 |             }}
291 |             getLabel={(file) => file.path}
292 |           />
293 |         </SettingItem>
294 | 
295 |         <SettingItem
296 |           name={$i18n.t("modals.project.defaultName.name")}
297 |           description={$i18n.t("modals.project.defaultName.description") ?? ""}
298 |           vertical
299 |         >
300 |           <TextInput
301 |             value={project.defaultName ?? ""}
302 |             on:input={({ detail: defaultName }) =>
303 |               (project = { ...project, defaultName })}
304 |             width="100%"
305 |           />
306 |           <small>
307 |             {defaultName}
308 |           </small>
309 |           {#if !isValidPath(defaultName)}
310 |             <small class="error"
311 |               >{$i18n.t("modals.project.defaultName.invalid")}</small
312 |             >
313 |           {/if}
314 |         </SettingItem>
315 | 
316 |         <SettingItem
317 |           name={$i18n.t("modals.project.templates.name")}
318 |           description={$i18n.t("modals.project.templates.description") ?? ""}
319 |           vertical
320 |         >
321 |           <FileListInput
322 |             buttonText={$i18n.t("modals.project.templates.add")}
323 |             paths={project.templates ?? []}
324 |             onPathsChange={(templates) => (project = { ...project, templates })}
325 |           />
326 |         </SettingItem>
327 | 
328 |         <SettingItem
329 |           name={$i18n.t("modals.project.exclude.name")}
330 |           description={$i18n.t("modals.project.exclude.description") ?? ""}
331 |           vertical
332 |         >
333 |           <FileListInput
334 |             buttonText={$i18n.t("modals.project.exclude.add")}
335 |             paths={project.excludedNotes ?? []}
336 |             onPathsChange={(excludedNotes) =>
337 |               (project = { ...project, excludedNotes })}
338 |           />
339 |         </SettingItem>
340 |       </AccordionItem>
341 |     </Accordion>
342 |   </ModalContent>
343 |   <ModalButtonGroup>
344 |     <Button
345 |       variant="primary"
346 |       disabled={!!nameError}
347 |       on:click={() => {
348 |         onSave({
349 |           ...project,
350 |           templates: project.templates?.filter(notEmpty) ?? [],
351 |         });
352 |       }}>{cta}</Button
353 |     >
354 |   </ModalButtonGroup>
355 | </ModalLayout>
356 | 
357 | <style>
358 |   small {
359 |     font-size: var(--font-ui-smaller);
360 |     color: var(--text-accent);
361 |     font-weight: var(--font-semibold);
362 |   }
363 |   .error {
364 |     color: var(--text-error);
365 |   }
366 | </style>
367 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/EditNote.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { produce } from "immer";
 3 |   import {
 4 |     Button,
 5 |     Callout,
 6 |     ModalButtonGroup,
 7 |     ModalContent,
 8 |     ModalLayout,
 9 |     SettingItem,
10 |     Typography,
11 |   } from "obsidian-svelte";
12 | 
13 |   import { FieldControl } from "src/ui/components/FieldControl";
14 |   import type { DataField, DataRecord } from "src/lib/dataframe/dataframe";
15 |   import { i18n } from "src/lib/stores/i18n";
16 | 
17 |   export let fields: DataField[];
18 |   export let record: DataRecord;
19 | 
20 |   $: editableFields = fields.filter((field) => !field.derived);
21 | 
22 |   export let onSave: (record: DataRecord) => void;
23 | </script>
24 | 
25 | <ModalLayout title={$i18n.t("modals.note.edit.title")}>
26 |   {#if !editableFields.length}
27 |     <Callout
28 |       title={$i18n.t("modals.note.edit.no-editable-fields.title")}
29 |       icon="info"
30 |       variant="info"
31 |     >
32 |       <Typography variant="body">
33 |         {$i18n.t("modals.note.edit.no-editable-fields.message")}
34 |       </Typography>
35 |     </Callout>
36 |     <ModalContent>
37 |       {#each fields as field (field.name)}
38 |         <SettingItem name={field.name}>
39 |           <FieldControl
40 |             {field}
41 |             value={record.values[field.name]}
42 |             onChange={(value) => {
43 |               record = produce(record, (draft) => {
44 |                 // @ts-ignore
45 |                 draft.values[field.name] = value;
46 |               });
47 |             }}
48 |             readonly={true}
49 |           />
50 |         </SettingItem>
51 |       {/each}
52 |     </ModalContent>
53 |   {/if}
54 |   <ModalContent>
55 |     {#each editableFields as field (field.name)}
56 |       <SettingItem name={field.name}>
57 |         <FieldControl
58 |           {field}
59 |           value={record.values[field.name]}
60 |           onChange={(value) => {
61 |             record = produce(record, (draft) => {
62 |               // @ts-ignore
63 |               draft.values[field.name] = value;
64 |             });
65 |           }}
66 |         />
67 |       </SettingItem>
68 |     {/each}
69 |   </ModalContent>
70 |   <ModalButtonGroup>
71 |     <Button
72 |       variant="primary"
73 |       on:click={() => {
74 |         onSave(record);
75 |       }}
76 |       >{editableFields.length
77 |         ? $i18n.t("modals.note.edit.save")
78 |         : $i18n.t("modals.note.edit.confirm")}</Button
79 |     >
80 |   </ModalButtonGroup>
81 | </ModalLayout>
82 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/InputDialog.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     Button,
 4 |     ModalButtonGroup,
 5 |     ModalContent,
 6 |     ModalLayout,
 7 |   } from "obsidian-svelte";
 8 | 
 9 |   import { i18n } from "src/lib/stores/i18n";
10 | 
11 |   export let value: string;
12 |   export let message: string;
13 |   export let cta: string;
14 |   export let onSubmit: (value: string) => void;
15 |   export let onCancel: () => void;
16 | 
17 |   let ref: HTMLInputElement;
18 | </script>
19 | 
20 | <ModalLayout title={message}>
21 |   <ModalContent>
22 |     <input
23 |       bind:this={ref}
24 |       type="text"
25 |       bind:value
26 |       on:focus={() => ref.select()}
27 |     />
28 |   </ModalContent>
29 |   <ModalButtonGroup>
30 |     <Button
31 |       variant="primary"
32 |       on:click={() => {
33 |         onSubmit(value);
34 |       }}>{cta}</Button
35 |     >
36 |     <Button
37 |       on:click={() => {
38 |         onCancel();
39 |       }}>{$i18n.t("modals.input.cancel")}</Button
40 |     >
41 |   </ModalButtonGroup>
42 | </ModalLayout>
43 | 
44 | <style>
45 |   input {
46 |     width: 100%;
47 |   }
48 | </style>
49 | 


--------------------------------------------------------------------------------
/src/ui/modals/components/Inspector.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     Button,
 4 |     IconButton,
 5 |     ModalButtonGroup,
 6 |     ModalContent,
 7 |     ModalLayout,
 8 |   } from "obsidian-svelte";
 9 |   import { Flair } from "src/ui/components/Flair";
10 |   import { Accordion } from "src/ui/components/Accordion";
11 |   import { AccordionItem } from "src/ui/components/Accordion";
12 |   import type { RecordError } from "src/lib/datasources/frontmatter/datasource";
13 | 
14 |   import { i18n } from "src/lib/stores/i18n";
15 |   import { app } from "src/lib/stores/obsidian";
16 |   import { getDisplayName } from "src/ui/views/Board/components/Board/boardHelpers";
17 | 
18 |   export let title: string;
19 |   export let errors: RecordError[];
20 |   export let onCancel: () => void;
21 | 
22 |   function getFolder(recordId: string) {
23 |     const idx = recordId.lastIndexOf("/");
24 | 
25 |     if (idx < 0) {
26 |       return "/";
27 |     }
28 | 
29 |     return recordId.slice(0, idx);
30 |   }
31 | </script>
32 | 
33 | <ModalLayout {title}>
34 |   <ModalContent>
35 |     <p>
36 |       Issues marked as errors don't show up in your views. Fix the reported
37 |       issue to include them.
38 |     </p>
39 |     <Accordion>
40 |       {#each errors as error}
41 |         <AccordionItem>
42 |           <div slot="header">
43 |             <span
44 |               ><Flair variant="error">error</Flair><IconButton
45 |                 icon="search"
46 |                 onClick={(event) => {
47 |                   $app.workspace.openLinkText(error.recordId, "", true);
48 |                   event.stopPropagation();
49 |                   onCancel();
50 |                 }}
51 |               />
52 |               <div class="setting-item-info">
53 |                 <div class="setting-item-name">
54 |                   {getDisplayName(error.recordId)}
55 |                 </div>
56 |                 <div class="setting-item-description">
57 |                   {getFolder(error.recordId)}
58 |                 </div>
59 |               </div>
60 |             </span>
61 |           </div>
62 |           <pre>{error.err}</pre>
63 |         </AccordionItem>
64 |       {/each}
65 |     </Accordion>
66 |   </ModalContent>
67 |   <ModalButtonGroup>
68 |     <Button
69 |       on:click={() => {
70 |         onCancel();
71 |       }}>{$i18n.t("modals.input.cancel")}</Button
72 |     >
73 |   </ModalButtonGroup>
74 | </ModalLayout>
75 | 
76 | <style>
77 |   pre {
78 |     overflow: scroll;
79 |   }
80 |   span {
81 |     display: flex;
82 |     gap: 8px;
83 |     align-items: center;
84 |   }
85 | </style>
86 | 


--------------------------------------------------------------------------------
/src/ui/modals/configureField.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | import type { DataField } from "src/lib/dataframe/dataframe";
 3 | 
 4 | import ConfigureField from "./components/ConfigureField.svelte";
 5 | 
 6 | export class ConfigureFieldModal extends Modal {
 7 |   component?: ConfigureField;
 8 | 
 9 |   constructor(
10 |     app: App,
11 |     readonly title: string,
12 |     readonly field: DataField,
13 |     readonly existingFields: DataField[],
14 |     readonly editable: boolean,
15 |     readonly onSave: (field: DataField) => void
16 |   ) {
17 |     super(app);
18 |   }
19 | 
20 |   onOpen() {
21 |     this.component = new ConfigureField({
22 |       target: this.contentEl,
23 |       props: {
24 |         title: this.title,
25 |         field: this.field,
26 |         existingFields: this.existingFields,
27 |         editable: this.editable,
28 |         onSave: (field: DataField) => {
29 |           this.onSave(field);
30 |           this.close();
31 |         },
32 |       },
33 |     });
34 |   }
35 | 
36 |   onClose() {
37 |     if (this.component) {
38 |       this.component.$destroy();
39 |     }
40 |   }
41 | }
42 | 


--------------------------------------------------------------------------------
/src/ui/modals/confirmDialog.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | 
 3 | import ConfirmDialog from "./components/ConfirmDialog.svelte";
 4 | 
 5 | export class ConfirmDialogModal extends Modal {
 6 |   component?: ConfirmDialog;
 7 | 
 8 |   constructor(
 9 |     app: App,
10 |     readonly title: string,
11 |     readonly message: string,
12 |     readonly cta: string,
13 |     readonly onConfirm: () => void
14 |   ) {
15 |     super(app);
16 |   }
17 | 
18 |   onOpen() {
19 |     this.component = new ConfirmDialog({
20 |       target: this.contentEl,
21 |       props: {
22 |         title: this.title,
23 |         message: this.message,
24 |         cta: this.cta,
25 |         onConfirm: () => {
26 |           this.onConfirm();
27 |           this.close();
28 |         },
29 |         onCancel: () => {
30 |           this.close();
31 |         },
32 |       },
33 |     });
34 |   }
35 | 
36 |   onClose() {
37 |     if (this.component) {
38 |       this.component.$destroy();
39 |     }
40 |   }
41 | }
42 | 


--------------------------------------------------------------------------------
/src/ui/modals/createFieldModal.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | import { get } from "svelte/store";
 3 | 
 4 | import { i18n } from "src/lib/stores/i18n";
 5 | import { nextUniqueFieldName } from "src/lib/helpers";
 6 | 
 7 | import CreateField from "./components/CreateField.svelte";
 8 | import type {
 9 |   DataField,
10 |   DataValue,
11 |   Optional,
12 | } from "src/lib/dataframe/dataframe";
13 | 
14 | export class CreateFieldModal extends Modal {
15 |   component?: CreateField;
16 | 
17 |   constructor(
18 |     app: App,
19 |     readonly fields: DataField[],
20 |     readonly onCreate: (field: DataField, value: Optional<DataValue>) => void
21 |   ) {
22 |     super(app);
23 |   }
24 | 
25 |   onOpen() {
26 |     this.component = new CreateField({
27 |       target: this.contentEl,
28 |       props: {
29 |         existingFields: this.fields,
30 |         defaultName: nextUniqueFieldName(
31 |           this.fields,
32 |           get(i18n).t("modals.field.create.untitled")
33 |         ),
34 |         onCreate: (field: DataField, value: Optional<DataValue>) => {
35 |           this.onCreate(field, value);
36 |           this.close();
37 |         },
38 |       },
39 |     });
40 |   }
41 | 
42 |   onClose() {
43 |     if (this.component) {
44 |       this.component.$destroy();
45 |     }
46 |   }
47 | }
48 | 


--------------------------------------------------------------------------------
/src/ui/modals/createNoteModal.ts:
--------------------------------------------------------------------------------
 1 | import moment from "moment";
 2 | import { App, Modal } from "obsidian";
 3 | import { get } from "svelte/store";
 4 | 
 5 | import { nextUniqueFileName } from "src/lib/helpers";
 6 | import { i18n } from "src/lib/stores/i18n";
 7 | import { interpolateTemplate } from "src/lib/templates/interpolate";
 8 | 
 9 | import CreateNote from "./components/CreateNote.svelte";
10 | import type { ProjectDefinition } from "src/settings/settings";
11 | 
12 | export class CreateNoteModal extends Modal {
13 |   component?: CreateNote;
14 | 
15 |   constructor(
16 |     app: App,
17 |     readonly project: ProjectDefinition,
18 |     readonly onSave: (
19 |       name: string,
20 |       templatePath: string,
21 |       project: ProjectDefinition
22 |     ) => void
23 |   ) {
24 |     super(app);
25 |   }
26 | 
27 |   getNewNotesFolder(project: ProjectDefinition) {
28 |     if (project.newNotesFolder) {
29 |       return project.newNotesFolder;
30 |     }
31 | 
32 |     if (project.dataSource.kind === "folder") {
33 |       return project.dataSource.config.path;
34 |     }
35 | 
36 |     return "";
37 |   }
38 | 
39 |   onOpen() {
40 |     this.component = new CreateNote({
41 |       target: this.contentEl,
42 |       props: {
43 |         name: this.project.defaultName
44 |           ? interpolateTemplate(this.project.defaultName, {
45 |               date: (format) => moment().format(format || "YYYY-MM-DD"),
46 |               time: (format) => moment().format(format || "HH:mm"),
47 |             })
48 |           : nextUniqueFileName(
49 |               this.getNewNotesFolder(this.project),
50 |               get(i18n).t("modals.note.create.untitled")
51 |             ),
52 |         project: this.project,
53 |         onSave: (
54 |           name: string,
55 |           templatePath: string,
56 |           project: ProjectDefinition
57 |         ) => {
58 |           this.onSave(name, templatePath, project);
59 |           this.close();
60 |         },
61 |       },
62 |     });
63 |   }
64 | 
65 |   onClose() {
66 |     if (this.component) {
67 |       this.component.$destroy();
68 |     }
69 |   }
70 | }
71 | 


--------------------------------------------------------------------------------
/src/ui/modals/createProjectModal.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | import type { ProjectDefinition } from "src/settings/settings";
 3 | 
 4 | import CreateProject from "./components/CreateProject.svelte";
 5 | 
 6 | export class CreateProjectModal extends Modal {
 7 |   component?: CreateProject;
 8 | 
 9 |   constructor(
10 |     app: App,
11 |     readonly title: string,
12 |     readonly cta: string,
13 |     readonly onSave: (project: ProjectDefinition) => void,
14 |     readonly defaults: ProjectDefinition
15 |   ) {
16 |     super(app);
17 |   }
18 | 
19 |   onOpen() {
20 |     this.component = new CreateProject({
21 |       target: this.contentEl,
22 |       props: {
23 |         title: this.title,
24 |         cta: this.cta,
25 |         project: this.defaults,
26 |         onSave: (project: ProjectDefinition) => {
27 |           this.onSave(project);
28 |           this.close();
29 |         },
30 |       },
31 |     });
32 |   }
33 | 
34 |   onClose() {
35 |     if (this.component) {
36 |       this.component.$destroy();
37 |     }
38 |   }
39 | }
40 | 


--------------------------------------------------------------------------------
/src/ui/modals/editNoteModal.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | 
 3 | import type { DataField, DataRecord } from "src/lib/dataframe/dataframe";
 4 | 
 5 | import EditRecord from "./components/EditNote.svelte";
 6 | 
 7 | export class EditNoteModal extends Modal {
 8 |   component?: EditRecord;
 9 | 
10 |   constructor(
11 |     app: App,
12 |     readonly fields: DataField[],
13 |     readonly onSave: (record: DataRecord) => void,
14 |     readonly defaults: DataRecord
15 |   ) {
16 |     super(app);
17 |   }
18 | 
19 |   onOpen() {
20 |     this.component = new EditRecord({
21 |       target: this.contentEl,
22 |       props: {
23 |         record: this.defaults,
24 |         fields: this.fields,
25 |         onSave: (record: DataRecord) => {
26 |           this.onSave(record);
27 |           this.close();
28 |         },
29 |       },
30 |     });
31 |   }
32 | 
33 |   onClose() {
34 |     if (this.component) {
35 |       this.component.$destroy();
36 |     }
37 |   }
38 | }
39 | 


--------------------------------------------------------------------------------
/src/ui/modals/inputDialog.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | 
 3 | import InputDialog from "./components/InputDialog.svelte";
 4 | 
 5 | export class InputDialogModal extends Modal {
 6 |   component?: InputDialog;
 7 | 
 8 |   constructor(
 9 |     app: App,
10 |     readonly message: string,
11 |     readonly cta: string,
12 |     readonly onSubmit: (value: string) => void,
13 |     readonly value?: string | undefined
14 |   ) {
15 |     super(app);
16 |   }
17 | 
18 |   onOpen() {
19 |     this.component = new InputDialog({
20 |       target: this.contentEl,
21 |       props: {
22 |         message: this.message,
23 |         cta: this.cta,
24 |         value: this.value ?? "",
25 |         onSubmit: (value: string) => {
26 |           this.onSubmit(value);
27 |           this.close();
28 |         },
29 |         onCancel: () => {
30 |           this.close();
31 |         },
32 |       },
33 |     });
34 |   }
35 | 
36 |   onClose() {
37 |     if (this.component) {
38 |       this.component.$destroy();
39 |     }
40 |   }
41 | }
42 | 


--------------------------------------------------------------------------------
/src/ui/modals/inspector.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | import type { RecordError } from "src/lib/datasources/frontmatter/datasource";
 3 | 
 4 | import Inspector from "./components/Inspector.svelte";
 5 | 
 6 | export class InspectorModal extends Modal {
 7 |   component?: Inspector;
 8 | 
 9 |   constructor(
10 |     app: App,
11 |     readonly title: string,
12 |     readonly errors: RecordError[]
13 |   ) {
14 |     super(app);
15 |   }
16 | 
17 |   onOpen() {
18 |     this.component = new Inspector({
19 |       target: this.contentEl,
20 |       props: {
21 |         title: this.title,
22 |         errors: this.errors,
23 |         onCancel: () => {
24 |           this.close();
25 |         },
26 |       },
27 |     });
28 |   }
29 | 
30 |   onClose() {
31 |     if (this.component) {
32 |       this.component.$destroy();
33 |     }
34 |   }
35 | }
36 | 


--------------------------------------------------------------------------------
/src/ui/settings/Archives.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     Callout,
 4 |     IconButton,
 5 |     SettingItem,
 6 |     Typography,
 7 |   } from "obsidian-svelte";
 8 |   import { i18n } from "src/lib/stores/i18n";
 9 |   import { app } from "src/lib/stores/obsidian";
10 |   import { ConfirmDialogModal } from "src/ui/modals/confirmDialog";
11 |   import type { ProjectDefinition, ProjectId } from "src/settings/settings";
12 |   import { normalizePath } from "obsidian";
13 | 
14 |   const dataSourceDetail = (archive: ProjectDefinition) => {
15 |     switch (archive.dataSource.kind) {
16 |       case "folder":
17 |         return `${$i18n.t("datasources.folder")}: "${normalizePath(
18 |           archive.dataSource.config.path
19 |         )}", subfolder: ${archive.dataSource.config.recursive}`;
20 |       case "tag":
21 |         return `${$i18n.t("datasources.tag")}: ${
22 |           archive.dataSource.config.tag
23 |         }, hierarchy: ${archive.dataSource.config.hierarchy}`;
24 |       case "dataview":
25 |         return `${$i18n.t("datasources.dataview")} query: ${
26 |           archive.dataSource.config.query
27 |         }`;
28 |     }
29 |   };
30 | 
31 |   const getDescription = (archive: ProjectDefinition) => {
32 |     return [`${archive.views.length} view(s).`, dataSourceDetail(archive)].join(
33 |       " "
34 |     );
35 |   };
36 | 
37 |   export let archives: ProjectDefinition[];
38 |   export let onRestore: (archiveId: ProjectId) => void;
39 |   export let onDelete: (archiveId: ProjectId) => void;
40 | </script>
41 | 
42 | {#if !archives.length}
43 |   <Callout title={"Info"} icon="info" variant="info">
44 |     <Typography variant="body">{$i18n.t("settings.archives.empty")}</Typography>
45 |   </Callout>
46 | {:else}
47 |   {#each archives as archive}
48 |     <SettingItem name={`${archive.name}`} description={getDescription(archive)}>
49 |       <IconButton
50 |         icon="archive-restore"
51 |         tooltip="Restore this archive"
52 |         onClick={() => onRestore(archive.id)}
53 |       />
54 |       <IconButton
55 |         icon="trash-2"
56 |         tooltip="Delete this archive"
57 |         onClick={() => {
58 |           new ConfirmDialogModal(
59 |             $app,
60 |             $i18n.t("modals.archive.delete.title"),
61 |             $i18n.t("modals.archive.delete.message", {
62 |               archive: archive?.name ?? "",
63 |             }),
64 |             $i18n.t("modals.project.delete.cta"),
65 |             () => {
66 |               onDelete(archive.id);
67 |             }
68 |           ).open();
69 |         }}
70 |       />
71 |     </SettingItem>
72 |   {/each}
73 | {/if}
74 | 


--------------------------------------------------------------------------------
/src/ui/settings/Projects.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { produce } from "immer";
 3 |   import { Callout, SettingItem, Typography, Switch } from "obsidian-svelte";
 4 |   import type {
 5 |     ProjectDefinition,
 6 |     ProjectsPluginPreferences,
 7 |   } from "src/settings/settings";
 8 | 
 9 |   export let preferences: ProjectsPluginPreferences;
10 |   export let projects: ProjectDefinition[];
11 |   export let save: (prefs: ProjectsPluginPreferences) => void;
12 | </script>
13 | 
14 | {#if !projects.length}
15 |   <Callout title={"Info"} icon="info" variant="info">
16 |     <Typography variant="body">No project yet.</Typography>
17 |   </Callout>
18 | {:else}
19 |   {#each projects as project}
20 |     <SettingItem name={`${project.name}`} description={"Project"}>
21 |       <Switch
22 |         checked={!!preferences.commands.find(
23 |           (command) => command.project == project.id && !command.view
24 |         )}
25 |         on:check={({ detail }) => {
26 |           save(
27 |             produce(preferences, (draft) => {
28 |               if (detail) {
29 |                 draft.commands.push({
30 |                   project: project.id,
31 |                 });
32 |               } else {
33 |                 draft.commands = draft.commands.filter(
34 |                   (command) =>
35 |                     !(command.project === project.id && !command.view)
36 |                 );
37 |               }
38 |             })
39 |           );
40 |         }}
41 |       />
42 |     </SettingItem>
43 |     {#each project.views as view}
44 |       <SettingItem name={`${project.name}: ${view.name}`} description="View">
45 |         <Switch
46 |           checked={!!preferences.commands.find(
47 |             (command) =>
48 |               command.project == project.id && command.view === view.id
49 |           )}
50 |           on:check={({ detail }) => {
51 |             save(
52 |               produce(preferences, (draft) => {
53 |                 if (detail) {
54 |                   draft.commands.push({
55 |                     project: project.id,
56 |                     view: view.id,
57 |                   });
58 |                 } else {
59 |                   draft.commands = draft.commands.filter(
60 |                     (command) =>
61 |                       !(
62 |                         command.project === project.id &&
63 |                         command.view === view.id
64 |                       )
65 |                   );
66 |                 }
67 |               })
68 |             );
69 |           }}
70 |         />
71 |       </SettingItem>
72 |     {/each}
73 |   {/each}
74 | {/if}
75 | 


--------------------------------------------------------------------------------
/src/ui/settings/settings.ts:
--------------------------------------------------------------------------------
  1 | import { App, Platform, PluginSettingTab, Setting } from "obsidian";
  2 | import Projects from "src/ui/settings/Projects.svelte";
  3 | import Archives from "src/ui/settings/Archives.svelte";
  4 | import { settings } from "src/lib/stores/settings";
  5 | import { get } from "svelte/store";
  6 | import type ProjectsPlugin from "src/main";
  7 | import type {
  8 |   FirstDayOfWeek,
  9 |   LinkBehavior,
 10 |   ProjectId,
 11 |   ProjectsPluginPreferences,
 12 | } from "src/settings/settings";
 13 | import { i18n } from "src/lib/stores/i18n";
 14 | 
 15 | /**
 16 |  * ProjectsSettingTab builds the plugin settings tab.
 17 |  */
 18 | export class ProjectsSettingTab extends PluginSettingTab {
 19 |   constructor(app: App, readonly plugin: ProjectsPlugin) {
 20 |     super(app, plugin);
 21 |   }
 22 | 
 23 |   // display runs when the user opens the settings tab.
 24 |   display(): void {
 25 |     let { preferences } = get(settings);
 26 | 
 27 |     const save = (prefs: ProjectsPluginPreferences) => {
 28 |       preferences = prefs;
 29 |       settings.updatePreferences(prefs);
 30 |     };
 31 | 
 32 |     const { containerEl } = this;
 33 | 
 34 |     containerEl.empty();
 35 | 
 36 |     new Setting(containerEl)
 37 |       .setName(get(i18n).t("settings.general.size-limit.name"))
 38 |       .setDesc(get(i18n).t("settings.general.size-limit.desc"))
 39 |       .addText((text) =>
 40 |         text
 41 |           .setValue(preferences.projectSizeLimit.toString())
 42 |           .setPlaceholder("1000")
 43 |           .onChange((value) => {
 44 |             save({
 45 |               ...preferences,
 46 |               projectSizeLimit: parseInt(value) || 1000,
 47 |             });
 48 |           })
 49 |       );
 50 | 
 51 |     new Setting(containerEl)
 52 |       .setName(get(i18n).t("settings.general.link-behavior.name"))
 53 |       .setDesc(
 54 |         get(i18n).t("settings.general.link-behavior.desc", {
 55 |           modifier: Platform.isMacOS ? "Cmd" : "Ctrl",
 56 |         })
 57 |       )
 58 |       .addDropdown((dropdown) => {
 59 |         dropdown
 60 |           .addOptions({
 61 |             "open-editor": get(i18n).t(
 62 |               "settings.general.link-behavior.options.open-editor"
 63 |             ),
 64 |             "open-note": get(i18n).t(
 65 |               "settings.general.link-behavior.options.open-note"
 66 |             ),
 67 |           })
 68 |           .setValue(preferences.linkBehavior)
 69 |           .onChange((value) => {
 70 |             save({
 71 |               ...preferences,
 72 |               linkBehavior: value as LinkBehavior,
 73 |             });
 74 |           });
 75 |       });
 76 | 
 77 |     new Setting(containerEl)
 78 |       .setName(get(i18n).t("settings.general.start-of-week.name"))
 79 |       .addDropdown((dropdown) =>
 80 |         dropdown
 81 |           .addOption(
 82 |             "default",
 83 |             get(i18n).t("settings.general.start-of-week.options.default")
 84 |           )
 85 |           .addOption(
 86 |             "sunday",
 87 |             get(i18n).t("settings.general.start-of-week.options.sunday")
 88 |           )
 89 |           .addOption(
 90 |             "monday",
 91 |             get(i18n).t("settings.general.start-of-week.options.monday")
 92 |           )
 93 |           .setValue(
 94 |             preferences.locale.firstDayOfWeek
 95 |               ? preferences.locale.firstDayOfWeek.toString()
 96 |               : "default"
 97 |           )
 98 |           .onChange((value) => {
 99 |             save({
100 |               ...preferences,
101 |               locale: {
102 |                 firstDayOfWeek: value as FirstDayOfWeek,
103 |               },
104 |             });
105 |           })
106 |       );
107 | 
108 |     new Setting(containerEl)
109 |       .setName(get(i18n).t("settings.front-matter.heading"))
110 |       .setHeading();
111 | 
112 |     new Setting(containerEl)
113 |       .setName(get(i18n).t("settings.front-matter.quote-strings.name"))
114 |       .addDropdown((dropdown) =>
115 |         dropdown
116 |           .addOption(
117 |             "PLAIN",
118 |             get(i18n).t("settings.front-matter.quote-strings.options.plain")
119 |           )
120 |           .addOption(
121 |             "QUOTE_DOUBLE",
122 |             get(i18n).t(
123 |               "settings.front-matter.quote-strings.options.quote-double"
124 |             )
125 |           )
126 |           .setValue(preferences.frontmatter.quoteStrings)
127 |           .onChange((value) => {
128 |             if (value === "PLAIN" || value === "QUOTE_DOUBLE") {
129 |               save({
130 |                 ...preferences,
131 |                 frontmatter: {
132 |                   quoteStrings: value,
133 |                 },
134 |               });
135 |             }
136 |           })
137 |       );
138 | 
139 |     new Setting(containerEl)
140 |       .setName(get(i18n).t("settings.commands.name"))
141 |       .setDesc(get(i18n).t("settings.commands.desc"))
142 |       .setHeading();
143 | 
144 |     const projectsManager = new Projects({
145 |       target: containerEl,
146 |       props: {
147 |         save,
148 |         preferences,
149 |         projects: get(settings).projects,
150 |       },
151 |     });
152 | 
153 |     new Setting(containerEl)
154 |       .setName(get(i18n).t("settings.archives.name"))
155 |       .setDesc(get(i18n).t("settings.archives.desc"))
156 |       .setHeading();
157 | 
158 |     const archivesManager = new Archives({
159 |       target: containerEl,
160 |       props: {
161 |         archives: get(settings).archives,
162 |         onRestore: (archiveId: ProjectId) => {
163 |           settings.restoreArchive(archiveId);
164 |           archivesManager.$set({ archives: get(settings).archives });
165 |           projectsManager.$set({ projects: get(settings).projects });
166 |         },
167 |         onDelete: (archiveId: ProjectId) => {
168 |           settings.deleteArchive(archiveId);
169 |           archivesManager.$set({ archives: get(settings).archives });
170 |         },
171 |       },
172 |     });
173 |   }
174 | }
175 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/BoardOptions.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { IconButton, Select } from "obsidian-svelte";
 3 | 
 4 |   import { Field } from "src/ui/components/Field";
 5 |   import { SwitchSelect } from "../Table/components/SwitchSelect";
 6 |   import { i18n } from "src/lib/stores/i18n";
 7 |   import { fieldIcon, fieldToSelectableValue } from "../helpers";
 8 |   import { getFieldsByType } from "./board";
 9 |   import { DataFieldType, type DataField } from "src/lib/dataframe/dataframe";
10 |   import { getFieldByName } from "src/ui/app/toolbar/viewOptions/filter/helpers";
11 | 
12 |   export let fields: DataField[];
13 | 
14 |   export let statusField: string | undefined;
15 |   export let checkField: string | undefined;
16 |   export let onStatusFieldChange: (field: DataField | undefined) => void;
17 |   export let onCheckFieldChange: (field: DataField | undefined) => void;
18 | 
19 |   export let includedFields: string[];
20 |   export let onIncludedFieldsChange: (fields: string[]) => void;
21 | 
22 |   export let onSettings: () => void;
23 | 
24 |   $: groupByField = statusField
25 |     ? getFieldByName(fields, statusField)
26 |     : undefined;
27 |   $: booleanField = checkField ? getFieldByName(fields, checkField) : undefined;
28 | 
29 |   $: validGroupByFields = getFieldsByType(
30 |     fields,
31 |     DataFieldType.String,
32 |     DataFieldType.Number
33 |   );
34 |   $: validBooleanFields = getFieldsByType(fields, DataFieldType.Boolean);
35 | 
36 |   function handleStatusChange(event: CustomEvent<string>) {
37 |     onStatusFieldChange(getFieldByName(fields, event.detail));
38 |   }
39 | 
40 |   function handleCheckFieldChange(event: CustomEvent<string>) {
41 |     onCheckFieldChange(getFieldByName(fields, event.detail));
42 |   }
43 | 
44 |   function handleIncludedFieldsChange(field: string, enabled: boolean) {
45 |     const uniqueFields = new Set(includedFields);
46 | 
47 |     if (enabled) {
48 |       uniqueFields.add(field);
49 |     } else {
50 |       uniqueFields.delete(field);
51 |     }
52 | 
53 |     onIncludedFieldsChange([...uniqueFields]);
54 |   }
55 | </script>
56 | 
57 | <!--
58 |     @component
59 | 
60 |     BoardOptions handles logic for updating fields used by the board.
61 | -->
62 | <Field name={$i18n.t("views.board.fields.status")}>
63 |   <Select
64 |     value={groupByField?.name ?? ""}
65 |     on:change={handleStatusChange}
66 |     options={validGroupByFields.map(fieldToSelectableValue)}
67 |     placeholder={$i18n.t("views.board.fields.none") ?? ""}
68 |     allowEmpty
69 |   />
70 | </Field>
71 | <Field name={$i18n.t("views.board.fields.check")}>
72 |   <Select
73 |     allowEmpty
74 |     value={booleanField?.name ?? ""}
75 |     options={validBooleanFields.map(fieldToSelectableValue)}
76 |     placeholder={$i18n.t("views.board.fields.none") ?? ""}
77 |     on:change={handleCheckFieldChange}
78 |   />
79 | </Field>
80 | <SwitchSelect
81 |   label={$i18n.t("views.board.include-fields")}
82 |   items={fields.map((field) => ({
83 |     label: field.name,
84 |     icon: fieldIcon(field),
85 |     value: field.name,
86 |     enabled: includedFields.includes(field.name),
87 |   }))}
88 |   onChange={handleIncludedFieldsChange}
89 | />
90 | <IconButton icon="settings" onClick={onSettings} />
91 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/BoardOptionsProvider.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import {
 3 |     ViewContent,
 4 |     ViewHeader,
 5 |     ViewLayout,
 6 |     ViewToolbar,
 7 |   } from "src/ui/components/Layout";
 8 |   import type { BoardConfig } from "./types";
 9 |   import BoardOptions from "./BoardOptions.svelte";
10 |   import type { DataField, DataFrame } from "src/lib/dataframe/dataframe";
11 |   import { BoardSettingsModal } from "./settings/settingsModal";
12 |   import { app } from "src/lib/stores/obsidian";
13 | 
14 |   export let config: BoardConfig;
15 |   export let onConfigChange: (cfg: BoardConfig) => void;
16 | 
17 |   export let frame: DataFrame;
18 | 
19 |   $: ({ fields } = frame);
20 | 
21 |   $: columnWidth = config?.columnWidth ?? 270;
22 | 
23 |   function handleIncludedFieldsChange(fields: string[]) {
24 |     onConfigChange({ ...config, includeFields: fields });
25 |   }
26 | 
27 |   function handleStatusFieldChange(field: DataField | undefined) {
28 |     const { groupByField, ...rest } = config;
29 |     delete rest.columns;
30 | 
31 |     onConfigChange(field ? { ...rest, groupByField: field.name } : { ...rest });
32 |   }
33 | 
34 |   function handleCheckFieldChange(field: DataField | undefined) {
35 |     const { checkField, ...rest } = config;
36 | 
37 |     onConfigChange(field ? { ...rest, checkField: field.name } : { ...rest });
38 |   }
39 | </script>
40 | 
41 | <!--
42 |     @component
43 | 
44 |     BoardOptionsProvider abstracts away the scaffolding around the view, such as
45 |     the toolbar and options.
46 | -->
47 | <ViewLayout>
48 |   <ViewHeader>
49 |     <ViewToolbar variant="secondary">
50 |       <BoardOptions
51 |         slot="right"
52 |         {fields}
53 |         statusField={config.groupByField}
54 |         checkField={config.checkField}
55 |         onStatusFieldChange={handleStatusFieldChange}
56 |         onCheckFieldChange={handleCheckFieldChange}
57 |         includedFields={config.includeFields ?? []}
58 |         onIncludedFieldsChange={handleIncludedFieldsChange}
59 |         onSettings={() => {
60 |           new BoardSettingsModal($app, config, fields, (value) => {
61 |             onConfigChange(value);
62 |           }).open();
63 |         }}
64 |       />
65 |     </ViewToolbar>
66 |   </ViewHeader>
67 |   <ViewContent>
68 |     <slot
69 |       {columnWidth}
70 |       checkField={config.checkField ?? ""}
71 |       customHeader={config.headerField}
72 |       groupByField={fields.find((field) => config.groupByField === field.name)}
73 |       includeFields={config.includeFields ?? []}
74 |     />
75 |   </ViewContent>
76 | </ViewLayout>
77 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/BoardView.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import type { ProjectViewProps } from "src/customViewApi";
  3 |   import { createDataRecord } from "src/lib/dataApi";
  4 |   import type {
  5 |     DataField,
  6 |     DataFrame,
  7 |     DataRecord,
  8 |   } from "src/lib/dataframe/dataframe";
  9 |   import { updateRecordValues } from "src/lib/datasources/helpers";
 10 |   import { notUndefined } from "src/lib/helpers";
 11 |   import { i18n } from "src/lib/stores/i18n";
 12 |   import { app } from "src/lib/stores/obsidian";
 13 |   import type { ViewApi } from "src/lib/viewApi";
 14 |   import type { ProjectDefinition } from "src/settings/settings";
 15 |   import { CreateNoteModal } from "src/ui/modals/createNoteModal";
 16 |   import { EditNoteModal } from "src/ui/modals/editNoteModal";
 17 |   import {
 18 |     getRecordColorContext,
 19 |     sortRecordsContext,
 20 |   } from "src/ui/views/helpers";
 21 |   import BoardOptionsProvider from "./BoardOptionsProvider.svelte";
 22 |   import { getColumns, getFieldByName } from "./board";
 23 |   import { Board } from "./components";
 24 |   import type {
 25 |     OnRecordAdd,
 26 |     OnRecordClick,
 27 |     OnRecordCheck,
 28 |     OnRecordUpdate,
 29 |     OnSortColumns,
 30 |     OnColumnAdd,
 31 |     OnColumnDelete,
 32 |     OnColumnCollapse,
 33 |     OnColumnPin,
 34 |     OnColumnRename,
 35 |   } from "./components/Board/types";
 36 |   import type { BoardConfig } from "./types";
 37 |   import { settings } from "src/lib/stores/settings";
 38 | 
 39 |   export let project: ProjectDefinition;
 40 |   export let frame: DataFrame;
 41 |   export let readonly: boolean;
 42 |   export let api: ViewApi;
 43 |   export let getRecordColor: ProjectViewProps["getRecordColor"];
 44 |   export let sortRecords: ProjectViewProps["sortRecords"];
 45 |   export let getRecord: ProjectViewProps["getRecord"];
 46 | 
 47 |   export let config: BoardConfig | undefined;
 48 |   export let onConfigChange: (cfg: BoardConfig) => void;
 49 | 
 50 |   export let hasSort: boolean;
 51 |   export let hasFilter: boolean;
 52 | 
 53 |   $: ({ fields, records } = frame);
 54 |   $: orderSyncField =
 55 |     (config?.orderSyncField && getFieldByName(fields, config.orderSyncField)) ||
 56 |     undefined;
 57 | 
 58 |   getRecordColorContext.set(getRecordColor);
 59 |   sortRecordsContext.set((records) =>
 60 |     hasSort ? sortRecords(records) : [...records]
 61 |   );
 62 | 
 63 |   const handleRecordClick: OnRecordClick = (record) => {
 64 |     new EditNoteModal(
 65 |       $app,
 66 |       fields,
 67 |       (record) => api.updateRecord(record, fields),
 68 |       record
 69 |     ).open();
 70 |   };
 71 | 
 72 |   const handleRecordCheck =
 73 |     (checkField: string): OnRecordCheck =>
 74 |     (record, checked) => {
 75 |       api.updateRecord(
 76 |         updateRecordValues(record, {
 77 |           [checkField]: checked,
 78 |         }),
 79 |         fields
 80 |       );
 81 |     };
 82 | 
 83 |   const handleRecordUpdate =
 84 |     (groupByField: DataField | undefined): OnRecordUpdate =>
 85 |     (record, { id: column, records }, trigger) => {
 86 |       // Update record groupByField
 87 |       if (trigger === "addToColumn" && groupByField?.name) {
 88 |         record = updateRecordValues(record, {
 89 |           [groupByField.name]:
 90 |             column === $i18n.t("views.board.no-status") ? null : column,
 91 |         });
 92 |       }
 93 | 
 94 |       // If sort or filter is active, get records from settings hand
 95 |       // and insert record in correct position or remove it
 96 |       let isConfigRecordsLoaded = false;
 97 |       if (hasSort || hasFilter) {
 98 |         const configRecords = config?.columns?.[column]?.records
 99 |           ?.map((r) => getRecord(r))
100 |           .filter(notUndefined);
101 | 
102 |         if (configRecords) {
103 |           const configRecordIndex = configRecords.findIndex(
104 |             (r) => r.id === record.id
105 |           );
106 |           const isRecordInConfig = configRecordIndex !== -1;
107 | 
108 |           if (
109 |             isRecordInConfig &&
110 |             (trigger === "removeFromColumn" || !hasSort)
111 |           ) {
112 |             configRecords.splice(configRecordIndex, 1);
113 |           }
114 | 
115 |           if (trigger === "addToColumn") {
116 |             if (hasSort) {
117 |               // Sort is active, insert record at end of column if it's
118 |               // not already in the config, else keep position
119 |               if (!isRecordInConfig) {
120 |                 configRecords.push(record);
121 |               }
122 |             } else if (hasFilter) {
123 |               // If filter is active insert record in correct position
124 |               // relative to records before or after it
125 |               const index = records.findIndex((r) => r.id === record.id);
126 |               const before = records[index - 1];
127 |               const after = records[index + 1];
128 |               let position: number = -1;
129 | 
130 |               if (before) {
131 |                 const beforeIndex = configRecords.findIndex(
132 |                   (r) => r.id === before.id
133 |                 );
134 |                 if (beforeIndex !== -1) position = beforeIndex + 1;
135 |               }
136 |               if (after && position === -1) {
137 |                 position = configRecords.findIndex((r) => r.id === after.id);
138 |               }
139 |               if (position === -1) {
140 |                 position = configRecords.length;
141 |               }
142 | 
143 |               configRecords.splice(position, 0, record);
144 |             }
145 |           }
146 | 
147 |           records = [
148 |             ...configRecords,
149 |             // In case the config is out of sync, insert any
150 |             // remaining records at the end
151 |             ...records.filter(
152 |               (r1) =>
153 |                 r1.id !== record.id &&
154 |                 !configRecords.find((r2) => r2.id === r1.id)
155 |             ),
156 |           ];
157 |           isConfigRecordsLoaded = true;
158 |         }
159 |       }
160 | 
161 |       saveConfig({
162 |         ...config,
163 |         columns: {
164 |           ...config?.columns,
165 |           [column]: {
166 |             ...config?.columns?.[column],
167 |             records: records.map((r) => r.id),
168 |           },
169 |         },
170 |       });
171 | 
172 |       // If record was removed from column, there is no need to update
173 |       // the groupBy or orderSync fields, since order is preserved on removal
174 |       // and the groupBy field is set on adding the record to the other column
175 |       if (trigger !== "removeFromColumn") {
176 |         const recordsToUpdate: DataRecord[] = [];
177 | 
178 |         // If a sync field is defined, update it according to the order. Only
179 |         // update if no sort is active or records are loaded from the config,
180 |         // since they are sorted correctly according to custom order
181 |         const orderSyncFieldName = orderSyncField?.name;
182 |         if (orderSyncFieldName && (isConfigRecordsLoaded || !hasSort)) {
183 |           records.forEach((r, i) => {
184 |             const recordToUpdate =
185 |               r.id === record.id
186 |                 ? record
187 |                 : r.values[orderSyncFieldName] !== i && r;
188 |             if (recordToUpdate) {
189 |               recordsToUpdate.push(
190 |                 updateRecordValues(recordToUpdate, {
191 |                   [orderSyncFieldName]: i,
192 |                 })
193 |               );
194 |             }
195 |           });
196 |         } else {
197 |           recordsToUpdate.push(record);
198 |         }
199 | 
200 |         api.updateRecords(recordsToUpdate, fields);
201 |       }
202 |     };
203 | 
204 |   const handleRecordAdd =
205 |     (field: DataField | undefined): OnRecordAdd =>
206 |     (column: string) => {
207 |       new CreateNoteModal($app, project, (name, templatePath) => {
208 |         api.addRecord(
209 |           createDataRecord(
210 |             name,
211 |             project,
212 |             field
213 |               ? {
214 |                   [field.name]:
215 |                     column !== $i18n.t("views.board.no-status")
216 |                       ? column
217 |                       : undefined,
218 |                 }
219 |               : {}
220 |           ),
221 |           fields,
222 |           templatePath
223 |         );
224 |       }).open();
225 |     };
226 | 
227 |   const handleSortColumns =
228 |     (field: DataField | undefined): OnSortColumns =>
229 |     (columns) => {
230 |       if (field?.name && field?.typeConfig && field.typeConfig?.options) {
231 |         settings.updateFieldConfig(
232 |           project.id,
233 |           field?.name,
234 |           fields.map((f) => f.name),
235 |           {
236 |             ...field.typeConfig,
237 |             options: [...field.typeConfig.options].sort(
238 |               (a, b) => columns.indexOf(a) - columns.indexOf(b)
239 |             ),
240 |           }
241 |         );
242 |       }
243 |       saveConfig({
244 |         ...config,
245 |         columns: Object.fromEntries(
246 |           columns.map((column, i) => [
247 |             column,
248 |             { ...config?.columns?.[column], weight: i },
249 |           ])
250 |         ),
251 |       });
252 |     };
253 | 
254 |   const handleColumnAdd =
255 |     (field: DataField | undefined): OnColumnAdd =>
256 |     (columns, name) => {
257 |       if (!field) return;
258 | 
259 |       settings.updateFieldConfig(
260 |         project.id,
261 |         field.name,
262 |         fields.map((f) => f.name),
263 |         {
264 |           ...field?.typeConfig,
265 |           options: [...(field.typeConfig?.options ?? []), name],
266 |         }
267 |       );
268 | 
269 |       saveConfig({
270 |         ...config,
271 |         columns: Object.fromEntries(
272 |           [...columns, name].map((column, i) => {
273 |             return [column, { ...config?.columns?.[column], weight: i }];
274 |           })
275 |         ),
276 |       });
277 |     };
278 | 
279 |   const handleColumnDelete =
280 |     (field: DataField | undefined): OnColumnDelete =>
281 |     async (columns, name, records) => {
282 |       if (!field) return;
283 | 
284 |       const newRecords = records.map((record) =>
285 |         updateRecordValues(record, {
286 |           [field.name]: null,
287 |         })
288 |       );
289 | 
290 |       await api.updateRecords(newRecords, fields);
291 | 
292 |       if (field.typeConfig && field.typeConfig.options) {
293 |         let options = [...field.typeConfig.options];
294 |         settings.updateFieldConfig(
295 |           project.id,
296 |           field.name,
297 |           fields.map((f) => f.name),
298 |           {
299 |             ...field.typeConfig,
300 |             options: options.filter((v) => v !== name),
301 |           }
302 |         );
303 |       }
304 | 
305 |       saveConfig({
306 |         ...config,
307 |         columns: Object.fromEntries(
308 |           columns
309 |             .filter((v) => v !== name)
310 |             .map((column, i) => {
311 |               return [column, { ...config?.columns?.[column], weight: i }];
312 |             })
313 |         ),
314 |       });
315 |     };
316 | 
317 |   const handleColumnRename =
318 |     (field: DataField | undefined): OnColumnRename =>
319 |     async (columns, oldName, newName, records) => {
320 |       if (!field) return;
321 | 
322 |       const newRecords = records.map((record) =>
323 |         updateRecordValues(record, {
324 |           [field.name]: newName,
325 |         })
326 |       );
327 |       await api.updateRecords(newRecords, fields);
328 | 
329 |       if (field?.typeConfig && field.typeConfig?.options) {
330 |         const options = [...field.typeConfig?.options];
331 |         if (options.includes(oldName)) {
332 |           options.splice(options.indexOf(oldName), 1, newName);
333 |           settings.updateFieldConfig(
334 |             project.id,
335 |             field.name,
336 |             fields.map((f) => f.name),
337 |             {
338 |               ...field.typeConfig,
339 |               options,
340 |             }
341 |           );
342 |         }
343 |       }
344 | 
345 |       saveConfig({
346 |         ...config,
347 |         columns: Object.fromEntries(
348 |           columns.map((column, i) => {
349 |             return [
350 |               column === oldName ? newName : column,
351 |               { ...config?.columns?.[column], weight: i },
352 |             ];
353 |           })
354 |         ),
355 |       });
356 |     };
357 | 
358 |   const toggleColumnCollapse = (): OnColumnCollapse => (name) => {
359 |     saveConfig({
360 |       ...config,
361 |       columns: {
362 |         ...config?.columns,
363 |         [name]: {
364 |           ...config?.columns?.[name],
365 |           collapse: !config?.columns?.[name]?.collapse,
366 |         },
367 |       },
368 |     });
369 |   };
370 | 
371 |   const toggleColumnPin =
372 |     (field: DataField | undefined): OnColumnPin =>
373 |     (columns, name) => {
374 |       if (!field) return;
375 | 
376 |       if (field.typeConfig && field.typeConfig.options) {
377 |         let options = [...field.typeConfig.options];
378 |         const pinned = options.includes(name);
379 | 
380 |         if (pinned) {
381 |           options = options.filter((v) => v !== name);
382 |         } else {
383 |           options = columns.filter((v) => options.includes(v) || v === name);
384 |         }
385 | 
386 |         settings.updateFieldConfig(
387 |           project.id,
388 |           field.name,
389 |           fields.map((f) => f.name),
390 |           {
391 |             ...field.typeConfig,
392 |             options,
393 |           }
394 |         );
395 |       } else {
396 |         settings.updateFieldConfig(
397 |           project.id,
398 |           field.name,
399 |           fields.map((f) => f.name),
400 |           {
401 |             ...field.typeConfig,
402 |             options: [name],
403 |           }
404 |         );
405 |       }
406 |     };
407 | 
408 |   function saveConfig(cfg: BoardConfig) {
409 |     config = cfg;
410 |     onConfigChange(cfg);
411 |   }
412 | </script>
413 | 
414 | <!--
415 |   @component
416 | 
417 |   BoardView is the main board component that gets mounted inside the project view.
418 | -->
419 | <BoardOptionsProvider
420 |   {frame}
421 |   config={config ?? {}}
422 |   onConfigChange={saveConfig}
423 |   let:columnWidth
424 |   let:groupByField
425 |   let:checkField
426 |   let:includeFields
427 |   let:customHeader
428 | >
429 |   <Board
430 |     columns={getColumns(
431 |       records,
432 |       config?.columns ?? {},
433 |       groupByField,
434 |       orderSyncField,
435 |       !hasSort
436 |     )}
437 |     {columnWidth}
438 |     checkField={fields.find((field) => field.name === config?.checkField)?.name}
439 |     includeFields={fields.filter((field) => includeFields.includes(field.name))}
440 |     customHeader={fields.find((field) => field.name === customHeader)}
441 |     onRecordClick={handleRecordClick}
442 |     onRecordCheck={handleRecordCheck(checkField)}
443 |     onRecordAdd={handleRecordAdd(groupByField)}
444 |     onRecordUpdate={handleRecordUpdate(groupByField)}
445 |     onColumnAdd={handleColumnAdd(groupByField)}
446 |     onColumnDelete={handleColumnDelete(groupByField)}
447 |     onColumnRename={handleColumnRename(groupByField)}
448 |     onColumnCollapse={toggleColumnCollapse()}
449 |     onColumnPin={toggleColumnPin(groupByField)}
450 |     onSortColumns={handleSortColumns(groupByField)}
451 |     {readonly}
452 |     validateStatusField={() => {
453 |       if (groupByField?.derived) return "derived-status-field";
454 |       if (!groupByField) return "no-status-field";
455 |       return "";
456 |     }}
457 |     richText={groupByField?.typeConfig?.richText ?? false}
458 |   />
459 | </BoardOptionsProvider>
460 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/board.ts:
--------------------------------------------------------------------------------
  1 | import { get } from "svelte/store";
  2 | 
  3 | import {
  4 |   DataFieldType,
  5 |   isNumber,
  6 |   isString,
  7 |   type DataField,
  8 |   type DataRecord,
  9 | } from "src/lib/dataframe/dataframe";
 10 | import { notEmpty } from "src/lib/helpers";
 11 | import { i18n } from "src/lib/stores/i18n";
 12 | import type { ColumnSettings } from "./types";
 13 | 
 14 | export function getFieldByName(
 15 |   fields: DataField[],
 16 |   name: string
 17 | ): DataField | undefined {
 18 |   return fields.find((field) => name === field.name);
 19 | }
 20 | 
 21 | export function getFieldsByType(
 22 |   fields: DataField[],
 23 |   ...types: DataFieldType[]
 24 | ) {
 25 |   return fields
 26 |     .filter((field) => !field.repeated)
 27 |     .filter((field) => types.includes(field.type));
 28 | }
 29 | 
 30 | export function unique(records: DataRecord[], fieldName: string): string[] {
 31 |   const keys = records
 32 |     .map((record) => record.values[fieldName])
 33 |     .map((value) => (value && isNumber(value) ? value.toLocaleString() : value))
 34 |     .map((value) => (value && isString(value) ? value : null))
 35 |     .filter(notEmpty);
 36 | 
 37 |   const set = new Set(keys);
 38 | 
 39 |   return [...set];
 40 | }
 41 | 
 42 | export function getColumns(
 43 |   records: DataRecord[],
 44 |   columnSettings: ColumnSettings,
 45 |   grouByField?: DataField,
 46 |   orderSyncField?: DataField,
 47 |   sortByCustomOrder?: boolean
 48 | ) {
 49 |   const groupedRecords = groupRecordsByField(records, grouByField?.name);
 50 | 
 51 |   let predefs = new Set<string>();
 52 |   if (grouByField?.type === DataFieldType.String) {
 53 |     predefs = new Set(grouByField.typeConfig?.options);
 54 |   }
 55 | 
 56 |   const columns = new Set([...Object.keys(groupedRecords), ...predefs]);
 57 | 
 58 |   return [...columns]
 59 |     .sort((a, b) => {
 60 |       const aweight = columnSettings[a]?.weight ?? 0;
 61 |       const bweight = columnSettings[b]?.weight ?? 0;
 62 | 
 63 |       if (aweight < bweight) {
 64 |         return -1;
 65 |       } else if (aweight > bweight) {
 66 |         return 1;
 67 |       } else {
 68 |         const noStatus = get(i18n).t("views.board.no-status");
 69 |         if (a === noStatus) return -1;
 70 |         if (b === noStatus) return 1;
 71 | 
 72 |         const aIndex = [...predefs].indexOf(a);
 73 |         const bIndex = [...predefs].indexOf(b);
 74 | 
 75 |         if (aIndex >= 0 && bIndex >= 0) return aIndex - bIndex;
 76 |         else if (aIndex >= 0) return -1;
 77 |         else if (bIndex >= 0) return 1;
 78 |         else return a.localeCompare(b, undefined, { numeric: true });
 79 |       }
 80 |     })
 81 |     .map((column) => {
 82 |       const records = groupedRecords[column] ?? [];
 83 |       if (sortByCustomOrder && records.length > 0) {
 84 |         applyCustomRecordOrder(records, columnSettings[column], orderSyncField);
 85 |       }
 86 |       return {
 87 |         id: column,
 88 |         records,
 89 |         collapse: columnSettings[column]?.collapse ?? false,
 90 |         pinned: grouByField?.typeConfig?.options?.includes(column) ?? false,
 91 |       };
 92 |     });
 93 | }
 94 | 
 95 | function groupRecordsByField(
 96 |   records: DataRecord[],
 97 |   fieldName: string | undefined
 98 | ): Record<string, Array<DataRecord>> {
 99 |   const noStatus = get(i18n).t("views.board.no-status");
100 | 
101 |   if (!fieldName) {
102 |     return { [noStatus]: [...records] };
103 |   }
104 | 
105 |   const keys = unique(records, fieldName);
106 | 
107 |   const res: Record<string, Array<DataRecord>> = {
108 |     [noStatus]: [],
109 |   };
110 |   for (const key of keys) {
111 |     res[key] = [];
112 |   }
113 | 
114 |   records.forEach((record) => {
115 |     const value = record.values[fieldName];
116 | 
117 |     if (value && isString(value)) {
118 |       res[value]?.push(record);
119 |     } else if (value && isNumber(value)) {
120 |       res[value.toLocaleString()]?.push(record);
121 |     } else {
122 |       res[noStatus]?.push(record);
123 |     }
124 |   });
125 | 
126 |   if (!res[noStatus]?.length) {
127 |     delete res[noStatus];
128 |   }
129 | 
130 |   return res;
131 | }
132 | 
133 | /**
134 |  * Sorts records in place according to either order sync field if set, or to
135 |  * order of records in the column settings. This method mutates the array and
136 |  * returns a reference to the same array.
137 |  *
138 |  * @param records - The records to be sorted.
139 |  * @param columnSettings - The column settings for sorting the records.
140 |  * @param orderSyncField - The priority field for sorting the records.
141 |  * @returns The sorted records.
142 |  */
143 | function applyCustomRecordOrder(
144 |   records: DataRecord[],
145 |   columnSettings?: ColumnSettings[string],
146 |   orderSyncField?: DataField
147 | ): DataRecord[] {
148 |   let getWeight: (record: DataRecord) => number;
149 | 
150 |   if (orderSyncField?.name && orderSyncField.type === DataFieldType.Number) {
151 |     getWeight = (record) => {
152 |       const weight = record.values[orderSyncField.name];
153 |       return isNumber(weight) ? weight : Number.POSITIVE_INFINITY;
154 |     };
155 |   } else if (columnSettings) {
156 |     const weights = Object.fromEntries(
157 |       (columnSettings?.records ?? []).map((r, i) => [r, i])
158 |     );
159 |     getWeight = (record: DataRecord) =>
160 |       weights[record.id] ?? Number.POSITIVE_INFINITY;
161 |   } else {
162 |     return records;
163 |   }
164 | 
165 |   return records.sort((a, b) => getWeight(a) - getWeight(b));
166 | }
167 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/boardView.ts:
--------------------------------------------------------------------------------
 1 | import {
 2 |   ProjectView,
 3 |   type DataQueryResult,
 4 |   type ProjectViewProps,
 5 | } from "src/customViewApi";
 6 | 
 7 | import BoardViewSvelte from "./BoardView.svelte";
 8 | import type { BoardConfig } from "./types";
 9 | 
10 | export class BoardView extends ProjectView<BoardConfig> {
11 |   view?: BoardViewSvelte | null;
12 |   props?: ProjectViewProps;
13 | 
14 |   getViewType(): string {
15 |     return "board";
16 |   }
17 |   getDisplayName(): string {
18 |     return "Board";
19 |   }
20 |   getIcon(): string {
21 |     return "columns";
22 |   }
23 | 
24 |   async onData({ data, hasSort, hasFilter }: DataQueryResult) {
25 |     this.view?.$set({ frame: data, hasSort, hasFilter });
26 |   }
27 | 
28 |   async onOpen(props: ProjectViewProps<BoardConfig>) {
29 |     this.view = new BoardViewSvelte({
30 |       target: props.contentEl,
31 |       props: {
32 |         frame: { fields: [], records: [] },
33 |         api: props.viewApi,
34 |         project: props.project,
35 |         readonly: props.readonly,
36 |         config: props.config,
37 |         onConfigChange: props.saveConfig,
38 |         getRecordColor: props.getRecordColor,
39 |         sortRecords: props.sortRecords,
40 |         getRecord: props.getRecord,
41 |         hasSort: false,
42 |         hasFilter: false,
43 |       },
44 |     });
45 |   }
46 | 
47 |   async onClose() {
48 |     this.view?.$destroy();
49 |     this.view = null;
50 |   }
51 | }
52 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/Board.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import type { DataField } from "src/lib/dataframe/dataframe";
  3 |   import { dndzone } from "svelte-dnd-action";
  4 | 
  5 |   import BoardColumn from "./BoardColumn.svelte";
  6 |   import NewColumn from "./NewColumn.svelte";
  7 |   import type {
  8 |     Column,
  9 |     OnRecordAdd,
 10 |     OnRecordClick,
 11 |     OnRecordCheck,
 12 |     OnRecordUpdate,
 13 |     OnSortColumns,
 14 |     OnColumnAdd,
 15 |     OnColumnDelete,
 16 |     OnColumnRename,
 17 |     OnColumnCollapse,
 18 |     OnColumnPin,
 19 |   } from "./types";
 20 | 
 21 |   export let columns: Column[];
 22 | 
 23 |   export let readonly: boolean;
 24 |   export let richText: boolean;
 25 |   export let onRecordClick: OnRecordClick;
 26 |   export let onRecordCheck: OnRecordCheck;
 27 |   export let onRecordUpdate: OnRecordUpdate;
 28 |   export let onRecordAdd: OnRecordAdd;
 29 |   export let columnWidth: number;
 30 |   export let onSortColumns: OnSortColumns;
 31 |   export let onColumnAdd: OnColumnAdd;
 32 |   export let onColumnDelete: OnColumnDelete;
 33 |   export let onColumnRename: OnColumnRename;
 34 |   export let onColumnCollapse: OnColumnCollapse;
 35 |   export let onColumnPin: OnColumnPin;
 36 |   export let validateStatusField: () => string;
 37 |   export let checkField: string | undefined;
 38 |   export let includeFields: DataField[];
 39 |   export let customHeader: DataField | undefined;
 40 | 
 41 |   let boardEditing: boolean = false;
 42 |   let onEdit = (editing: boolean) => (boardEditing = editing);
 43 | 
 44 |   const flipDurationMs = 200;
 45 | 
 46 |   function handleDndConsider(e: CustomEvent<DndEvent<Column>>) {
 47 |     columns = e.detail.items;
 48 |   }
 49 | 
 50 |   function handleDndFinalize(e: CustomEvent<DndEvent<Column>>) {
 51 |     columns = e.detail.items;
 52 |     onSortColumns(columns.map((col) => col.id));
 53 |   }
 54 | </script>
 55 | 
 56 | <div>
 57 |   <section
 58 |     class="projects--board"
 59 |     use:dndzone={{
 60 |       type: "columns",
 61 |       items: columns,
 62 |       flipDurationMs,
 63 |       dropTargetStyle: {
 64 |         outline: "none",
 65 |       },
 66 |       dragDisabled: boardEditing,
 67 |       morphDisabled: true,
 68 |     }}
 69 |     on:consider={handleDndConsider}
 70 |     on:finalize={handleDndFinalize}
 71 |   >
 72 |     {#each columns as column (column.id)}
 73 |       <div class="projects--board--column--dndwrapper">
 74 |         <BoardColumn
 75 |           {readonly}
 76 |           {richText}
 77 |           {boardEditing}
 78 |           {onEdit}
 79 |           width={columnWidth}
 80 |           collapse={column.collapse}
 81 |           pinned={column.pinned}
 82 |           name={column.id}
 83 |           records={column.records}
 84 |           {onRecordClick}
 85 |           {checkField}
 86 |           {onRecordCheck}
 87 |           onRecordAdd={() => onRecordAdd(column.id)}
 88 |           onDrop={(record, records, trigger) => {
 89 |             switch (trigger) {
 90 |               case "droppedIntoZone":
 91 |                 onRecordUpdate(record, { ...column, records }, "addToColumn");
 92 |                 break;
 93 |               case "droppedIntoAnother":
 94 |                 onRecordUpdate(
 95 |                   record,
 96 |                   { ...column, records },
 97 |                   "removeFromColumn"
 98 |                 );
 99 |                 break;
100 |             }
101 |           }}
102 |           {includeFields}
103 |           {customHeader}
104 |           onColumnPin={(name) =>
105 |             onColumnPin(
106 |               columns.map((col) => col.id),
107 |               name
108 |             )}
109 |           onColumnDelete={(name, records) =>
110 |             onColumnDelete(
111 |               columns.map((col) => col.id),
112 |               name,
113 |               records
114 |             )}
115 |           {onColumnCollapse}
116 |           onColumnRename={(name) => {
117 |             const cols = columns.map((col) => col.id);
118 |             onColumnRename(cols, column.id, name, column.records);
119 |           }}
120 |           onValidate={(name) => {
121 |             if (name === "") return false;
122 |             if (columns.map((col) => col.id).includes(name)) return false;
123 |             return true;
124 |           }}
125 |         />
126 |       </div>
127 |     {/each}
128 |   </section>
129 |   {#if !readonly}
130 |     <NewColumn
131 |       {onEdit}
132 |       onColumnAdd={(name) => {
133 |         const cols = columns.map((col) => col.id);
134 |         onColumnAdd(cols, name);
135 |       }}
136 |       fieldError={validateStatusField()}
137 |       onValidate={(name) => {
138 |         if (name === "") return false;
139 |         if (columns.map((col) => col.id).includes(name)) return false;
140 | 
141 |         return true;
142 |       }}
143 |     />
144 |   {/if}
145 | </div>
146 | 
147 | <style>
148 |   div {
149 |     display: flex;
150 |   }
151 | </style>
152 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/BoardColumn.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { Button, Icon } from "obsidian-svelte";
  3 |   import type { DataField, DataRecord } from "src/lib/dataframe/dataframe";
  4 |   import { i18n } from "src/lib/stores/i18n";
  5 |   import CardGroup from "./CardList.svelte";
  6 |   import ColumnHeader from "./ColumnHeader.svelte";
  7 |   import type {
  8 |     OnRecordClick,
  9 |     OnRecordCheck,
 10 |     OnRecordDrop,
 11 |     OnColumnCollapse,
 12 |   } from "./types";
 13 |   import { Menu } from "obsidian";
 14 | 
 15 |   export let width: number;
 16 | 
 17 |   export let name: string;
 18 |   export let records: DataRecord[];
 19 |   export let readonly: boolean;
 20 |   export let richText: boolean;
 21 |   export let checkField: string | undefined;
 22 |   export let includeFields: DataField[];
 23 |   export let customHeader: DataField | undefined;
 24 |   export let pinned: boolean;
 25 |   export let collapse: boolean;
 26 | 
 27 |   export let onDrop: OnRecordDrop;
 28 |   export let onRecordClick: OnRecordClick;
 29 |   export let onRecordCheck: OnRecordCheck;
 30 |   export let onRecordAdd: () => void;
 31 |   export let onColumnPin: (name: string) => void;
 32 |   export let onColumnCollapse: OnColumnCollapse;
 33 |   export let onColumnDelete: (name: string, records: DataRecord[]) => void;
 34 |   export let onColumnRename: (name: string) => void;
 35 |   export let onValidate: (name: string) => boolean;
 36 | 
 37 |   let editing: boolean = false;
 38 | 
 39 |   export let boardEditing: boolean = false;
 40 |   export let onEdit: (editing: boolean) => void;
 41 |   $: onEdit(editing);
 42 | 
 43 |   $: count = records.length;
 44 |   $: checkedCount = records.filter((r) => r.values[checkField ?? ""]).length;
 45 | 
 46 |   function onColumnMenu() {
 47 |     const menu = new Menu();
 48 | 
 49 |     menu.addItem((item) => {
 50 |       item
 51 |         .setTitle($i18n.t("components.board.column.rename"))
 52 |         .setIcon("edit")
 53 |         .onClick(() => {
 54 |           editing = true;
 55 |         });
 56 |     });
 57 | 
 58 |     menu.addItem((item) => {
 59 |       item
 60 |         .setTitle(
 61 |           collapse
 62 |             ? $i18n.t("components.board.column.expand")
 63 |             : $i18n.t("components.board.column.collapse")
 64 |         )
 65 |         .setIcon(collapse ? "chevrons-left-right" : "chevrons-right-left")
 66 |         .onClick(() => {
 67 |           onColumnCollapse(name);
 68 |         });
 69 |     });
 70 | 
 71 |     menu.addItem((item) => {
 72 |       item
 73 |         .setTitle(
 74 |           pinned
 75 |             ? $i18n.t("components.board.column.unpin")
 76 |             : $i18n.t("components.board.column.pin")
 77 |         )
 78 |         .setIcon(pinned ? "pin-off" : "pin")
 79 |         .onClick(() => {
 80 |           onColumnPin(name);
 81 |         });
 82 |     });
 83 | 
 84 |     if (name !== $i18n.t("views.board.no-status")) {
 85 |       menu.addSeparator();
 86 | 
 87 |       menu.addItem((item) => {
 88 |         item
 89 |           .setTitle($i18n.t("components.board.column.delete"))
 90 |           .setIcon("trash-2")
 91 |           .setWarning(true)
 92 |           .onClick(() => {
 93 |             onColumnDelete(name, records);
 94 |           });
 95 |       });
 96 |     }
 97 | 
 98 |     return menu;
 99 |   }
100 | </script>
101 | 
102 | <section
103 |   data-id={name}
104 |   class="projects--board--column"
105 |   class:collapse
106 |   style={`width: ${width}px; margin-right: ${collapse ? 40 - width : 0}px`}
107 | >
108 |   <ColumnHeader
109 |     value={name}
110 |     {count}
111 |     {checkedCount}
112 |     bind:editing
113 |     {richText}
114 |     {collapse}
115 |     {checkField}
116 |     {onColumnMenu}
117 |     {onColumnRename}
118 |     {onValidate}
119 |   />
120 | 
121 |   {#if !collapse}
122 |     <CardGroup
123 |       items={records}
124 |       {boardEditing}
125 |       {customHeader}
126 |       {onRecordClick}
127 |       {checkField}
128 |       {onRecordCheck}
129 |       {onDrop}
130 |       {includeFields}
131 |     />
132 |     {#if !readonly}
133 |       <span>
134 |         <Button variant="plain" on:click={() => onRecordAdd()}>
135 |           <Icon name="plus" />
136 |           {$i18n.t("views.board.note.add")}
137 |         </Button>
138 |       </span>
139 |     {/if}
140 |   {/if}
141 | </section>
142 | 
143 | <style>
144 |   span {
145 |     display: inline-flex;
146 |     align-content: center;
147 |     justify-content: center;
148 |     border-radius: var(--button-radius);
149 |   }
150 | 
151 |   span:focus-within {
152 |     box-shadow: 0 0 0 2px var(--background-modifier-border-focus);
153 |   }
154 | 
155 |   .collapse {
156 |     transform: rotate(-90deg) translateX(-100%);
157 |     transform-origin: left top 0px;
158 |   }
159 | </style>
160 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/CardList.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   // import { Checkbox, InternalLink} from "obsidian-svelte";
  3 |   import { Checkbox } from "obsidian-svelte";
  4 |   import InternalLink from "src/ui/components/InternalLink.svelte";
  5 | 
  6 |   import {
  7 |     isString,
  8 |     type DataField,
  9 |     type DataRecord,
 10 |   } from "src/lib/dataframe/dataframe";
 11 |   import { app } from "src/lib/stores/obsidian";
 12 |   import { settings } from "src/lib/stores/settings";
 13 |   import CardMetadata from "src/ui/components/CardMetadata/CardMetadata.svelte";
 14 |   import ColorItem from "src/ui/components/ColorItem/ColorItem.svelte";
 15 |   import {
 16 |     getRecordColorContext,
 17 |     handleHoverLink,
 18 |     sortRecordsContext,
 19 |   } from "src/ui/views/helpers";
 20 |   import {
 21 |     SHADOW_ITEM_MARKER_PROPERTY_NAME,
 22 |     TRIGGERS,
 23 |     dndzone,
 24 |   } from "svelte-dnd-action";
 25 |   import { flip } from "svelte/animate";
 26 |   import { getDisplayName } from "./boardHelpers";
 27 |   import type {
 28 |     DropTrigger,
 29 |     OnRecordClick,
 30 |     OnRecordCheck,
 31 |     OnRecordDrop,
 32 |   } from "./types";
 33 | 
 34 |   export let items: DataRecord[];
 35 |   export let onRecordClick: OnRecordClick;
 36 |   export let onRecordCheck: OnRecordCheck;
 37 |   export let onDrop: OnRecordDrop;
 38 |   export let includeFields: DataField[];
 39 |   export let checkField: string | undefined;
 40 |   export let customHeader: DataField | undefined;
 41 |   export let boardEditing: boolean;
 42 | 
 43 |   const getRecordColor = getRecordColorContext.get();
 44 |   const sortRecords = sortRecordsContext.get();
 45 | 
 46 |   const flipDurationMs = 200;
 47 | 
 48 |   let dragItem: DataRecord | undefined;
 49 |   function handleDndConsider({ detail }: CustomEvent<DndEvent<DataRecord>>) {
 50 |     if (detail.info.trigger === TRIGGERS.DRAG_STARTED) {
 51 |       dragItem = items.find((item) => item.id === detail.info.id);
 52 |     }
 53 |     items = sortRecords(detail.items);
 54 |   }
 55 | 
 56 |   function handleDndFinalize({ detail }: CustomEvent<DndEvent<DataRecord>>) {
 57 |     items = sortRecords(detail.items);
 58 |     if (detail.info.trigger === TRIGGERS.DROPPED_INTO_ZONE) {
 59 |       dragItem = items.find((item) => item.id === detail.info.id);
 60 |     }
 61 |     if (dragItem) {
 62 |       onDrop(dragItem, items, detail.info.trigger as DropTrigger);
 63 |       dragItem = undefined;
 64 |     }
 65 |   }
 66 | 
 67 |   const isPlaceholder = (item: DataRecord) =>
 68 |     !!(item as any)[SHADOW_ITEM_MARKER_PROPERTY_NAME];
 69 | </script>
 70 | 
 71 | <div
 72 |   class="projects--board--card-list"
 73 |   on:consider={handleDndConsider}
 74 |   on:finalize={handleDndFinalize}
 75 |   use:dndzone={{
 76 |     type: "card",
 77 |     items,
 78 |     flipDurationMs,
 79 |     dropTargetStyle: {
 80 |       outline: "none",
 81 |       borderRadius: "5px",
 82 |       background: "var(--board-column-drag-accent)",
 83 |       transition: "all 150ms ease-in-out",
 84 |     },
 85 |     dragDisabled: boardEditing,
 86 |     morphDisabled: true,
 87 |   }}
 88 | >
 89 |   {#each items as item (item.id)}
 90 |     {@const color = getRecordColor(item)}
 91 | 
 92 |     <article
 93 |       class="projects--board--card"
 94 |       class:projects--board--card-placeholder={isPlaceholder(item)}
 95 |       on:keypress
 96 |       on:click={() => onRecordClick(item)}
 97 |       animate:flip={{ duration: flipDurationMs }}
 98 |     >
 99 |       <ColorItem {color}>
100 |         <div slot="header" class="card-header">
101 |           {#if checkField}
102 |             <span class="checkbox-wrapper">
103 |               <Checkbox
104 |                 checked={checkField !== undefined
105 |                   ? !!item.values[checkField]
106 |                   : false}
107 |                 on:check={({ detail: checked }) => onRecordCheck(item, checked)}
108 |               />
109 |             </span>
110 |           {/if}
111 |           {#if !customHeader}
112 |             <InternalLink
113 |               linkText={item.id}
114 |               sourcePath={item.id}
115 |               resolved
116 |               on:open={({ detail: { linkText, sourcePath, newLeaf } }) => {
117 |                 let openEditor =
118 |                   $settings.preferences.linkBehavior == "open-editor";
119 | 
120 |                 if (newLeaf) {
121 |                   openEditor = !openEditor;
122 |                 }
123 | 
124 |                 if (openEditor) {
125 |                   onRecordClick(item);
126 |                 } else {
127 |                   $app.workspace.openLinkText(linkText, sourcePath, true);
128 |                 }
129 |               }}
130 |               on:hover={({ detail: { event, sourcePath } }) => {
131 |                 handleHoverLink(event, sourcePath);
132 |               }}
133 |             >
134 |               {@const path = item.values["path"]}
135 |               {getDisplayName(isString(path) ? path : item.id)}
136 |             </InternalLink>
137 |           {:else}
138 |             <CardMetadata fields={[customHeader]} record={item} />
139 |           {/if}
140 |         </div>
141 |         <CardMetadata fields={includeFields} record={item} />
142 |       </ColorItem>
143 |     </article>
144 |   {/each}
145 | </div>
146 | 
147 | <style>
148 |   div.card-header {
149 |     display: flex;
150 |     gap: 4px;
151 |     align-items: center;
152 |   }
153 | 
154 |   .checkbox-wrapper {
155 |     display: flex;
156 |     flex-direction: column;
157 |     align-self: start;
158 |     margin-top: 4px;
159 |   }
160 | </style>
161 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/ColumnHeader.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { MarkdownRenderer, Menu } from "obsidian";
  3 |   import { app, view } from "src/lib/stores/obsidian";
  4 |   import { getContext } from "svelte";
  5 |   import { TextInput, IconButton } from "obsidian-svelte";
  6 |   import { Flair } from "src/ui/components/Flair";
  7 |   import { handleHoverLink } from "src/ui/views/helpers";
  8 | 
  9 |   export let value: string;
 10 |   export let count: number;
 11 |   export let checkedCount: number;
 12 |   export let checkField: string | undefined;
 13 |   export let collapse: boolean = false;
 14 |   export let richText: boolean = false;
 15 |   const sourcePath = getContext<string>("sourcePath") ?? "";
 16 | 
 17 |   function useMarkdown(node: HTMLElement, value: string) {
 18 |     MarkdownRenderer.render($app, value, node, sourcePath, $view);
 19 | 
 20 |     return {
 21 |       update(newValue: string) {
 22 |         node.empty();
 23 |         MarkdownRenderer.render($app, newValue, node, sourcePath, $view);
 24 |       },
 25 |     };
 26 |   }
 27 | 
 28 |   export let onColumnMenu: () => Menu;
 29 | 
 30 |   function handleClick(event: MouseEvent) {
 31 |     const targetEl = event.target as HTMLElement;
 32 |     const closestAnchor =
 33 |       targetEl.tagName === "A" ? targetEl : targetEl.closest("a");
 34 | 
 35 |     if (!closestAnchor) {
 36 |       return;
 37 |     }
 38 | 
 39 |     event.stopPropagation();
 40 | 
 41 |     if (closestAnchor.hasClass("internal-link")) {
 42 |       event.preventDefault();
 43 | 
 44 |       const href = closestAnchor.getAttr("href");
 45 |       const newLeaf = event.button === 1 || event.ctrlKey || event.metaKey;
 46 | 
 47 |       if (href) {
 48 |         $app.workspace.openLinkText(href, sourcePath, newLeaf);
 49 |       }
 50 |     }
 51 |   }
 52 | 
 53 |   export let onValidate: (value: string) => boolean;
 54 |   export let onColumnRename: (value: string) => void;
 55 |   export let editing: boolean = false;
 56 | 
 57 |   let inputRef: HTMLInputElement;
 58 |   $: if (editing && inputRef) {
 59 |     inputRef.focus();
 60 |     inputRef.select();
 61 |   }
 62 |   let fallback: string = value;
 63 |   function rollback() {
 64 |     value = fallback;
 65 |   }
 66 |   $: error = !onValidate(value);
 67 | </script>
 68 | 
 69 | <div
 70 |   class="projects--board--column--header"
 71 |   on:dblclick={() => {
 72 |     editing = true;
 73 |   }}
 74 | >
 75 |   {#if editing}
 76 |     <TextInput
 77 |       noPadding
 78 |       embed
 79 |       bind:ref={inputRef}
 80 |       bind:value
 81 |       on:keydown={(event) => {
 82 |         if (event.key === "Enter") {
 83 |           editing = false;
 84 | 
 85 |           if (fallback == value) {
 86 |             return;
 87 |           }
 88 | 
 89 |           if (!error) {
 90 |             fallback = value;
 91 | 
 92 |             onColumnRename(value);
 93 |           } else {
 94 |             rollback();
 95 |           }
 96 |         }
 97 |         if (event.key === "Escape") {
 98 |           editing = false;
 99 |           rollback();
100 |         }
101 |       }}
102 |       on:blur={() => {
103 |         editing = false;
104 | 
105 |         if (fallback == value) {
106 |           return;
107 |         }
108 | 
109 |         if (!error) {
110 |           fallback = value;
111 |           onColumnRename(value);
112 |         } else {
113 |           rollback();
114 |         }
115 |       }}
116 |     />
117 |   {:else if richText}
118 |     <span
119 |       class:collapse
120 |       use:useMarkdown={value}
121 |       on:mouseover={(event) => handleHoverLink(event, "")}
122 |       on:focus
123 |       on:click={handleClick}
124 |       on:keypress
125 |     />
126 |   {:else}
127 |     <span class:collapse>
128 |       {value}
129 |     </span>
130 |   {/if}
131 |   <div class="right">
132 |     {#if collapse || checkField}
133 |       <Flair variant="primary">
134 |         {checkField ? `${checkedCount}/${count}` : count}
135 |       </Flair>
136 |     {/if}
137 |     <IconButton
138 |       icon="more-vertical"
139 |       size="sm"
140 |       onClick={(event) => {
141 |         onColumnMenu().showAtMouseEvent(event);
142 |       }}
143 |     />
144 |   </div>
145 | </div>
146 | 
147 | <style>
148 |   span {
149 |     overflow: hidden;
150 |     text-overflow: ellipsis;
151 |   }
152 | 
153 |   span :global(p:first-child) {
154 |     margin-top: 0;
155 |   }
156 | 
157 |   span :global(p:last-child) {
158 |     margin-bottom: 0;
159 |   }
160 | 
161 |   .projects--board--column--header {
162 |     display: flex;
163 |     justify-content: space-between;
164 |     align-items: center;
165 |   }
166 | 
167 |   .right {
168 |     display: flex;
169 |     align-items: center;
170 |   }
171 | 
172 |   .collapse {
173 |     max-height: 24px;
174 |     overflow-y: auto;
175 |   }
176 | </style>
177 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/NewColumn.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Button, Icon } from "obsidian-svelte";
 3 |   import { i18n } from "src/lib/stores/i18n";
 4 |   import { TextInput, useClickOutside } from "obsidian-svelte";
 5 | 
 6 |   let editing: boolean = false;
 7 |   let inputRef: HTMLInputElement;
 8 |   $: if (editing && inputRef) {
 9 |     inputRef.focus();
10 |     inputRef.select();
11 |   }
12 | 
13 |   let placeholder: string = $i18n.t("components.board.column.add.placeholder");
14 |   let value: string = "";
15 | 
16 |   export let fieldError: string = "";
17 |   $: tooltip = fieldError
18 |     ? $i18n.t(`components.board.column.add.${fieldError}`)
19 |     : "";
20 | 
21 |   export let onColumnAdd: (name: string) => void;
22 |   export let onValidate: (value: string) => boolean;
23 | 
24 |   const addColumn = () => {
25 |     editing = false;
26 |     if (onValidate(value)) onColumnAdd(value);
27 |     value = "";
28 |   };
29 | 
30 |   const escape = () => {
31 |     editing = false;
32 |     value = "";
33 |   };
34 | 
35 |   export let onEdit: (editing: boolean) => void;
36 |   $: onEdit(editing);
37 | </script>
38 | 
39 | <section
40 |   data-id={placeholder}
41 |   class="projects--board--column"
42 |   on:click|stopPropagation={() => {
43 |     if (!editing) editing = true;
44 |   }}
45 |   on:keydown|stopPropagation={() => {}}
46 |   use:useClickOutside={() => addColumn()}
47 | >
48 |   {#if editing}
49 |     <TextInput
50 |       noPadding
51 |       embed
52 |       bind:ref={inputRef}
53 |       bind:value
54 |       {placeholder}
55 |       on:keydown={(event) => {
56 |         if (event.key === "Enter") addColumn();
57 |         if (event.key === "Escape") escape();
58 |       }}
59 |     />
60 |   {:else}
61 |     <span class="add-column">
62 |       <Button variant="plain" disabled={!!fieldError} {tooltip}>
63 |         <Icon name="plus" />
64 |         {$i18n.t("components.board.column.add.name")}
65 |       </Button>
66 |     </span>
67 |   {/if}
68 | </section>
69 | 
70 | <style>
71 |   /* Styled as a board column */
72 |   section {
73 |     margin-top: 8px;
74 |     border: 1px solid var(--background-modifier-border);
75 |     border-radius: var(--radius-m);
76 |     background-color: var(--background-primary-alt);
77 |     display: flex;
78 |     flex-direction: column;
79 |     row-gap: var(--size-4-2);
80 | 
81 |     height: fit-content;
82 |   }
83 | 
84 |   section:focus-within {
85 |     box-shadow: 0 0 0 2px var(--background-modifier-border-focus);
86 |   }
87 | 
88 |   .add-column {
89 |     margin: -4px;
90 |   }
91 | </style>
92 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/boardHelpers.test.ts:
--------------------------------------------------------------------------------
 1 | import { describe, it, expect } from "@jest/globals";
 2 | import { getDisplayName } from "./boardHelpers";
 3 | 
 4 | describe("getDisplayName", () => {
 5 |   it("should return the basename without the extension", () => {
 6 |     expect(getDisplayName(`Untitled.md`)).toStrictEqual("Untitled");
 7 |     expect(getDisplayName(`Work/Untitled.md`)).toStrictEqual("Untitled");
 8 |     expect(getDisplayName(`Work/Client A/Untitled.md`)).toStrictEqual(
 9 |       "Untitled"
10 |     );
11 |   });
12 | });
13 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/boardHelpers.ts:
--------------------------------------------------------------------------------
 1 | export function getDisplayName(recordId: string): string {
 2 |   const basename = getBasename(recordId);
 3 |   return basename.slice(0, basename.lastIndexOf("."));
 4 | }
 5 | 
 6 | // This exists in the `path` Node.js package, but reimplementing for mobile support.
 7 | function getBasename(str: string) {
 8 |   const lastSlash = str.lastIndexOf("/");
 9 | 
10 |   if (lastSlash < 0) {
11 |     return str;
12 |   }
13 | 
14 |   return str.slice(lastSlash + 1);
15 | }
16 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/index.ts:
--------------------------------------------------------------------------------
1 | export { default as Board } from "./Board.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/Board/types.ts:
--------------------------------------------------------------------------------
 1 | import type { DataRecord } from "src/lib/dataframe/dataframe";
 2 | import type { TRIGGERS } from "svelte-dnd-action";
 3 | 
 4 | export type Column = {
 5 |   id: string;
 6 |   records: DataRecord[];
 7 |   collapse: boolean;
 8 |   pinned: boolean;
 9 | };
10 | 
11 | export type OnRecordClick = (record: DataRecord) => void;
12 | export type OnRecordCheck = (record: DataRecord, checked: boolean) => void;
13 | export type OnRecordAdd = (column: string) => void;
14 | export type OnRecordDrop = (
15 |   record: DataRecord,
16 |   records: DataRecord[],
17 |   trigger: DropTrigger
18 | ) => void;
19 | export type DropTrigger =
20 |   | TRIGGERS.DROPPED_INTO_ANOTHER
21 |   | TRIGGERS.DROPPED_INTO_ZONE
22 |   | TRIGGERS.DROPPED_OUTSIDE_OF_ANY;
23 | 
24 | export type OnRecordUpdate = (
25 |   record: DataRecord,
26 |   column: Column,
27 |   trigger: RecordUpdateTrigger
28 | ) => void;
29 | 
30 | export type RecordUpdateTrigger = "addToColumn" | "removeFromColumn";
31 | 
32 | export type OnSortColumns = (names: string[]) => void;
33 | export type OnSortRecords = (
34 |   records: ReadonlyArray<DataRecord>
35 | ) => DataRecord[];
36 | 
37 | export type OnColumnAdd = (columns: string[], name: string) => void;
38 | export type OnColumnDelete = (
39 |   columns: string[],
40 |   name: string,
41 |   records: DataRecord[]
42 | ) => void;
43 | export type OnColumnRename = (
44 |   columns: string[],
45 |   oldName: string,
46 |   newName: string,
47 |   records: DataRecord[]
48 | ) => void;
49 | export type OnColumnCollapse = (name: string) => void;
50 | export type OnColumnPin = (columns: string[], name: string) => void;
51 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/components/index.ts:
--------------------------------------------------------------------------------
1 | export * from "./Board";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/index.ts:
--------------------------------------------------------------------------------
1 | export { BoardView } from "./boardView";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/settings/BoardSettings.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { produce } from "immer";
 3 |   import {
 4 |     ModalContent,
 5 |     ModalLayout,
 6 |     NumberInput,
 7 |     Select,
 8 |     SettingItem,
 9 |   } from "obsidian-svelte";
10 |   import { DataFieldType, type DataField } from "src/lib/dataframe/dataframe";
11 |   import { i18n } from "src/lib/stores/i18n";
12 |   import { fieldToSelectableValue } from "../../helpers";
13 |   import { getFieldsByType } from "../board";
14 |   import type { BoardConfig } from "../types";
15 | 
16 |   export let config: BoardConfig;
17 |   export let fields: DataField[];
18 |   export let onSave: (config: BoardConfig) => void;
19 | 
20 |   let columnWidthValue = config.columnWidth ?? null;
21 | 
22 |   $: headerField = config.headerField ?? "";
23 | 
24 |   $: orderSyncField = config.orderSyncField ?? "";
25 |   $: validOrderSyncFields = getFieldsByType(fields, DataFieldType.Number);
26 | 
27 |   const updateConfig = <T extends keyof BoardConfig>(
28 |     key: T,
29 |     value: BoardConfig[T] | null
30 |   ) =>
31 |     onSave(
32 |       produce(config, (draft) => {
33 |         const { [key]: _, ...rest } = draft;
34 |         return value ? { ...rest, [key]: value } : rest;
35 |       })
36 |     );
37 | </script>
38 | 
39 | <ModalLayout title={$i18n.t("views.board.settings.name")}>
40 |   <ModalContent>
41 |     <SettingItem
42 |       name={$i18n.t("views.board.settings.column-width.name")}
43 |       description={$i18n.t("views.board.settings.column-width.description")}
44 |     >
45 |       <NumberInput
46 |         placeholder="270"
47 |         bind:value={columnWidthValue}
48 |         on:blur={() => updateConfig("columnWidth", columnWidthValue)}
49 |       />
50 |     </SettingItem>
51 |     <SettingItem
52 |       name={$i18n.t("views.board.settings.custom-header.name")}
53 |       description={$i18n.t("views.board.settings.custom-header.description")}
54 |     >
55 |       <Select
56 |         value={headerField ?? ""}
57 |         options={fields.map(fieldToSelectableValue)}
58 |         placeholder={$i18n.t("views.board.fields.none") ?? ""}
59 |         allowEmpty
60 |         on:change={(event) => {
61 |           headerField = event.detail;
62 |           updateConfig("headerField", headerField);
63 |         }}
64 |       />
65 |     </SettingItem>
66 |     <SettingItem
67 |       name={$i18n.t("views.board.settings.order-sync-field.name")}
68 |       description={$i18n.t("views.board.settings.order-sync-field.description")}
69 |     >
70 |       <Select
71 |         value={orderSyncField ?? ""}
72 |         options={validOrderSyncFields.map(fieldToSelectableValue)}
73 |         placeholder={$i18n.t("views.board.fields.none") ?? ""}
74 |         allowEmpty
75 |         on:change={(event) => {
76 |           orderSyncField = event.detail;
77 |           updateConfig("orderSyncField", orderSyncField);
78 |         }}
79 |       />
80 |     </SettingItem>
81 |   </ModalContent>
82 | </ModalLayout>
83 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/settings/settingsModal.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | import type { DataField } from "src/lib/dataframe/dataframe";
 3 | import type { BoardConfig } from "../types";
 4 | import BoardSettings from "./BoardSettings.svelte";
 5 | 
 6 | export class BoardSettingsModal extends Modal {
 7 |   component?: BoardSettings;
 8 | 
 9 |   constructor(
10 |     app: App,
11 |     readonly config: BoardConfig,
12 |     readonly fields: DataField[],
13 |     readonly onSave: (config: BoardConfig) => void
14 |   ) {
15 |     super(app);
16 |   }
17 | 
18 |   onOpen(): void {
19 |     const { contentEl } = this;
20 | 
21 |     this.component = new BoardSettings({
22 |       target: contentEl,
23 |       props: {
24 |         config: this.config,
25 |         fields: this.fields,
26 |         onSave: (config: BoardConfig) => {
27 |           this.onSave(config);
28 |         },
29 |       },
30 |     });
31 |   }
32 | 
33 |   onClose(): void {
34 |     if (this.component) {
35 |       this.component.$destroy();
36 |     }
37 |   }
38 | }
39 | 


--------------------------------------------------------------------------------
/src/ui/views/Board/types.ts:
--------------------------------------------------------------------------------
 1 | export interface BoardConfig {
 2 |   readonly groupByField?: string;
 3 |   readonly checkField?: string;
 4 |   readonly headerField?: string;
 5 |   readonly orderSyncField?: string;
 6 |   readonly columnWidth?: number;
 7 |   readonly columns?: ColumnSettings;
 8 |   readonly includeFields?: string[];
 9 | }
10 | 
11 | export interface ColumnSettings {
12 |   [name: string]: {
13 |     readonly weight?: number;
14 |     readonly records?: string[];
15 |     readonly collapse?: boolean;
16 |   };
17 | }
18 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/CalendarView.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import dayjs from "dayjs";
  3 |   import { Notice } from "obsidian";
  4 |   import { Select, Typography } from "obsidian-svelte";
  5 |   import { createDataRecord } from "src/lib/dataApi";
  6 |   import {
  7 |     DataFieldType,
  8 |     type DataFrame,
  9 |     type DataRecord,
 10 |   } from "src/lib/dataframe/dataframe";
 11 |   import { updateRecordValues } from "src/lib/datasources/helpers";
 12 |   import { i18n } from "src/lib/stores/i18n";
 13 |   import { app } from "src/lib/stores/obsidian";
 14 |   import { settings } from "src/lib/stores/settings";
 15 |   import type { ViewApi } from "src/lib/viewApi";
 16 |   import type { ProjectDefinition } from "src/settings/settings";
 17 |   import { Field } from "src/ui/components/Field";
 18 |   import {
 19 |     ViewContent,
 20 |     ViewHeader,
 21 |     ViewLayout,
 22 |     ViewToolbar,
 23 |   } from "src/ui/components/Layout";
 24 |   import { CreateNoteModal } from "src/ui/modals/createNoteModal";
 25 |   import { EditNoteModal } from "src/ui/modals/editNoteModal";
 26 |   import {
 27 |     fieldToSelectableValue,
 28 |     getRecordColorContext,
 29 |   } from "src/ui/views/helpers";
 30 |   import { get } from "svelte/store";
 31 |   import {
 32 |     addInterval,
 33 |     chunkDates,
 34 |     computeDateInterval,
 35 |     generateDates,
 36 |     generateTitle,
 37 |     getFirstDayOfWeek,
 38 |     groupRecordsByField,
 39 |     isCalendarInterval,
 40 |     subtractInterval,
 41 |   } from "./calendar";
 42 |   import Calendar from "./components/Calendar/Calendar.svelte";
 43 |   import Day from "./components/Calendar/Day.svelte";
 44 |   import Week from "./components/Calendar/Week.svelte";
 45 |   import WeekHeader from "./components/Calendar/WeekHeader.svelte";
 46 |   import Weekday from "./components/Calendar/Weekday.svelte";
 47 |   import Navigation from "./components/Navigation/Navigation.svelte";
 48 |   import type { CalendarConfig } from "./types";
 49 | 
 50 |   export let project: ProjectDefinition;
 51 |   export let frame: DataFrame;
 52 |   export let readonly: boolean;
 53 |   export let api: ViewApi;
 54 |   export let getRecordColor: (record: DataRecord) => string | null;
 55 |   export let config: CalendarConfig | undefined;
 56 |   export let onConfigChange: (cfg: CalendarConfig) => void;
 57 | 
 58 |   function saveConfig(cfg: CalendarConfig) {
 59 |     config = cfg;
 60 |     onConfigChange(cfg);
 61 |   }
 62 | 
 63 |   $: ({ fields, records } = frame);
 64 | 
 65 |   let anchorDate: dayjs.Dayjs = dayjs();
 66 | 
 67 |   $: dateFields = fields
 68 |     .filter((field) => !field.repeated)
 69 |     .filter((field) => field.type === DataFieldType.Date);
 70 |   $: dateField =
 71 |     dateFields.find((field) => config?.dateField === field.name) ??
 72 |     dateFields[0];
 73 | 
 74 |   $: booleanFields = fields
 75 |     .filter((field) => !field.repeated)
 76 |     .filter((field) => field.type === DataFieldType.Boolean);
 77 |   $: booleanField = fields.find((field) => config?.checkField === field.name);
 78 | 
 79 |   $: interval = config?.interval ?? "week";
 80 | 
 81 |   $: firstDayOfWeek = getFirstDayOfWeek(
 82 |     $settings.preferences.locale.firstDayOfWeek
 83 |   );
 84 | 
 85 |   $: dateInterval = computeDateInterval(anchorDate, interval, firstDayOfWeek);
 86 | 
 87 |   $: groupedRecords = dateField
 88 |     ? groupRecordsByField(records, dateField.name)
 89 |     : {};
 90 |   $: title = dateInterval ? generateTitle(dateInterval) : "";
 91 |   $: dates = dateInterval ? generateDates(dateInterval) : [];
 92 | 
 93 |   $: numColumns = Math.min(dates.length, 7);
 94 |   $: weeks = chunkDates(dates, numColumns);
 95 |   $: weekDays = dates.slice(0, numColumns);
 96 | 
 97 |   function handleIntervalChange(interval: string) {
 98 |     if (isCalendarInterval(interval)) {
 99 |       saveConfig({ ...config, interval });
100 |     }
101 |   }
102 |   function handleDateFieldChange(dateField: string) {
103 |     saveConfig({ ...config, dateField });
104 |   }
105 |   function handleCheckFieldChange(checkField: string) {
106 |     saveConfig({ ...config, checkField });
107 |   }
108 | 
109 |   function handleRecordChange(date: dayjs.Dayjs, record: DataRecord) {
110 |     if (dateField) {
111 |       if (dateField.type === DataFieldType.Date) {
112 |         const newDatetime = dayjs(record.values[dateField.name] as string)
113 |           .set("year", date.year())
114 |           .set("month", date.month())
115 |           .set("date", date.date());
116 |         api.updateRecord(
117 |           updateRecordValues(record, {
118 |             [dateField.name]: newDatetime.format(
119 |               dateField.typeConfig?.time ? "YYYY-MM-DDTHH:mm" : "YYYY-MM-DD"
120 |             ),
121 |           }),
122 |           fields
123 |         );
124 |       }
125 |     }
126 |   }
127 | 
128 |   function handleRecordCheck(record: DataRecord, checked: boolean) {
129 |     if (booleanField) {
130 |       api.updateRecord(
131 |         updateRecordValues(record, {
132 |           [booleanField.name]: checked,
133 |         }),
134 |         fields
135 |       );
136 |     }
137 |   }
138 | 
139 |   function handleRecordClick(entry: DataRecord) {
140 |     if (entry) {
141 |       new EditNoteModal(
142 |         get(app),
143 |         fields,
144 |         (record) => {
145 |           api.updateRecord(record, fields);
146 |         },
147 |         entry
148 |       ).open();
149 |     }
150 |   }
151 | 
152 |   function handleRecordAdd(date: dayjs.Dayjs) {
153 |     if (!dateField) {
154 |       new Notice("Select a Date field to create calendar events.");
155 |       return;
156 |     }
157 | 
158 |     if (readonly) {
159 |       new Notice("Can't create calendar events in read-only projects.");
160 |       return;
161 |     }
162 | 
163 |     new CreateNoteModal($app, project, (name, templatePath) => {
164 |       if (dateField) {
165 |         api.addRecord(
166 |           createDataRecord(name, project, {
167 |             [dateField.name]: date.toDate(),
168 |           }),
169 |           fields,
170 |           templatePath
171 |         );
172 |       }
173 |     }).open();
174 |   }
175 | 
176 |   getRecordColorContext.set(getRecordColor);
177 | </script>
178 | 
179 | <ViewLayout>
180 |   <ViewHeader>
181 |     <ViewToolbar variant="secondary">
182 |       <Navigation
183 |         slot="left"
184 |         onNext={() => (anchorDate = addInterval(anchorDate, interval))}
185 |         onPrevious={() => (anchorDate = subtractInterval(anchorDate, interval))}
186 |         onToday={() => (anchorDate = dayjs())}
187 |       />
188 |       <Typography slot="middle" variant="h2" nomargin>{title}</Typography>
189 |       <svelte:fragment slot="right">
190 |         <Field name={$i18n.t("views.calendar.fields.date")}>
191 |           <Select
192 |             value={dateField?.name ?? ""}
193 |             options={dateFields.map(fieldToSelectableValue)}
194 |             placeholder={$i18n.t("views.calendar.fields.none") ?? ""}
195 |             on:change={({ detail }) => handleDateFieldChange(detail)}
196 |           />
197 |         </Field>
198 |         <Field name={$i18n.t("views.calendar.fields.check")}>
199 |           <Select
200 |             allowEmpty
201 |             value={booleanField?.name ?? ""}
202 |             options={booleanFields.map(fieldToSelectableValue)}
203 |             placeholder={$i18n.t("views.calendar.fields.none") ?? ""}
204 |             on:change={({ detail }) => handleCheckFieldChange(detail)}
205 |           />
206 |         </Field>
207 |         <Select
208 |           value={config?.interval ?? "week"}
209 |           options={[
210 |             {
211 |               label: $i18n.t("views.calendar.intervals.month", {
212 |                 count: 1,
213 |               }),
214 |               value: "month",
215 |             },
216 |             {
217 |               label: $i18n.t("views.calendar.intervals.weekWithCount", {
218 |                 count: 2,
219 |               }),
220 |               value: "2weeks",
221 |             },
222 |             {
223 |               label: $i18n.t("views.calendar.intervals.week", {
224 |                 count: 1,
225 |               }),
226 |               value: "week",
227 |             },
228 |             {
229 |               label: $i18n.t("views.calendar.intervals.dayWithCount", {
230 |                 count: 3,
231 |               }),
232 |               value: "3days",
233 |             },
234 |             {
235 |               label: $i18n.t("views.calendar.intervals.day", {
236 |                 count: 1,
237 |               }),
238 |               value: "day",
239 |             },
240 |           ]}
241 |           on:change={({ detail }) => handleIntervalChange(detail)}
242 |         />
243 |       </svelte:fragment>
244 |     </ViewToolbar>
245 |   </ViewHeader>
246 |   <ViewContent>
247 |     <Calendar>
248 |       <WeekHeader>
249 |         {#each weekDays as weekDay}
250 |           <Weekday
251 |             width={100 / weekDays.length}
252 |             weekend={weekDay.day() === 0 || weekDay.day() === 6}
253 |           >
254 |             {$i18n.t("views.calendar.weekday", {
255 |               value: weekDay.toDate(),
256 |               formatParams: {
257 |                 value: { weekday: "short" },
258 |               },
259 |             })}
260 |           </Weekday>
261 |         {/each}
262 |       </WeekHeader>
263 |       {#each weeks as week}
264 |         <Week height={100 / weeks.length}>
265 |           {#each week as date}
266 |             <Day
267 |               width={100 / week.length}
268 |               {date}
269 |               checkField={booleanField?.name}
270 |               records={groupedRecords[date.format("YYYY-MM-DD")] || []}
271 |               onRecordClick={handleRecordClick}
272 |               onRecordChange={(record) => {
273 |                 handleRecordChange(date, record);
274 |               }}
275 |               onRecordCheck={(record, checked) => {
276 |                 handleRecordCheck(record, checked);
277 |               }}
278 |               onRecordAdd={() => {
279 |                 handleRecordAdd(date);
280 |               }}
281 |             />
282 |           {/each}
283 |         </Week>
284 |       {/each}
285 |     </Calendar>
286 |   </ViewContent>
287 | </ViewLayout>
288 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/calendar.ts:
--------------------------------------------------------------------------------
  1 | import dayjs from "dayjs";
  2 | import { get } from "svelte/store";
  3 | 
  4 | import { isDate, type DataRecord } from "src/lib/dataframe/dataframe";
  5 | import { i18n } from "src/lib/stores/i18n";
  6 | import type { FirstDayOfWeek } from "src/settings/settings";
  7 | import moment from "moment";
  8 | 
  9 | export type CalendarInterval = "month" | "2weeks" | "week" | "3days" | "day";
 10 | 
 11 | export function isCalendarInterval(value: string): value is CalendarInterval {
 12 |   switch (value) {
 13 |     case "month":
 14 |     case "2weeks":
 15 |     case "week":
 16 |     case "3days":
 17 |     case "day":
 18 |       return true;
 19 |     default:
 20 |       return false;
 21 |   }
 22 | }
 23 | 
 24 | export function addInterval(
 25 |   date: dayjs.Dayjs,
 26 |   interval: CalendarInterval
 27 | ): dayjs.Dayjs {
 28 |   switch (interval) {
 29 |     case "month":
 30 |       return date.add(1, "month");
 31 |     case "2weeks":
 32 |       return date.add(2, "week");
 33 |     case "week":
 34 |       return date.add(1, "week");
 35 |     case "3days":
 36 |       return date.add(1, "day");
 37 |     case "day":
 38 |       return date.add(1, "day");
 39 |   }
 40 | }
 41 | 
 42 | export function subtractInterval(
 43 |   date: dayjs.Dayjs,
 44 |   interval: CalendarInterval
 45 | ): dayjs.Dayjs {
 46 |   switch (interval) {
 47 |     case "month":
 48 |       return date.subtract(1, "month");
 49 |     case "2weeks":
 50 |       return date.subtract(2, "week");
 51 |     case "week":
 52 |       return date.subtract(1, "week");
 53 |     case "3days":
 54 |       return date.subtract(1, "day");
 55 |     case "day":
 56 |       return date.subtract(1, "day");
 57 |   }
 58 | }
 59 | 
 60 | export function groupRecordsByField(
 61 |   records: DataRecord[],
 62 |   field: string
 63 | ): Record<string, DataRecord[]> {
 64 |   const res: Record<string, DataRecord[]> = {};
 65 | 
 66 |   records.forEach((record) => {
 67 |     const dateValue = record.values[field];
 68 | 
 69 |     const start = dateValue
 70 |       ? isDate(dateValue)
 71 |         ? dayjs(dateValue)
 72 |         : null
 73 |       : null;
 74 | 
 75 |     if (start) {
 76 |       const dateStr = start.format("YYYY-MM-DD");
 77 |       if (!(dateStr in res)) {
 78 |         res[dateStr] = [];
 79 |       }
 80 | 
 81 |       res[dateStr]?.push(record);
 82 |     }
 83 |   });
 84 | 
 85 |   return res;
 86 | }
 87 | 
 88 | export function computeDateInterval(
 89 |   anchor: dayjs.Dayjs,
 90 |   interval: CalendarInterval,
 91 |   firstDayOfWeek: number
 92 | ): [dayjs.Dayjs, dayjs.Dayjs] {
 93 |   const sow = startOfWeek(anchor, firstDayOfWeek);
 94 |   const eow = endOfWeek(anchor, firstDayOfWeek);
 95 |   switch (interval) {
 96 |     case "month":
 97 |       return [
 98 |         startOfWeek(anchor.startOf("month"), firstDayOfWeek),
 99 |         endOfWeek(anchor.endOf("month"), firstDayOfWeek),
100 |       ];
101 |     case "2weeks":
102 |       return [sow, eow.add(1, "week")];
103 |     case "week":
104 |       return [sow, eow];
105 |     case "3days":
106 |       return [anchor, anchor.add(2, "days")];
107 |     case "day":
108 |       return [anchor, anchor];
109 |   }
110 | }
111 | 
112 | export function generateTitle(dateInterval: [dayjs.Dayjs, dayjs.Dayjs]) {
113 |   if (dateInterval[0].startOf("day").isSame(dateInterval[1].startOf("day"))) {
114 |     return get(i18n).t("views.calendar.date", {
115 |       value: dateInterval[0],
116 |       formatParams: {
117 |         value: { year: "numeric", month: "long", day: "numeric" },
118 |       },
119 |     });
120 |   }
121 | 
122 |   if (dateInterval[0].startOf("year").isSame(dateInterval[1].startOf("year"))) {
123 |     return get(i18n).t("views.calendar.interval", {
124 |       from: dateInterval[0],
125 |       to: dateInterval[1],
126 |       en_separator: ", ",
127 |       custom_year: dateInterval[0],
128 |       formatParams: {
129 |         from: { month: "short", day: "numeric" },
130 |         to: { month: "short", day: "numeric" },
131 |         custom_year: { year: "numeric" },
132 |       },
133 |     });
134 |   }
135 | 
136 |   return get(i18n).t("views.calendar.interval", {
137 |     from: dateInterval[0],
138 |     to: dateInterval[1],
139 |     en_separator: "",
140 |     custom_year: "",
141 |     formatParams: {
142 |       from: { year: "numeric", month: "short", day: "numeric" },
143 |       to: { year: "numeric", month: "short", day: "numeric" },
144 |       custom_year: { year: false },
145 |     },
146 |   });
147 | }
148 | 
149 | export function generateDates(
150 |   dateInterval: [dayjs.Dayjs, dayjs.Dayjs]
151 | ): dayjs.Dayjs[] {
152 |   const dates: dayjs.Dayjs[] = [];
153 | 
154 |   const numDays = dateInterval[1].diff(dateInterval[0], "days");
155 | 
156 |   for (let i = 0; i <= numDays; i++) {
157 |     dates.push(dateInterval[0].add(i, "day"));
158 |   }
159 | 
160 |   return dates;
161 | }
162 | 
163 | export function chunkDates(
164 |   dates: dayjs.Dayjs[],
165 |   chunks: number
166 | ): dayjs.Dayjs[][] {
167 |   const chunkedDates: dayjs.Dayjs[][] = [];
168 | 
169 |   let rest = dates;
170 |   while (rest.length) {
171 |     const chunked = take(rest, chunks);
172 | 
173 |     chunkedDates.push(chunked);
174 | 
175 |     rest = rest.slice(chunked.length);
176 |   }
177 | 
178 |   return chunkedDates;
179 | }
180 | 
181 | function take<T>(arr: Array<T>, num: number): Array<T> {
182 |   const buffer: Array<T> = [];
183 |   for (let i = 0; i < num && i < arr.length; i++) {
184 |     const el = arr[i];
185 | 
186 |     if (el) {
187 |       buffer.push(el);
188 |     }
189 |   }
190 |   return buffer;
191 | }
192 | 
193 | export function startOfWeek(
194 |   date: dayjs.Dayjs,
195 |   firstDayOfWeek: number
196 | ): dayjs.Dayjs {
197 |   const offset = (7 + date.day() - firstDayOfWeek) % 7;
198 |   return date.subtract(offset, "days");
199 | }
200 | 
201 | export function endOfWeek(
202 |   date: dayjs.Dayjs,
203 |   firstDayOfWeek: number
204 | ): dayjs.Dayjs {
205 |   const offset = (firstDayOfWeek + 6 - date.day()) % 7;
206 |   return date.add(offset, "days");
207 | }
208 | 
209 | export type LocaleOption = "system" | "obsidian";
210 | 
211 | export function getLocale(locale: LocaleOption): Intl.Locale {
212 |   if (locale === "system") {
213 |     return new Intl.Locale(navigator?.language || "en");
214 |   }
215 | 
216 |   const obsidianLanguage =
217 |     localStorage.getItem("language") || moment().locale();
218 | 
219 |   return new Intl.Locale(obsidianLanguage);
220 | }
221 | 
222 | export function getFirstDayOfWeek(day: FirstDayOfWeek): number {
223 |   switch (day) {
224 |     case "sunday":
225 |       return 0;
226 |     case "monday":
227 |       return 1;
228 |     case "default": {
229 |       const obLocale = getLocale("obsidian");
230 |       if (obLocale.weekInfo) {
231 |         return obLocale.weekInfo.firstDay ?? 0;
232 |       }
233 |       if (typeof obLocale.getWeekInfo === "function") {
234 |         return obLocale.getWeekInfo().firstDay ?? 0;
235 |       }
236 |       return 0;
237 |     }
238 |   }
239 | }
240 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/calendarView.ts:
--------------------------------------------------------------------------------
 1 | import {
 2 |   ProjectView,
 3 |   type DataQueryResult,
 4 |   type ProjectViewProps,
 5 | } from "src/customViewApi";
 6 | 
 7 | import CalendarViewSvelte from "./CalendarView.svelte";
 8 | import type { CalendarConfig } from "./types";
 9 | 
10 | export class CalendarView extends ProjectView<CalendarConfig> {
11 |   view?: CalendarViewSvelte | null;
12 |   props?: ProjectViewProps;
13 | 
14 |   getViewType(): string {
15 |     return "calendar";
16 |   }
17 |   getDisplayName(): string {
18 |     return "Calendar";
19 |   }
20 |   getIcon(): string {
21 |     return "calendar";
22 |   }
23 | 
24 |   async onData({ data }: DataQueryResult) {
25 |     this.view?.$set({ frame: data });
26 |   }
27 | 
28 |   async onOpen(props: ProjectViewProps<CalendarConfig>) {
29 |     this.view = new CalendarViewSvelte({
30 |       target: props.contentEl,
31 |       props: {
32 |         frame: { fields: [], records: [] },
33 |         api: props.viewApi,
34 |         project: props.project,
35 |         readonly: props.readonly,
36 |         config: props.config,
37 |         onConfigChange: props.saveConfig,
38 |         getRecordColor: props.getRecordColor,
39 |       },
40 |     });
41 |   }
42 | 
43 |   async onClose() {
44 |     this.view?.$destroy();
45 |     this.view = null;
46 |   }
47 | }
48 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/Calendar.svelte:
--------------------------------------------------------------------------------
 1 | <script>
 2 |   import Week from "./Week.svelte";
 3 | </script>
 4 | 
 5 | <div>
 6 |   <slot />
 7 | </div>
 8 | 
 9 | <style>
10 |   div {
11 |     display: flex;
12 |     flex-direction: column;
13 |     height: 100%;
14 |   }
15 | </style>
16 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/ColorPill.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let color: string;
 3 |   export let width: string = "5px";
 4 | </script>
 5 | 
 6 | <span
 7 |   style:height="100%"
 8 |   style:border-radius="9999px"
 9 |   style:background-color={color}
10 |   style:width
11 | />
12 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/Date.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let today: boolean = false;
 3 | </script>
 4 | 
 5 | <span class:today><slot /></span>
 6 | 
 7 | <style>
 8 |   span {
 9 |     height: 24px;
10 |     line-height: 24px;
11 |     font-size: 12px;
12 |     font-weight: 500;
13 |     border-radius: 50px;
14 |     width: max-content;
15 |     min-width: 24px;
16 |     text-align: center;
17 |     display: inline-block;
18 |     align-self: center;
19 |   }
20 | 
21 |   .today {
22 |     background: var(--interactive-accent);
23 |     color: var(--text-on-accent);
24 |   }
25 | </style>
26 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/Day.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import dayjs from "dayjs";
  3 |   import { Menu } from "obsidian";
  4 |   import type { DataRecord } from "src/lib/dataframe/dataframe";
  5 |   import { i18n } from "src/lib/stores/i18n";
  6 |   import Date from "./Date.svelte";
  7 |   import EventList from "./EventList.svelte";
  8 |   import { menuOnContextMenu } from "src/ui/views/helpers";
  9 | 
 10 |   /**
 11 |    * Specifies the date of the day.
 12 |    */
 13 |   export let date: dayjs.Dayjs;
 14 | 
 15 |   /**
 16 |    * Specifies the width of the day div.
 17 |    */
 18 |   export let width: number;
 19 | 
 20 |   /**
 21 |    * Specifies the records representing the calendar events.
 22 |    */
 23 |   export let records: DataRecord[];
 24 | 
 25 |   /**
 26 |    * Specifies the field to use for determining checkbox state.
 27 |    */
 28 |   export let checkField: string | undefined;
 29 | 
 30 |   /**
 31 |    * onRecordClick runs when the user clicks a calendar event.
 32 |    */
 33 |   export let onRecordClick: (record: DataRecord) => void;
 34 | 
 35 |   /**
 36 |    * onRecordCheck runs when the user Checks / Unchecks a calendar event.
 37 |    */
 38 |   export let onRecordCheck: (record: DataRecord, checked: boolean) => void;
 39 | 
 40 |   /**
 41 |    * onRecordChange runs when the user changes the checked state.
 42 |    */
 43 |   export let onRecordChange: (record: DataRecord) => void;
 44 | 
 45 |   /**
 46 |    * onRecordAdd runs when the user creates a new calendar event on this day.
 47 |    */
 48 |   export let onRecordAdd: () => void;
 49 | 
 50 |   $: weekend = date.day() === 0 || date.day() === 6;
 51 |   $: today = date.startOf("day").isSame(dayjs().startOf("day"));
 52 | 
 53 |   function handleDblClick(event: MouseEvent) {
 54 |     onRecordAdd();
 55 |   }
 56 | 
 57 |   function handleMouseDown(event: MouseEvent) {
 58 |     if (event.button === 2) {
 59 |       const menu = new Menu().addItem((item) => {
 60 |         item
 61 |           .setTitle($i18n.t("views.calendar.new-note"))
 62 |           .setIcon("file-plus")
 63 |           .onClick(() => onRecordAdd());
 64 |       });
 65 |       menuOnContextMenu(event, menu);
 66 |     }
 67 |   }
 68 | </script>
 69 | 
 70 | <div
 71 |   class:weekend
 72 |   on:dblclick={handleDblClick}
 73 |   on:mousedown={handleMouseDown}
 74 |   style:width={width + "%"}
 75 | >
 76 |   <Date {today}>{date.date()}</Date>
 77 |   <EventList
 78 |     {checkField}
 79 |     {records}
 80 |     {onRecordClick}
 81 |     {onRecordCheck}
 82 |     {onRecordChange}
 83 |   />
 84 | </div>
 85 | 
 86 | <style>
 87 |   div {
 88 |     border-right: 1px solid var(--background-modifier-border);
 89 |     padding: 4px;
 90 |     font-size: var(--font-ui-small);
 91 |     display: flex;
 92 |     flex-direction: column;
 93 |     gap: 4px;
 94 |   }
 95 | 
 96 |   div:last-child {
 97 |     border-right: 0;
 98 |   }
 99 | 
100 |   .weekend {
101 |     background-color: var(--background-primary-alt);
102 |   }
103 | </style>
104 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/Ellipsis.svelte:
--------------------------------------------------------------------------------
 1 | <span>
 2 |   <slot />
 3 | </span>
 4 | 
 5 | <style>
 6 |   span {
 7 |     overflow: hidden;
 8 |     white-space: nowrap;
 9 |     text-overflow: ellipsis;
10 |   }
11 | </style>
12 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/Event.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Checkbox } from "obsidian-svelte";
 3 |   import ColorPill from "./ColorPill.svelte";
 4 |   import Ellipsis from "./Ellipsis.svelte";
 5 | 
 6 |   /**
 7 |    * Specifies an optional color of the calendar event.
 8 |    */
 9 |   export let color: string | null = null;
10 | 
11 |   /**
12 |    * Specifies an optional checkbox.
13 |    *
14 |    * If undefined, no field has been set.
15 |    * If null, field has been set, but note doesn't have the property.
16 |    */
17 |   export let checked: boolean | null | undefined = undefined;
18 | 
19 |   /**
20 |    * Internal hover state.
21 |    */
22 |   let hover: boolean = false;
23 | </script>
24 | 
25 | <div on:mouseenter={() => (hover = true)} on:mouseleave={() => (hover = false)}>
26 |   {#if color}
27 |     <ColorPill {color} />
28 |   {/if}
29 | 
30 |   {#if checked !== undefined && checked !== null}
31 |     <Checkbox bind:checked on:check />
32 |   {:else if checked === null && hover}
33 |     <Checkbox checked={false} on:check />
34 |   {/if}
35 | 
36 |   <Ellipsis>
37 |     <slot />
38 |   </Ellipsis>
39 | </div>
40 | 
41 | <style>
42 |   div {
43 |     display: flex;
44 |     gap: 4px;
45 |     align-items: center;
46 |     padding: 0.2em 0.4em;
47 |     font-size: var(--font-ui-smaller);
48 |     border: 1px solid var(--background-modifier-border);
49 |     background-color: var(--background-primary);
50 |     border-radius: var(--radius-s);
51 |   }
52 | 
53 |   /* Remove default checkbox margin. */
54 |   div :global(input[type="checkbox"]) {
55 |     margin: 0;
56 |   }
57 | </style>
58 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/EventList.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   // import { InternalLink } from "obsidian-svelte";
  3 |   import InternalLink from "src/ui/components/InternalLink.svelte";
  4 |   import { getDisplayName } from "src/ui/views/Board/components/Board/boardHelpers";
  5 |   import Event from "./Event.svelte";
  6 |   import { dndzone } from "svelte-dnd-action";
  7 |   import { app } from "src/lib/stores/obsidian";
  8 |   import type {
  9 |     DataRecord,
 10 |     DataValue,
 11 |     Optional,
 12 |   } from "src/lib/dataframe/dataframe";
 13 |   import { getRecordColorContext, handleHoverLink } from "src/ui/views/helpers";
 14 |   import { settings } from "src/lib/stores/settings";
 15 | 
 16 |   export let records: DataRecord[];
 17 |   export let checkField: string | undefined;
 18 | 
 19 |   export let onRecordClick: (record: DataRecord) => void;
 20 |   export let onRecordCheck: (record: DataRecord, checked: boolean) => void;
 21 |   export let onRecordChange: (record: DataRecord) => void;
 22 | 
 23 |   function asOptionalBoolean(value: Optional<DataValue>): Optional<boolean> {
 24 |     if (typeof value === "boolean") {
 25 |       return value;
 26 |     }
 27 |     return null;
 28 |   }
 29 | 
 30 |   const flipDurationMs = 200;
 31 | 
 32 |   function handleDndConsider(e: CustomEvent<DndEvent<DataRecord>>) {
 33 |     records = e.detail.items;
 34 |   }
 35 | 
 36 |   function handleDndFinalize(e: CustomEvent<DndEvent<DataRecord>>) {
 37 |     records = e.detail.items;
 38 |     records.forEach(onRecordChange);
 39 |   }
 40 | 
 41 |   const getRecordColor = getRecordColorContext.get();
 42 | </script>
 43 | 
 44 | <div
 45 |   use:dndzone={{
 46 |     type: "entries",
 47 |     items: records,
 48 |     flipDurationMs,
 49 |     dropTargetStyle: {
 50 |       outline: "none",
 51 |       borderRadius: "5px",
 52 |       background: "hsla(var(--interactive-accent-hsl), 0.3)",
 53 |     },
 54 |   }}
 55 |   on:consider={handleDndConsider}
 56 |   on:finalize={handleDndFinalize}
 57 | >
 58 |   {#each records as record (record.id)}
 59 |     {#if getDisplayName(record.id)}
 60 |       <Event
 61 |         color={getRecordColor(record)}
 62 |         checked={checkField !== undefined
 63 |           ? asOptionalBoolean(record.values[checkField])
 64 |           : undefined}
 65 |         on:check={({ detail: checked }) => onRecordCheck(record, checked)}
 66 |       >
 67 |         <InternalLink
 68 |           linkText={record.id}
 69 |           sourcePath={record.id}
 70 |           resolved
 71 |           tooltip={getDisplayName(record.id)}
 72 |           on:open={({ detail: { linkText, sourcePath, newLeaf } }) => {
 73 |             let openEditor =
 74 |               $settings.preferences.linkBehavior == "open-editor";
 75 | 
 76 |             if (newLeaf) {
 77 |               openEditor = !openEditor;
 78 |             }
 79 | 
 80 |             if (openEditor) {
 81 |               onRecordClick(record);
 82 |             } else {
 83 |               $app.workspace.openLinkText(linkText, sourcePath, true);
 84 |             }
 85 |           }}
 86 |           on:hover={({ detail: { event, sourcePath } }) => {
 87 |             handleHoverLink(event, sourcePath);
 88 |           }}
 89 |         >
 90 |           {getDisplayName(record.id)}
 91 |         </InternalLink>
 92 |       </Event>
 93 |     {/if}
 94 |   {/each}
 95 | </div>
 96 | 
 97 | <style>
 98 |   div {
 99 |     display: flex;
100 |     flex-direction: column;
101 |     gap: 2px;
102 |     height: 100%;
103 |     width: 100%;
104 |     overflow-y: auto;
105 |   }
106 | </style>
107 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/Week.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let height: number;
 3 | </script>
 4 | 
 5 | <div style:height={height + "%"}>
 6 |   <slot />
 7 | </div>
 8 | 
 9 | <style>
10 |   div {
11 |     display: flex;
12 |     border-bottom: 1px solid var(--background-modifier-border);
13 |     min-height: 100px;
14 |   }
15 | 
16 |   div:last-child {
17 |     border-bottom: 0;
18 |   }
19 | </style>
20 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/WeekHeader.svelte:
--------------------------------------------------------------------------------
 1 | <div>
 2 |   <slot />
 3 | </div>
 4 | 
 5 | <style>
 6 |   div {
 7 |     display: flex;
 8 |   }
 9 | </style>
10 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Calendar/Weekday.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let weekend: boolean = false;
 3 |   export let width: number;
 4 | </script>
 5 | 
 6 | <div class:weekend style:width={width + "%"}>
 7 |   <slot />
 8 | </div>
 9 | 
10 | <style>
11 |   div {
12 |     width: calc(100% / 7);
13 |     border-right: 1px solid var(--background-modifier-border);
14 |     padding: 4px;
15 |     padding-bottom: 0;
16 |     text-align: center;
17 |     font-size: var(--font-ui-small);
18 |     font-weight: 500;
19 |     color: var(--text-muted);
20 |   }
21 | 
22 |   .weekend {
23 |     background-color: var(--background-primary-alt);
24 |   }
25 | </style>
26 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/components/Navigation/Navigation.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { i18n } from "src/lib/stores/i18n";
 3 |   import { Button, IconButton } from "obsidian-svelte";
 4 | 
 5 |   export let onNext: () => void;
 6 |   export let onPrevious: () => void;
 7 |   export let onToday: () => void;
 8 | </script>
 9 | 
10 | <div>
11 |   <IconButton icon="chevron-left" onClick={onPrevious} />
12 |   <Button on:click={onToday}>{$i18n.t("views.calendar.today")}</Button>
13 |   <IconButton icon="chevron-right" onClick={onNext} />
14 | </div>
15 | 
16 | <style>
17 |   div {
18 |     display: flex;
19 |     gap: 4px;
20 |     align-items: center;
21 |   }
22 | </style>
23 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/index.ts:
--------------------------------------------------------------------------------
1 | export { CalendarView } from "./calendarView";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Calendar/types.ts:
--------------------------------------------------------------------------------
1 | import type { CalendarInterval } from "./calendar";
2 | 
3 | export interface CalendarConfig {
4 |   readonly interval?: CalendarInterval;
5 |   readonly dateField?: string;
6 |   readonly checkField?: string;
7 | }
8 | 


--------------------------------------------------------------------------------
/src/ui/views/Developer/DeveloperView.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { Notice, TFile } from "obsidian";
  3 |   import {
  4 |     Autocomplete,
  5 |     Button,
  6 |     Callout,
  7 |     Card,
  8 |     Checkbox,
  9 |     ColorInput,
 10 |     DateInput,
 11 |     FileAutocomplete,
 12 |     Icon,
 13 |     IconButton,
 14 |     InternalLink,
 15 |     Link,
 16 |     Loading,
 17 |     Menu,
 18 |     MenuItem,
 19 |     NumberInput,
 20 |     Popover,
 21 |     Select,
 22 |     SettingItem,
 23 |     Slider,
 24 |     Suggestion,
 25 |     SuggestionItem,
 26 |     Switch,
 27 |     Tag,
 28 |     TextInput,
 29 |     Typography,
 30 |   } from "obsidian-svelte";
 31 | 
 32 |   import { HorizontalGroup } from "src/ui/components/HorizontalGroup";
 33 |   import { ViewContent, ViewLayout } from "src/ui/components/Layout";
 34 |   import { getNotesInFolder } from "src/lib/obsidian";
 35 |   import { app } from "src/lib/stores/obsidian";
 36 | 
 37 |   let btn1: HTMLButtonElement;
 38 |   let btn1Open = false;
 39 | 
 40 |   let btn2: HTMLButtonElement;
 41 |   let btn2Open = false;
 42 | 
 43 |   let btn3: HTMLButtonElement;
 44 |   let btn3Open = false;
 45 | 
 46 |   let textValue = "Text";
 47 |   let numberValue = 10;
 48 | </script>
 49 | 
 50 | <ViewLayout>
 51 |   <ViewContent>
 52 |     <Typography variant="h2">Inputs</Typography>
 53 | 
 54 |     <Card>
 55 |       <Typography variant="h3">Buttons</Typography>
 56 | 
 57 |       <div>
 58 |         <Button>Default</Button>
 59 |         <Button variant="primary">Primary</Button>
 60 |         <Button variant="destructive">Destructive</Button>
 61 |         <Button variant="plain">Plain</Button>
 62 |       </div>
 63 |     </Card>
 64 | 
 65 |     <Card>
 66 |       <Typography variant="h3">Toggles</Typography>
 67 | 
 68 |       <SettingItem name="Switch">
 69 |         <Switch checked={false} />
 70 |       </SettingItem>
 71 |       <SettingItem name="Checkbox">
 72 |         <Checkbox checked={false} />
 73 |       </SettingItem>
 74 |     </Card>
 75 | 
 76 |     <Card>
 77 |       <Typography variant="h3">Input</Typography>
 78 | 
 79 |       <SettingItem name="TextInput">
 80 |         <TextInput bind:value={textValue} helperText={textValue} />
 81 |       </SettingItem>
 82 |       <SettingItem name="NumberInput">
 83 |         <NumberInput bind:value={numberValue} helperText={textValue} error />
 84 |       </SettingItem>
 85 |       <SettingItem name="DateInput">
 86 |         <DateInput value={new Date()} />
 87 |       </SettingItem>
 88 |       <SettingItem name="Select">
 89 |         <Select
 90 |           value="bar"
 91 |           options={[
 92 |             { label: "Foo", value: "foo" },
 93 |             { label: "Bar", value: "bar" },
 94 |             { label: "Baz", value: "baz" },
 95 |           ]}
 96 |         />
 97 |       </SettingItem>
 98 |     </Card>
 99 | 
100 |     <Card>
101 |       <SettingItem name="Color">
102 |         <ColorInput value="#ff0000" />
103 |       </SettingItem>
104 |       <SettingItem name="Slider">
105 |         <Slider value={3} min={1} max={30} step={1} />
106 |       </SettingItem>
107 |     </Card>
108 | 
109 |     <Card>
110 |       <Typography variant="h3">Autocomplete</Typography>
111 | 
112 |       <SettingItem name="Autocomplete">
113 |         <Autocomplete
114 |           value=""
115 |           options={[{ label: "Foo", description: "Description" }]}
116 |           on:change={({ detail }) =>
117 |             new Notice(`Autocomplete changed: ${detail}`)}
118 |         />
119 |       </SettingItem>
120 |       <SettingItem name="FileAutocomplete">
121 |         <FileAutocomplete
122 |           value=""
123 |           files={getNotesInFolder($app.vault.getRoot())}
124 |           getLabel={(file) =>
125 |             file instanceof TFile ? file.basename : file.name}
126 |           getDescription={(file) => file.path.split("/").slice(0, -1).join("/")}
127 |           on:change={({ detail }) =>
128 |             new Notice(`FileAutocomplete changed: ${detail}`)}
129 |         />
130 |       </SettingItem>
131 |     </Card>
132 | 
133 |     <Typography variant="h2">Data display</Typography>
134 | 
135 |     <Card>
136 |       <SettingItem name="Tag">
137 |         <Tag>#tag</Tag>
138 |       </SettingItem>
139 |     </Card>
140 | 
141 |     <Card>
142 |       <Typography variant="h3">Popover</Typography>
143 | 
144 |       <HorizontalGroup>
145 |         <button bind:this={btn1} on:click={() => (btn1Open = !btn1Open)}>
146 |           Popover
147 |         </button>
148 |         <Popover
149 |           anchorEl={btn1}
150 |           open={btn1Open}
151 |           placement="auto"
152 |           onClose={() => {}}
153 |         >
154 |           <Button variant="primary">Click me</Button>
155 |         </Popover>
156 | 
157 |         <button bind:this={btn2} on:click={() => (btn2Open = !btn2Open)}>
158 |           Menu
159 |         </button>
160 |         <Menu anchorEl={btn2} open={btn2Open} placement="auto">
161 |           <MenuItem label="Item 1" icon="eye" />
162 |           <MenuItem label="Item 2" icon="eye" checked={true} />
163 |           <MenuItem label="Item 3" checked={false} />
164 |         </Menu>
165 | 
166 |         <button bind:this={btn3} on:click={() => (btn3Open = !btn3Open)}>
167 |           Suggestions
168 |         </button>
169 |         <Suggestion anchorEl={btn3} open={btn3Open} placement="auto">
170 |           <SuggestionItem
171 |             label="Item 1"
172 |             description="A pretty long description"
173 |             selected
174 |           />
175 |           <SuggestionItem label="Item 2" description="Short" />
176 |           <SuggestionItem label="Item 3" />
177 |         </Suggestion>
178 |       </HorizontalGroup>
179 |     </Card>
180 | 
181 |     <Card>
182 |       <Typography variant="h3">Icons</Typography>
183 |       <HorizontalGroup>
184 |         <Icon name="heart" size="xs" />
185 |         <Icon name="heart" size="sm" />
186 |         <Icon name="heart" size="md" />
187 |         <Icon name="heart" size="lg" />
188 |       </HorizontalGroup>
189 |       <HorizontalGroup>
190 |         <IconButton icon="heart" size={"xs"} />
191 |         <IconButton icon="heart" size={"sm"} />
192 |         <IconButton icon="heart" size={"md"} active />
193 |         <IconButton icon="heart" size={"lg"} />
194 |       </HorizontalGroup>
195 |     </Card>
196 | 
197 |     <Card>
198 |       <Typography variant="h3">Links</Typography>
199 | 
200 |       <ul>
201 |         <li><Link href="image.png">Image</Link></li>
202 |         <li><Link href="https://google.com">Google</Link></li>
203 |         <li>
204 |           <InternalLink
205 |             linkText="Untitled 1"
206 |             sourcePath="Untitled.md"
207 |             on:open={({ detail: { linkText, sourcePath, newLeaf } }) => {
208 |               $app.workspace.openLinkText(linkText, sourcePath, newLeaf);
209 |             }}
210 |             resolved={true}>Resolved internal link</InternalLink
211 |           >
212 |         </li>
213 |         <li>
214 |           <InternalLink
215 |             linkText="Untitled 1"
216 |             sourcePath="Untitled.md"
217 |             on:open={({ detail: { linkText, sourcePath, newLeaf } }) => {
218 |               $app.workspace.openLinkText(linkText, sourcePath, newLeaf);
219 |             }}
220 |             resolved={false}>Unresolved internal link</InternalLink
221 |           >
222 |         </li>
223 |       </ul>
224 |     </Card>
225 | 
226 |     <Typography variant="h2">Feedback</Typography>
227 | 
228 |     <Card>
229 |       <Typography variant="h3">Loading</Typography>
230 | 
231 |       <Loading />
232 |     </Card>
233 | 
234 |     <Card>
235 |       <Typography variant="h3">Callout</Typography>
236 | 
237 |       <Callout title="Info" icon="star" variant="info">Lorem ipsum</Callout>
238 |       <Callout title="Danger" icon="alert-circle" variant="danger"
239 |         >Lorem ipsum</Callout
240 |       >
241 |     </Card>
242 |   </ViewContent>
243 | </ViewLayout>
244 | 
245 | <style>
246 |   button {
247 |     display: inline;
248 |     width: auto;
249 |   }
250 | </style>
251 | 


--------------------------------------------------------------------------------
/src/ui/views/Developer/developerView.ts:
--------------------------------------------------------------------------------
 1 | import { ProjectView, type ProjectViewProps } from "src/customViewApi";
 2 | 
 3 | import DeveloperViewSvelte from "./DeveloperView.svelte";
 4 | 
 5 | export class DeveloperView extends ProjectView {
 6 |   view?: DeveloperViewSvelte | null;
 7 | 
 8 |   getViewType(): string {
 9 |     return "developer";
10 |   }
11 |   getDisplayName(): string {
12 |     return "Developer";
13 |   }
14 |   getIcon(): string {
15 |     return "wrench";
16 |   }
17 | 
18 |   async onOpen({ contentEl }: ProjectViewProps) {
19 |     this.view = new DeveloperViewSvelte({
20 |       target: contentEl,
21 |     });
22 |   }
23 | 
24 |   async onClose() {
25 |     this.view?.$destroy();
26 |     this.view = null;
27 |   }
28 | }
29 | 


--------------------------------------------------------------------------------
/src/ui/views/Developer/index.ts:
--------------------------------------------------------------------------------
1 | export { DeveloperView } from "./developerView";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/GalleryOptionsProvider.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { IconButton, Select } from "obsidian-svelte";
 3 |   import { DataFieldType, type DataField } from "src/lib/dataframe/dataframe";
 4 |   import { i18n } from "src/lib/stores/i18n";
 5 |   import { Field } from "src/ui/components/Field";
 6 |   import {
 7 |     ViewContent,
 8 |     ViewHeader,
 9 |     ViewLayout,
10 |     ViewToolbar,
11 |   } from "src/ui/components/Layout";
12 |   import { SwitchSelect } from "../Table/components/SwitchSelect";
13 |   import { fieldIcon, fieldToSelectableValue } from "../helpers";
14 |   import type { GalleryConfig } from "./types";
15 | 
16 |   export let fields: DataField[];
17 |   export let config: GalleryConfig | undefined;
18 |   export let onConfigChange: (config: GalleryConfig) => void;
19 |   export let onSettings: () => void;
20 | 
21 |   $: textFields = fields
22 |     .filter((field) => !field.repeated)
23 |     .filter((field) => field.type === DataFieldType.String);
24 | 
25 |   $: coverField = textFields.find((field) => config?.coverField === field.name);
26 | 
27 |   $: fitStyle = config?.fitStyle ?? "cover";
28 | 
29 |   $: cardWidth = config?.cardWidth ?? 300;
30 | 
31 |   function handleCoverFieldChange(coverField: string) {
32 |     onConfigChange({ ...config, coverField });
33 |   }
34 | 
35 |   function handleFitStyleChange(fitStyle: string) {
36 |     onConfigChange({ ...config, fitStyle });
37 |   }
38 | 
39 |   function handleIncludeFieldChange(field: string, enabled: boolean) {
40 |     const includedFields = new Set(config?.includeFields ?? []);
41 | 
42 |     if (enabled) {
43 |       includedFields.add(field);
44 |     } else {
45 |       includedFields.delete(field);
46 |     }
47 | 
48 |     onConfigChange({ ...config, includeFields: [...includedFields] });
49 |   }
50 | </script>
51 | 
52 | <ViewLayout>
53 |   <ViewHeader>
54 |     <ViewToolbar variant="secondary">
55 |       <svelte:fragment slot="right">
56 |         <Field name={$i18n.t("views.gallery.fields.cover")}>
57 |           <Select
58 |             allowEmpty
59 |             value={coverField?.name ?? ""}
60 |             options={textFields.map(fieldToSelectableValue)}
61 |             placeholder={$i18n.t("views.gallery.fields.none") ?? ""}
62 |             on:change={({ detail }) => handleCoverFieldChange(detail)}
63 |           />
64 |         </Field>
65 |         <Select
66 |           value={config?.fitStyle ?? "cover"}
67 |           options={[
68 |             {
69 |               label: $i18n.t("views.gallery.fit-style.fill"),
70 |               value: "cover",
71 |             },
72 |             {
73 |               label: $i18n.t("views.gallery.fit-style.fit"),
74 |               value: "contain",
75 |             },
76 |           ]}
77 |           on:change={({ detail }) => handleFitStyleChange(detail)}
78 |         />
79 |         <SwitchSelect
80 |           label={$i18n.t("views.gallery.include-fields")}
81 |           items={fields.map((field) => ({
82 |             label: field.name,
83 |             icon: fieldIcon(field),
84 |             value: field.name,
85 |             enabled: !!config?.includeFields?.includes(field.name),
86 |           }))}
87 |           onChange={handleIncludeFieldChange}
88 |         />
89 |         <IconButton icon="settings" onClick={onSettings} />
90 |       </svelte:fragment>
91 |     </ViewToolbar>
92 |   </ViewHeader>
93 |   <ViewContent padding>
94 |     <slot {fitStyle} {coverField} {cardWidth} />
95 |   </ViewContent>
96 | </ViewLayout>
97 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/GalleryView.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   // import { Icon, IconButton, InternalLink, Typography } from "obsidian-svelte";
  3 |   import { Icon, IconButton, Typography } from "obsidian-svelte";
  4 |   import InternalLink from "src/ui/components/InternalLink.svelte";
  5 |   import CardMetadata from "src/ui/components/CardMetadata/CardMetadata.svelte";
  6 |   import ColorItem from "src/ui/components/ColorItem/ColorItem.svelte";
  7 | 
  8 |   import type { DataFrame, DataRecord } from "src/lib/dataframe/dataframe";
  9 |   import { createDataRecord } from "src/lib/dataApi";
 10 |   import { i18n } from "src/lib/stores/i18n";
 11 |   import { app } from "src/lib/stores/obsidian";
 12 |   import type { ViewApi } from "src/lib/viewApi";
 13 |   import CenterBox from "src/ui/modals/components/CenterBox.svelte";
 14 |   import { CreateNoteModal } from "src/ui/modals/createNoteModal";
 15 |   import { EditNoteModal } from "src/ui/modals/editNoteModal";
 16 |   import { getDisplayName } from "../Board/components/Board/boardHelpers";
 17 | 
 18 |   import { Card, CardContent, CardMedia } from "./components/Card";
 19 |   import Grid from "./components/Grid/Grid.svelte";
 20 |   import Image from "./components/Image/Image.svelte";
 21 |   import { GallerySettingsModal } from "./settings/settingsModal";
 22 |   import type { GalleryConfig } from "./types";
 23 |   import type { ProjectDefinition } from "src/settings/settings";
 24 |   import GalleryOptionsProvider from "./GalleryOptionsProvider.svelte";
 25 |   import { getCoverRealPath } from "./gallery";
 26 |   import { settings } from "src/lib/stores/settings";
 27 |   import { handleHoverLink } from "../helpers";
 28 | 
 29 |   export let project: ProjectDefinition;
 30 |   export let frame: DataFrame;
 31 |   export let config: GalleryConfig | undefined;
 32 |   export let onConfigChange: (config: GalleryConfig) => void;
 33 |   export let api: ViewApi;
 34 |   export let getRecordColor: (record: DataRecord) => string | null;
 35 | 
 36 |   $: ({ fields, records } = frame);
 37 | 
 38 |   function handleRecordClick(record: DataRecord) {
 39 |     new EditNoteModal(
 40 |       $app,
 41 |       fields,
 42 |       (record) => api.updateRecord(record, fields),
 43 |       record
 44 |     ).open();
 45 |   }
 46 | 
 47 |   function handleSettings() {
 48 |     new GallerySettingsModal($app, config ?? {}, (value) => {
 49 |       saveConfig(value);
 50 |     }).open();
 51 |   }
 52 | 
 53 |   function saveConfig(cfg: GalleryConfig) {
 54 |     config = cfg;
 55 |     onConfigChange(cfg);
 56 |   }
 57 | </script>
 58 | 
 59 | <GalleryOptionsProvider
 60 |   {fields}
 61 |   {config}
 62 |   onConfigChange={saveConfig}
 63 |   onSettings={handleSettings}
 64 |   let:fitStyle
 65 |   let:coverField
 66 |   let:cardWidth
 67 | >
 68 |   {#if records.length}
 69 |     <Grid {cardWidth}>
 70 |       {#each records as record (record.id)}
 71 |         {@const color = getRecordColor(record)}
 72 |         <Card>
 73 |           <CardMedia
 74 |             on:click={(event) => {
 75 |               let openEditor =
 76 |                 $settings.preferences.linkBehavior == "open-editor";
 77 | 
 78 |               if (event.metaKey || event.ctrlKey) {
 79 |                 openEditor = !openEditor;
 80 |               }
 81 | 
 82 |               if (openEditor) {
 83 |                 handleRecordClick(record);
 84 |               } else {
 85 |                 $app.workspace.openLinkText(record.id, "", true);
 86 |               }
 87 |             }}
 88 |           >
 89 |             {@const coverPath = getCoverRealPath($app, record, coverField)}
 90 | 
 91 |             {#if coverPath}
 92 |               <Image alt="Title" src={coverPath} fit={fitStyle} />
 93 |             {:else}
 94 |               <Icon name="image" size="lg" />
 95 |             {/if}
 96 |           </CardMedia>
 97 |           <CardContent>
 98 |             <ColorItem {color}>
 99 |               <InternalLink
100 |                 slot="header"
101 |                 linkText={record.id}
102 |                 sourcePath={record.id}
103 |                 resolved
104 |                 on:open={({ detail: { linkText, sourcePath, newLeaf } }) => {
105 |                   let openEditor =
106 |                     $settings.preferences.linkBehavior == "open-editor";
107 | 
108 |                   if (newLeaf) {
109 |                     openEditor = !openEditor;
110 |                   }
111 | 
112 |                   if (openEditor) {
113 |                     handleRecordClick(record);
114 |                   } else {
115 |                     $app.workspace.openLinkText(linkText, sourcePath, true);
116 |                   }
117 |                 }}
118 |                 on:hover={({ detail: { event, sourcePath } }) => {
119 |                   handleHoverLink(event, sourcePath);
120 |                 }}
121 |               >
122 |                 {getDisplayName(record.id)}
123 |               </InternalLink>
124 |               <CardMetadata
125 |                 fields={fields.filter(
126 |                   (field) => !!config?.includeFields?.includes(field.name)
127 |                 )}
128 |                 {record}
129 |               />
130 |             </ColorItem>
131 |           </CardContent>
132 |         </Card>
133 |       {/each}
134 |       <IconButton
135 |         icon="plus"
136 |         size="lg"
137 |         onClick={() => {
138 |           new CreateNoteModal($app, project, (name, templatePath, project) => {
139 |             api.addRecord(
140 |               createDataRecord(name, project),
141 |               fields,
142 |               templatePath
143 |             );
144 |           }).open();
145 |         }}
146 |       />
147 |     </Grid>
148 |   {:else}
149 |     <CenterBox>
150 |       <Typography variant="h5">{$i18n.t("views.gallery.empty")}</Typography>
151 |     </CenterBox>
152 |   {/if}
153 | </GalleryOptionsProvider>
154 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/components/Card/Card.svelte:
--------------------------------------------------------------------------------
1 | <div class="projects--gallery--card">
2 |   <slot />
3 | </div>
4 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/components/Card/CardContent.svelte:
--------------------------------------------------------------------------------
1 | <div class="projects--gallery--card__body">
2 |   <slot />
3 | </div>
4 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/components/Card/CardMedia.svelte:
--------------------------------------------------------------------------------
1 | <div class="projects--gallery--card__media" on:keypress on:click>
2 |   <slot />
3 | </div>
4 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/components/Card/index.ts:
--------------------------------------------------------------------------------
1 | export { default as Card } from "./Card.svelte";
2 | export { default as CardContent } from "./CardContent.svelte";
3 | export { default as CardMedia } from "./CardMedia.svelte";
4 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/components/Grid/Grid.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let cardWidth: number;
 3 | </script>
 4 | 
 5 | <section
 6 |   class="projects--gallery--grid"
 7 |   style={`grid-template-columns: repeat(auto-fill, minmax(${cardWidth}px, 1fr));`}
 8 | >
 9 |   <slot />
10 | </section>
11 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/components/Image/Image.svelte:
--------------------------------------------------------------------------------
1 | <script lang="ts">
2 |   export let alt: string;
3 |   export let src: string;
4 |   export let fit: string;
5 | </script>
6 | 
7 | <img {alt} {src} style:object-fit={fit} />
8 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/gallery.ts:
--------------------------------------------------------------------------------
 1 | import {
 2 |   isString,
 3 |   type DataField,
 4 |   type DataRecord,
 5 | } from "src/lib/dataframe/dataframe";
 6 | import { parseObsidianLink } from "./helpers";
 7 | import type { App } from "obsidian";
 8 | 
 9 | export function getCoverRealPath(
10 |   app: App,
11 |   record: DataRecord,
12 |   coverField?: DataField
13 | ) {
14 |   if (!coverField) {
15 |     return null;
16 |   }
17 | 
18 |   const coverPath = record.values[coverField.name];
19 | 
20 |   if (!coverPath) {
21 |     return null;
22 |   }
23 | 
24 |   if (isString(coverPath)) {
25 |     return getResourcePathFromLinkText(app, coverPath);
26 |   }
27 | 
28 |   return null;
29 | }
30 | 
31 | function getResourcePathFromLinkText(app: App, text: string) {
32 |   const linkText = parseObsidianLink(text)?.linkText || text;
33 |   if (linkText.startsWith("http://") || linkText.startsWith("https://")) {
34 |     return linkText;
35 |   }
36 | 
37 |   const file = app.metadataCache.getFirstLinkpathDest(linkText, "");
38 | 
39 |   if (file) {
40 |     if (
41 |       ["png", "jpg", "jpeg", "gif", "bmp", "svg", "webp"].includes(
42 |         file.extension
43 |       )
44 |     ) {
45 |       return app.vault.getResourcePath(file);
46 |     }
47 |   }
48 | 
49 |   return null;
50 | }
51 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/galleryView.ts:
--------------------------------------------------------------------------------
 1 | import {
 2 |   ProjectView,
 3 |   type DataQueryResult,
 4 |   type ProjectViewProps,
 5 | } from "src/customViewApi";
 6 | 
 7 | import GalleryViewSvelte from "./GalleryView.svelte";
 8 | import type { GalleryConfig } from "./types";
 9 | 
10 | export class GalleryView extends ProjectView<GalleryConfig> {
11 |   view?: GalleryViewSvelte | null;
12 |   props?: ProjectViewProps;
13 | 
14 |   getViewType(): string {
15 |     return "gallery";
16 |   }
17 |   getDisplayName(): string {
18 |     return "Gallery";
19 |   }
20 |   getIcon(): string {
21 |     return "layout-grid";
22 |   }
23 | 
24 |   async onData({ data }: DataQueryResult) {
25 |     this.view?.$set({ frame: data });
26 |   }
27 | 
28 |   async onOpen(props: ProjectViewProps<GalleryConfig>) {
29 |     this.view = new GalleryViewSvelte({
30 |       target: props.contentEl,
31 |       props: {
32 |         frame: { fields: [], records: [] },
33 |         api: props.viewApi,
34 |         project: props.project,
35 |         config: props.config,
36 |         onConfigChange: props.saveConfig,
37 |         getRecordColor: props.getRecordColor,
38 |       },
39 |     });
40 |   }
41 | 
42 |   async onClose() {
43 |     this.view?.$destroy();
44 |     this.view = null;
45 |   }
46 | }
47 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/helpers.test.ts:
--------------------------------------------------------------------------------
 1 | import { describe, expect, it } from "@jest/globals";
 2 | import { parseObsidianLink } from "./helpers";
 3 | 
 4 | describe("parseObsidianLink", () => {
 5 |   it("parses non-link", () => {
 6 |     expect(parseObsidianLink("Untitled")).toBeNull();
 7 |   });
 8 | 
 9 |   it("parses simple wiki link", () => {
10 |     expect(parseObsidianLink("[[Untitled]]")).toStrictEqual({
11 |       linkText: "Untitled",
12 |       displayName: "",
13 |     });
14 |   });
15 | 
16 |   it("parses wiki link with display name", () => {
17 |     expect(parseObsidianLink("[[Untitled|Foo]]")).toStrictEqual({
18 |       linkText: "Untitled",
19 |       displayName: "Foo",
20 |     });
21 |   });
22 | 
23 |   it("parses simple wiki link embed", () => {
24 |     expect(parseObsidianLink("![[Untitled]]")).toStrictEqual({
25 |       linkText: "Untitled",
26 |       displayName: "",
27 |     });
28 |   });
29 | 
30 |   it("parses wiki link embed with display name", () => {
31 |     expect(parseObsidianLink("![[Untitled|Foo]]")).toStrictEqual({
32 |       linkText: "Untitled",
33 |       displayName: "Foo",
34 |     });
35 |   });
36 | 
37 |   it("parse simple markdown link", () => {
38 |     expect(parseObsidianLink("[](obsidian-icon.png)")).toStrictEqual({
39 |       linkText: "obsidian-icon.png",
40 |       displayName: "",
41 |     });
42 |   });
43 | 
44 |   it("parse markdown link with display name", () => {
45 |     expect(
46 |       parseObsidianLink("[my awesome cover](obsidian-icon.png)")
47 |     ).toStrictEqual({
48 |       linkText: "obsidian-icon.png",
49 |       displayName: "my awesome cover",
50 |     });
51 |   });
52 | 
53 |   it("parse simple markdown link embed", () => {
54 |     expect(parseObsidianLink("![](obsidian-icon.png)")).toStrictEqual({
55 |       linkText: "obsidian-icon.png",
56 |       displayName: "",
57 |     });
58 |   });
59 | 
60 |   it("parse markdown link embed with display name", () => {
61 |     expect(
62 |       parseObsidianLink("[my awesome cover](obsidian-icon.png)")
63 |     ).toStrictEqual({
64 |       linkText: "obsidian-icon.png",
65 |       displayName: "my awesome cover",
66 |     });
67 |   });
68 | });
69 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/helpers.ts:
--------------------------------------------------------------------------------
 1 | const wikiLinkRegExp = /^\!?\[\[(.*?)(\|(.*?))?\]\]$/;
 2 | const mdLinkRegExp = /^\!?\[([^\[]*)\]\((.*)\)$/;
 3 | 
 4 | export function parseObsidianLink(link: string): {
 5 |   linkText: string;
 6 |   displayName: string;
 7 | } | null {
 8 |   const wikiLink = link.match(wikiLinkRegExp);
 9 |   const mdLink = link.match(mdLinkRegExp);
10 | 
11 |   if (wikiLink) {
12 |     return {
13 |       linkText: wikiLink[1] || "",
14 |       displayName: wikiLink[3] || "",
15 |     };
16 |   } else if (mdLink) {
17 |     return {
18 |       linkText: mdLink[2] || "",
19 |       displayName: mdLink[1] || "",
20 |     };
21 |   } else {
22 |     return null;
23 |   }
24 | }
25 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/index.ts:
--------------------------------------------------------------------------------
1 | export { GalleryView } from "./galleryView";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/settings/GallerySettings.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { produce } from "immer";
 3 |   import {
 4 |     SettingItem,
 5 |     NumberInput,
 6 |     ModalLayout,
 7 |     ModalContent,
 8 |   } from "obsidian-svelte";
 9 |   import type { GalleryConfig } from "../types";
10 |   import { i18n } from "src/lib/stores/i18n";
11 | 
12 |   export let config: GalleryConfig;
13 |   export let onSave: (config: GalleryConfig) => void;
14 | 
15 |   let cardWidthValue = config.cardWidth ?? null;
16 | </script>
17 | 
18 | <ModalLayout title={$i18n.t("views.gallery.settings.name")}>
19 |   <ModalContent>
20 |     <SettingItem
21 |       name={$i18n.t("views.gallery.settings.card-width.name")}
22 |       description={$i18n.t("views.gallery.settings.card-width.description")}
23 |     >
24 |       <NumberInput
25 |         placeholder="300"
26 |         bind:value={cardWidthValue}
27 |         on:blur={() =>
28 |           onSave(
29 |             produce(config, (draft) => {
30 |               const { cardWidth, ...rest } = draft;
31 |               if (!cardWidthValue) {
32 |                 return rest;
33 |               }
34 |               return { ...rest, cardWidth: cardWidthValue };
35 |             })
36 |           )}
37 |       />
38 |     </SettingItem>
39 |   </ModalContent>
40 | </ModalLayout>
41 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/settings/settingsModal.ts:
--------------------------------------------------------------------------------
 1 | import { App, Modal } from "obsidian";
 2 | import type { GalleryConfig } from "../types";
 3 | import GallerySettings from "./GallerySettings.svelte";
 4 | 
 5 | export class GallerySettingsModal extends Modal {
 6 |   component?: GallerySettings;
 7 | 
 8 |   constructor(
 9 |     app: App,
10 |     readonly config: GalleryConfig,
11 |     readonly onSave: (config: GalleryConfig) => void
12 |   ) {
13 |     super(app);
14 |   }
15 | 
16 |   onOpen(): void {
17 |     const { contentEl } = this;
18 | 
19 |     this.component = new GallerySettings({
20 |       target: contentEl,
21 |       props: {
22 |         config: this.config,
23 |         onSave: (config: GalleryConfig) => {
24 |           this.onSave(config);
25 |         },
26 |       },
27 |     });
28 |   }
29 | 
30 |   onClose(): void {
31 |     if (this.component) {
32 |       this.component.$destroy();
33 |     }
34 |   }
35 | }
36 | 


--------------------------------------------------------------------------------
/src/ui/views/Gallery/types.ts:
--------------------------------------------------------------------------------
1 | export interface GalleryConfig {
2 |   readonly coverField?: string;
3 |   readonly fitStyle?: string;
4 |   readonly cardWidth?: number;
5 |   readonly includeFields?: string[];
6 | }
7 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/TableView.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import {
  3 |     DataFieldType,
  4 |     type DataFrame,
  5 |     type DataRecord,
  6 |   } from "src/lib/dataframe/dataframe";
  7 |   import { createDataRecord } from "src/lib/dataApi";
  8 |   import { i18n } from "src/lib/stores/i18n";
  9 |   import { app } from "src/lib/stores/obsidian";
 10 |   import type { ViewApi } from "src/lib/viewApi";
 11 |   import { CreateNoteModal } from "src/ui/modals/createNoteModal";
 12 |   import { EditNoteModal } from "src/ui/modals/editNoteModal";
 13 | 
 14 |   import type {
 15 |     GridColDef,
 16 |     GridRowProps,
 17 |   } from "./components/DataGrid/dataGrid";
 18 |   import DataGrid from "./components/DataGrid/DataGrid.svelte";
 19 |   import SwitchSelect from "./components/SwitchSelect/SwitchSelect.svelte";
 20 |   import type { TableConfig } from "./types";
 21 | 
 22 |   import {
 23 |     ViewContent,
 24 |     ViewHeader,
 25 |     ViewLayout,
 26 |     ViewToolbar,
 27 |   } from "src/ui/components/Layout";
 28 |   import { ConfigureFieldModal } from "src/ui/modals/configureField";
 29 |   import { settings } from "src/lib/stores/settings";
 30 |   import { sortFields } from "./helpers";
 31 |   import type { ProjectDefinition } from "src/settings/settings";
 32 |   import { CreateFieldModal } from "src/ui/modals/createFieldModal";
 33 |   import { Icon } from "obsidian-svelte";
 34 |   import { TextLabel } from "./components/DataGrid/GridCell/GridTextCell";
 35 |   import { fieldIcon } from "../helpers";
 36 | 
 37 |   export let project: ProjectDefinition;
 38 |   export let frame: DataFrame;
 39 |   export let readonly: boolean;
 40 |   export let api: ViewApi;
 41 |   export let getRecordColor: (record: DataRecord) => string | null;
 42 | 
 43 |   export let config: TableConfig | undefined;
 44 |   export let onConfigChange: (cfg: TableConfig) => void;
 45 | 
 46 |   let buttonEl: HTMLElement;
 47 | 
 48 |   function saveConfig(cfg: TableConfig) {
 49 |     config = cfg;
 50 |     onConfigChange(cfg);
 51 |   }
 52 | 
 53 |   export function getFieldTypeByName(name: string): DataFieldType | undefined {
 54 |     const field = fields.find((field) => name === field.name);
 55 |     return field?.type;
 56 |   }
 57 | 
 58 |   $: ({ fields, records } = frame);
 59 | 
 60 |   $: {
 61 |     fields = sortFields(fields, config?.orderFields ?? []);
 62 |   }
 63 | 
 64 |   $: fieldConfig = config?.fieldConfig ?? {};
 65 | 
 66 |   $: columns = fields
 67 |     .filter((field) => {
 68 |       // Table only supports repeated fields of type string.
 69 |       if (field.repeated) {
 70 |         return field.type === DataFieldType.String;
 71 |       }
 72 |       return true;
 73 |     })
 74 |     .map<GridColDef>((field) => {
 75 |       const colDef: GridColDef = {
 76 |         ...field,
 77 |         field: field.name,
 78 |         width: fieldConfig[field.name]?.width ?? 180,
 79 |         hide: fieldConfig[field.name]?.hide ?? false,
 80 |         pinned: fieldConfig[field.name]?.pinned ?? false,
 81 |         editable: !field.derived,
 82 |       };
 83 | 
 84 |       return colDef;
 85 |     });
 86 | 
 87 |   $: rows = records.map<GridRowProps>(({ id, values }) => ({
 88 |     rowId: id,
 89 |     row: values,
 90 |   }));
 91 | 
 92 |   function handleVisibilityChange(field: string, enabled: boolean) {
 93 |     saveConfig({
 94 |       ...config,
 95 |       fieldConfig: {
 96 |         ...fieldConfig,
 97 |         [field]: {
 98 |           ...fieldConfig[field],
 99 |           hide: !enabled,
100 |         },
101 |       },
102 |     });
103 |   }
104 | 
105 |   function handleWidthChange(field: string, width: number) {
106 |     saveConfig({
107 |       ...config,
108 |       fieldConfig: {
109 |         ...fieldConfig,
110 |         [field]: {
111 |           ...fieldConfig[field],
112 |           width,
113 |         },
114 |       },
115 |     });
116 |   }
117 | 
118 |   function handleColumnPin(field: string) {
119 |     saveConfig({
120 |       ...config,
121 |       fieldConfig: {
122 |         ...fieldConfig,
123 |         [field]: {
124 |           ...fieldConfig[field],
125 |           pinned: !fieldConfig[field]?.pinned,
126 |         },
127 |       },
128 |     });
129 |   }
130 | 
131 |   function handleColumnAppend() {
132 |     new CreateFieldModal($app, fields, async (field, value) => {
133 |       await api.addField(field, value);
134 | 
135 |       buttonEl.scrollIntoView({
136 |         block: "nearest",
137 |         inline: "nearest",
138 |         behavior: "smooth",
139 |       });
140 | 
141 |       if (field.typeConfig) {
142 |         settings.updateFieldConfig(
143 |           project.id,
144 |           field.name,
145 |           fields.map((f) => f.name),
146 |           field.typeConfig
147 |         );
148 |       }
149 |     }).open();
150 |   }
151 | 
152 |   function handleColumnInsert(anchor: string, direction: number) {
153 |     new CreateFieldModal($app, fields, async (field, value) => {
154 |       const position = fields.findIndex((f) => anchor === f.name) + direction;
155 |       await api.addField(field, value, position);
156 | 
157 |       if (field.typeConfig) {
158 |         settings.updateFieldConfig(
159 |           project.id,
160 |           field.name,
161 |           fields.map((f) => f.name),
162 |           field.typeConfig
163 |         );
164 |       }
165 | 
166 |       const orderFields = fields
167 |         .map((f) => f.name)
168 |         .filter((f) => f !== field.name);
169 |       if (position >= 0) orderFields.splice(position, 0, field.name);
170 | 
171 |       saveConfig({
172 |         ...config,
173 |         orderFields: orderFields,
174 |       });
175 |     }).open();
176 |   }
177 | 
178 |   function deleteColumnConfig(fieldName: string) {
179 |     const orderFields = fields
180 |       .map((field) => field.name)
181 |       .filter((f) => f !== fieldName);
182 | 
183 |     const tableFields = { ...config?.fieldConfig };
184 |     delete tableFields[fieldName];
185 | 
186 |     saveConfig({
187 |       ...config,
188 |       orderFields: orderFields,
189 |       fieldConfig: { ...tableFields },
190 |     });
191 |   }
192 | 
193 |   // update view-level config (width, hidden, order etc.) on column rename
194 |   function renameColumnConfig(newName: string, oldName: string) {
195 |     const orderFields = fields.map((field) => field.name);
196 |     const idx = orderFields.findIndex((f) => f === oldName);
197 |     if (idx >= 0) orderFields.splice(idx, 1, newName);
198 | 
199 |     const tableFields = { ...config?.fieldConfig };
200 | 
201 |     if (config?.fieldConfig) {
202 |       const oldConfig = config?.fieldConfig[oldName];
203 |       if (oldConfig) {
204 |         tableFields[newName] = oldConfig;
205 |         delete tableFields[oldName];
206 |       }
207 |     }
208 | 
209 |     saveConfig({
210 |       ...config,
211 |       orderFields: orderFields,
212 |       fieldConfig: { ...tableFields },
213 |     });
214 |   }
215 | </script>
216 | 
217 | <ViewLayout>
218 |   <ViewHeader>
219 |     <ViewToolbar variant="secondary">
220 |       <svelte:fragment slot="right">
221 |         <SwitchSelect
222 |           label={$i18n.t("views.table.hide-fields")}
223 |           items={columns.map((column) => ({
224 |             label: column.field,
225 |             icon: fieldIcon(column),
226 |             value: column.field,
227 |             enabled: !column.hide,
228 |           }))}
229 |           onChange={handleVisibilityChange}
230 |         />
231 |       </svelte:fragment>
232 |     </ViewToolbar>
233 |   </ViewHeader>
234 |   <ViewContent>
235 |     <div>
236 |       <DataGrid
237 |         {columns}
238 |         {rows}
239 |         {readonly}
240 |         colorModel={(rowId) => {
241 |           const record = frame.records.find((record) => record.id === rowId);
242 |           if (record) {
243 |             return getRecordColor(record);
244 |           }
245 |           return null;
246 |         }}
247 |         onRowAdd={() => {
248 |           new CreateNoteModal($app, project, (name, templatePath, project) => {
249 |             api.addRecord(
250 |               createDataRecord(name, project),
251 |               fields,
252 |               templatePath
253 |             );
254 |           }).open();
255 |         }}
256 |         onRowEdit={(id, values) => {
257 |           new EditNoteModal(
258 |             $app,
259 |             fields,
260 |             (record) => {
261 |               api.updateRecord(record, fields);
262 |             },
263 |             {
264 |               id,
265 |               values,
266 |             }
267 |           ).open();
268 |         }}
269 |         onRowDelete={(id) => api.deleteRecord(id)}
270 |         onColumnHide={(column) => handleVisibilityChange(column.field, false)}
271 |         onColumnPin={(column) => handleColumnPin(column.field)}
272 |         onColumnConfigure={(column, editable) => {
273 |           const field = fields.find((field) => field.name === column.field);
274 | 
275 |           if (field) {
276 |             new ConfigureFieldModal(
277 |               $app,
278 |               $i18n.t("modals.field.configure.title"),
279 |               field,
280 |               fields.filter((f) => f.name !== field.name),
281 |               editable,
282 |               (field) => {
283 |                 if (editable) {
284 |                   if (field.name !== column.field) {
285 |                     api.updateField(field, column.field);
286 |                     renameColumnConfig(field.name, column.field);
287 |                     settings.deleteFieldConfig(project.id, column.field);
288 |                   } else {
289 |                     api.updateField(field);
290 |                   }
291 |                 }
292 | 
293 |                 if (field.typeConfig) {
294 |                   settings.updateFieldConfig(
295 |                     project.id,
296 |                     field.name,
297 |                     fields.map((f) => f.name),
298 |                     field.typeConfig
299 |                   );
300 |                 }
301 | 
302 |                 saveConfig({ ...config });
303 |               }
304 |             ).open();
305 |           }
306 |         }}
307 |         onColumnInsert={handleColumnInsert}
308 |         onColumnDelete={(field) => {
309 |           api.deleteField(field);
310 |           settings.deleteFieldConfig(project.id, field);
311 |           deleteColumnConfig(field);
312 |         }}
313 |         onRowChange={(rowId, row) => {
314 |           api.updateRecord({ id: rowId, values: row }, fields);
315 |         }}
316 |         onColumnResize={handleWidthChange}
317 |         onColumnSort={(fields) => {
318 |           saveConfig({
319 |             ...config,
320 |             orderFields: fields,
321 |           });
322 |         }}
323 |       />
324 |       {#if !readonly}
325 |         <span
326 |           tabindex="-1"
327 |           bind:this={buttonEl}
328 |           on:click={handleColumnAppend}
329 |           on:keydown={(evt) => {
330 |             if (evt.key === "Enter") handleColumnAppend();
331 |           }}
332 |         >
333 |           <Icon name="plus" />
334 |           <TextLabel value={$i18n.t("components.data-grid.column.add")} />
335 |         </span>
336 |       {/if}
337 |     </div>
338 |   </ViewContent>
339 | </ViewLayout>
340 | 
341 | <style>
342 |   div {
343 |     display: flex;
344 |   }
345 | 
346 |   /* styled as a column header*/
347 |   span {
348 |     position: sticky;
349 |     top: 0;
350 |     z-index: 6;
351 | 
352 |     display: flex;
353 |     align-items: center;
354 |     justify-content: space-between;
355 |     text-align: center;
356 | 
357 |     background-color: var(--background-primary-alt);
358 |     border-right: 1px solid var(--background-modifier-border);
359 |     border-left-color: var(--background-modifier-border);
360 |     border-bottom: 1px solid var(--background-modifier-border);
361 | 
362 |     height: fit-content;
363 |     min-height: 30px;
364 | 
365 |     color: var(--text-muted);
366 |     font-weight: 500;
367 |     padding: 0 12px;
368 | 
369 |     cursor: default;
370 |   }
371 | 
372 |   span:focus {
373 |     border-radius: var(--button-radius);
374 |     box-shadow: 0 0 0 2px var(--background-modifier-border-focus);
375 |   }
376 | 
377 |   span:hover {
378 |     color: var(--text-normal);
379 |   }
380 | </style>
381 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/DataGrid.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { produce } from "immer";
  3 | 
  4 |   import { Menu } from "obsidian";
  5 | 
  6 |   import { i18n } from "src/lib/stores/i18n";
  7 | 
  8 |   import GridRow from "./GridRow.svelte";
  9 | 
 10 |   import type {
 11 |     GridColDef,
 12 |     GridRowId,
 13 |     GridRowModel,
 14 |     GridRowProps,
 15 |   } from "./dataGrid";
 16 |   import GridCellGroup from "./GridCellGroup.svelte";
 17 |   import { Button, Icon } from "obsidian-svelte";
 18 |   import GridHeader from "./GridHeader/GridHeader.svelte";
 19 | 
 20 |   export let columns: GridColDef[];
 21 |   export let rows: GridRowProps[];
 22 |   export let colorModel: (rowId: string) => string | null;
 23 | 
 24 |   export let readonly: boolean;
 25 | 
 26 |   export let onColumnResize: (field: string, width: number) => void;
 27 |   export let onColumnSort: (fields: string[]) => void;
 28 |   export let onRowAdd: () => void;
 29 |   export let onRowChange: (rowId: GridRowId, row: GridRowModel) => void;
 30 |   export let onColumnConfigure: (column: GridColDef, editable: boolean) => void;
 31 |   export let onColumnDelete: (field: string) => void;
 32 |   export let onColumnHide: (column: GridColDef) => void;
 33 |   export let onColumnPin: (column: GridColDef) => void;
 34 |   export let onColumnInsert: (
 35 |     anchor: string, // anchor field name
 36 |     direction: number // 1 for right, 0 for left insert (keep the place and push back others)
 37 |   ) => void;
 38 |   export let onRowDelete: (rowId: GridRowId) => void;
 39 |   export let onRowEdit: (rowId: GridRowId, row: GridRowModel) => void;
 40 | 
 41 |   $: t = $i18n.t;
 42 | 
 43 |   $: visibleColumns = columns.filter((column) => !column.hide);
 44 |   $: sortedColumns = visibleColumns;
 45 | 
 46 |   // [column, row]
 47 |   let activeCell: [number, number] = [3, 3];
 48 | 
 49 |   function createColumnMenu(column: GridColDef) {
 50 |     const editable = !!column.editable && !readonly;
 51 | 
 52 |     const menu = new Menu();
 53 | 
 54 |     menu.addItem((item) => {
 55 |       item
 56 |         .setTitle(t("components.data-grid.column.configure"))
 57 |         .setIcon("settings")
 58 |         .onClick(() => onColumnConfigure(column, editable));
 59 |     });
 60 | 
 61 |     if (!readonly) {
 62 |       menu.addItem((item) => {
 63 |         item
 64 |           .setTitle(t("components.data-grid.column.insert-left"))
 65 |           .setIcon("arrow-left")
 66 |           .onClick(() => {
 67 |             onColumnInsert(column.field, 0);
 68 |           });
 69 |       });
 70 | 
 71 |       menu.addItem((item) => {
 72 |         item
 73 |           .setTitle(t("components.data-grid.column.insert-right"))
 74 |           .setIcon("arrow-right")
 75 |           .onClick(() => {
 76 |             onColumnInsert(column.field, 1);
 77 |           });
 78 |       });
 79 |     }
 80 | 
 81 |     menu.addSeparator();
 82 | 
 83 |     menu.addItem((item) => {
 84 |       item
 85 |         .setTitle(
 86 |           column.pinned
 87 |             ? t("components.data-grid.column.unpin")
 88 |             : t("components.data-grid.column.pin")
 89 |         )
 90 |         .setIcon(column.pinned ? "pin-off" : "pin")
 91 |         .onClick(() => onColumnPin(column));
 92 |     });
 93 | 
 94 |     menu.addItem((item) => {
 95 |       item
 96 |         .setTitle(t("components.data-grid.column.hide"))
 97 |         .setIcon("eye-off")
 98 |         .onClick(() => {
 99 |           onColumnHide(column);
100 |         });
101 |     });
102 | 
103 |     if (editable) {
104 |       menu.addItem((item) => {
105 |         item
106 |           .setTitle(t("components.data-grid.column.delete"))
107 |           .setIcon("trash")
108 |           .setWarning(true)
109 |           .onClick(() => onColumnDelete(column.field));
110 |       });
111 |     }
112 | 
113 |     return menu;
114 |   }
115 | 
116 |   function createRowMenu(rowId: GridRowId, row: GridRowModel) {
117 |     const menu = new Menu();
118 | 
119 |     menu.addItem((item) => {
120 |       item
121 |         .setTitle(t("components.data-grid.row.edit"))
122 |         .setIcon("edit")
123 |         .onClick(() => onRowEdit(rowId, row));
124 |     });
125 | 
126 |     if (!readonly) {
127 |       menu.addSeparator();
128 | 
129 |       menu.addItem((item) => {
130 |         item
131 |           .setTitle(t("components.data-grid.row.delete"))
132 |           .setIcon("trash")
133 |           .setWarning(true)
134 |           .onClick(() => onRowDelete(rowId));
135 |       });
136 |     }
137 | 
138 |     return menu;
139 |   }
140 | 
141 |   function createCellMenu(
142 |     rowId: GridRowId,
143 |     row: GridRowModel,
144 |     column: GridColDef
145 |   ) {
146 |     const menu = new Menu();
147 | 
148 |     if (column.editable) {
149 |       menu.addItem((item) => {
150 |         item
151 |           .setTitle(t("components.data-grid.cell.clear"))
152 |           .setIcon("x")
153 |           .onClick(() => {
154 |             onRowChange(
155 |               rowId,
156 |               produce(row, (draft) => {
157 |                 draft[column.field] = undefined;
158 |                 return draft;
159 |               })
160 |             );
161 |           });
162 |       });
163 |     }
164 | 
165 |     return menu;
166 |   }
167 | 
168 |   function handleColumnOrder(columns: GridColDef[]) {
169 |     onColumnSort(columns.map((col) => col.field));
170 |   }
171 | 
172 |   const clamp = (num: number, min: number, max: number) =>
173 |     Math.min(Math.max(num, min), max);
174 | </script>
175 | 
176 | <div
177 |   role="grid"
178 |   aria-colcount={sortedColumns.length + 1}
179 |   aria-rowcount={rows.length + 2}
180 | >
181 |   <GridHeader
182 |     columns={sortedColumns
183 |       .filter((col) => !col.hide)
184 |       // svelte-dnd-action needs an `id` property.
185 |       .map((col) => ({ ...col, id: col.field }))}
186 |     onResize={(name, width) => {
187 |       columns = columns.map((column) =>
188 |         column.field === name ? { ...column, width } : column
189 |       );
190 |     }}
191 |     onFinalizeResize={(name, width) => {
192 |       onColumnResize(name, width);
193 |     }}
194 |     onColumnMenu={(field) => createColumnMenu(field)}
195 |     onColumnOrder={handleColumnOrder}
196 |   />
197 |   {#each rows as { rowId, row }, i (rowId)}
198 |     <GridRow
199 |       columns={sortedColumns}
200 |       index={i + 2}
201 |       {rowId}
202 |       {row}
203 |       {activeCell}
204 |       {onRowChange}
205 |       color={colorModel(rowId)}
206 |       onRowMenu={(rowId, row) => createRowMenu(rowId, row)}
207 |       onCellMenu={(rowId, column) => createCellMenu(rowId, row, column)}
208 |       on:navigate={({ detail: navinfo }) => {
209 |         const colOffset = 1;
210 |         const rowOffset = 3;
211 | 
212 |         const minColIdx = 1 + colOffset;
213 |         const maxColIdx = sortedColumns.length + colOffset;
214 | 
215 |         const minRowIdx = 1 + rowOffset;
216 |         const maxRowIdx = rows.length + rowOffset;
217 | 
218 |         const [colIdx, rowIdx, wrap] = navinfo;
219 | 
220 |         const wrapPrev =
221 |           wrap && colIdx < minColIdx && !(rowIdx - 1 < minRowIdx);
222 |         const wrapNext =
223 |           wrap && colIdx > maxColIdx && !(rowIdx + 1 > maxRowIdx);
224 | 
225 |         if (wrapPrev) {
226 |           activeCell = [maxColIdx, rowIdx - 1];
227 |         } else if (wrapNext) {
228 |           activeCell = [minColIdx, rowIdx + 1];
229 |         } else {
230 |           activeCell = [
231 |             clamp(colIdx, minColIdx, maxColIdx),
232 |             clamp(rowIdx, minRowIdx, maxRowIdx),
233 |           ];
234 |         }
235 |       }}
236 |     />
237 |   {/each}
238 |   <GridCellGroup index={rows.length + 2} footer>
239 |     <span
240 |       class="width-provider"
241 |       style={`width: ${60 + (sortedColumns[0]?.width ?? 0)}`}
242 |     >
243 |       <span class="focus-provider">
244 |         <Button variant="plain" on:click={() => onRowAdd()}>
245 |           <Icon name="plus" />
246 |           {t("components.data-grid.row.add")}
247 |         </Button>
248 |       </span>
249 |     </span>
250 |   </GridCellGroup>
251 | </div>
252 | 
253 | <style>
254 |   div {
255 |     display: inline-block;
256 |   }
257 | 
258 |   .width-provider {
259 |     padding: 4px;
260 |     position: sticky;
261 |     left: 0;
262 |   }
263 | 
264 |   .focus-provider {
265 |     display: inline-flex;
266 |     border-radius: var(--button-radius);
267 |   }
268 | 
269 |   .focus-provider:focus-within {
270 |     box-shadow: 0 0 0 2px var(--background-modifier-border-focus);
271 |   }
272 | </style>
273 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridBooleanCell/GridBooleanCell.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { isBoolean, type Optional } from "src/lib/dataframe/dataframe";
 3 |   import { Switch } from "obsidian-svelte";
 4 |   import { GridCell } from "..";
 5 |   import type { GridColDef } from "../../dataGrid";
 6 | 
 7 |   export let value: Optional<boolean>;
 8 |   export let onChange: (value: boolean) => void;
 9 |   export let column: GridColDef;
10 |   export let rowindex: number;
11 |   export let colindex: number;
12 |   export let selected: boolean;
13 | </script>
14 | 
15 | <GridCell {selected} {rowindex} {colindex} {column} on:mousedown on:navigate>
16 |   <svelte:fragment slot="read">
17 |     {#if isBoolean(value)}
18 |       <Switch
19 |         checked={value}
20 |         on:check={({ detail: checked }) => onChange(checked)}
21 |         disabled={!column.editable}
22 |       />
23 |     {/if}
24 |   </svelte:fragment>
25 |   <Switch
26 |     slot="edit"
27 |     checked={value ?? false}
28 |     on:check={({ detail: checked }) => onChange(checked)}
29 |   />
30 | </GridCell>
31 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridBooleanCell/index.ts:
--------------------------------------------------------------------------------
1 | export { default as GridBooleanCell } from "./GridBooleanCell.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridCell.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import { useClickOutside } from "obsidian-svelte";
  3 |   import { createEventDispatcher } from "svelte";
  4 |   import type { GridColDef } from "../dataGrid";
  5 | 
  6 |   import Resizer from "./Resizer.svelte";
  7 | 
  8 |   export let selected: boolean = false;
  9 |   export let edit: boolean = false;
 10 |   export let resizable: boolean = false;
 11 |   export let onResize: (width: number) => void = () => {};
 12 |   export let onFinalizeResize: (width: number) => void = () => {};
 13 |   export let column: Partial<GridColDef>;
 14 |   export let rowindex: number;
 15 |   export let colindex: number;
 16 |   export let columnHeader: boolean = false;
 17 |   export let rowHeader: boolean = false;
 18 |   export let onEditChange: (value: boolean) => void = (value: boolean) => {
 19 |     edit = value;
 20 |   };
 21 |   export let color: string | null = null;
 22 |   export let onCopy: () => void = () => {};
 23 |   export let onCut: () => void = () => {};
 24 |   export let onPaste: () => void = () => {};
 25 | 
 26 |   const dispatch = createEventDispatcher<{
 27 |     navigate: [number, number, boolean?];
 28 |   }>();
 29 | 
 30 |   let hover: boolean = false;
 31 | 
 32 |   let ref: HTMLDivElement;
 33 | 
 34 |   $: if (selected && ref) {
 35 |     ref.focus();
 36 |     ref.scrollIntoView({
 37 |       block: "nearest",
 38 |       inline: "nearest",
 39 |     });
 40 |   }
 41 | 
 42 |   function handleClick() {
 43 |     if (!column.header && !columnHeader && !rowHeader) {
 44 |       selected = true;
 45 |     }
 46 |   }
 47 |   function handleDoubleClick() {
 48 |     if (!column.header && !columnHeader && !rowHeader && column.editable) {
 49 |       onEditChange(true);
 50 |     }
 51 |   }
 52 |   function handleKeyDown(event: KeyboardEvent) {
 53 |     if (event.metaKey || event.ctrlKey) {
 54 |       switch (event.key) {
 55 |         case "c":
 56 |           onCopy();
 57 |           break;
 58 |         case "x":
 59 |           onCut();
 60 |           break;
 61 |         case "v":
 62 |           onPaste();
 63 |           break;
 64 |       }
 65 |     }
 66 |     switch (event.key) {
 67 |       case "Enter":
 68 |         if (edit) {
 69 |           onEditChange(false);
 70 |           ref.focus();
 71 |         } else {
 72 |           if (column.editable) onEditChange(true);
 73 |         }
 74 |         break;
 75 |       case "Escape":
 76 |         onEditChange(false);
 77 |         ref.focus();
 78 |         break;
 79 |       case "ArrowLeft":
 80 |         if (!edit) {
 81 |           dispatch("navigate", [colindex - 1, rowindex]);
 82 |           event.preventDefault();
 83 |         }
 84 |         break;
 85 |       case "ArrowRight":
 86 |         if (!edit) {
 87 |           dispatch("navigate", [colindex + 1, rowindex]);
 88 |           event.preventDefault();
 89 |         }
 90 |         break;
 91 |       case "ArrowUp":
 92 |         if (!edit) {
 93 |           dispatch("navigate", [colindex, rowindex - 1]);
 94 |           event.preventDefault();
 95 |         }
 96 |         break;
 97 |       case "ArrowDown":
 98 |         if (!edit) {
 99 |           dispatch("navigate", [colindex, rowindex + 1]);
100 |           event.preventDefault();
101 |         }
102 |         break;
103 |       case "Tab":
104 |         if (event.shiftKey) {
105 |           dispatch("navigate", [colindex - 1, rowindex, true]);
106 |         } else {
107 |           dispatch("navigate", [colindex + 1, rowindex, true]);
108 |         }
109 |         event.preventDefault();
110 |         break;
111 |     }
112 |   }
113 | 
114 |   function handleBlur(event: FocusEvent) {
115 |     hover = false;
116 | 
117 |     if (
118 |       event.currentTarget instanceof HTMLDivElement &&
119 |       event.relatedTarget instanceof HTMLElement &&
120 |       !event.currentTarget.contains(event.relatedTarget)
121 |     ) {
122 |       selected = false;
123 |       onEditChange(false);
124 |     }
125 |   }
126 | 
127 |   function role() {
128 |     if (columnHeader) {
129 |       return "columnheader";
130 |     } else if (rowHeader) {
131 |       return "rowheader";
132 |     } else {
133 |       return "gridcell";
134 |     }
135 |   }
136 | </script>
137 | 
138 | {#if rowHeader}
139 |   <div
140 |     bind:this={ref}
141 |     role={role()}
142 |     class:rowHeader
143 |     style={`width: ${column.width}px`}
144 |     on:mouseenter={() => (hover = true)}
145 |     on:mouseleave={() => (hover = false)}
146 |     on:mousedown
147 |   >
148 |     {#if $$slots.hover && hover}
149 |       <slot name="hover" />
150 |     {:else}
151 |       <slot name="read" />
152 |     {/if}
153 | 
154 |     <span
155 |       style="background-color: {color
156 |         ? color
157 |         : 'transparent'}; width: 5px; border-radius: 9999px; position: absolute; right: 4px; height: calc(100% - 8px);"
158 |     />
159 |   </div>
160 | {:else}
161 |   <div
162 |     bind:this={ref}
163 |     role={role()}
164 |     aria-selected={rowHeader || columnHeader ? undefined : selected}
165 |     aria-colindex={colindex}
166 |     class:header={column.header}
167 |     class:selected
168 |     class:rowHeader
169 |     class:columnHeader
170 |     class:pinned={column.pinned}
171 |     style={`width: ${column.width}px`}
172 |     tabindex={!columnHeader && !rowHeader ? 1 : undefined}
173 |     on:click={handleClick}
174 |     on:dblclick={handleDoubleClick}
175 |     on:mousedown
176 |     on:mouseenter={() => (hover = true)}
177 |     on:mouseleave={() => (hover = false)}
178 |     on:focus={() => {
179 |       hover = true;
180 |       selected = true;
181 |     }}
182 |     on:blur={handleBlur}
183 |     on:keydown={handleKeyDown}
184 |     use:useClickOutside={() => {
185 |       onEditChange(false);
186 |       selected = false;
187 |     }}
188 |   >
189 |     {#if $$slots.edit && edit}
190 |       {#if column.editable}
191 |         <slot name="edit" />
192 |       {:else}
193 |         <slot name="read" />
194 |       {/if}
195 |     {:else if $$slots.selected && selected}
196 |       <slot name="selected" />
197 |     {:else if $$slots.hover && hover}
198 |       <slot name="hover" />
199 |     {:else}
200 |       <slot name="read" />
201 |     {/if}
202 | 
203 |     {#if resizable}
204 |       <Resizer
205 |         width={column.width ?? 180}
206 |         min={100}
207 |         onChange={onResize}
208 |         onFinalize={onFinalizeResize}
209 |       />
210 |     {/if}
211 |   </div>
212 | {/if}
213 | 
214 | <style>
215 |   div {
216 |     display: flex;
217 |     flex-direction: row;
218 |     align-items: center;
219 |     justify-content: center;
220 | 
221 |     background-color: var(--background-primary);
222 |     border-right: 1px solid var(--background-modifier-border);
223 |     border-left-color: var(--background-modifier-border);
224 |     border-bottom: 1px solid var(--background-modifier-border);
225 | 
226 |     width: 100%;
227 |     min-height: 30px;
228 |   }
229 | 
230 |   .selected {
231 |     box-shadow: 0 0 0 2px inset var(--interactive-accent);
232 |     border-radius: var(--radius-s);
233 |     padding: 0;
234 |   }
235 | 
236 |   .columnHeader {
237 |     background-color: var(--background-primary-alt);
238 |     font-weight: 500;
239 |     text-align: center;
240 |     justify-content: space-between;
241 |     padding: 0 4px;
242 |   }
243 | 
244 |   .header {
245 |     background-color: var(--background-primary-alt);
246 |     position: sticky;
247 |     left: 60px;
248 |   }
249 | 
250 |   .rowHeader {
251 |     left: 0px;
252 |     justify-content: center;
253 |     z-index: 5;
254 |     background-color: var(--background-primary-alt);
255 |     font-weight: 500;
256 |     padding: 3px;
257 |     gap: 4px;
258 |     position: sticky;
259 |   }
260 | 
261 |   .pinned {
262 |     left: 60px;
263 |     background-color: var(--background-primary-alt);
264 |     position: sticky;
265 |     border-right: 1px solid var(--background-modifier-border-focus);
266 |     z-index: 4;
267 |   }
268 | </style>
269 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridDateCell/GridDateCell.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   // import { DateInput } from "obsidian-svelte";
 3 |   import { isDate } from "src/lib/dataframe/dataframe";
 4 |   import DateInput from "src/ui/components/DateInput.svelte";
 5 |   import type { Optional } from "src/lib/dataframe/dataframe";
 6 |   import dayjs from "dayjs";
 7 | 
 8 |   import { GridCell } from "..";
 9 |   import { TextLabel } from "..";
10 |   import type { GridColDef } from "../../dataGrid";
11 | 
12 |   export let value: Optional<Date>;
13 |   let cachedValue: Optional<Date> = value; // store the proposing value
14 |   export let onChange: (value: Optional<Date>) => void;
15 |   export let column: GridColDef;
16 |   export let rowindex: number;
17 |   export let colindex: number;
18 |   export let selected: boolean;
19 | 
20 |   let edit = false;
21 | </script>
22 | 
23 | <GridCell
24 |   {selected}
25 |   {rowindex}
26 |   {colindex}
27 |   {edit}
28 |   onEditChange={(mode) => {
29 |     edit = mode;
30 |   }}
31 |   {column}
32 |   on:mousedown
33 |   on:navigate
34 |   onCopy={() => {
35 |     if (value) {
36 |       navigator.clipboard.writeText(
37 |         new Intl.DateTimeFormat("default", {
38 |           year: "numeric",
39 |           month: "numeric",
40 |           day: "numeric",
41 |         }).format(value)
42 |       );
43 |     }
44 |   }}
45 | >
46 |   <svelte:fragment slot="read">
47 |     {#if value}
48 |       <TextLabel
49 |         value={new Intl.DateTimeFormat("default", {
50 |           year: "numeric",
51 |           month: "numeric",
52 |           day: "numeric",
53 |         }).format(value)}
54 |       />
55 |     {/if}
56 |   </svelte:fragment>
57 |   <svelte:fragment slot="edit">
58 |     <DateInput
59 |       value={value ?? null}
60 |       on:change={({ detail }) => (cachedValue = detail)}
61 |       on:blur={() => {
62 |         edit = false;
63 |         if (!cachedValue || !isDate(value)) {
64 |           onChange(cachedValue);
65 |           return;
66 |         }
67 |         const cachedDate = dayjs(cachedValue);
68 |         const newDatetime = dayjs(value)
69 |           .set("year", cachedDate.year())
70 |           .set("month", cachedDate.month())
71 |           .set("date", cachedDate.date());
72 |         onChange(newDatetime.toDate());
73 |       }}
74 |       embed
75 |     />
76 |   </svelte:fragment>
77 | </GridCell>
78 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridDateCell/index.ts:
--------------------------------------------------------------------------------
1 | export { default as GridDateCell } from "./GridDateCell.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridDatetimeCell/GridDatetimeCell.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import DatetimeInput from "src/ui/components/DatetimeInput.svelte";
 3 |   // import { DatetimeInput } from "obsidian-svelte";
 4 |   import type { Optional } from "src/lib/dataframe/dataframe";
 5 | 
 6 |   import { GridCell } from "..";
 7 |   import { TextLabel } from "..";
 8 |   import type { GridColDef } from "../../dataGrid";
 9 | 
10 |   export let value: Optional<Date>;
11 |   let cachedValue: Optional<Date> = value; // store the proposing value
12 |   export let onChange: (value: Optional<Date>) => void;
13 |   export let column: GridColDef;
14 |   export let rowindex: number;
15 |   export let colindex: number;
16 |   export let selected: boolean;
17 | 
18 |   let edit = false;
19 | </script>
20 | 
21 | <GridCell
22 |   {selected}
23 |   {rowindex}
24 |   {colindex}
25 |   {edit}
26 |   onEditChange={(mode) => {
27 |     edit = mode;
28 |   }}
29 |   {column}
30 |   on:mousedown
31 |   on:navigate
32 |   onCopy={() => {
33 |     if (value) {
34 |       navigator.clipboard.writeText(
35 |         new Intl.DateTimeFormat("default", {
36 |           year: "numeric",
37 |           month: "numeric",
38 |           day: "numeric",
39 |           hour: "numeric",
40 |           minute: "numeric",
41 |           hour12: false,
42 |         }).format(value)
43 |       );
44 |     }
45 |   }}
46 | >
47 |   <svelte:fragment slot="read">
48 |     {#if value}
49 |       <TextLabel
50 |         value={new Intl.DateTimeFormat("default", {
51 |           year: "numeric",
52 |           month: "numeric",
53 |           day: "numeric",
54 |           hour: "numeric",
55 |           minute: "numeric",
56 |           hour12: false,
57 |         }).format(value)}
58 |       />
59 |     {/if}
60 |   </svelte:fragment>
61 |   <svelte:fragment slot="edit">
62 |     <DatetimeInput
63 |       value={value ?? null}
64 |       on:input={({ detail }) => (cachedValue = detail)}
65 |       on:blur={() => {
66 |         edit = false;
67 |         onChange(cachedValue);
68 |       }}
69 |       embed
70 |     />
71 |   </svelte:fragment>
72 | </GridCell>
73 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridDatetimeCell/index.ts:
--------------------------------------------------------------------------------
1 | export { default as GridDatetimeCell } from "./GridDatetimeCell.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridListCell/GridListCell.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { TagList } from "src/ui/components/TagList";
 3 |   import type { DataValue, Optional } from "src/lib/dataframe/dataframe";
 4 |   import { GridCell } from "..";
 5 |   import type { GridColDef } from "../../dataGrid";
 6 | 
 7 |   export let value: Optional<Optional<DataValue>[]>;
 8 |   export let onChange: (values: Optional<DataValue>[]) => void;
 9 |   export let column: GridColDef;
10 |   export let rowindex: number;
11 |   export let colindex: number;
12 |   export let selected: boolean;
13 | </script>
14 | 
15 | <GridCell {selected} {rowindex} {colindex} {column} on:mousedown on:navigate>
16 |   <TagList
17 |     slot="read"
18 |     edit={false}
19 |     values={value || []}
20 |     richText={column.typeConfig?.richText ?? false}
21 |   />
22 |   <TagList slot="edit" edit={true} values={value || []} {onChange} />
23 | </GridCell>
24 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridListCell/index.ts:
--------------------------------------------------------------------------------
1 | export { default as GridListCell } from "./GridListCell.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridNumberCell/GridNumberCell.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import GridCell from "../GridCell.svelte";
 3 |   import NumberLabel from "./NumberLabel.svelte";
 4 |   import NumberInput from "./NumberInput.svelte";
 5 |   import { isNumber, type Optional } from "src/lib/dataframe/dataframe";
 6 |   import type { GridColDef } from "../../dataGrid";
 7 | 
 8 |   export let value: Optional<number>;
 9 |   export let onChange: (value: Optional<number>) => void;
10 |   export let column: GridColDef;
11 |   export let rowindex: number;
12 |   export let colindex: number;
13 |   export let selected: boolean;
14 | 
15 |   let edit: boolean = false;
16 | </script>
17 | 
18 | <GridCell
19 |   bind:edit
20 |   bind:selected
21 |   {column}
22 |   on:mousedown
23 |   on:navigate
24 |   {rowindex}
25 |   {colindex}
26 |   onCopy={() => {
27 |     navigator.clipboard.writeText(value?.toString() || "");
28 |   }}
29 |   onCut={() => {
30 |     navigator.clipboard.writeText(value?.toString() || "");
31 |     onChange(undefined);
32 |   }}
33 |   onPaste={async () => {
34 |     onChange(parseFloat(await navigator.clipboard.readText()));
35 |   }}
36 | >
37 |   <svelte:fragment slot="read">
38 |     {#if isNumber(value)}
39 |       <NumberLabel {value} />
40 |     {/if}
41 |   </svelte:fragment>
42 |   <NumberInput
43 |     slot="edit"
44 |     on:blur={(event) => {
45 |       if (
46 |         event.currentTarget instanceof HTMLInputElement &&
47 |         event.relatedTarget instanceof HTMLDivElement &&
48 |         !event.relatedTarget.contains(event.currentTarget)
49 |       ) {
50 |         selected = false;
51 |         edit = false;
52 |       }
53 |     }}
54 |     value={value ?? 0}
55 |     onChange={(value) => {
56 |       onChange(value);
57 |     }}
58 |   />
59 | </GridCell>
60 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridNumberCell/NumberInput.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { onMount } from "svelte/internal";
 3 | 
 4 |   export let value: number;
 5 |   export let onChange: (value: number) => void;
 6 | 
 7 |   let ref: HTMLInputElement;
 8 | 
 9 |   function handleInput(event: Event) {
10 |     if (event.currentTarget instanceof HTMLInputElement) {
11 |       value = event.currentTarget.valueAsNumber;
12 |       onChange(value);
13 |     }
14 |   }
15 | 
16 |   function handleKeyup(event: Event) {
17 |     if (event.currentTarget instanceof HTMLInputElement) {
18 |       value = event.currentTarget.valueAsNumber;
19 |     }
20 |   }
21 | 
22 |   onMount(() => {
23 |     ref.focus();
24 |   });
25 | </script>
26 | 
27 | <input
28 |   tabindex={-1}
29 |   type="number"
30 |   bind:this={ref}
31 |   {value}
32 |   on:change={handleInput}
33 |   on:keypress={handleKeyup}
34 |   on:blur
35 | />
36 | 
37 | <style>
38 |   input {
39 |     all: unset;
40 |     background-color: var(--background-primary);
41 |     box-sizing: border-box;
42 |     width: 100%;
43 |     padding: 6px;
44 |     font-weight: 400;
45 |     font-family: var(--font-default);
46 |     color: var(--text-normal);
47 |     text-align: right;
48 |   }
49 | 
50 |   input:focus {
51 |     box-shadow: none !important;
52 |   }
53 | 
54 |   input:hover {
55 |     background-color: transparent;
56 |   }
57 | </style>
58 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridNumberCell/NumberLabel.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let value: number;
 3 | </script>
 4 | 
 5 | <div>
 6 |   {new Intl.NumberFormat().format(value)}
 7 | </div>
 8 | 
 9 | <style>
10 |   div {
11 |     width: 100%;
12 |     padding: 6px;
13 |     text-align: right;
14 |   }
15 | </style>
16 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridNumberCell/index.ts:
--------------------------------------------------------------------------------
1 | export { default as GridNumberCell } from "./GridNumberCell.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridTextCell/GridTextCell.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { GridCell } from "..";
 3 |   import type { GridColDef } from "../../dataGrid";
 4 | 
 5 |   import { Autocomplete, TextInput } from "obsidian-svelte";
 6 |   import TextLabel from "./TextLabel.svelte";
 7 |   import type { Optional } from "src/lib/dataframe/dataframe";
 8 | 
 9 |   export let value: Optional<string>;
10 |   export let onChange: (value: Optional<string>) => void;
11 |   export let column: GridColDef;
12 |   export let rowindex: number;
13 |   export let colindex: number;
14 |   export let selected: boolean;
15 | 
16 |   let edit: boolean = false;
17 | 
18 |   $: options =
19 |     column.typeConfig?.options?.map((option) => ({
20 |       label: option,
21 |       description: "",
22 |     })) ?? [];
23 | </script>
24 | 
25 | <GridCell
26 |   bind:edit
27 |   bind:selected
28 |   {column}
29 |   {rowindex}
30 |   {colindex}
31 |   on:mousedown
32 |   on:navigate
33 |   onCopy={() => {
34 |     navigator.clipboard.writeText(value?.toString() || "");
35 |   }}
36 |   onCut={() => {
37 |     navigator.clipboard.writeText(value?.toString() || "");
38 |     onChange(undefined);
39 |   }}
40 |   onPaste={async () => {
41 |     onChange(await navigator.clipboard.readText());
42 |   }}
43 | >
44 |   <TextLabel
45 |     slot="read"
46 |     richText={column.typeConfig?.richText ?? false}
47 |     value={value || ""}
48 |   />
49 |   <svelte:fragment slot="edit">
50 |     {#if options.length > 0}
51 |       <Autocomplete
52 |         value={value || ""}
53 |         {options}
54 |         embed
55 |         autoFocus
56 |         on:change={({ detail }) => (value = detail)}
57 |         on:blur={({ detail: event }) => {
58 |           if (
59 |             event.currentTarget instanceof HTMLInputElement &&
60 |             event.relatedTarget instanceof HTMLDivElement &&
61 |             !event.relatedTarget.contains(event.currentTarget)
62 |           ) {
63 |             selected = false;
64 |             edit = false;
65 |           }
66 | 
67 |           onChange(value);
68 |         }}
69 |       />
70 |     {:else}
71 |       <TextInput
72 |         autoFocus
73 |         value={value || ""}
74 |         embed
75 |         width="100%"
76 |         on:input={({ detail }) => (value = detail)}
77 |         on:blur={(event) => {
78 |           if (
79 |             event.currentTarget instanceof HTMLInputElement &&
80 |             event.relatedTarget instanceof HTMLDivElement &&
81 |             !event.relatedTarget.contains(event.currentTarget)
82 |           ) {
83 |             selected = false;
84 |             edit = false;
85 |           }
86 | 
87 |           onChange(value);
88 |         }}
89 |       />
90 |     {/if}
91 |   </svelte:fragment>
92 | </GridCell>
93 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridTextCell/TextLabel.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { MarkdownRenderer } from "obsidian";
 3 |   import { app, view } from "src/lib/stores/obsidian";
 4 |   import { handleHoverLink } from "src/ui/views/helpers";
 5 |   import { getContext } from "svelte";
 6 | 
 7 |   export let value: string;
 8 |   export let richText: boolean = false;
 9 | 
10 |   const sourcePath = getContext<string>("sourcePath") ?? "";
11 | 
12 |   function useMarkdown(node: HTMLElement, value: string) {
13 |     MarkdownRenderer.render($app, value, node, sourcePath, $view);
14 | 
15 |     return {
16 |       update(newValue: string) {
17 |         node.empty();
18 |         MarkdownRenderer.render($app, newValue, node, sourcePath, $view);
19 |       },
20 |     };
21 |   }
22 | 
23 |   function handleClick(event: MouseEvent) {
24 |     const targetEl = event.target as HTMLElement;
25 |     const closestAnchor =
26 |       targetEl.tagName === "A" ? targetEl : targetEl.closest("a");
27 | 
28 |     if (!closestAnchor) {
29 |       return;
30 |     }
31 | 
32 |     event.stopPropagation();
33 | 
34 |     if (closestAnchor.hasClass("internal-link")) {
35 |       event.preventDefault();
36 | 
37 |       const href = closestAnchor.getAttr("href");
38 |       const newLeaf = event.button === 1 || event.ctrlKey || event.metaKey;
39 | 
40 |       if (href) {
41 |         $app.workspace.openLinkText(href, sourcePath, newLeaf);
42 |       }
43 |     }
44 |   }
45 | </script>
46 | 
47 | {#if richText}
48 |   <div
49 |     use:useMarkdown={value}
50 |     on:click={handleClick}
51 |     on:mouseover={(event) => {
52 |       handleHoverLink(event, sourcePath);
53 |     }}
54 |     on:focus
55 |     on:keypress
56 |   />
57 | {:else}
58 |   <div>
59 |     {value}
60 |   </div>
61 | {/if}
62 | 
63 | <style>
64 |   div {
65 |     padding: 6px;
66 |     width: 100%;
67 |     white-space: nowrap;
68 |     overflow: hidden;
69 |     text-overflow: ellipsis;
70 |   }
71 | 
72 |   div :global(p:first-child) {
73 |     margin-top: 0;
74 |   }
75 | 
76 |   div :global(p:last-child) {
77 |     margin-bottom: 0;
78 |   }
79 | </style>
80 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridTextCell/index.ts:
--------------------------------------------------------------------------------
1 | export { default as GridTextCell } from "./GridTextCell.svelte";
2 | export { default as TextLabel } from "./TextLabel.svelte";
3 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/GridTypedCell.svelte:
--------------------------------------------------------------------------------
  1 | <script lang="ts">
  2 |   import {
  3 |     isOptionalBoolean,
  4 |     isOptionalDate,
  5 |     isOptionalList,
  6 |     isOptionalNumber,
  7 |     isOptionalString,
  8 |     type Optional,
  9 |     type DataValue,
 10 |   } from "src/lib/dataframe/dataframe";
 11 | 
 12 |   import GridCell from "./GridCell.svelte";
 13 | 
 14 |   import type { GridColDef } from "../dataGrid";
 15 |   import { GridBooleanCell } from "./GridBooleanCell";
 16 |   import { GridDateCell } from "./GridDateCell";
 17 |   import { GridDatetimeCell } from "./GridDatetimeCell";
 18 |   import { GridNumberCell } from "./GridNumberCell";
 19 |   import { GridTextCell } from "./GridTextCell";
 20 |   import { GridListCell } from "./GridListCell";
 21 | 
 22 |   export let value: Optional<DataValue>;
 23 |   export let onChange: (value: Optional<DataValue>) => void;
 24 |   export let column: GridColDef;
 25 |   export let rowindex: number;
 26 |   export let colindex: number;
 27 |   export let selected: boolean;
 28 | </script>
 29 | 
 30 | {#if column.repeated && isOptionalList(value)}
 31 |   <GridListCell
 32 |     {selected}
 33 |     {rowindex}
 34 |     {colindex}
 35 |     {value}
 36 |     {onChange}
 37 |     {column}
 38 |     on:mousedown
 39 |     on:navigate
 40 |   />
 41 | {:else if column.type === "string" && isOptionalString(value)}
 42 |   <GridTextCell
 43 |     {selected}
 44 |     {rowindex}
 45 |     {colindex}
 46 |     {value}
 47 |     {onChange}
 48 |     {column}
 49 |     on:mousedown
 50 |     on:navigate
 51 |   />
 52 | {:else if column.type === "boolean" && isOptionalBoolean(value)}
 53 |   <GridBooleanCell
 54 |     {selected}
 55 |     {rowindex}
 56 |     {colindex}
 57 |     {value}
 58 |     {onChange}
 59 |     {column}
 60 |     on:mousedown
 61 |     on:navigate
 62 |   />
 63 | {:else if column.type === "number" && isOptionalNumber(value)}
 64 |   <GridNumberCell
 65 |     {selected}
 66 |     {rowindex}
 67 |     {colindex}
 68 |     {value}
 69 |     {onChange}
 70 |     {column}
 71 |     on:mousedown
 72 |     on:navigate
 73 |   />
 74 | {:else if column.type === "date" && isOptionalDate(value)}
 75 |   {#if column.typeConfig?.time}
 76 |     <GridDatetimeCell
 77 |       {selected}
 78 |       {rowindex}
 79 |       {colindex}
 80 |       {value}
 81 |       {onChange}
 82 |       {column}
 83 |       on:mousedown
 84 |       on:navigate
 85 |     />
 86 |   {:else}
 87 |     <GridDateCell
 88 |       {selected}
 89 |       {rowindex}
 90 |       {colindex}
 91 |       {value}
 92 |       {onChange}
 93 |       {column}
 94 |       on:mousedown
 95 |       on:navigate
 96 |     />
 97 |   {/if}
 98 | {:else}
 99 |   <GridCell
100 |     {rowindex}
101 |     {selected}
102 |     {colindex}
103 |     {column}
104 |     on:mousedown
105 |     on:navigate
106 |   />
107 | {/if}
108 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/Resizer.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let width: number;
 3 |   export let onChange: (width: number) => void;
 4 |   export let onFinalize: (width: number) => void;
 5 |   export let min: number;
 6 | 
 7 |   let start: number | null;
 8 |   let initial: number | null;
 9 | 
10 |   function startResize(event: MouseEvent) {
11 |     // Unless we stop propagation, resizing will also drag the column.
12 |     event.stopPropagation();
13 | 
14 |     start = event.pageX;
15 |     initial = width;
16 |   }
17 | 
18 |   function stopResize(event: MouseEvent) {
19 |     if (start && initial) {
20 |       const delta = event.pageX - start;
21 |       const newWidth = initial + delta;
22 | 
23 |       if (newWidth >= min) {
24 |         onFinalize(width);
25 |       }
26 |     }
27 | 
28 |     start = null;
29 |     initial = null;
30 |   }
31 | 
32 |   function resize(event: MouseEvent) {
33 |     if (start && initial) {
34 |       const delta = event.pageX - start;
35 |       const newWidth = initial + delta;
36 | 
37 |       if (newWidth >= min) {
38 |         onChange(newWidth);
39 |       }
40 |     }
41 |   }
42 | </script>
43 | 
44 | <svelte:window on:mouseup={stopResize} on:mousemove={resize} />
45 | 
46 | <span class="handle" class:visible={start} on:mousedown={startResize} />
47 | 
48 | <style>
49 |   .handle {
50 |     position: absolute;
51 |     right: -3px;
52 |     width: 6px;
53 |     min-width: 6px;
54 |     height: 100%;
55 |     border-radius: 1px;
56 |     z-index: 1;
57 |   }
58 |   .handle:hover {
59 |     background-color: var(--interactive-accent);
60 |     cursor: ew-resize;
61 |   }
62 |   .visible {
63 |     background-color: var(--interactive-accent);
64 |     cursor: ew-resize;
65 |   }
66 | </style>
67 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCell/index.ts:
--------------------------------------------------------------------------------
1 | export { default as GridCell } from "./GridCell.svelte";
2 | export { default as GridTypedCell } from "./GridTypedCell.svelte";
3 | export { default as TextLabel } from "./GridTextCell/TextLabel.svelte";
4 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridCellGroup.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   export let index: number;
 3 |   export let header: boolean = false;
 4 |   export let footer: boolean = false;
 5 | </script>
 6 | 
 7 | <div role="row" aria-rowindex={index} class:header class:footer>
 8 |   <slot />
 9 | </div>
10 | 
11 | <style>
12 |   div {
13 |     display: flex;
14 |   }
15 | 
16 |   .header {
17 |     position: sticky;
18 |     top: 0;
19 |     z-index: 10;
20 |   }
21 | 
22 |   .footer {
23 |     position: sticky;
24 |     bottom: 0;
25 |     z-index: 10;
26 | 
27 |     background-color: var(--background-primary-alt);
28 |     border-bottom: 1px solid var(--background-modifier-border);
29 |   }
30 | </style>
31 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridHeader/GridColumnHeader.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import type { Menu } from "obsidian";
 3 |   import { Icon, IconButton } from "obsidian-svelte";
 4 |   import { fieldIcon, fieldDisplayText } from "src/ui/views/helpers";
 5 |   import type { GridColDef } from "../dataGrid";
 6 |   import { TextLabel } from "../GridCell";
 7 | 
 8 |   type GridColDefWithId = GridColDef & { readonly id: string };
 9 | 
10 |   export let column: GridColDefWithId;
11 |   export let colindex: number;
12 | 
13 |   export let onColumnMenu: (column: GridColDef) => Menu;
14 | 
15 |   function handleFieldClick(column: GridColDef): (event: MouseEvent) => void {
16 |     return (event: MouseEvent) => {
17 |       onColumnMenu(column).showAtMouseEvent(event);
18 |     };
19 |   }
20 | </script>
21 | 
22 | <div
23 |   role="columnheader"
24 |   aria-colindex={colindex}
25 |   style:width={`${column.width}px`}
26 |   class:pinned={column.pinned}
27 | >
28 |   <Icon name={fieldIcon(column)} tooltip={fieldDisplayText(column)} />
29 | 
30 |   <TextLabel value={column.field} />
31 | 
32 |   <IconButton
33 |     size="sm"
34 |     icon="vertical-three-dots"
35 |     onClick={handleFieldClick(column)}
36 |   />
37 | </div>
38 | 
39 | <style>
40 |   div {
41 |     position: sticky;
42 | 
43 |     display: flex;
44 |     align-items: center;
45 |     justify-content: space-between;
46 |     text-align: center;
47 | 
48 |     background-color: var(--background-primary-alt);
49 |     border-right: 1px solid var(--background-modifier-border);
50 |     border-left-color: var(--background-modifier-border);
51 |     border-bottom: 1px solid var(--background-modifier-border);
52 | 
53 |     width: 100%;
54 |     min-height: 30px;
55 | 
56 |     font-weight: 500;
57 |     padding: 0 4px;
58 | 
59 |     cursor: default;
60 |   }
61 | 
62 |   div.pinned {
63 |     border-right: 1px solid var(--background-modifier-border-focus);
64 |   }
65 | </style>
66 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridHeader/GridHeader.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import type { Menu } from "obsidian";
 3 |   import { GridCell } from "../GridCell";
 4 |   import { dndzone } from "svelte-dnd-action";
 5 |   import { flip } from "svelte/animate";
 6 |   import type { GridColDef } from "../dataGrid";
 7 |   import Resizer from "../GridCell/Resizer.svelte";
 8 |   import GridColumnHeader from "./GridColumnHeader.svelte";
 9 | 
10 |   type GridColDefWithId = GridColDef & { readonly id: string };
11 | 
12 |   export let columns: GridColDefWithId[];
13 |   export let onResize: (name: string, width: number) => void;
14 |   export let onFinalizeResize: (name: string, width: number) => void;
15 |   export let onColumnMenu: (column: GridColDef) => Menu;
16 |   export let onColumnOrder: (columns: GridColDefWithId[]) => void;
17 | 
18 |   const flipDurationMs = 200;
19 | 
20 |   function handleDndConsider(e: CustomEvent<DndEvent<GridColDefWithId>>) {
21 |     columns = e.detail.items;
22 |   }
23 | 
24 |   function handleDndFinalize(e: CustomEvent<DndEvent<GridColDefWithId>>) {
25 |     columns = e.detail.items;
26 |     onColumnOrder(columns);
27 |   }
28 | </script>
29 | 
30 | <div class="flex container">
31 |   <GridCell
32 |     colindex={1}
33 |     rowindex={1}
34 |     column={{ field: "", width: 60, header: true, editable: false }}
35 |     columnHeader
36 |     rowHeader
37 |   />
38 |   <div
39 |     class="flex"
40 |     use:dndzone={{
41 |       items: columns,
42 |       flipDurationMs,
43 |       dropTargetStyle: {
44 |         outline: "none",
45 |         background: "hsla(var(--interactive-accent-hsl), 0.3)",
46 |       },
47 |     }}
48 |     on:consider={handleDndConsider}
49 |     on:finalize={handleDndFinalize}
50 |   >
51 |     {#each columns as column, columnIdx (column.id)}
52 |       <div
53 |         class={`flex relative`}
54 |         animate:flip={{ duration: flipDurationMs }}
55 |         class:pinned={column.pinned}
56 |       >
57 |         <GridColumnHeader {column} {onColumnMenu} colindex={columnIdx} />
58 |         <Resizer
59 |           width={column.width ?? 180}
60 |           min={100}
61 |           onChange={(width) => {
62 |             onResize(column.field, width);
63 |           }}
64 |           onFinalize={(width) => {
65 |             onFinalizeResize(column.field, width);
66 |           }}
67 |         />
68 |       </div>
69 |     {/each}
70 |   </div>
71 | </div>
72 | 
73 | <style>
74 |   div.container {
75 |     position: sticky;
76 |     top: 0;
77 |     z-index: 6;
78 |   }
79 | 
80 |   div.flex {
81 |     display: flex;
82 |   }
83 | 
84 |   div.relative {
85 |     position: relative;
86 |   }
87 | 
88 |   div.pinned {
89 |     left: 60px;
90 |     z-index: 6;
91 |     position: sticky;
92 |   }
93 | </style>
94 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/GridRow.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { produce } from "immer";
 3 |   import type { Menu } from "obsidian";
 4 | 
 5 |   import { GridCell, GridTypedCell } from "./GridCell";
 6 |   import type { DataValue, Optional } from "src/lib/dataframe/dataframe";
 7 |   import GridCellGroup from "./GridCellGroup.svelte";
 8 | 
 9 |   import type { GridColDef, GridRowId, GridRowModel } from "./dataGrid";
10 |   import { menuOnContextMenu } from "src/ui/views/helpers";
11 | 
12 |   import { setContext } from "svelte";
13 | 
14 |   export let rowId: GridRowId;
15 |   export let index: number;
16 |   export let row: GridRowModel;
17 |   export let columns: GridColDef[];
18 |   export let activeCell: [number, number];
19 |   export let color: string | null;
20 | 
21 |   setContext<string>("sourcePath", row["path"]);
22 | 
23 |   export let onRowChange: (rowId: GridRowId, row: GridRowModel) => void;
24 |   export let onRowMenu: (rowId: GridRowId, row: GridRowModel) => Menu;
25 |   export let onCellMenu: (
26 |     rowId: GridRowId,
27 |     column: GridColDef,
28 |     value: Optional<DataValue>
29 |   ) => Menu;
30 | 
31 |   function handleHeaderClick(): (event: MouseEvent) => void {
32 |     return (event: MouseEvent) => {
33 |       if (event.button === 2) {
34 |         menuOnContextMenu(event, onRowMenu(rowId, row));
35 |       }
36 |     };
37 |   }
38 | 
39 |   function handleCellClick(
40 |     column: GridColDef,
41 |     value: Optional<DataValue>
42 |   ): (event: MouseEvent) => void {
43 |     return (event: MouseEvent) => {
44 |       if (event.button === 2) {
45 |         menuOnContextMenu(event, onCellMenu(rowId, column, value));
46 |       }
47 | 
48 |       if (event.target instanceof HTMLTableCellElement) {
49 |         if (event.target.firstChild instanceof HTMLInputElement) {
50 |           event.target.firstChild.focus();
51 |           event.preventDefault();
52 |         }
53 |       }
54 |     };
55 |   }
56 | </script>
57 | 
58 | <GridCellGroup {index}>
59 |   <GridCell
60 |     rowindex={1}
61 |     colindex={1}
62 |     column={{ field: "", header: true, width: 60, editable: false }}
63 |     rowHeader
64 |     on:mousedown={handleHeaderClick()}
65 |     {color}
66 |   >
67 |     <div slot="read" style="text-align: center;">
68 |       {(index - 1).toString()}
69 |     </div>
70 |   </GridCell>
71 | 
72 |   {#each columns as column, i (column.field)}
73 |     <GridTypedCell
74 |       selected={activeCell[0] === i + 2 && activeCell[1] === index + 2}
75 |       rowindex={index + 2}
76 |       colindex={i + 2}
77 |       value={row[column.field]}
78 |       {column}
79 |       onChange={(value) => {
80 |         onRowChange(
81 |           rowId,
82 |           produce(row, (draft) => {
83 |             draft[column.field] = value;
84 |             return draft;
85 |           })
86 |         );
87 |       }}
88 |       on:mousedown={handleCellClick(column, row[column.field])}
89 |       on:navigate
90 |     />
91 |   {/each}
92 | </GridCellGroup>
93 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/dataGrid.ts:
--------------------------------------------------------------------------------
 1 | import type { DataFieldType, DataField } from "src/lib/dataframe/dataframe";
 2 | 
 3 | export type GridValidRowModel = { [key: string]: any };
 4 | export type GridRowModel<R extends GridValidRowModel = GridValidRowModel> = R;
 5 | export type GridColType = DataFieldType;
 6 | 
 7 | export interface GridColDef extends DataField {
 8 |   readonly field: string;
 9 |   readonly width?: number;
10 |   readonly hide?: boolean;
11 |   readonly editable?: boolean;
12 |   readonly header?: boolean;
13 |   readonly pinned?: boolean;
14 | }
15 | 
16 | export type GridRowId = string;
17 | 
18 | export interface GridRowProps {
19 |   readonly rowId: GridRowId;
20 |   readonly row: GridRowModel;
21 | }
22 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/DataGrid/index.ts:
--------------------------------------------------------------------------------
1 | export { default as DataGrid } from "./DataGrid.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/SwitchSelect/SwitchSelect.svelte:
--------------------------------------------------------------------------------
 1 | <script lang="ts">
 2 |   import { Menu, MenuItem } from "obsidian-svelte";
 3 |   interface SwitchItem {
 4 |     readonly label: string;
 5 |     readonly icon?: string;
 6 |     readonly value: string;
 7 |     readonly enabled: boolean;
 8 |   }
 9 | 
10 |   export let items: SwitchItem[];
11 |   export let label: string;
12 |   export let onChange: (value: string, enabled: boolean) => void;
13 | 
14 |   let ref: HTMLDivElement;
15 | 
16 |   let isOpen: boolean = false;
17 | </script>
18 | 
19 | <div
20 |   bind:this={ref}
21 |   class="dropdown"
22 |   on:keypress
23 |   on:click={() => (isOpen = !isOpen)}
24 | >
25 |   {label}
26 | </div>
27 | 
28 | <Menu anchorEl={ref} open={isOpen} onClose={() => (isOpen = false)}>
29 |   {#each items as { label, icon, value, enabled }}
30 |     <MenuItem
31 |       {icon}
32 |       {label}
33 |       checked={enabled}
34 |       on:check={({ detail: checked }) => onChange(value, checked)}
35 |     />
36 |   {/each}
37 | </Menu>
38 | 
39 | <style>
40 |   div {
41 |     align-items: center;
42 |     display: inline-flex;
43 |     text-align: start;
44 |   }
45 | </style>
46 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/components/SwitchSelect/index.ts:
--------------------------------------------------------------------------------
1 | export { default as SwitchSelect } from "./SwitchSelect.svelte";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/helpers.test.ts:
--------------------------------------------------------------------------------
  1 | import { describe, expect, it } from "@jest/globals";
  2 | import {
  3 |   DataFieldType,
  4 |   type DataField,
  5 | } from "../../../lib/dataframe/dataframe";
  6 | import { sortFields } from "./helpers";
  7 | 
  8 | describe("sortFields", () => {
  9 |   it("sort single field", () => {
 10 |     const fields = [
 11 |       {
 12 |         name: "foo",
 13 |         type: DataFieldType.String,
 14 |         repeated: false,
 15 |         identifier: false,
 16 |         derived: false,
 17 |       },
 18 |     ];
 19 |     const order = ["foo"];
 20 | 
 21 |     const sorted = sortFields(fields, order);
 22 | 
 23 |     expect(sorted).toStrictEqual(fields);
 24 |   });
 25 | 
 26 |   it("sort fields where all are specified", () => {
 27 |     const defaultField: Omit<DataField, "name"> = {
 28 |       type: DataFieldType.String,
 29 |       repeated: false,
 30 |       identifier: false,
 31 |       derived: false,
 32 |     };
 33 | 
 34 |     const fields: DataField[] = [
 35 |       { name: "foo", ...defaultField },
 36 |       { name: "bar", ...defaultField },
 37 |       { name: "baz", ...defaultField },
 38 |     ];
 39 | 
 40 |     const want: DataField[] = [
 41 |       { name: "baz", ...defaultField },
 42 |       { name: "bar", ...defaultField },
 43 |       { name: "foo", ...defaultField },
 44 |     ];
 45 | 
 46 |     const order = ["baz", "bar", "foo"];
 47 | 
 48 |     const sorted = sortFields(fields, order);
 49 | 
 50 |     expect(sorted).toStrictEqual(want);
 51 |   });
 52 | 
 53 |   it("sorts unspecified fields last", () => {
 54 |     const defaultField: Omit<DataField, "name"> = {
 55 |       type: DataFieldType.String,
 56 |       repeated: false,
 57 |       identifier: false,
 58 |       derived: false,
 59 |     };
 60 | 
 61 |     const fields: DataField[] = [
 62 |       { name: "foo", ...defaultField },
 63 |       { name: "bar", ...defaultField },
 64 |       { name: "baz", ...defaultField },
 65 |     ];
 66 | 
 67 |     const want: DataField[] = [
 68 |       { name: "baz", ...defaultField },
 69 |       { name: "foo", ...defaultField },
 70 |       { name: "bar", ...defaultField },
 71 |     ];
 72 | 
 73 |     const order = ["baz", "foo"];
 74 | 
 75 |     const sorted = sortFields(fields, order);
 76 | 
 77 |     expect(sorted).toStrictEqual(want);
 78 |   });
 79 | 
 80 |   it("doesn't sort fields if order is empty", () => {
 81 |     const defaultField: Omit<DataField, "name"> = {
 82 |       type: DataFieldType.String,
 83 |       repeated: false,
 84 |       identifier: false,
 85 |       derived: false,
 86 |     };
 87 | 
 88 |     const fields: DataField[] = [
 89 |       { name: "foo", ...defaultField },
 90 |       { name: "baz", ...defaultField },
 91 |       { name: "bar", ...defaultField },
 92 |     ];
 93 | 
 94 |     const want: DataField[] = [
 95 |       { name: "foo", ...defaultField },
 96 |       { name: "baz", ...defaultField },
 97 |       { name: "bar", ...defaultField },
 98 |     ];
 99 | 
100 |     const order: string[] = [];
101 | 
102 |     const sorted = sortFields(fields, order);
103 | 
104 |     expect(sorted).toStrictEqual(want);
105 |   });
106 | });
107 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/helpers.ts:
--------------------------------------------------------------------------------
 1 | import { produce } from "immer";
 2 | import type { DataField } from "src/lib/dataframe/dataframe";
 3 | 
 4 | export function sortFields(fields: DataField[], order: string[]) {
 5 |   if (!order.length) {
 6 |     return fields;
 7 |   }
 8 | 
 9 |   const test = produce(fields, (draft) => {
10 |     draft.sort((left, right) => {
11 |       if (!order.includes(left.name)) {
12 |         return 1;
13 |       }
14 |       if (!order.includes(right.name)) {
15 |         return -1;
16 |       }
17 |       return order.indexOf(left.name) - order.indexOf(right.name);
18 |     });
19 |   });
20 | 
21 |   return test;
22 | }
23 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/index.ts:
--------------------------------------------------------------------------------
1 | export { TableView } from "./tableView";
2 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/tableView.ts:
--------------------------------------------------------------------------------
 1 | import {
 2 |   ProjectView,
 3 |   type DataQueryResult,
 4 |   type ProjectViewProps,
 5 | } from "src/customViewApi";
 6 | 
 7 | import TableViewSvelte from "./TableView.svelte";
 8 | import type { TableConfig } from "./types";
 9 | 
10 | export class TableView extends ProjectView<TableConfig> {
11 |   view?: TableViewSvelte | null;
12 |   props?: ProjectViewProps;
13 | 
14 |   getViewType(): string {
15 |     return "table";
16 |   }
17 |   getDisplayName(): string {
18 |     return "Table";
19 |   }
20 |   getIcon(): string {
21 |     return "table";
22 |   }
23 | 
24 |   async onData({ data }: DataQueryResult) {
25 |     this.view?.$set({ frame: data });
26 |   }
27 | 
28 |   async onOpen(props: ProjectViewProps<TableConfig>) {
29 |     this.view = new TableViewSvelte({
30 |       target: props.contentEl,
31 |       props: {
32 |         frame: { fields: [], records: [] },
33 |         api: props.viewApi,
34 |         project: props.project,
35 |         readonly: props.readonly,
36 |         config: props.config,
37 |         onConfigChange: props.saveConfig,
38 |         getRecordColor: props.getRecordColor,
39 |       },
40 |     });
41 |   }
42 | 
43 |   async onClose() {
44 |     this.view?.$destroy();
45 |     this.view = null;
46 |   }
47 | }
48 | 


--------------------------------------------------------------------------------
/src/ui/views/Table/types.ts:
--------------------------------------------------------------------------------
 1 | export interface FieldConfig {
 2 |   readonly [key: string]: {
 3 |     readonly width?: number;
 4 |     readonly hide?: boolean;
 5 |     readonly pinned?: boolean;
 6 |   };
 7 | }
 8 | 
 9 | export interface TableConfig {
10 |   readonly fieldConfig?: FieldConfig;
11 |   readonly sortField?: string;
12 |   readonly sortAsc?: boolean;
13 |   readonly orderFields?: string[];
14 | }
15 | 


--------------------------------------------------------------------------------
/src/ui/views/helpers.ts:
--------------------------------------------------------------------------------
  1 | import { makeContext } from "src/lib/helpers";
  2 | import { DataFieldType, type DataField } from "../../lib/dataframe/dataframe";
  3 | import type { ViewProps } from "../app/useView";
  4 | import { TFile, type Menu } from "obsidian";
  5 | 
  6 | import { i18n } from "src/lib/stores/i18n";
  7 | import { app } from "src/lib/stores/obsidian";
  8 | import { get } from "svelte/store";
  9 | import { VIEW_TYPE_PROJECTS } from "src/view";
 10 | 
 11 | export function fieldIcon(field: DataField): string {
 12 |   switch (field.type) {
 13 |     case DataFieldType.String:
 14 |       if (field.repeated) {
 15 |         switch (field.name) {
 16 |           case "tags":
 17 |             return "tags";
 18 |           case "aliases":
 19 |             return "forward";
 20 |         }
 21 |         return "list";
 22 |       }
 23 |       return "text";
 24 |     case DataFieldType.Number:
 25 |       return "binary";
 26 |     case DataFieldType.Boolean:
 27 |       return "check-square";
 28 |     case DataFieldType.Date:
 29 |       return field.typeConfig?.time ? "clock" : "calendar";
 30 |   }
 31 |   return "file-question";
 32 | }
 33 | 
 34 | export function fieldDisplayText(field: DataField): string {
 35 |   switch (field.type) {
 36 |     case DataFieldType.String:
 37 |       if (field.repeated) {
 38 |         switch (field.name) {
 39 |           case "tags":
 40 |             return get(i18n).t("data-types.tags");
 41 |           case "aliases":
 42 |             return get(i18n).t("data-types.aliases");
 43 |         }
 44 |         return get(i18n).t("data-types.list");
 45 |       }
 46 |       return get(i18n).t("data-types.string");
 47 |     case DataFieldType.Number:
 48 |       return get(i18n).t("data-types.number");
 49 |     case DataFieldType.Boolean:
 50 |       return get(i18n).t("data-types.boolean");
 51 |     case DataFieldType.Date:
 52 |       return field.typeConfig?.time
 53 |         ? get(i18n).t("data-types.datetime")
 54 |         : get(i18n).t("data-types.date");
 55 |   }
 56 |   return get(i18n).t("data-types.unknown");
 57 | }
 58 | 
 59 | export function fieldToSelectableValue(field: DataField): {
 60 |   label: string;
 61 |   value: string;
 62 | } {
 63 |   return {
 64 |     label: field.name,
 65 |     value: field.name,
 66 |   };
 67 | }
 68 | 
 69 | export const getRecordColorContext = makeContext<ViewProps["getRecordColor"]>();
 70 | export const sortRecordsContext = makeContext<ViewProps["sortRecords"]>();
 71 | 
 72 | export function menuOnContextMenu(event: MouseEvent, menu: Menu): void {
 73 |   const contextMenuFunc = (event: MouseEvent) => {
 74 |     window.removeEventListener("contextmenu", contextMenuFunc);
 75 |     event.preventDefault();
 76 |     event.stopPropagation();
 77 |     menu.showAtMouseEvent(event);
 78 |   };
 79 |   window.addEventListener("contextmenu", contextMenuFunc, false);
 80 | }
 81 | 
 82 | export function handleHoverLink(event: MouseEvent, sourcePath: string) {
 83 |   const targetEl = event.target as HTMLDivElement;
 84 |   const anchor =
 85 |     targetEl.tagName === "A" ? targetEl : targetEl.querySelector("a");
 86 |   if (!anchor || !anchor.hasClass("internal-link")) return;
 87 | 
 88 |   const href = anchor.getAttr("href");
 89 |   const file =
 90 |     href && get(app).metadataCache.getFirstLinkpathDest(href, sourcePath);
 91 | 
 92 |   if (file instanceof TFile) {
 93 |     get(app).workspace.trigger("hover-link", {
 94 |       event,
 95 |       source: VIEW_TYPE_PROJECTS,
 96 |       hoverParent: anchor,
 97 |       targetEl,
 98 |       linktext: file.name,
 99 |       sourcePath: file.path,
100 |     });
101 |   }
102 | }
103 | 


--------------------------------------------------------------------------------
/src/view.ts:
--------------------------------------------------------------------------------
  1 | import {
  2 |   Plugin,
  3 |   ItemView,
  4 |   WorkspaceLeaf,
  5 |   Menu,
  6 |   type ViewStateResult,
  7 | } from "obsidian";
  8 | import { get } from "svelte/store";
  9 | 
 10 | import App from "src/ui/app/App.svelte";
 11 | import { i18n } from "./lib/stores/i18n";
 12 | import { customViews } from "src/lib/stores/customViews";
 13 | import { view } from "src/lib/stores/obsidian";
 14 | import { BoardView } from "src/ui/views/Board";
 15 | import { CalendarView } from "src/ui/views/Calendar";
 16 | // import { DeveloperView } from "src/views/Developer";
 17 | import { GalleryView } from "src/ui/views/Gallery";
 18 | import { TableView } from "src/ui/views/Table";
 19 | 
 20 | import type { ProjectView } from "./customViewApi";
 21 | import type ProjectsPlugin from "./main";
 22 | import type { ProjectId, ViewId } from "./settings/settings";
 23 | 
 24 | export const VIEW_TYPE_PROJECTS = "obsidian-projects";
 25 | 
 26 | export type ProjectsViewState = {
 27 |   projectId: ProjectId;
 28 |   viewId: ViewId;
 29 | };
 30 | 
 31 | /**
 32 |  * ProjectsView is the main projects view. The view is primarily a Svelte
 33 |  * application, so this class mainly instantiates and mounts the Svelte app.
 34 |  */
 35 | export class ProjectsView extends ItemView {
 36 |   component?: App;
 37 | 
 38 |   constructor(leaf: WorkspaceLeaf, readonly plugin: ProjectsPlugin) {
 39 |     super(leaf);
 40 | 
 41 |     // Whether this view can be used to navigate to other Obsidian views.
 42 |     this.navigation = true;
 43 |   }
 44 | 
 45 |   getViewType() {
 46 |     return VIEW_TYPE_PROJECTS;
 47 |   }
 48 | 
 49 |   getDisplayText() {
 50 |     return "Projects";
 51 |   }
 52 | 
 53 |   getIcon() {
 54 |     return "projects-icon";
 55 |   }
 56 | 
 57 |   onPaneMenu(menu: Menu, source: "more-options" | "tab-header" | string) {
 58 |     if (source == "more-options" || source == "tab-header") {
 59 |       super.onPaneMenu(menu, source);
 60 |       menu.addItem((item) => {
 61 |         item
 62 |           .setTitle(get(i18n).t("menus.tab-header.new-window.title"))
 63 |           .setIcon("picture-in-picture-2")
 64 |           .onClick(() => {
 65 |             const existingLeaves =
 66 |               this.app.workspace.getLeavesOfType(VIEW_TYPE_PROJECTS);
 67 |             if (existingLeaves[0]) {
 68 |               this.app.workspace.moveLeafToPopout(existingLeaves[0]);
 69 |             }
 70 |           })
 71 |           .setSection("open");
 72 |       });
 73 |       return;
 74 |     }
 75 | 
 76 |     // In other cases, keep the original behavior
 77 |     super.onPaneMenu(menu, source);
 78 |   }
 79 | 
 80 |   async onload() {
 81 |     view.set(this);
 82 |   }
 83 | 
 84 |   async setState(
 85 |     state: ProjectsViewState,
 86 |     result: ViewStateResult
 87 |   ): Promise<void> {
 88 |     if (this.component) {
 89 |       this.component.$set({
 90 |         projectId: state.projectId,
 91 |         viewId: state.viewId,
 92 |       });
 93 |     }
 94 | 
 95 |     super.setState(state, result);
 96 |   }
 97 | 
 98 |   async onOpen() {
 99 |     customViews.set(this.getProjectViews());
100 | 
101 |     this.component = new App({
102 |       target: this.contentEl,
103 |     });
104 |   }
105 | 
106 |   async onClose() {
107 |     if (this.component) {
108 |       this.component.$destroy();
109 |     }
110 |   }
111 | 
112 |   /**
113 |    * getProjectViews returns a map of instances for each supported Projects view.
114 |    */
115 |   getProjectViews() {
116 |     const views: Record<string, ProjectView> = {};
117 | 
118 |     // Allow other Obsidian plugins to register custom views.
119 |     this.getEnabledPlugins().forEach((plugin) => {
120 |       // Other Obsidian plugins can add an onRegisterProjectView to register a
121 |       // Projects view.
122 |       const registerView = plugin.onRegisterProjectView;
123 | 
124 |       if (registerView) {
125 |         const create = registerView.bind(plugin);
126 |         const instance = create();
127 | 
128 |         views[instance.getViewType()] = instance;
129 |       }
130 |     });
131 | 
132 |     // Register built-in views.
133 |     views["table"] = new TableView();
134 |     views["board"] = new BoardView();
135 |     views["calendar"] = new CalendarView();
136 |     views["gallery"] = new GalleryView();
137 |     // views["developer"] = new DeveloperView();
138 | 
139 |     return views;
140 |   }
141 | 
142 |   /**
143 |    * getEnabledPlugins returns a list of the enabled Obsidian plugins.
144 |    */
145 |   getEnabledPlugins(): Plugin[] {
146 |     const res: Plugin[] = [];
147 | 
148 |     for (const pluginId in this.app.plugins.plugins) {
149 |       const plugin = this.app.plugins.getPlugin(pluginId);
150 | 
151 |       if (plugin) {
152 |         res.push(plugin);
153 |       }
154 |     }
155 | 
156 |     return res;
157 |   }
158 | }
159 | 


--------------------------------------------------------------------------------
/styles.css:
--------------------------------------------------------------------------------
  1 | .projects--board {
  2 |   display: flex;
  3 |   column-gap: 8px;
  4 |   align-items: flex-start;
  5 |   margin: 8px;
  6 | }
  7 | 
  8 | .projects--board--column {
  9 |   border: 1px solid var(--background-modifier-border);
 10 |   border-radius: var(--radius-m);
 11 |   background-color: var(--background-primary-alt);
 12 |   display: flex;
 13 |   gap: var(--size-4-2);
 14 |   flex-direction: column;
 15 |   padding: var(--size-4-2);
 16 | 
 17 |   --board-column-drag-accent: hsla(var(--interactive-accent-hsl), 0.3);
 18 |   --board-column-drop-accent: hsla(var(--interactive-accent-hsl), 0.5);
 19 | 
 20 |   &:has(.projects--board--card-placeholder) {
 21 |     box-shadow: 0px 0px 8px 0px var(--board-column-drop-accent);
 22 |     transition: box-shadow 150ms ease-in-out;
 23 |   }
 24 | }
 25 | 
 26 | .projects--board--card {
 27 |   background-color: var(--background-primary);
 28 |   border-radius: var(--radius-s);
 29 |   border: 1px solid var(--background-modifier-border);
 30 |   padding: var(--size-4-2);
 31 | }
 32 | 
 33 | .projects--board--card:hover {
 34 |   border: 1px solid var(--background-modifier-border-hover);
 35 | }
 36 | 
 37 | .projects--board--card-list {
 38 |   display: flex;
 39 |   flex-direction: column;
 40 |   gap: var(--size-4-2);
 41 |   min-height: 35px;
 42 |   transition: all 150ms ease-in-out;
 43 | 
 44 |   &:has(.projects--board--card-placeholder) {
 45 |     background: var(--board-column-drop-accent) !important;
 46 |   }
 47 | }
 48 | 
 49 | .projects--gallery--grid {
 50 |   display: grid;
 51 |   gap: 24px;
 52 | }
 53 | 
 54 | .projects--gallery--card {
 55 |   background-color: var(--background-primary-alt);
 56 |   border-radius: var(--radius-s);
 57 |   border: 1px solid var(--background-modifier-border);
 58 |   padding: 0;
 59 |   margin: 0;
 60 | }
 61 | 
 62 | .projects--gallery--card:hover {
 63 |   border: 1px solid var(--background-modifier-border-hover);
 64 | }
 65 | 
 66 | .projects--gallery--card__body {
 67 |   padding: 8px;
 68 | }
 69 | 
 70 | .projects--gallery--card__media {
 71 |   height: 180px;
 72 |   border-top-left-radius: var(--radius-s);
 73 |   border-top-right-radius: var(--radius-s);
 74 |   display: flex;
 75 |   align-items: center;
 76 |   justify-content: center;
 77 |   border-bottom: 1px solid var(--background-modifier-border);
 78 | }
 79 | 
 80 | .projects--gallery--card__media img {
 81 |   width: 100%;
 82 |   height: 100%;
 83 |   border-top-left-radius: var(--radius-s);
 84 |   border-top-right-radius: var(--radius-s);
 85 | }
 86 | 
 87 | .workspace-leaf-content[data-type="obsidian-projects"] .view-content {
 88 |   padding: 0;
 89 | }
 90 | 
 91 | .projects--popover {
 92 |   background-color: var(--background-primary);
 93 |   border: 1px solid var(--background-modifier-border);
 94 |   box-shadow: var(--shadow-s);
 95 |   border-radius: var(--radius-m);
 96 |   padding: var(--size-4-5);
 97 |   max-height: 95vh;
 98 | }
 99 | 
100 | /*# sourceMappingURL=styles.css.map */
101 | 


--------------------------------------------------------------------------------
/tsconfig.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "extends": "@tsconfig/svelte/tsconfig.json",
 3 |   "compilerOptions": {
 4 |     "ignoreDeprecations": "5.0",
 5 |     "types": [
 6 |       "node",
 7 |       "svelte"
 8 |     ],
 9 |     "baseUrl": ".",
10 |     "inlineSources": true,
11 |     "module": "ESNext",
12 |     "target": "ES2022",
13 |     "allowJs": true,
14 |     "moduleResolution": "node",
15 |     "importHelpers": true,
16 |     "strict": true,
17 |     "noFallthroughCasesInSwitch": true,
18 |     "noUnusedLocals": true,
19 |     "noUncheckedIndexedAccess": true,
20 |     "noImplicitReturns": true,
21 |     "noPropertyAccessFromIndexSignature": true,
22 |     "allowUnreachableCode": false,
23 |     "allowUnusedLabels": false,
24 |     "exactOptionalPropertyTypes": true,
25 |     "isolatedModules": true,
26 |     "resolveJsonModule": true,
27 |     "lib": [
28 |       "DOM",
29 |       "ES2022",
30 |     ],
31 |   },
32 |   "include": [
33 |     "**/*.ts",
34 |     "src/__mocks__/obsidian.ts"
35 |   ]
36 | }


--------------------------------------------------------------------------------
/version-beta-manifest.mjs:
--------------------------------------------------------------------------------
 1 | import fs from "fs";
 2 | 
 3 | if (process.argv.length === 2) {
 4 |   console.error("Missing build number");
 5 |   process.exit(1);
 6 | }
 7 | 
 8 | const buildNumber = process.argv[2];
 9 | 
10 | fs.readFile("manifest.json", "utf8", (err, data) => {
11 |   if (err) {
12 |     console.error(`Error reading file from disk: ${err}`);
13 |   } else {
14 |     const manifest = JSON.parse(data);
15 | 
16 |     manifest.version = `0.0.0-${buildNumber}`;
17 | 
18 |     fs.writeFile(
19 |       "manifest-beta.json",
20 |       JSON.stringify(manifest, null, 2),
21 |       (err) => {
22 |         if (err) console.log(err);
23 |         else {
24 |           console.log("File written successfully\n");
25 |         }
26 |       }
27 |     );
28 |   }
29 | });
30 | 


--------------------------------------------------------------------------------
/version-bump.mjs:
--------------------------------------------------------------------------------
 1 | import { readFileSync, writeFileSync } from "fs";
 2 | 
 3 | const targetVersion = process.env.npm_package_version;
 4 | 
 5 | // read minAppVersion from manifest.json and bump version to target version
 6 | let manifest = JSON.parse(readFileSync("manifest.json", "utf8"));
 7 | const { minAppVersion } = manifest;
 8 | manifest.version = targetVersion;
 9 | writeFileSync("manifest.json", JSON.stringify(manifest, null, "\t"));
10 | 
11 | // update versions.json with target version and minAppVersion from manifest.json
12 | let versions = JSON.parse(readFileSync("versions.json", "utf8"));
13 | versions[targetVersion] = minAppVersion;
14 | writeFileSync("versions.json", JSON.stringify(versions, null, "\t"));
15 | 


--------------------------------------------------------------------------------
/versions.json:
--------------------------------------------------------------------------------
1 | {
2 |   "1.0.0": "1.0.0"
3 | }
4 | 


--------------------------------------------------------------------------------
