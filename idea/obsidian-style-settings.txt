├── .eslintrc.js
├── .github
    ├── FUNDING.yml
    └── workflows
    │   └── release.yml
├── .gitignore
├── .prettierrc.js
├── LICENSE.md
├── README.md
├── babel.config.js
├── esbuild.config.mjs
├── main.css
├── manifest.json
├── obsidian-default-theme.css
├── package.json
├── prettier.config.cjs
├── release-notes.md
├── screenshots
    └── example01.png
├── src
    ├── ExportModal.ts
    ├── ImportModal.ts
    ├── SettingHandlers.ts
    ├── SettingsManager.ts
    ├── Utils.ts
    ├── css
    │   ├── pickerOverrides.css
    │   └── settings.css
    ├── lang
    │   ├── helpers.ts
    │   └── locale
    │   │   ├── ar.ts
    │   │   ├── cz.ts
    │   │   ├── da.ts
    │   │   ├── de.ts
    │   │   ├── en.ts
    │   │   ├── es.ts
    │   │   ├── fr.ts
    │   │   ├── hi.ts
    │   │   ├── id.ts
    │   │   ├── it.ts
    │   │   ├── ja.ts
    │   │   ├── ko.ts
    │   │   ├── nl.ts
    │   │   ├── no.ts
    │   │   ├── pl.ts
    │   │   ├── pt.ts
    │   │   ├── ptBr.ts
    │   │   ├── ro.ts
    │   │   ├── ru.ts
    │   │   ├── sq.ts
    │   │   ├── tr.ts
    │   │   ├── uk.ts
    │   │   ├── zh.ts
    │   │   └── zhTw.ts
    ├── main.ts
    └── settingsView
    │   ├── CSSSettingsTab.ts
    │   ├── SettingComponents
    │       ├── AbstractSettingComponent.ts
    │       ├── ClassMultiToggleSettingComponent.ts
    │       ├── ClassToggleSettingComponent.ts
    │       ├── HeadingSettingComponent.ts
    │       ├── InfoTextSettingComponent.ts
    │       ├── VariableColorSettingComponent.ts
    │       ├── VariableNumberSettingComponent.ts
    │       ├── VariableNumberSliderSettingComponent.ts
    │       ├── VariableSelectSettingComponent.ts
    │       ├── VariableTextSettingComponent.ts
    │       ├── VariableThemedColorSettingComponent.ts
    │       └── types.ts
    │   ├── SettingsMarkup.ts
    │   └── SettingsView.ts
├── styles.css
├── tsconfig.json
├── version-bump.mjs
├── versions.json
└── yarn.lock


/.eslintrc.js:
--------------------------------------------------------------------------------
 1 | module.exports = {
 2 |   env: {
 3 |     browser: true,
 4 |     es6: true,
 5 |     node: true,
 6 |     jest: true,
 7 |   },
 8 |   extends: [
 9 |     'eslint:recommended',
10 |     'plugin:@typescript-eslint/recommended',
11 |   ],
12 |   globals: {
13 |     Atomics: 'readonly',
14 |     SharedArrayBuffer: 'readonly',
15 |   },
16 |   parser: '@typescript-eslint/parser',
17 |   parserOptions: {
18 |     ecmaFeatures: {
19 |       jsx: true,
20 |     },
21 |     ecmaVersion: 2018,
22 |     sourceType: 'module',
23 |   },
24 |   plugins: ['@typescript-eslint'],
25 |   rules: {
26 |     '@typescript-eslint/explicit-function-return-type': 'off',
27 |     '@typescript-eslint/member-delimiter-style': 'off',
28 |     '@typescript-eslint/no-explicit-any': 'off',
29 |     '@typescript-eslint/no-empty-function': 'off',
30 |     '@typescript-eslint/no-var-requires': 'off',
31 |     '@typescript-eslint/no-use-before-define': 'off',
32 |     '@typescript-eslint/explicit-module-boundary-types': 'off',
33 |     '@typescript-eslint/no-this-alias': 'off',
34 |     '@typescript-eslint/no-inferrable-types': 'off',
35 |     '@typescript-eslint/ban-ts-comment': 'off',
36 |     'react/no-unescaped-entities': 'off',
37 |     'react/prop-types': 'off',
38 |     'react/react-in-jsx-scope': 'off',
39 |     'linebreak-style': ['error', 'unix'],
40 |     indent: 'off',
41 |     quotes: 'off',
42 |   },
43 | };
44 | 


--------------------------------------------------------------------------------
/.github/FUNDING.yml:
--------------------------------------------------------------------------------
1 | github: mgmeyers
2 | custom: https://www.buymeacoffee.com/mgme
3 | 


--------------------------------------------------------------------------------
/.github/workflows/release.yml:
--------------------------------------------------------------------------------
 1 | name: Release Obsidian plugin
 2 | 
 3 | on:
 4 |   push:
 5 |     tags:
 6 |       - '*'
 7 | 
 8 | jobs:
 9 |   build:
10 |     runs-on: ubuntu-latest
11 | 
12 |     steps:
13 |       - uses: actions/checkout@v3
14 | 
15 |       - name: Use Node.js
16 |         uses: actions/setup-node@v3
17 |         with:
18 |           node-version: '18.x'
19 | 
20 |       - name: Build plugin
21 |         run: |
22 |           npm install
23 |           npm run build
24 | 
25 |       - name: Create release
26 |         env:
27 |           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
28 |         run: |
29 |           tag="${GITHUB_REF#refs/tags/}"
30 | 
31 |           gh release create "$tag" \
32 |             --title="$tag" \
33 |             --notes-file="release-notes.md" \
34 |             main.js manifest.json styles.css
35 | 


--------------------------------------------------------------------------------
/.gitignore:
--------------------------------------------------------------------------------
 1 | # Intellij
 2 | *.iml
 3 | .idea
 4 | # npm
 5 | node_modules
 6 | package-lock.json
 7 | 
 8 | # build
 9 | main.js
10 | data.json
11 | .DS_Store
12 | *.js.map
13 | .env
14 | 
15 | .hotreload


--------------------------------------------------------------------------------
/.prettierrc.js:
--------------------------------------------------------------------------------
 1 | module.exports = {
 2 |   arrowParens: 'always',
 3 |   bracketSpacing: true,
 4 |   endOfLine: 'lf',
 5 |   htmlWhitespaceSensitivity: 'css',
 6 |   jsxBracketSameLine: false,
 7 |   jsxSingleQuote: false,
 8 |   printWidth: 80,
 9 |   proseWrap: 'preserve',
10 |   quoteProps: 'as-needed',
11 |   semi: true,
12 |   singleQuote: true,
13 |   trailingComma: 'es5',
14 |   useTabs: true,
15 | }
16 | 


--------------------------------------------------------------------------------
/LICENSE.md:
--------------------------------------------------------------------------------
  1 |                     GNU GENERAL PUBLIC LICENSE
  2 |                        Version 3, 29 June 2007
  3 | 
  4 |  Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
  5 |  Everyone is permitted to copy and distribute verbatim copies
  6 |  of this license document, but changing it is not allowed.
  7 | 
  8 |                             Preamble
  9 | 
 10 |   The GNU General Public License is a free, copyleft license for
 11 | software and other kinds of works.
 12 | 
 13 |   The licenses for most software and other practical works are designed
 14 | to take away your freedom to share and change the works.  By contrast,
 15 | the GNU General Public License is intended to guarantee your freedom to
 16 | share and change all versions of a program--to make sure it remains free
 17 | software for all its users.  We, the Free Software Foundation, use the
 18 | GNU General Public License for most of our software; it applies also to
 19 | any other work released this way by its authors.  You can apply it to
 20 | your programs, too.
 21 | 
 22 |   When we speak of free software, we are referring to freedom, not
 23 | price.  Our General Public Licenses are designed to make sure that you
 24 | have the freedom to distribute copies of free software (and charge for
 25 | them if you wish), that you receive source code or can get it if you
 26 | want it, that you can change the software or use pieces of it in new
 27 | free programs, and that you know you can do these things.
 28 | 
 29 |   To protect your rights, we need to prevent others from denying you
 30 | these rights or asking you to surrender the rights.  Therefore, you have
 31 | certain responsibilities if you distribute copies of the software, or if
 32 | you modify it: responsibilities to respect the freedom of others.
 33 | 
 34 |   For example, if you distribute copies of such a program, whether
 35 | gratis or for a fee, you must pass on to the recipients the same
 36 | freedoms that you received.  You must make sure that they, too, receive
 37 | or can get the source code.  And you must show them these terms so they
 38 | know their rights.
 39 | 
 40 |   Developers that use the GNU GPL protect your rights with two steps:
 41 | (1) assert copyright on the software, and (2) offer you this License
 42 | giving you legal permission to copy, distribute and/or modify it.
 43 | 
 44 |   For the developers' and authors' protection, the GPL clearly explains
 45 | that there is no warranty for this free software.  For both users' and
 46 | authors' sake, the GPL requires that modified versions be marked as
 47 | changed, so that their problems will not be attributed erroneously to
 48 | authors of previous versions.
 49 | 
 50 |   Some devices are designed to deny users access to install or run
 51 | modified versions of the software inside them, although the manufacturer
 52 | can do so.  This is fundamentally incompatible with the aim of
 53 | protecting users' freedom to change the software.  The systematic
 54 | pattern of such abuse occurs in the area of products for individuals to
 55 | use, which is precisely where it is most unacceptable.  Therefore, we
 56 | have designed this version of the GPL to prohibit the practice for those
 57 | products.  If such problems arise substantially in other domains, we
 58 | stand ready to extend this provision to those domains in future versions
 59 | of the GPL, as needed to protect the freedom of users.
 60 | 
 61 |   Finally, every program is threatened constantly by software patents.
 62 | States should not allow patents to restrict development and use of
 63 | software on general-purpose computers, but in those that do, we wish to
 64 | avoid the special danger that patents applied to a free program could
 65 | make it effectively proprietary.  To prevent this, the GPL assures that
 66 | patents cannot be used to render the program non-free.
 67 | 
 68 |   The precise terms and conditions for copying, distribution and
 69 | modification follow.
 70 | 
 71 |                        TERMS AND CONDITIONS
 72 | 
 73 |   0. Definitions.
 74 | 
 75 |   "This License" refers to version 3 of the GNU General Public License.
 76 | 
 77 |   "Copyright" also means copyright-like laws that apply to other kinds of
 78 | works, such as semiconductor masks.
 79 | 
 80 |   "The Program" refers to any copyrightable work licensed under this
 81 | License.  Each licensee is addressed as "you".  "Licensees" and
 82 | "recipients" may be individuals or organizations.
 83 | 
 84 |   To "modify" a work means to copy from or adapt all or part of the work
 85 | in a fashion requiring copyright permission, other than the making of an
 86 | exact copy.  The resulting work is called a "modified version" of the
 87 | earlier work or a work "based on" the earlier work.
 88 | 
 89 |   A "covered work" means either the unmodified Program or a work based
 90 | on the Program.
 91 | 
 92 |   To "propagate" a work means to do anything with it that, without
 93 | permission, would make you directly or secondarily liable for
 94 | infringement under applicable copyright law, except executing it on a
 95 | computer or modifying a private copy.  Propagation includes copying,
 96 | distribution (with or without modification), making available to the
 97 | public, and in some countries other activities as well.
 98 | 
 99 |   To "convey" a work means any kind of propagation that enables other
100 | parties to make or receive copies.  Mere interaction with a user through
101 | a computer network, with no transfer of a copy, is not conveying.
102 | 
103 |   An interactive user interface displays "Appropriate Legal Notices"
104 | to the extent that it includes a convenient and prominently visible
105 | feature that (1) displays an appropriate copyright notice, and (2)
106 | tells the user that there is no warranty for the work (except to the
107 | extent that warranties are provided), that licensees may convey the
108 | work under this License, and how to view a copy of this License.  If
109 | the interface presents a list of user commands or options, such as a
110 | menu, a prominent item in the list meets this criterion.
111 | 
112 |   1. Source Code.
113 | 
114 |   The "source code" for a work means the preferred form of the work
115 | for making modifications to it.  "Object code" means any non-source
116 | form of a work.
117 | 
118 |   A "Standard Interface" means an interface that either is an official
119 | standard defined by a recognized standards body, or, in the case of
120 | interfaces specified for a particular programming language, one that
121 | is widely used among developers working in that language.
122 | 
123 |   The "System Libraries" of an executable work include anything, other
124 | than the work as a whole, that (a) is included in the normal form of
125 | packaging a Major Component, but which is not part of that Major
126 | Component, and (b) serves only to enable use of the work with that
127 | Major Component, or to implement a Standard Interface for which an
128 | implementation is available to the public in source code form.  A
129 | "Major Component", in this context, means a major essential component
130 | (kernel, window system, and so on) of the specific operating system
131 | (if any) on which the executable work runs, or a compiler used to
132 | produce the work, or an object code interpreter used to run it.
133 | 
134 |   The "Corresponding Source" for a work in object code form means all
135 | the source code needed to generate, install, and (for an executable
136 | work) run the object code and to modify the work, including scripts to
137 | control those activities.  However, it does not include the work's
138 | System Libraries, or general-purpose tools or generally available free
139 | programs which are used unmodified in performing those activities but
140 | which are not part of the work.  For example, Corresponding Source
141 | includes interface definition files associated with source files for
142 | the work, and the source code for shared libraries and dynamically
143 | linked subprograms that the work is specifically designed to require,
144 | such as by intimate data communication or control flow between those
145 | subprograms and other parts of the work.
146 | 
147 |   The Corresponding Source need not include anything that users
148 | can regenerate automatically from other parts of the Corresponding
149 | Source.
150 | 
151 |   The Corresponding Source for a work in source code form is that
152 | same work.
153 | 
154 |   2. Basic Permissions.
155 | 
156 |   All rights granted under this License are granted for the term of
157 | copyright on the Program, and are irrevocable provided the stated
158 | conditions are met.  This License explicitly affirms your unlimited
159 | permission to run the unmodified Program.  The output from running a
160 | covered work is covered by this License only if the output, given its
161 | content, constitutes a covered work.  This License acknowledges your
162 | rights of fair use or other equivalent, as provided by copyright law.
163 | 
164 |   You may make, run and propagate covered works that you do not
165 | convey, without conditions so long as your license otherwise remains
166 | in force.  You may convey covered works to others for the sole purpose
167 | of having them make modifications exclusively for you, or provide you
168 | with facilities for running those works, provided that you comply with
169 | the terms of this License in conveying all material for which you do
170 | not control copyright.  Those thus making or running the covered works
171 | for you must do so exclusively on your behalf, under your direction
172 | and control, on terms that prohibit them from making any copies of
173 | your copyrighted material outside their relationship with you.
174 | 
175 |   Conveying under any other circumstances is permitted solely under
176 | the conditions stated below.  Sublicensing is not allowed; section 10
177 | makes it unnecessary.
178 | 
179 |   3. Protecting Users' Legal Rights From Anti-Circumvention Law.
180 | 
181 |   No covered work shall be deemed part of an effective technological
182 | measure under any applicable law fulfilling obligations under article
183 | 11 of the WIPO copyright treaty adopted on 20 December 1996, or
184 | similar laws prohibiting or restricting circumvention of such
185 | measures.
186 | 
187 |   When you convey a covered work, you waive any legal power to forbid
188 | circumvention of technological measures to the extent such circumvention
189 | is effected by exercising rights under this License with respect to
190 | the covered work, and you disclaim any intention to limit operation or
191 | modification of the work as a means of enforcing, against the work's
192 | users, your or third parties' legal rights to forbid circumvention of
193 | technological measures.
194 | 
195 |   4. Conveying Verbatim Copies.
196 | 
197 |   You may convey verbatim copies of the Program's source code as you
198 | receive it, in any medium, provided that you conspicuously and
199 | appropriately publish on each copy an appropriate copyright notice;
200 | keep intact all notices stating that this License and any
201 | non-permissive terms added in accord with section 7 apply to the code;
202 | keep intact all notices of the absence of any warranty; and give all
203 | recipients a copy of this License along with the Program.
204 | 
205 |   You may charge any price or no price for each copy that you convey,
206 | and you may offer support or warranty protection for a fee.
207 | 
208 |   5. Conveying Modified Source Versions.
209 | 
210 |   You may convey a work based on the Program, or the modifications to
211 | produce it from the Program, in the form of source code under the
212 | terms of section 4, provided that you also meet all of these conditions:
213 | 
214 |     a) The work must carry prominent notices stating that you modified
215 |     it, and giving a relevant date.
216 | 
217 |     b) The work must carry prominent notices stating that it is
218 |     released under this License and any conditions added under section
219 |     7.  This requirement modifies the requirement in section 4 to
220 |     "keep intact all notices".
221 | 
222 |     c) You must license the entire work, as a whole, under this
223 |     License to anyone who comes into possession of a copy.  This
224 |     License will therefore apply, along with any applicable section 7
225 |     additional terms, to the whole of the work, and all its parts,
226 |     regardless of how they are packaged.  This License gives no
227 |     permission to license the work in any other way, but it does not
228 |     invalidate such permission if you have separately received it.
229 | 
230 |     d) If the work has interactive user interfaces, each must display
231 |     Appropriate Legal Notices; however, if the Program has interactive
232 |     interfaces that do not display Appropriate Legal Notices, your
233 |     work need not make them do so.
234 | 
235 |   A compilation of a covered work with other separate and independent
236 | works, which are not by their nature extensions of the covered work,
237 | and which are not combined with it such as to form a larger program,
238 | in or on a volume of a storage or distribution medium, is called an
239 | "aggregate" if the compilation and its resulting copyright are not
240 | used to limit the access or legal rights of the compilation's users
241 | beyond what the individual works permit.  Inclusion of a covered work
242 | in an aggregate does not cause this License to apply to the other
243 | parts of the aggregate.
244 | 
245 |   6. Conveying Non-Source Forms.
246 | 
247 |   You may convey a covered work in object code form under the terms
248 | of sections 4 and 5, provided that you also convey the
249 | machine-readable Corresponding Source under the terms of this License,
250 | in one of these ways:
251 | 
252 |     a) Convey the object code in, or embodied in, a physical product
253 |     (including a physical distribution medium), accompanied by the
254 |     Corresponding Source fixed on a durable physical medium
255 |     customarily used for software interchange.
256 | 
257 |     b) Convey the object code in, or embodied in, a physical product
258 |     (including a physical distribution medium), accompanied by a
259 |     written offer, valid for at least three years and valid for as
260 |     long as you offer spare parts or customer support for that product
261 |     model, to give anyone who possesses the object code either (1) a
262 |     copy of the Corresponding Source for all the software in the
263 |     product that is covered by this License, on a durable physical
264 |     medium customarily used for software interchange, for a price no
265 |     more than your reasonable cost of physically performing this
266 |     conveying of source, or (2) access to copy the
267 |     Corresponding Source from a network server at no charge.
268 | 
269 |     c) Convey individual copies of the object code with a copy of the
270 |     written offer to provide the Corresponding Source.  This
271 |     alternative is allowed only occasionally and noncommercially, and
272 |     only if you received the object code with such an offer, in accord
273 |     with subsection 6b.
274 | 
275 |     d) Convey the object code by offering access from a designated
276 |     place (gratis or for a charge), and offer equivalent access to the
277 |     Corresponding Source in the same way through the same place at no
278 |     further charge.  You need not require recipients to copy the
279 |     Corresponding Source along with the object code.  If the place to
280 |     copy the object code is a network server, the Corresponding Source
281 |     may be on a different server (operated by you or a third party)
282 |     that supports equivalent copying facilities, provided you maintain
283 |     clear directions next to the object code saying where to find the
284 |     Corresponding Source.  Regardless of what server hosts the
285 |     Corresponding Source, you remain obligated to ensure that it is
286 |     available for as long as needed to satisfy these requirements.
287 | 
288 |     e) Convey the object code using peer-to-peer transmission, provided
289 |     you inform other peers where the object code and Corresponding
290 |     Source of the work are being offered to the general public at no
291 |     charge under subsection 6d.
292 | 
293 |   A separable portion of the object code, whose source code is excluded
294 | from the Corresponding Source as a System Library, need not be
295 | included in conveying the object code work.
296 | 
297 |   A "User Product" is either (1) a "consumer product", which means any
298 | tangible personal property which is normally used for personal, family,
299 | or household purposes, or (2) anything designed or sold for incorporation
300 | into a dwelling.  In determining whether a product is a consumer product,
301 | doubtful cases shall be resolved in favor of coverage.  For a particular
302 | product received by a particular user, "normally used" refers to a
303 | typical or common use of that class of product, regardless of the status
304 | of the particular user or of the way in which the particular user
305 | actually uses, or expects or is expected to use, the product.  A product
306 | is a consumer product regardless of whether the product has substantial
307 | commercial, industrial or non-consumer uses, unless such uses represent
308 | the only significant mode of use of the product.
309 | 
310 |   "Installation Information" for a User Product means any methods,
311 | procedures, authorization keys, or other information required to install
312 | and execute modified versions of a covered work in that User Product from
313 | a modified version of its Corresponding Source.  The information must
314 | suffice to ensure that the continued functioning of the modified object
315 | code is in no case prevented or interfered with solely because
316 | modification has been made.
317 | 
318 |   If you convey an object code work under this section in, or with, or
319 | specifically for use in, a User Product, and the conveying occurs as
320 | part of a transaction in which the right of possession and use of the
321 | User Product is transferred to the recipient in perpetuity or for a
322 | fixed term (regardless of how the transaction is characterized), the
323 | Corresponding Source conveyed under this section must be accompanied
324 | by the Installation Information.  But this requirement does not apply
325 | if neither you nor any third party retains the ability to install
326 | modified object code on the User Product (for example, the work has
327 | been installed in ROM).
328 | 
329 |   The requirement to provide Installation Information does not include a
330 | requirement to continue to provide support service, warranty, or updates
331 | for a work that has been modified or installed by the recipient, or for
332 | the User Product in which it has been modified or installed.  Access to a
333 | network may be denied when the modification itself materially and
334 | adversely affects the operation of the network or violates the rules and
335 | protocols for communication across the network.
336 | 
337 |   Corresponding Source conveyed, and Installation Information provided,
338 | in accord with this section must be in a format that is publicly
339 | documented (and with an implementation available to the public in
340 | source code form), and must require no special password or key for
341 | unpacking, reading or copying.
342 | 
343 |   7. Additional Terms.
344 | 
345 |   "Additional permissions" are terms that supplement the terms of this
346 | License by making exceptions from one or more of its conditions.
347 | Additional permissions that are applicable to the entire Program shall
348 | be treated as though they were included in this License, to the extent
349 | that they are valid under applicable law.  If additional permissions
350 | apply only to part of the Program, that part may be used separately
351 | under those permissions, but the entire Program remains governed by
352 | this License without regard to the additional permissions.
353 | 
354 |   When you convey a copy of a covered work, you may at your option
355 | remove any additional permissions from that copy, or from any part of
356 | it.  (Additional permissions may be written to require their own
357 | removal in certain cases when you modify the work.)  You may place
358 | additional permissions on material, added by you to a covered work,
359 | for which you have or can give appropriate copyright permission.
360 | 
361 |   Notwithstanding any other provision of this License, for material you
362 | add to a covered work, you may (if authorized by the copyright holders of
363 | that material) supplement the terms of this License with terms:
364 | 
365 |     a) Disclaiming warranty or limiting liability differently from the
366 |     terms of sections 15 and 16 of this License; or
367 | 
368 |     b) Requiring preservation of specified reasonable legal notices or
369 |     author attributions in that material or in the Appropriate Legal
370 |     Notices displayed by works containing it; or
371 | 
372 |     c) Prohibiting misrepresentation of the origin of that material, or
373 |     requiring that modified versions of such material be marked in
374 |     reasonable ways as different from the original version; or
375 | 
376 |     d) Limiting the use for publicity purposes of names of licensors or
377 |     authors of the material; or
378 | 
379 |     e) Declining to grant rights under trademark law for use of some
380 |     trade names, trademarks, or service marks; or
381 | 
382 |     f) Requiring indemnification of licensors and authors of that
383 |     material by anyone who conveys the material (or modified versions of
384 |     it) with contractual assumptions of liability to the recipient, for
385 |     any liability that these contractual assumptions directly impose on
386 |     those licensors and authors.
387 | 
388 |   All other non-permissive additional terms are considered "further
389 | restrictions" within the meaning of section 10.  If the Program as you
390 | received it, or any part of it, contains a notice stating that it is
391 | governed by this License along with a term that is a further
392 | restriction, you may remove that term.  If a license document contains
393 | a further restriction but permits relicensing or conveying under this
394 | License, you may add to a covered work material governed by the terms
395 | of that license document, provided that the further restriction does
396 | not survive such relicensing or conveying.
397 | 
398 |   If you add terms to a covered work in accord with this section, you
399 | must place, in the relevant source files, a statement of the
400 | additional terms that apply to those files, or a notice indicating
401 | where to find the applicable terms.
402 | 
403 |   Additional terms, permissive or non-permissive, may be stated in the
404 | form of a separately written license, or stated as exceptions;
405 | the above requirements apply either way.
406 | 
407 |   8. Termination.
408 | 
409 |   You may not propagate or modify a covered work except as expressly
410 | provided under this License.  Any attempt otherwise to propagate or
411 | modify it is void, and will automatically terminate your rights under
412 | this License (including any patent licenses granted under the third
413 | paragraph of section 11).
414 | 
415 |   However, if you cease all violation of this License, then your
416 | license from a particular copyright holder is reinstated (a)
417 | provisionally, unless and until the copyright holder explicitly and
418 | finally terminates your license, and (b) permanently, if the copyright
419 | holder fails to notify you of the violation by some reasonable means
420 | prior to 60 days after the cessation.
421 | 
422 |   Moreover, your license from a particular copyright holder is
423 | reinstated permanently if the copyright holder notifies you of the
424 | violation by some reasonable means, this is the first time you have
425 | received notice of violation of this License (for any work) from that
426 | copyright holder, and you cure the violation prior to 30 days after
427 | your receipt of the notice.
428 | 
429 |   Termination of your rights under this section does not terminate the
430 | licenses of parties who have received copies or rights from you under
431 | this License.  If your rights have been terminated and not permanently
432 | reinstated, you do not qualify to receive new licenses for the same
433 | material under section 10.
434 | 
435 |   9. Acceptance Not Required for Having Copies.
436 | 
437 |   You are not required to accept this License in order to receive or
438 | run a copy of the Program.  Ancillary propagation of a covered work
439 | occurring solely as a consequence of using peer-to-peer transmission
440 | to receive a copy likewise does not require acceptance.  However,
441 | nothing other than this License grants you permission to propagate or
442 | modify any covered work.  These actions infringe copyright if you do
443 | not accept this License.  Therefore, by modifying or propagating a
444 | covered work, you indicate your acceptance of this License to do so.
445 | 
446 |   10. Automatic Licensing of Downstream Recipients.
447 | 
448 |   Each time you convey a covered work, the recipient automatically
449 | receives a license from the original licensors, to run, modify and
450 | propagate that work, subject to this License.  You are not responsible
451 | for enforcing compliance by third parties with this License.
452 | 
453 |   An "entity transaction" is a transaction transferring control of an
454 | organization, or substantially all assets of one, or subdividing an
455 | organization, or merging organizations.  If propagation of a covered
456 | work results from an entity transaction, each party to that
457 | transaction who receives a copy of the work also receives whatever
458 | licenses to the work the party's predecessor in interest had or could
459 | give under the previous paragraph, plus a right to possession of the
460 | Corresponding Source of the work from the predecessor in interest, if
461 | the predecessor has it or can get it with reasonable efforts.
462 | 
463 |   You may not impose any further restrictions on the exercise of the
464 | rights granted or affirmed under this License.  For example, you may
465 | not impose a license fee, royalty, or other charge for exercise of
466 | rights granted under this License, and you may not initiate litigation
467 | (including a cross-claim or counterclaim in a lawsuit) alleging that
468 | any patent claim is infringed by making, using, selling, offering for
469 | sale, or importing the Program or any portion of it.
470 | 
471 |   11. Patents.
472 | 
473 |   A "contributor" is a copyright holder who authorizes use under this
474 | License of the Program or a work on which the Program is based.  The
475 | work thus licensed is called the contributor's "contributor version".
476 | 
477 |   A contributor's "essential patent claims" are all patent claims
478 | owned or controlled by the contributor, whether already acquired or
479 | hereafter acquired, that would be infringed by some manner, permitted
480 | by this License, of making, using, or selling its contributor version,
481 | but do not include claims that would be infringed only as a
482 | consequence of further modification of the contributor version.  For
483 | purposes of this definition, "control" includes the right to grant
484 | patent sublicenses in a manner consistent with the requirements of
485 | this License.
486 | 
487 |   Each contributor grants you a non-exclusive, worldwide, royalty-free
488 | patent license under the contributor's essential patent claims, to
489 | make, use, sell, offer for sale, import and otherwise run, modify and
490 | propagate the contents of its contributor version.
491 | 
492 |   In the following three paragraphs, a "patent license" is any express
493 | agreement or commitment, however denominated, not to enforce a patent
494 | (such as an express permission to practice a patent or covenant not to
495 | sue for patent infringement).  To "grant" such a patent license to a
496 | party means to make such an agreement or commitment not to enforce a
497 | patent against the party.
498 | 
499 |   If you convey a covered work, knowingly relying on a patent license,
500 | and the Corresponding Source of the work is not available for anyone
501 | to copy, free of charge and under the terms of this License, through a
502 | publicly available network server or other readily accessible means,
503 | then you must either (1) cause the Corresponding Source to be so
504 | available, or (2) arrange to deprive yourself of the benefit of the
505 | patent license for this particular work, or (3) arrange, in a manner
506 | consistent with the requirements of this License, to extend the patent
507 | license to downstream recipients.  "Knowingly relying" means you have
508 | actual knowledge that, but for the patent license, your conveying the
509 | covered work in a country, or your recipient's use of the covered work
510 | in a country, would infringe one or more identifiable patents in that
511 | country that you have reason to believe are valid.
512 | 
513 |   If, pursuant to or in connection with a single transaction or
514 | arrangement, you convey, or propagate by procuring conveyance of, a
515 | covered work, and grant a patent license to some of the parties
516 | receiving the covered work authorizing them to use, propagate, modify
517 | or convey a specific copy of the covered work, then the patent license
518 | you grant is automatically extended to all recipients of the covered
519 | work and works based on it.
520 | 
521 |   A patent license is "discriminatory" if it does not include within
522 | the scope of its coverage, prohibits the exercise of, or is
523 | conditioned on the non-exercise of one or more of the rights that are
524 | specifically granted under this License.  You may not convey a covered
525 | work if you are a party to an arrangement with a third party that is
526 | in the business of distributing software, under which you make payment
527 | to the third party based on the extent of your activity of conveying
528 | the work, and under which the third party grants, to any of the
529 | parties who would receive the covered work from you, a discriminatory
530 | patent license (a) in connection with copies of the covered work
531 | conveyed by you (or copies made from those copies), or (b) primarily
532 | for and in connection with specific products or compilations that
533 | contain the covered work, unless you entered into that arrangement,
534 | or that patent license was granted, prior to 28 March 2007.
535 | 
536 |   Nothing in this License shall be construed as excluding or limiting
537 | any implied license or other defenses to infringement that may
538 | otherwise be available to you under applicable patent law.
539 | 
540 |   12. No Surrender of Others' Freedom.
541 | 
542 |   If conditions are imposed on you (whether by court order, agreement or
543 | otherwise) that contradict the conditions of this License, they do not
544 | excuse you from the conditions of this License.  If you cannot convey a
545 | covered work so as to satisfy simultaneously your obligations under this
546 | License and any other pertinent obligations, then as a consequence you may
547 | not convey it at all.  For example, if you agree to terms that obligate you
548 | to collect a royalty for further conveying from those to whom you convey
549 | the Program, the only way you could satisfy both those terms and this
550 | License would be to refrain entirely from conveying the Program.
551 | 
552 |   13. Use with the GNU Affero General Public License.
553 | 
554 |   Notwithstanding any other provision of this License, you have
555 | permission to link or combine any covered work with a work licensed
556 | under version 3 of the GNU Affero General Public License into a single
557 | combined work, and to convey the resulting work.  The terms of this
558 | License will continue to apply to the part which is the covered work,
559 | but the special requirements of the GNU Affero General Public License,
560 | section 13, concerning interaction through a network will apply to the
561 | combination as such.
562 | 
563 |   14. Revised Versions of this License.
564 | 
565 |   The Free Software Foundation may publish revised and/or new versions of
566 | the GNU General Public License from time to time.  Such new versions will
567 | be similar in spirit to the present version, but may differ in detail to
568 | address new problems or concerns.
569 | 
570 |   Each version is given a distinguishing version number.  If the
571 | Program specifies that a certain numbered version of the GNU General
572 | Public License "or any later version" applies to it, you have the
573 | option of following the terms and conditions either of that numbered
574 | version or of any later version published by the Free Software
575 | Foundation.  If the Program does not specify a version number of the
576 | GNU General Public License, you may choose any version ever published
577 | by the Free Software Foundation.
578 | 
579 |   If the Program specifies that a proxy can decide which future
580 | versions of the GNU General Public License can be used, that proxy's
581 | public statement of acceptance of a version permanently authorizes you
582 | to choose that version for the Program.
583 | 
584 |   Later license versions may give you additional or different
585 | permissions.  However, no additional obligations are imposed on any
586 | author or copyright holder as a result of your choosing to follow a
587 | later version.
588 | 
589 |   15. Disclaimer of Warranty.
590 | 
591 |   THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
592 | APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
593 | HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
594 | OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
595 | THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
596 | PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
597 | IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
598 | ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
599 | 
600 |   16. Limitation of Liability.
601 | 
602 |   IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
603 | WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
604 | THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
605 | GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
606 | USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
607 | DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
608 | PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
609 | EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
610 | SUCH DAMAGES.
611 | 
612 |   17. Interpretation of Sections 15 and 16.
613 | 
614 |   If the disclaimer of warranty and limitation of liability provided
615 | above cannot be given local legal effect according to their terms,
616 | reviewing courts shall apply local law that most closely approximates
617 | an absolute waiver of all civil liability in connection with the
618 | Program, unless a warranty or assumption of liability accompanies a
619 | copy of the Program in return for a fee.
620 | 
621 |                      END OF TERMS AND CONDITIONS
622 | 
623 |             How to Apply These Terms to Your New Programs
624 | 
625 |   If you develop a new program, and you want it to be of the greatest
626 | possible use to the public, the best way to achieve this is to make it
627 | free software which everyone can redistribute and change under these terms.
628 | 
629 |   To do so, attach the following notices to the program.  It is safest
630 | to attach them to the start of each source file to most effectively
631 | state the exclusion of warranty; and each file should have at least
632 | the "copyright" line and a pointer to where the full notice is found.
633 | 
634 |     <one line to give the program's name and a brief idea of what it does.>
635 |     Copyright (C) <year>  <name of author>
636 | 
637 |     This program is free software: you can redistribute it and/or modify
638 |     it under the terms of the GNU General Public License as published by
639 |     the Free Software Foundation, either version 3 of the License, or
640 |     (at your option) any later version.
641 | 
642 |     This program is distributed in the hope that it will be useful,
643 |     but WITHOUT ANY WARRANTY; without even the implied warranty of
644 |     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
645 |     GNU General Public License for more details.
646 | 
647 |     You should have received a copy of the GNU General Public License
648 |     along with this program.  If not, see <https://www.gnu.org/licenses/>.
649 | 
650 | Also add information on how to contact you by electronic and paper mail.
651 | 
652 |   If the program does terminal interaction, make it output a short
653 | notice like this when it starts in an interactive mode:
654 | 
655 |     <program>  Copyright (C) <year>  <name of author>
656 |     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
657 |     This is free software, and you are welcome to redistribute it
658 |     under certain conditions; type `show c' for details.
659 | 
660 | The hypothetical commands `show w' and `show c' should show the appropriate
661 | parts of the General Public License.  Of course, your program's commands
662 | might be different; for a GUI interface, you would use an "about box".
663 | 
664 |   You should also get your employer (if you work as a programmer) or school,
665 | if any, to sign a "copyright disclaimer" for the program, if necessary.
666 | For more information on this, and how to apply and follow the GNU GPL, see
667 | <https://www.gnu.org/licenses/>.
668 | 
669 |   The GNU General Public License does not permit incorporating your program
670 | into proprietary programs.  If your program is a subroutine library, you
671 | may consider it more useful to permit linking proprietary applications with
672 | the library.  If this is what you want to do, use the GNU Lesser General
673 | Public License instead of this License.  But first, please read
674 | <https://www.gnu.org/licenses/why-not-lgpl.html>.


--------------------------------------------------------------------------------
/README.md:
--------------------------------------------------------------------------------
  1 | # Obsidian Style Settings Plugin
  2 | 
  3 | This plugin allows snippet, theme, and plugin CSS files to define a set of configuration options. It then allows users to see all the tweakable settings in one settings pane. Style Settings allows both toggling classes on and off the `body` element, as well as setting numeric, string, and color CSS variables.
  4 | 
  5 | **[This CSS Snippet](obsidian-default-theme.css) can be used to adjust every CSS variable of the default Obsidian theme.** 
  6 | 
  7 | Configurable settings are defined by comments within CSS files beginning with `/* @settings`. These comments must contain YAML with `name`, `id`, and `settings` properties. Style Settings will scan for these comments in all CSS loaded by Obsidian from the `snippets`, `themes`, and `plugins` directories under your vault's configuration directory (`%yourVault%/.obsidian/`).  Please see the [Obsidian Docs](https://help.obsidian.md/Home) for more information.
  8 | 
  9 | For example, adding this to a CSS snippet in your vault's snippets directory (`%yourVault%/.obsidian/snippets`):
 10 | 
 11 | ```css
 12 | /* @settings
 13 | 
 14 | name: Your Section Name Here
 15 | id: a-unique-id
 16 | settings:
 17 |     - 
 18 |         id: my-title
 19 |         title: My Settings
 20 |         type: heading
 21 |         level: 3
 22 |     - 
 23 |         id: accent
 24 |         title: Accent Color
 25 |         type: variable-color
 26 |         format: hsl-split
 27 |         default: '#007AFF'
 28 |     - 
 29 |         id: text
 30 |         title: UI font
 31 |         description: Font used for the user interface
 32 |         type: variable-text
 33 |         default: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif
 34 | 
 35 | */
 36 | ```
 37 | 
 38 | will result in:
 39 | 
 40 | <img src="https://raw.githubusercontent.com/mgmeyers/obsidian-style-settings/main/screenshots/example01.png" alt="Example output of plugin" />
 41 | 
 42 | Each setting definition must be separated by a dash (`-`). There are 7 setting types.
 43 | 
 44 | All settings definitions must have these parameters:
 45 | 
 46 | - `id`: A unique id for the setting parameter
 47 | - `title`: The name of the setting
 48 | - `description` (optional): a description of the setting
 49 | - `type`: The type of setting. Can be one of:
 50 |   - `heading`: a heading element for organizing settings
 51 |   - `class-toggle`: a switch to toggle classes on the `body` element
 52 |   - `class-select`: a dropdown menu of predefined options to add classes on the `body` element
 53 |   - `variable-text`: a text-based CSS variable
 54 |   - `variable-number`: a numeric CSS variable
 55 |   - `variable-number-slider`: a numeric CSS variable represented by a slider
 56 |   - `variable-select`: a text-based CSS variable displayed as a dropdown menu of predefined options
 57 |   - `variable-color`: a color CSS variable with corresponding color picker
 58 | 
 59 | 
 60 | ## `heading`
 61 | 
 62 | `heading`s can be used to organize and group settings into collapsable nested sections. Along with the required attributes, `heading`s must contain a `level` attribute between `1` and `6`, and can optionally contain a `collapsed` attribute:
 63 | 
 64 | ```css
 65 | /* @settings
 66 | 
 67 | name: Your Section Name Here
 68 | id: a-unique-id
 69 | settings:
 70 |     - 
 71 |         id: this-is-a-heading
 72 |         title: My Heading
 73 |         type: heading
 74 |         level: 2
 75 |         collapsed: true
 76 | 
 77 | */
 78 | ```
 79 | 
 80 | ## `info-text`
 81 | 
 82 | `info-text` displays arbitrary informational text to users. The `description` may contain markdown if `markdown` is set to `true`.
 83 | 
 84 | ```css
 85 | /* @settings
 86 | 
 87 | name: Your Section Name Here
 88 | id: a-unique-id
 89 | settings:
 90 |     - 
 91 |         id: my-info-text
 92 |         title: Information
 93 |         description: "This is *informational* text"
 94 |         type: info-text
 95 |         markdown: true
 96 | 
 97 | */
 98 | ```
 99 | 
100 | ## `class-toggle`
101 | 
102 | `class-toggle`s will toggle a css class on and off of the `body` element, allowing CSS themes and snippets to toggle features on and off. The `id` of the setting will be used as the class name. The `default` parameter can optionally be set to `true`. `class-toggle` also supports the `addCommand` property. When set to `true` a command will be added to obsidian to toggle the class via a hotkey or the command palette.
103 | 
104 | ```css
105 | /* @settings
106 | 
107 | name: Your Section Name Here
108 | id: a-unique-id
109 | settings:
110 |     - 
111 |         id: my-css-class
112 |         title: My Toggle
113 |         description: Adds my-css-class to the body element
114 |         type: class-toggle
115 | 
116 | */
117 | ```
118 | 
119 | ## `class-select`
120 | 
121 | `class-select` creates a dropdown of predefined options for a CSS variable. The `id` of the setting will be used as the variable name.
122 | 
123 | - When `allowEmpty` is `false`, a `default` option **must** be specified.
124 | - When `allowEmpty` is `true`, the `default` attribute is optional, and may be set to `none`.
125 | 
126 | ```css
127 | /* @settings
128 | 
129 | name: Your Section Name Here
130 | id: a-unique-id
131 | settings:
132 |     - 
133 |         id: theme-variant
134 |         title: Theme variant
135 |         description: Variations on a theme
136 |         type: class-select
137 |         allowEmpty: false
138 |         default: my-class
139 |         options:
140 |             - my-class
141 |             - my-other-class
142 |             - and-yet-another
143 | 
144 | */
145 | ```
146 | 
147 | Options may also be given a label:
148 | 
149 | ```css
150 | /* @settings
151 | 
152 | name: Your Section Name Here
153 | id: a-unique-id
154 | settings:
155 |     - 
156 |         id: theme-variant
157 |         title: Theme variant
158 |         description: Variations on a theme
159 |         type: class-select
160 |         allowEmpty: false
161 |         default: my-class
162 |         options:
163 |             - 
164 |                 label: My Class
165 |                 value: my-class
166 |             - 
167 |                 label: My Other Class
168 |                 value: my-other-class
169 | */
170 | ```
171 | 
172 | ## `variable-text`
173 | 
174 | `variable-text` represents any text based CSS value. The `id` of the setting will be used as the variable name. The output will be wrapped in quotes if `quotes` is set to true. `variable-text` settings require a `default` attribute.
175 | 
176 | ```css
177 | /* @settings
178 | 
179 | name: Your Section Name Here
180 | id: a-unique-id
181 | settings:
182 |     - 
183 |         id: text
184 |         title: UI font
185 |         description: Font used for the user interface
186 |         type: variable-text
187 |         default: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif
188 | 
189 | */
190 | ```
191 | 
192 | This will output the variable:
193 | 
194 | ```
195 | --text: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
196 | ```
197 | 
198 | Using `quotes`:
199 | 
200 | ```css
201 | /* @settings
202 | 
203 | name: Your Section Name Here
204 | id: a-unique-id
205 | settings:
206 |     -
207 |         id: icon
208 |         title: Bullet Icon
209 |         description: Text used in bullet points
210 |         type: variable-text
211 |         default: •
212 |         quotes: true
213 | */
214 | ```
215 | 
216 | This will output the variable:
217 | 
218 | ```
219 | --icon: '•'
220 | ```
221 | 
222 | ## `variable-number`
223 | 
224 | `variable-number` represents any numeric CSS value. The `id` of the setting will be used as the variable name. `variable-number` settings require a `default` attribute. Optionally, a `format` attribute can be set. This value will be appended to the number. Eg `format: px` will result in `42px`
225 | 
226 | ```css
227 | /* @settings
228 | 
229 | name: Your Section Name Here
230 | id: a-unique-id
231 | settings:
232 |     - 
233 |         id: line-width
234 |         title: Line width
235 |         description: The maximum line width in rem units
236 |         type: variable-number
237 |         default: 42
238 |         format: rem
239 | 
240 | */
241 | ```
242 | 
243 | This will output the variable:
244 | 
245 | ```
246 | --line-width: 42rem;
247 | ```
248 | 
249 | ## `variable-number-slider`
250 | 
251 | `variable-number-slider` represents any numeric CSS value. The `id` of the setting will be used as the variable name. `variable-number-slider` settings require a `default` attribute, as well as these three attributes:
252 | 
253 | - `min`: The minimum possible value of the slider
254 | - `max`: The maximum possible value of the slider
255 | - `step`: The size of each "tick" of the slider. For example, a step of 100 will only allow the slider to move in increments of 100.
256 | 
257 | Optionally, a `format` attribute can be set. This value will be appended to the number. Eg `format: px` will result in `42px`
258 | 
259 | ```css
260 | /* @settings
261 | 
262 | name: Your Section Name Here
263 | id: a-unique-id
264 | settings:
265 |     - 
266 |         id: line-width
267 |         title: Line width
268 |         description: The maximum line width in rem units
269 |         type: variable-number-slider
270 |         default: 42
271 |         min: 10
272 |         max: 100
273 |         step: 1
274 | 
275 | */
276 | ```
277 | 
278 | This will output the variable:
279 | 
280 | ```
281 | --line-width: 42;
282 | ```
283 | 
284 | ## `variable-select`
285 | 
286 | `variable-select` creates a dropdown of predefined options for a CSS variable. The `id` of the setting will be used as the variable name. `variable-select` settings require a `default` attribute as well as a list of `options`.
287 | 
288 | ```css
289 | /* @settings
290 | 
291 | name: Your Section Name Here
292 | id: a-unique-id
293 | settings:
294 |     - 
295 |         id: text
296 |         title: UI font
297 |         description: Font used for the user interface
298 |         type: variable-select
299 |         default: Roboto
300 |         options:
301 |             - Roboto
302 |             - Helvetica Neue
303 |             - sans-serif
304 |             - Segoe UI
305 | 
306 | */
307 | ```
308 | 
309 | Options can optionally be given a label:
310 | 
311 | ```css
312 | /* @settings
313 | 
314 | name: Your Section Name Here
315 | id: a-unique-id
316 | settings:
317 |     - 
318 |         id: text
319 |         title: UI font
320 |         description: Font used for the user interface
321 |         type: variable-select
322 |         default: Roboto
323 |         options:
324 |             - 
325 |                 label: The best font
326 |                 value: Roboto
327 |             - 
328 |                 label: The next best font
329 |                 value: Helvetica Neue
330 | */
331 | ```
332 | 
333 | This will output the variable:
334 | 
335 | ```
336 | --text: Roboto;
337 | ```
338 | 
339 | ## `variable-color`
340 | 
341 | `variable-color` creates a color picker with a variety of output format options. A `default` attribute is required in `hex` or `rgb` format. **Note: hex color values must be wrapped in quotes.** A `format` attribute is also required. 
342 | 
343 | Optional parameters:
344 | -  Setting `opacity` to `true` will enable opacity support in all output formats.
345 | -  A list of alternate output formats can be supplied via the `alt-format` setting
346 | 
347 | ```css
348 | /* @settings
349 | 
350 | name: Your Section Name Here
351 | id: a-unique-id
352 | settings:
353 |     - 
354 |         id: accent
355 |         title: Accent Color
356 |         type: variable-color
357 |         opacity: false
358 |         format: hex
359 |         alt-format:
360 |             -
361 |                 id: accent-rgb
362 |                 format: rgb
363 |         default: '#007AFF'
364 | 
365 | */
366 | ```
367 | 
368 | This will output the variable:
369 | 
370 | ```
371 | --accent: #007AFF;
372 | --accent-rgb: rgb(0, 123, 255);
373 | ```
374 | 
375 | ## `variable-themed-color`
376 | 
377 | `variable-themed-color` is identical to `variable-color` except that it generates two color pickers for a light and dark variant.
378 | 
379 | ```css
380 | /* @settings
381 | 
382 | name: Your Section Name Here
383 | id: a-unique-id
384 | settings:
385 |     - 
386 |         id: accent
387 |         title: Accent Color
388 |         type: variable-themed-color
389 |         format: hex
390 |         opacity: false
391 |         default-light: '#007AFF'
392 |         default-dark: '#2DB253'
393 | 
394 | */
395 | ```
396 | 
397 | This will output the variables:
398 | 
399 | ```
400 | body.theme-light.css-settings-manager { --accent: #007AFF; } 
401 | body.theme-dark.css-settings-manager { --accent: #2DB253; }
402 | ```
403 | 
404 | ### `variable-color` formatting options
405 | 
406 | There are 8 formatting options:
407 | 
408 | - `hex`
409 | 
410 | ```
411 | --accent: #007AFF;
412 | ```
413 | 
414 | When `opacity` is set to `true`:
415 | 
416 | ```
417 | --accent: #007AFFFF;
418 | ```
419 | 
420 | - `rgb`
421 | 
422 | ```
423 | --accent: rgb(0, 122, 255);
424 | ```
425 | 
426 | When `opacity` is set to `true`:
427 | 
428 | ```
429 | --accent: rgba(0, 122, 255, 1);
430 | ```
431 | 
432 | - `rgb-values`
433 | 
434 | ```
435 | --accent: 0, 122, 255;
436 | ```
437 | 
438 | When `opacity` is set to `true`:
439 | 
440 | ```
441 | --accent: 0, 122, 255, 1;
442 | ```
443 | 
444 | - `rgb-split`
445 | 
446 | ```
447 | --accent-r: 0;
448 | --accent-g: 122;
449 | --accent-b: 255;
450 | ```
451 | 
452 | When `opacity` is set to `true`:
453 | 
454 | ```
455 | --accent-r: 0;
456 | --accent-g: 122;
457 | --accent-b: 255;
458 | --accent-a: 1;
459 | ```
460 | 
461 | - `hsl`
462 | 
463 | ```
464 | --accent: hsl(211, 100%, 50%);
465 | ```
466 | 
467 | When `opacity` is set to `true`:
468 | 
469 | ```
470 | --accent: hsla(211, 100%, 50%, 1);
471 | ```
472 | 
473 | - `hsl-values`
474 | 
475 | ```
476 | --accent: 211, 100%, 50%;
477 | ```
478 | 
479 | When `opacity` is set to `true`:
480 | 
481 | ```
482 | --accent: 211, 100%, 50%, 1;
483 | ```
484 | 
485 | - `hsl-split`
486 | 
487 | ```
488 | --accent-h: 211;
489 | --accent-s: 100%;
490 | --accent-l: 50%;
491 | ```
492 | 
493 | When `opacity` is set to `true`:
494 | 
495 | ```
496 | --accent-h: 211;
497 | --accent-s: 100%;
498 | --accent-l: 50%;
499 | --accent-a: 1;
500 | ```
501 | 
502 | - `hsl-split-decimal`
503 | 
504 | ```
505 | --accent-h: 211;
506 | --accent-s: 1;
507 | --accent-l: 0.5;
508 | ```
509 | 
510 | When `opacity` is set to `true`:
511 | 
512 | ```
513 | --accent-h: 211;
514 | --accent-s: 1;
515 | --accent-l: 0.5;
516 | --accent-a: 1;
517 | ```
518 | 
519 | ## `color-gradient`
520 | 
521 | `color-gradient` outputs a fixed number of colors along a gradient between two existing color variables. A `format` attribute is also required. *Note: The `to` variable must be set in style settings for the gradient to be generated. Also, gradients will only be generated using colors defined under the current style settings `id`.*
522 | 
523 | Parameters:
524 | - `from`: The starting color, or color that will be at step 0
525 | - `to`: The ending color, or color that will be at step 100
526 | - `step`: The increment at which to output a CSS variable. For example, setting `step` to `10` will output `--var-0`, `--var-10`, `--var-20`, etc...
527 | - `format`: Can be one of: `hsl`, `rgb`, or `hex`;
528 | - `pad`?: When set, the number section of the variable will be padded with `0`'s until it contains this number of digits. For example, setting `pad` to `3` and `step` to `10` will output `--var-000`, `--var-010`, `--var-020`
529 | 
530 | ```css
531 | /* @settings
532 | 
533 | name: Your Section Name Here
534 | id: a-unique-id
535 | settings:
536 |     -
537 |         id: color-base
538 |         type: color-gradient
539 |         from: color-base-00
540 |         to: color-base-100
541 |         step: 5
542 |         pad: 2
543 |         format: hex
544 | 
545 | */
546 | ```
547 | 
548 | ## Plugin Support
549 | 
550 | Plugins can specify a style setting config in the plugin's CSS. Plugins must call `app.workspace.trigger("parse-style-settings")` when the plugin loads in order for Style Settings to be notified of CSS changes.
551 | 
552 | ## Localization Support
553 | 
554 | Translations for titles and descriptions can be supplied for each language Obsidian supports by using one of the following postfixes:
555 | 
556 | ```
557 | en: English
558 | zh: 简体中文
559 | zh-TW: 繁體中文
560 | ru: Pусский
561 | ko: 한국어
562 | it: Italiano
563 | id: Bahasa Indonesia
564 | ro: Română
565 | pt-BR: Portugues do Brasil
566 | cz: čeština
567 | de: Deutsch
568 | es: Español
569 | fr: Français
570 | no: Norsk
571 | pl: język polski
572 | pt: Português
573 | ja: 日本語
574 | da: Dansk
575 | uk: Український
576 | sq: Shqip
577 | tr: Türkçe (kısmi)
578 | hi: हिन्दी (आंशिक)
579 | nl: Nederlands (gedeeltelijk)
580 | ar: العربية (جزئي)
581 | ```
582 | 
583 | For example:
584 | 
585 | ```css
586 | /* @settings
587 | 
588 | name: Your Section Name Here
589 | id: a-unique-id
590 | settings:
591 |     - 
592 |         id: my-css-class
593 |         title: My Toggle
594 |         title.de: Mein Toggle
595 |         title.ko: 내 토글
596 |         description: Adds my-css-class to the body element
597 |         description.de: Fügt my-css-class zum body-Element hinzu
598 |         description.ko: my-css-class를 body 요소에 추가합니다.
599 |         type: class-toggle
600 | 
601 | */
602 | ```
603 | 


--------------------------------------------------------------------------------
/babel.config.js:
--------------------------------------------------------------------------------
1 | module.exports = {
2 |   presets: [
3 |     ['@babel/preset-env', { targets: { node: 'current' } }],
4 |     '@babel/preset-typescript',
5 |   ],
6 | };
7 | 


--------------------------------------------------------------------------------
/esbuild.config.mjs:
--------------------------------------------------------------------------------
 1 | import esbuild from "esbuild";
 2 | import process from "process";
 3 | import builtins from "builtin-modules";
 4 | 
 5 | const banner =
 6 | `/*
 7 | THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
 8 | if you want to view the source, please visit the github repository of this plugin
 9 | */
10 | `;
11 | 
12 | const prod = (process.argv[2] === "production");
13 | 
14 | const context = await esbuild.context({
15 | 	banner: {
16 | 		js: banner,
17 | 	},
18 | 	entryPoints: ["src/main.ts"],
19 | 	bundle: true,
20 | 	external: [
21 | 		"obsidian",
22 | 		"electron",
23 | 		"@codemirror/autocomplete",
24 | 		"@codemirror/collab",
25 | 		"@codemirror/commands",
26 | 		"@codemirror/language",
27 | 		"@codemirror/lint",
28 | 		"@codemirror/search",
29 | 		"@codemirror/state",
30 | 		"@codemirror/view",
31 | 		"@lezer/common",
32 | 		"@lezer/highlight",
33 | 		"@lezer/lr",
34 | 		...builtins],
35 | 	format: "cjs",
36 | 	target: "es2018",
37 | 	logLevel: "info",
38 | 	sourcemap: prod ? false : "inline",
39 | 	treeShaking: true,
40 | 	outfile: "main.js",
41 | 	minify: prod,
42 | });
43 | 
44 | if (prod) {
45 | 	await context.rebuild();
46 | 	process.exit(0);
47 | } else {
48 | 	await context.watch();
49 | }
50 | 


--------------------------------------------------------------------------------
/main.css:
--------------------------------------------------------------------------------
1 | .style-settings-container .pcr-app{display:none}.style-settings-container .pcr-app.visible{display:flex}.pcr-app .pcr-swatches>button{padding:0}.pickr .pcr-button{margin-right:0}.themed-color-wrapper>div{background:var(--background-primary);padding:10px;display:flex;align-items:center;border-radius:4px}.themed-color-wrapper>div+div{margin-top:6px}.themed-color-wrapper button{display:block}.themed-color-wrapper .pickr-reset>button{margin:0 0 0 10px;padding:9px;line-height:1}.themed-color-wrapper .pickr-reset>button>svg{display:block}.style-settings-heading{cursor:pointer;margin-bottom:18px;padding-bottom:6px;border-bottom:1px solid var(--background-modifier-border)}.style-settings-heading[data-level="0"]{margin-bottom:26px}.style-settings-container{padding-bottom:16px}.style-settings-heading[data-level="0"]+.style-settings-container{padding-left:34px}.style-settings-heading.is-collapsed{margin-bottom:0}.style-settings-heading.is-collapsed+.style-settings-container{display:none}.style-settings-collapse-indicator{color:var(--text-faint);display:inline-block;margin-right:8px;position:relative;top:-1px}.style-settings-heading[data-level="0"]+.style-settings-container .style-settings-collapse-indicator{margin-left:-17px}.style-settings-collapse-indicator>svg{height:9px;width:9px}.style-settings-heading.is-collapsed .style-settings-collapse-indicator>svg{transform:rotate(-90deg)}.style-settings-filter-result-count{color:var(--text-faint);line-height:var(--line-height-tight);margin-inline:var(--size-4-2)}.style-settings-error{font-size:14px;border-radius:6px;background:rgba(var(--background-modifier-error-rgb),.2);color:var(--text-error);padding:10px;margin-bottom:1rem}.style-settings-error-name{font-weight:700;margin-bottom:5px}.style-settings-error-desc{white-space:pre}.style-settings-empty{font-size:14px;background:var(--background-secondary);padding:10px}.style-settings-empty-name{font-weight:700;margin-bottom:5px}.style-settings-import-input{width:.1px;height:.1px;opacity:0;overflow:hidden;position:absolute;z-index:-1}.style-settings-import-label{cursor:pointer;color:var(--text-accent);text-decoration:underline}.style-settings-import-label:hover{color:var(--text-accent-hover)}.style-settings-export,.style-settings-import{display:inline-block;margin-right:10px}.style-settings-copy,.style-settings-download{position:relative;display:inline-block;margin-left:10px}.style-settings-copy:before{color:var(--interactive-success);content:"\2713";position:absolute;left:-18px;font-weight:700;opacity:0;transition:.15s opacity ease-in-out}.style-settings-copy.success:before{opacity:1}.modal-style-settings{height:70vh;display:flex;flex-direction:column}.modal-style-settings .modal-content{flex-grow:1;margin:0;display:flex;flex-direction:column}.modal-style-settings textarea{display:block;width:100%;height:100%;font-family:var(--font-monospace)!important;font-size:12px;white-space:pre;overflow-wrap:normal;overflow-x:scroll;margin-bottom:5px}.modal-style-settings .setting-item{align-items:flex-start}.modal-style-settings button{margin:10px 0 0}.style-settings-import-error{display:none;color:var(--text-error)}.style-settings-import-error.active{display:block}.view-content .style-settings-container .setting-item:not(.setting-item-heading){flex-direction:column;align-items:flex-start}.view-content .style-settings-container .setting-item:not(.setting-item-heading) .setting-item-control{padding-top:.5em}.view-content .style-settings-container .setting-item:not(.setting-item-heading) .themed-color-wrapper{display:flex}.style-settings-ref{position:absolute;width:0!important;height:0!important;pointer-events:none}.style-settings-info-text .style-settings-markdown :first-child{margin-top:0}.style-settings-info-text .style-settings-markdown :last-child{margin-bottom:0}.pickr{position:relative;overflow:visible;transform:translateY(0)}.pickr *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pickr .pcr-button{position:relative;height:2em;width:2em;padding:.5em;cursor:pointer;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;border-radius:.15em;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50" stroke="%2342445A" stroke-width="5px" stroke-linecap="round"><path d="M45,45L5,5"></path><path d="M45,5L5,45"></path></svg>') no-repeat center;background-size:0;transition:all .3s}.pickr .pcr-button:before{position:absolute;content:"";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pickr .pcr-button:before{z-index:initial}.pickr .pcr-button:after{position:absolute;content:"";top:0;left:0;height:100%;width:100%;transition:background .3s;background:var(--pcr-color);border-radius:.15em}.pickr .pcr-button.clear{background-size:70%}.pickr .pcr-button.clear:before{opacity:0}.pickr .pcr-button.clear:focus{box-shadow:0 0 0 1px #ffffffd9,0 0 0 3px var(--pcr-color)}.pickr .pcr-button.disabled{cursor:not-allowed}.pickr *,.pcr-app *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pickr input:focus,.pickr input.pcr-active,.pickr button:focus,.pickr button.pcr-active,.pcr-app input:focus,.pcr-app input.pcr-active,.pcr-app button:focus,.pcr-app button.pcr-active{box-shadow:0 0 0 1px #ffffffd9,0 0 0 3px var(--pcr-color)}.pickr .pcr-palette,.pickr .pcr-slider,.pcr-app .pcr-palette,.pcr-app .pcr-slider{transition:box-shadow .3s}.pickr .pcr-palette:focus,.pickr .pcr-slider:focus,.pcr-app .pcr-palette:focus,.pcr-app .pcr-slider:focus{box-shadow:0 0 0 1px #ffffffd9,0 0 0 3px #00000040}.pcr-app{position:fixed;display:flex;flex-direction:column;z-index:10000;border-radius:.1em;background:#fff;opacity:0;visibility:hidden;transition:opacity .3s,visibility 0s .3s;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;box-shadow:0 .15em 1.5em #0000001a,0 0 1em #00000008;left:0;top:0}.pcr-app.visible{transition:opacity .3s;visibility:visible;opacity:1}.pcr-app .pcr-swatches{display:flex;flex-wrap:wrap;margin-top:.75em}.pcr-app .pcr-swatches.pcr-last{margin:0}@supports (display: grid){.pcr-app .pcr-swatches{display:grid;align-items:center;grid-template-columns:repeat(auto-fit,1.75em)}}.pcr-app .pcr-swatches>button{font-size:1em;position:relative;width:calc(1.75em - 5px);height:calc(1.75em - 5px);border-radius:.15em;cursor:pointer;margin:2.5px;flex-shrink:0;justify-self:center;transition:all .15s;overflow:hidden;background:transparent;z-index:1}.pcr-app .pcr-swatches>button:before{position:absolute;content:"";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:6px;border-radius:.15em;z-index:-1}.pcr-app .pcr-swatches>button:after{content:"";position:absolute;top:0;left:0;width:100%;height:100%;background:var(--pcr-color);border:1px solid rgba(0,0,0,.05);border-radius:.15em;box-sizing:border-box}.pcr-app .pcr-swatches>button:hover{filter:brightness(1.05)}.pcr-app .pcr-swatches>button:not(.pcr-active){box-shadow:none}.pcr-app .pcr-interaction{display:flex;flex-wrap:wrap;align-items:center;margin:0 -.2em}.pcr-app .pcr-interaction>*{margin:0 .2em}.pcr-app .pcr-interaction input{letter-spacing:.07em;font-size:.75em;text-align:center;cursor:pointer;color:#75797e;background:#f1f3f4;border-radius:.15em;transition:all .15s;padding:.45em .5em;margin-top:.75em}.pcr-app .pcr-interaction input:hover{filter:brightness(.975)}.pcr-app .pcr-interaction input:focus{box-shadow:0 0 0 1px #ffffffd9,0 0 0 3px #4285f4bf}.pcr-app .pcr-interaction .pcr-result{color:#75797e;text-align:left;flex:1 1 8em;min-width:8em;transition:all .2s;border-radius:.15em;background:#f1f3f4;cursor:text}.pcr-app .pcr-interaction .pcr-result::-moz-selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-result::selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-type.active{color:#fff;background:#4285f4}.pcr-app .pcr-interaction .pcr-save,.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear{color:#fff;width:auto}.pcr-app .pcr-interaction .pcr-save,.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear{color:#fff}.pcr-app .pcr-interaction .pcr-save:hover,.pcr-app .pcr-interaction .pcr-cancel:hover,.pcr-app .pcr-interaction .pcr-clear:hover{filter:brightness(.925)}.pcr-app .pcr-interaction .pcr-save{background:#4285f4}.pcr-app .pcr-interaction .pcr-clear,.pcr-app .pcr-interaction .pcr-cancel{background:#f44250}.pcr-app .pcr-interaction .pcr-clear:focus,.pcr-app .pcr-interaction .pcr-cancel:focus{box-shadow:0 0 0 1px #ffffffd9,0 0 0 3px #f44250bf}.pcr-app .pcr-selection .pcr-picker{position:absolute;height:18px;width:18px;border:2px solid #fff;border-radius:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.pcr-app .pcr-selection .pcr-color-palette,.pcr-app .pcr-selection .pcr-color-chooser,.pcr-app .pcr-selection .pcr-color-opacity{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-direction:column;cursor:grab;cursor:-webkit-grab}.pcr-app .pcr-selection .pcr-color-palette:active,.pcr-app .pcr-selection .pcr-color-chooser:active,.pcr-app .pcr-selection .pcr-color-opacity:active{cursor:grabbing;cursor:-webkit-grabbing}.pcr-app[data-theme=nano]{width:14.25em;max-width:95vw}.pcr-app[data-theme=nano] .pcr-swatches{margin-top:.6em;padding:0 .6em}.pcr-app[data-theme=nano] .pcr-interaction{padding:0 .6em .6em}.pcr-app[data-theme=nano] .pcr-selection{display:grid;grid-gap:.6em;grid-template-columns:1fr 4fr;grid-template-rows:5fr auto auto;align-items:center;height:10.5em;width:100%;align-self:flex-start}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview{grid-area:2 / 1 / 4 / 1;height:100%;width:100%;display:flex;flex-direction:row;justify-content:center;margin-left:.6em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-last-color{display:none}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color{position:relative;background:var(--pcr-color);width:2em;height:2em;border-radius:50em;overflow:hidden}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-preview .pcr-current-color:before{position:absolute;content:"";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette{grid-area:1 / 1 / 2 / 3;width:100%;height:100%;z-index:1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette{border-radius:.15em;width:100%;height:100%}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-palette .pcr-palette:before{position:absolute;content:"";top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser{grid-area:2 / 2 / 2 / 2}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{grid-area:3 / 2 / 3 / 2}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity{height:.5em;margin:0 .6em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-picker,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-picker{top:50%;transform:translateY(-50%)}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider,.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{flex-grow:1;border-radius:50em}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-chooser .pcr-slider{background:linear-gradient(to right,red,#ff0,lime,cyan,blue,#f0f,red)}.pcr-app[data-theme=nano] .pcr-selection .pcr-color-opacity .pcr-slider{background:linear-gradient(to right,transparent,black),url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:100%,.25em}
2 | /*! Bundled license information:
3 | 
4 | @simonwep/pickr/dist/themes/nano.min.css:
5 |   (*! Pickr 1.8.4 MIT | https://github.com/Simonwep/pickr *)
6 | */
7 | 


--------------------------------------------------------------------------------
/manifest.json:
--------------------------------------------------------------------------------
 1 | {
 2 | 	"id": "obsidian-style-settings",
 3 | 	"name": "Style Settings",
 4 | 	"version": "1.0.9",
 5 | 	"minAppVersion": "0.11.5",
 6 | 	"description": "Offers controls for adjusting theme, plugin, and snippet CSS variables.",
 7 | 	"author": "mgmeyers",
 8 | 	"authorUrl": "https://github.com/mgmeyers/obsidian-style-settings",
 9 | 	"isDesktopOnly": false
10 | }
11 | 


--------------------------------------------------------------------------------
/obsidian-default-theme.css:
--------------------------------------------------------------------------------
  1 | /* @settings
  2 | 
  3 | name: Obsidian Default Theme
  4 | id: obsidian-default-theme
  5 | settings:
  6 |   - 
  7 |     id: heading-fonts
  8 |     title: Fonts
  9 |     type: heading
 10 |     level: 1
 11 |     collapsed: true
 12 |   - 
 13 |     id: default-font
 14 |     title: Base Font
 15 |     type: variable-text
 16 |     default: '"Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Microsoft YaHei Light", sans-serif'
 17 |   - 
 18 |     id: mermaid-font
 19 |     title: Mermaid Font
 20 |     type: variable-text
 21 |     default: '"Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Microsoft YaHei Light", sans-serif'
 22 |   - 
 23 |     id: reveal-font
 24 |     title: Reveal Font
 25 |     type: variable-text
 26 |     default: '"Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Microsoft YaHei Light", sans-serif'
 27 |   - 
 28 |     id: font-monospace
 29 |     title: Monospace Font
 30 |     description: Used for codeblocks, tables, etc.
 31 |     type: variable-text
 32 |     default: '"Source Code Pro", monospace'
 33 |   
 34 |   - 
 35 |     id: heading-translucency
 36 |     title: Translucency
 37 |     type: heading
 38 |     level: 1
 39 |     collapsed: true
 40 |   -
 41 |     id: opacity-translucency-light
 42 |     title: Light Theme Translucency
 43 |     type: variable-number-slider
 44 |     default: 0.6
 45 |     min: 0
 46 |     max: 1
 47 |     step: 0.01
 48 |   -
 49 |     id: opacity-translucency-dark
 50 |     title: Dark Theme Translucency
 51 |     type: variable-number-slider
 52 |     default: 0.75
 53 |     min: 0
 54 |     max: 1
 55 |     step: 0.01
 56 |   
 57 |   - 
 58 |     id: heading-colors-background
 59 |     title: Background Colors
 60 |     type: heading
 61 |     level: 1
 62 |     collapsed: true
 63 |   -
 64 |     id: background-primary
 65 |     title: Background Primary
 66 |     type: variable-themed-color
 67 |     opacity: false
 68 |     format: hex
 69 |     default-light: '#ffffff'
 70 |     default-dark: '#202020'
 71 |   -
 72 |     id: background-primary-alt
 73 |     title: Background Primary (alt)
 74 |     type: variable-themed-color
 75 |     opacity: false
 76 |     format: hex
 77 |     default-light: '#f5f6f8'
 78 |     default-dark: '#1a1a1a'
 79 |   -
 80 |     id: background-secondary
 81 |     title: Background Secondary
 82 |     type: variable-themed-color
 83 |     opacity: false
 84 |     format: hex
 85 |     default-light: '#f2f3f5'
 86 |     default-dark: '#161616'
 87 |   -
 88 |     id: background-secondary-alt
 89 |     title: Background Secondary (alt)
 90 |     type: variable-themed-color
 91 |     opacity: false
 92 |     format: hex
 93 |     default-light: '#e3e5e8'
 94 |     default-dark: '#000000'
 95 |   -
 96 |     id: background-modifier-border
 97 |     title: 'Background Modifier: Border'
 98 |     type: variable-themed-color
 99 |     opacity: true
100 |     format: rgb
101 |     default-light: '#dddddd'
102 |     default-dark: '#333333'
103 |   -
104 |     id: background-modifier-form-field
105 |     title: 'Background Modifier: Form Field'
106 |     type: variable-themed-color
107 |     opacity: true
108 |     format: rgb
109 |     default-light: '#ffffffff'
110 |     default-dark: '#0000004d'
111 |   -
112 |     id: background-modifier-form-field-highlighted
113 |     title: 'Background Modifier: Form Field (highlighted)'
114 |     type: variable-themed-color
115 |     opacity: true
116 |     format: rgb
117 |     default-light: '#ffffffff'
118 |     default-dark: '#00000038'
119 |   -
120 |     id: background-modifier-box-shadow
121 |     title: 'Background Modifier: Box Shadow'
122 |     type: variable-themed-color
123 |     opacity: true
124 |     format: rgb
125 |     default-light: '#0000001a'
126 |     default-dark: '#0000004d'
127 |   -
128 |     id: background-modifier-success
129 |     title: 'Background Modifier: Success'
130 |     type: variable-themed-color
131 |     opacity: true
132 |     format: rgb
133 |     default-light: '#A4E7C3'
134 |     default-dark: '#197300'
135 |   -
136 |     id: background-modifier-error
137 |     title: 'Background Modifier: Error'
138 |     type: variable-themed-color
139 |     opacity: false
140 |     format: hex
141 |     alt-format:
142 |       -
143 |         id: background-modifier-error-rgb
144 |         format: rgb-values
145 |     default-light: '#990000'
146 |     default-dark: '#3d0000'
147 |   -
148 |     id: background-modifier-error-hover
149 |     title: 'Background Modifier: Error (hover)'
150 |     type: variable-themed-color
151 |     opacity: true
152 |     format: rgb
153 |     default-light: '#bb0000'
154 |     default-dark: '#470000'
155 |   -
156 |     id: background-modifier-cover
157 |     title: 'Background Modifier: Cover'
158 |     type: variable-themed-color
159 |     opacity: true
160 |     format: rgb
161 |     default-light: '#000000cc'
162 |     default-dark: '#000000cc'
163 | 
164 |   - 
165 |     id: heading-colors-text
166 |     title: Text Colors
167 |     type: heading
168 |     level: 1
169 |     collapsed: true
170 |   -
171 |     id: text-accent
172 |     title: 'Text: Accent'
173 |     type: variable-themed-color
174 |     opacity: false
175 |     format: hex
176 |     default-light: '#705dcf'
177 |     default-dark: '#7f6df2'
178 |   -
179 |     id: text-accent-hover
180 |     title: 'Text: Accent (hover)'
181 |     type: variable-themed-color
182 |     opacity: false
183 |     format: hex
184 |     default-light: '#7a6ae6'
185 |     default-dark: '#8875ff'
186 |   -
187 |     id: text-normal
188 |     title: 'Text: Normal'
189 |     type: variable-themed-color
190 |     opacity: false
191 |     format: hex
192 |     default-light: '#2e3338'
193 |     default-dark: '#dcddde'
194 |   -
195 |     id: text-muted
196 |     title: 'Text: Muted'
197 |     type: variable-themed-color
198 |     opacity: false
199 |     format: hex
200 |     default-light: '#888888'
201 |     default-dark: '#999999'
202 |   -
203 |     id: text-faint
204 |     title: 'Text: Faint'
205 |     type: variable-themed-color
206 |     opacity: false
207 |     format: hex
208 |     default-light: '#999999'
209 |     default-dark: '#666666'
210 |   -
211 |     id: text-error
212 |     title: 'Text: Error'
213 |     type: variable-themed-color
214 |     opacity: false
215 |     format: hex
216 |     default-light: '#800000'
217 |     default-dark: '#ff3333'
218 |   -
219 |     id: text-error-hover
220 |     title: 'Text: Error (hover)'
221 |     type: variable-themed-color
222 |     opacity: false
223 |     format: hex
224 |     default-light: '#990000'
225 |     default-dark: '#990000'
226 |   -
227 |     id: text-highlight-bg
228 |     title: 'Text: Highlight Background'
229 |     type: variable-themed-color
230 |     opacity: true
231 |     format: rgb
232 |     default-light: '#ffff0066'
233 |     default-dark: '#ffff0066'
234 |   -
235 |     id: text-highlight-bg-active
236 |     title: 'Text: Highlight Background (active)'
237 |     type: variable-themed-color
238 |     opacity: true
239 |     format: rgb
240 |     default-light: '#ff800066'
241 |     default-dark: '#ff800066'
242 |   -
243 |     id: text-selection
244 |     title: 'Text: Selection Background'
245 |     type: variable-themed-color
246 |     opacity: true
247 |     format: rgb
248 |     default-light: '#cce6fffc'
249 |     default-dark: '#17304dfc'
250 |   -
251 |     id: text-selection
252 |     title: 'Text: On Accent'
253 |     type: variable-themed-color
254 |     opacity: false
255 |     format: hex
256 |     default-light: '#f2f2f2'
257 |     default-dark: '#dcddde'
258 |   
259 |   - 
260 |     id: heading-colors-interactive
261 |     title: Interactive Colors
262 |     type: heading
263 |     level: 1
264 |     collapsed: true
265 |   -
266 |     id: interactive-normal
267 |     title: 'Interactive: Normal'
268 |     type: variable-themed-color
269 |     opacity: false
270 |     format: hex
271 |     default-light: '#f2f3f5'
272 |     default-dark: '#2a2a2a'
273 |   -
274 |     id: interactive-hover
275 |     title: 'Interactive: Hover'
276 |     type: variable-themed-color
277 |     opacity: false
278 |     format: hex
279 |     default-light: '#e9e9e9'
280 |     default-dark: '#303030'
281 |   -
282 |     id: interactive-accent
283 |     title: 'Interactive: Accent'
284 |     type: variable-themed-color
285 |     opacity: false
286 |     format: hex
287 |     alt-format:
288 |       -
289 |         id: interactive-accent-rgb
290 |         format: rgb-values
291 |     default-light: '#7b6cd9'
292 |     default-dark: '#483699'
293 | 
294 |   -
295 |     id: interactive-accent-hover
296 |     title: 'Interactive: Accent (hover)'
297 |     type: variable-themed-color
298 |     opacity: false
299 |     format: hex
300 |     default-light: '#8273e6'
301 |     default-dark: '#4d3ca6'
302 |   -
303 |     id: interactive-success
304 |     title: 'Interactive: Success'
305 |     type: variable-themed-color
306 |     opacity: false
307 |     format: hex
308 |     default-light: '#197300'
309 |     default-dark: '#197300'
310 | 
311 |   - 
312 |     id: heading-colors-scrollbar
313 |     title: Scrollbar Colors
314 |     type: heading
315 |     level: 1
316 |     collapsed: true
317 |   -
318 |     id: scrollbar-bg
319 |     title: 'Scrollbar: Background'
320 |     type: variable-themed-color
321 |     opacity: true
322 |     format: rgb
323 |     default-light: '#0000000d'
324 |     default-dark: '#ffffff0d'
325 |   -
326 |     id: scrollbar-thumb-bg
327 |     title: 'Scrollbar: Thumb Background'
328 |     type: variable-themed-color
329 |     opacity: true
330 |     format: rgb
331 |     default-light: '#0000001a'
332 |     default-dark: '#ffffff1a'
333 |   -
334 |     id: scrollbar-active-thumb-bg
335 |     title: 'Scrollbar: Active Thumb Background'
336 |     type: variable-themed-color
337 |     opacity: true
338 |     format: rgb
339 |     default-light: '#00000033'
340 |     default-dark: '#ffffff33'
341 | 
342 | */


--------------------------------------------------------------------------------
/package.json:
--------------------------------------------------------------------------------
 1 | {
 2 |   "name": "obsidian-style-settings",
 3 |   "version": "1.0.8",
 4 |   "description": "Offers controls for adjusting theme, plugin, and CSS snippet styles.",
 5 |   "main": "main.js",
 6 |   "scripts": {
 7 |     "typecheck": "tsc --noemit",
 8 |     "dev": "node esbuild.config.mjs",
 9 | 		"build": "tsc -noEmit -skipLibCheck && node esbuild.config.mjs production",
10 | 		"lint": "eslint ./src",
11 | 		"lint:fix": "eslint ./src/**/*.ts --fix",
12 | 		"prettier": "prettier --write \"./src/**/*.{ts,tsx}\"",
13 | 		"clean": "yarn prettier && yarn lint:fix",
14 | 		"rlnotes": "git log $(git describe --tags --abbrev=0)..HEAD --oneline > release-notes.md && git add release-notes.md",
15 | 		"bump": "node version-bump.mjs && git add manifest.json versions.json && yarn rlnotes",
16 | 		"release": "git commit -m $npm_package_version && git tag $npm_package_version && git push && git push --tags"
17 |   },
18 |   "keywords": [],
19 |   "author": "",
20 |   "license": "MIT",
21 |   "devDependencies": {
22 |     "@trivago/prettier-plugin-sort-imports": "4.2.0",
23 | 		"@types/node": "16.11.6",
24 | 		"@typescript-eslint/eslint-plugin": "5.29.0",
25 | 		"@typescript-eslint/parser": "5.29.0",
26 | 		"builtin-modules": "3.3.0",
27 | 		"esbuild": "0.17.3",
28 | 		"eslint": "8.47.0",
29 | 		"obsidian": "latest",
30 | 		"prettier": "3.0.2",
31 | 		"tslib": "2.4.0",
32 | 		"typescript": "4.7.4"
33 |   },
34 |   "dependencies": {
35 |     "@simonwep/pickr": "https://github.com/nothingislost/pickr/archive/a17739f7aa1871b44da778cbb79ae76dae77d839.tar.gz",
36 |     "@types/chroma-js": "^2.1.3",
37 |     "@types/js-yaml": "^4.0.3",
38 |     "chroma-js": "^2.1.2",
39 |     "detect-indent": "^7.0.0",
40 |     "dotenv": "^10.0.0",
41 |     "fuzzysort": "^2.0.4",
42 |     "js-yaml": "^4.1.0"
43 |   }
44 | }
45 | 


--------------------------------------------------------------------------------
/prettier.config.cjs:
--------------------------------------------------------------------------------
 1 | /* eslint-disable no-undef */
 2 | module.exports = {
 3 |   arrowParens: 'always',
 4 |   bracketSpacing: true,
 5 |   endOfLine: 'lf',
 6 |   htmlWhitespaceSensitivity: 'css',
 7 |   bracketSameLine: false,
 8 |   jsxSingleQuote: false,
 9 |   printWidth: 80,
10 |   proseWrap: 'preserve',
11 |   quoteProps: 'as-needed',
12 |   semi: true,
13 |   singleQuote: true,
14 |   tabWidth: 2,
15 |   trailingComma: 'es5',
16 |   useTabs: false,
17 |   importOrder: ['^[./]'],
18 |   importOrderSeparation: true,
19 |   importOrderSortSpecifiers: true,
20 | 	plugins: ["@trivago/prettier-plugin-sort-imports"]
21 | };
22 | 


--------------------------------------------------------------------------------
/release-notes.md:
--------------------------------------------------------------------------------
1 | f26cfa0 Upgrade libs and fix type errors
2 | 5cbf4e7 1.0.8
3 | 4ce9491 Fix #152
4 | 51a1497 Merge pull request #128 from ThePyroTF2/update_readme
5 | 6418dea Add documentation for the `quotes` key of the `variable-text` setting type
6 | 


--------------------------------------------------------------------------------
/screenshots/example01.png:
--------------------------------------------------------------------------------
https://raw.githubusercontent.com/mgmeyers/obsidian-style-settings/dfa9f7c81f9345b9bca47c128339e0e00ecd2aee/screenshots/example01.png


--------------------------------------------------------------------------------
/src/ExportModal.ts:
--------------------------------------------------------------------------------
 1 | import { SettingValue } from './SettingsManager';
 2 | import CSSSettingsPlugin from './main';
 3 | import { App, Modal, Setting, TextAreaComponent } from 'obsidian';
 4 | 
 5 | export class ExportModal extends Modal {
 6 | 	plugin: CSSSettingsPlugin;
 7 | 	section: string;
 8 | 	config: Record<string, SettingValue>;
 9 | 
10 | 	constructor(
11 | 		app: App,
12 | 		plugin: CSSSettingsPlugin,
13 | 		section: string,
14 | 		config: Record<string, SettingValue>
15 | 	) {
16 | 		super(app);
17 | 		this.plugin = plugin;
18 | 		this.config = config;
19 | 		this.section = section;
20 | 	}
21 | 
22 | 	onOpen() {
23 | 		const { contentEl, modalEl } = this;
24 | 
25 | 		modalEl.addClass('modal-style-settings');
26 | 
27 | 		new Setting(contentEl)
28 | 			.setName(`Export settings for: ${this.section}`)
29 | 			.then((setting) => {
30 | 				const output = JSON.stringify(this.config, null, 2);
31 | 
32 | 				// Build a copy to clipboard link
33 | 				setting.controlEl.createEl(
34 | 					'a',
35 | 					{
36 | 						cls: 'style-settings-copy',
37 | 						text: 'Copy to clipboard',
38 | 						href: '#',
39 | 					},
40 | 					(copyButton) => {
41 | 						new TextAreaComponent(contentEl)
42 | 							.setValue(output)
43 | 							.then((textarea) => {
44 | 								copyButton.addEventListener('click', (e) => {
45 | 									e.preventDefault();
46 | 
47 | 									// Select the textarea contents and copy them to the clipboard
48 | 									textarea.inputEl.select();
49 | 									textarea.inputEl.setSelectionRange(0, 99999);
50 | 									document.execCommand('copy');
51 | 
52 | 									copyButton.addClass('success');
53 | 
54 | 									setTimeout(() => {
55 | 										// If the button is still in the dom, remove the success class
56 | 										if (copyButton.parentNode) {
57 | 											copyButton.removeClass('success');
58 | 										}
59 | 									}, 2000);
60 | 								});
61 | 							});
62 | 					}
63 | 				);
64 | 
65 | 				// Build a download link
66 | 				setting.controlEl.createEl('a', {
67 | 					cls: 'style-settings-download',
68 | 					text: 'Download',
69 | 					attr: {
70 | 						download: 'style-settings.json',
71 | 						href: `data:application/json;charset=utf-8,${encodeURIComponent(
72 | 							output
73 | 						)}`,
74 | 					},
75 | 				});
76 | 			});
77 | 	}
78 | 
79 | 	onClose() {
80 | 		const { contentEl } = this;
81 | 		contentEl.empty();
82 | 	}
83 | }
84 | 


--------------------------------------------------------------------------------
/src/ImportModal.ts:
--------------------------------------------------------------------------------
  1 | import { SettingValue } from './SettingsManager';
  2 | import CSSSettingsPlugin from './main';
  3 | import {
  4 | 	App,
  5 | 	ButtonComponent,
  6 | 	Modal,
  7 | 	Setting,
  8 | 	TextAreaComponent,
  9 | } from 'obsidian';
 10 | 
 11 | export class ImportModal extends Modal {
 12 | 	plugin: CSSSettingsPlugin;
 13 | 
 14 | 	constructor(app: App, plugin: CSSSettingsPlugin) {
 15 | 		super(app);
 16 | 		this.plugin = plugin;
 17 | 	}
 18 | 
 19 | 	onOpen() {
 20 | 		const { contentEl, modalEl } = this;
 21 | 
 22 | 		modalEl.addClass('modal-style-settings');
 23 | 
 24 | 		new Setting(contentEl)
 25 | 			.setName('Import style setting')
 26 | 			.setDesc(
 27 | 				'Import an entire or partial configuration. Warning: this may override existing settings'
 28 | 			);
 29 | 
 30 | 		new Setting(contentEl).then((setting) => {
 31 | 			// Build an error message container
 32 | 			const errorSpan = createSpan({
 33 | 				cls: 'style-settings-import-error',
 34 | 				text: 'Error importing config',
 35 | 			});
 36 | 
 37 | 			setting.nameEl.appendChild(errorSpan);
 38 | 
 39 | 			// Attempt to parse the imported data and close if successful
 40 | 			const importAndClose = async (str: string) => {
 41 | 				if (str) {
 42 | 					try {
 43 | 						const importedSettings = JSON.parse(str) as Record<
 44 | 							string,
 45 | 							SettingValue
 46 | 						>;
 47 | 
 48 | 						await this.plugin.settingsManager.setSettings(importedSettings);
 49 | 
 50 | 						this.plugin.settingsTab.display();
 51 | 						this.close();
 52 | 					} catch (e) {
 53 | 						errorSpan.addClass('active');
 54 | 						errorSpan.setText(`Error importing style settings: ${e}`);
 55 | 					}
 56 | 				} else {
 57 | 					errorSpan.addClass('active');
 58 | 					errorSpan.setText(`Error importing style settings: config is empty`);
 59 | 				}
 60 | 			};
 61 | 
 62 | 			// Build a file input
 63 | 			setting.controlEl.createEl(
 64 | 				'input',
 65 | 				{
 66 | 					cls: 'style-settings-import-input',
 67 | 					attr: {
 68 | 						id: 'style-settings-import-input',
 69 | 						name: 'style-settings-import-input',
 70 | 						type: 'file',
 71 | 						accept: '.json',
 72 | 					},
 73 | 				},
 74 | 				(importInput) => {
 75 | 					// Set up a FileReader so we can parse the file contents
 76 | 					importInput.addEventListener('change', (e) => {
 77 | 						if (!e.target) return;
 78 | 
 79 | 						const reader = new FileReader();
 80 | 
 81 | 						reader.onload = async (e: ProgressEvent<FileReader>) => {
 82 | 							if (!e.target?.result) return;
 83 | 							await importAndClose(e.target.result.toString().trim());
 84 | 						};
 85 | 
 86 | 						const target = e.target as HTMLInputElement;
 87 | 						if (target.files) {
 88 | 							reader.readAsText(target.files[0]);
 89 | 						}
 90 | 					});
 91 | 				}
 92 | 			);
 93 | 
 94 | 			// Build a label we will style as a link
 95 | 			setting.controlEl.createEl('label', {
 96 | 				cls: 'style-settings-import-label',
 97 | 				text: 'Import from file',
 98 | 				attr: {
 99 | 					for: 'style-settings-import-input',
100 | 				},
101 | 			});
102 | 
103 | 			new TextAreaComponent(contentEl)
104 | 				.setPlaceholder('Paste config here...')
105 | 				.then((ta) => {
106 | 					new ButtonComponent(contentEl)
107 | 						.setButtonText('Save')
108 | 						.onClick(async () => {
109 | 							await importAndClose(ta.getValue().trim());
110 | 						});
111 | 				});
112 | 		});
113 | 	}
114 | 
115 | 	onClose() {
116 | 		const { contentEl } = this;
117 | 		contentEl.empty();
118 | 	}
119 | }
120 | 


--------------------------------------------------------------------------------
/src/SettingHandlers.ts:
--------------------------------------------------------------------------------
  1 | import { SettingType } from './settingsView/SettingComponents/types';
  2 | 
  3 | export const resetTooltip = 'Restore default';
  4 | 
  5 | export interface WithTitle {
  6 | 	title: string;
  7 | 	'title.ar'?: string;
  8 | 	'title.cz'?: string;
  9 | 	'title.da'?: string;
 10 | 	'title.de'?: string;
 11 | 	'title.es'?: string;
 12 | 	'title.fr'?: string;
 13 | 	'title.hi'?: string;
 14 | 	'title.id'?: string;
 15 | 	'title.it'?: string;
 16 | 	'title.ja'?: string;
 17 | 	'title.ko'?: string;
 18 | 	'title.nl'?: string;
 19 | 	'title.no'?: string;
 20 | 	'title.pl'?: string;
 21 | 	'title.pt-BR'?: string;
 22 | 	'title.pt'?: string;
 23 | 	'title.ro'?: string;
 24 | 	'title.ru'?: string;
 25 | 	'title.sq'?: string;
 26 | 	'title.tr'?: string;
 27 | 	'title.uk'?: string;
 28 | 	'title.zh-TW'?: string;
 29 | 	'title.zh'?: string;
 30 | }
 31 | 
 32 | export interface WithDescription {
 33 | 	description?: string;
 34 | 	'description.ar'?: string;
 35 | 	'description.cz'?: string;
 36 | 	'description.da'?: string;
 37 | 	'description.de'?: string;
 38 | 	'description.es'?: string;
 39 | 	'description.fr'?: string;
 40 | 	'description.hi'?: string;
 41 | 	'description.id'?: string;
 42 | 	'description.it'?: string;
 43 | 	'description.ja'?: string;
 44 | 	'description.ko'?: string;
 45 | 	'description.nl'?: string;
 46 | 	'description.no'?: string;
 47 | 	'description.pl'?: string;
 48 | 	'description.pt-BR'?: string;
 49 | 	'description.pt'?: string;
 50 | 	'description.ro'?: string;
 51 | 	'description.ru'?: string;
 52 | 	'description.sq'?: string;
 53 | 	'description.tr'?: string;
 54 | 	'description.uk'?: string;
 55 | 	'description.zh-TW'?: string;
 56 | 	'description.zh'?: string;
 57 | }
 58 | 
 59 | export interface Meta extends WithTitle, WithDescription {
 60 | 	id: string;
 61 | 	type: SettingType;
 62 | }
 63 | 
 64 | export interface Heading extends Meta {
 65 | 	level: 0 | 1 | 2 | 3 | 4 | 5 | 6;
 66 | 	collapsed?: boolean;
 67 | 	resetFn?: () => void;
 68 | }
 69 | 
 70 | export interface InfoText extends Meta {
 71 | 	markdown?: boolean;
 72 | }
 73 | 
 74 | export interface ClassToggle extends Meta {
 75 | 	default?: boolean;
 76 | 	addCommand?: boolean;
 77 | }
 78 | 
 79 | export interface SelectOption {
 80 | 	label: string;
 81 | 	value: string;
 82 | }
 83 | 
 84 | export interface ClassMultiToggle extends Meta {
 85 | 	default?: string;
 86 | 	allowEmpty: boolean;
 87 | 	options: Array<string | SelectOption>;
 88 | }
 89 | 
 90 | export interface VariableText extends Meta {
 91 | 	default: string;
 92 | 	quotes?: boolean;
 93 | }
 94 | 
 95 | export interface VariableNumber extends Meta {
 96 | 	default: number;
 97 | 	format?: string;
 98 | }
 99 | 
100 | export interface VariableNumberSlider extends Meta {
101 | 	default: number;
102 | 	min: number;
103 | 	max: number;
104 | 	step: number;
105 | 	format?: string;
106 | }
107 | 
108 | export interface VariableSelect extends Meta {
109 | 	default: string;
110 | 	options: Array<string | SelectOption>;
111 | 	quotes?: boolean;
112 | }
113 | 
114 | export type ColorFormat =
115 | 	| 'hsl'
116 | 	| 'hsl-values'
117 | 	| 'hsl-split'
118 | 	| 'hsl-split-decimal'
119 | 	| 'rgb'
120 | 	| 'rgb-values'
121 | 	| 'rgb-split'
122 | 	| 'hex';
123 | 
124 | export interface VariableColor extends Meta {
125 | 	default?: string;
126 | 	format: ColorFormat;
127 | 	'alt-format'?: Array<{ id: string; format: ColorFormat }>;
128 | 	opacity?: boolean;
129 | }
130 | 
131 | export interface ColorGradient extends Meta {
132 | 	from: string;
133 | 	to: string;
134 | 	format: 'hsl' | 'rgb' | 'hex';
135 | 	pad?: number;
136 | 	step: number;
137 | }
138 | 
139 | export type AltFormatList = Array<{ id: string; format: ColorFormat }>;
140 | 
141 | export interface VariableThemedColor extends Meta {
142 | 	'default-light': string;
143 | 	'default-dark': string;
144 | 	format: ColorFormat;
145 | 	'alt-format': AltFormatList;
146 | 	opacity?: boolean;
147 | }
148 | 
149 | export type CSSSetting =
150 | 	| Heading
151 | 	| InfoText
152 | 	| ClassToggle
153 | 	| ClassMultiToggle
154 | 	| VariableText
155 | 	| VariableNumber
156 | 	| VariableNumberSlider
157 | 	| VariableSelect
158 | 	| VariableColor
159 | 	| VariableThemedColor;
160 | 
161 | export interface ParsedCSSSettings {
162 | 	name: string;
163 | 	id: string;
164 | 	collapsed: boolean;
165 | 	settings: Array<CSSSetting>;
166 | }
167 | 


--------------------------------------------------------------------------------
/src/SettingsManager.ts:
--------------------------------------------------------------------------------
  1 | import { ExportModal } from './ExportModal';
  2 | import { ImportModal } from './ImportModal';
  3 | import {
  4 | 	AltFormatList,
  5 | 	ClassMultiToggle,
  6 | 	ClassToggle,
  7 | 	ColorFormat,
  8 | 	ColorGradient,
  9 | 	CSSSetting,
 10 | 	ParsedCSSSettings,
 11 | 	VariableColor,
 12 | 	VariableNumber,
 13 | 	VariableNumberSlider,
 14 | 	VariableSelect,
 15 | 	VariableText,
 16 | 	VariableThemedColor,
 17 | } from './SettingHandlers';
 18 | import CSSSettingsPlugin from './main';
 19 | import { SettingType } from './settingsView/SettingComponents/types';
 20 | import chroma from 'chroma-js';
 21 | 
 22 | type VariableKV = Array<{ key: string; value: string }>;
 23 | 
 24 | export type SettingValue = number | string | boolean;
 25 | 
 26 | export interface CSSSettings {
 27 | 	[key: string]: SettingValue;
 28 | }
 29 | 
 30 | export interface MappedSettings {
 31 | 	[sectionId: string]: {
 32 | 		[settingId: string]: CSSSetting;
 33 | 	};
 34 | }
 35 | 
 36 | function generateColorVariables(
 37 | 	key: string,
 38 | 	format: ColorFormat,
 39 | 	colorStr: string,
 40 | 	opacity: boolean | undefined,
 41 | 	altFormats: AltFormatList = []
 42 | ): VariableKV {
 43 | 	const parsedColor = chroma(colorStr);
 44 | 	const alts = altFormats.reduce<VariableKV>((a, alt) => {
 45 | 		a.push(...generateColorVariables(alt.id, alt.format, colorStr, opacity));
 46 | 		return a;
 47 | 	}, []);
 48 | 
 49 | 	switch (format) {
 50 | 		case 'hex':
 51 | 			return [{ key, value: colorStr }, ...alts];
 52 | 		case 'hsl':
 53 | 			return [
 54 | 				{
 55 | 					key,
 56 | 					value: parsedColor.css('hsl'),
 57 | 				},
 58 | 				...alts,
 59 | 			];
 60 | 		case 'hsl-values': {
 61 | 			const hsl = parsedColor.hsl();
 62 | 			const alpha = opacity ? `,${parsedColor.alpha()}` : '';
 63 | 			const h = isNaN(hsl[0]) ? 0 : hsl[0];
 64 | 
 65 | 			return [
 66 | 				{
 67 | 					key,
 68 | 					value: `${h},${hsl[1] * 100}%,${hsl[2] * 100}%${alpha}`,
 69 | 				},
 70 | 				...alts,
 71 | 			];
 72 | 		}
 73 | 		case 'hsl-split': {
 74 | 			const hsl = parsedColor.hsl();
 75 | 			const h = isNaN(hsl[0]) ? 0 : hsl[0];
 76 | 			const out = [
 77 | 				{
 78 | 					key: `${key}-h`,
 79 | 					value: h.toString(),
 80 | 				},
 81 | 				{
 82 | 					key: `${key}-s`,
 83 | 					value: (hsl[1] * 100).toString() + '%',
 84 | 				},
 85 | 				{
 86 | 					key: `${key}-l`,
 87 | 					value: (hsl[2] * 100).toString() + '%',
 88 | 				},
 89 | 				...alts,
 90 | 			];
 91 | 
 92 | 			if (opacity)
 93 | 				out.push({
 94 | 					key: `${key}-a`,
 95 | 					value: parsedColor.alpha().toString(),
 96 | 				});
 97 | 
 98 | 			return out;
 99 | 		}
100 | 		case 'hsl-split-decimal': {
101 | 			const hsl = parsedColor.hsl();
102 | 			const h = isNaN(hsl[0]) ? 0 : hsl[0];
103 | 			const out = [
104 | 				{
105 | 					key: `${key}-h`,
106 | 					value: h.toString(),
107 | 				},
108 | 				{
109 | 					key: `${key}-s`,
110 | 					value: hsl[1].toString(),
111 | 				},
112 | 				{
113 | 					key: `${key}-l`,
114 | 					value: hsl[2].toString(),
115 | 				},
116 | 				...alts,
117 | 			];
118 | 
119 | 			if (opacity)
120 | 				out.push({
121 | 					key: `${key}-a`,
122 | 					value: parsedColor.alpha().toString(),
123 | 				});
124 | 
125 | 			return out;
126 | 		}
127 | 		case 'rgb':
128 | 			return [
129 | 				{
130 | 					key,
131 | 					value: parsedColor.css(),
132 | 				},
133 | 				...alts,
134 | 			];
135 | 		case 'rgb-values': {
136 | 			const rgb = parsedColor.rgb();
137 | 			const alpha = opacity ? `,${parsedColor.alpha()}` : '';
138 | 			return [
139 | 				{
140 | 					key,
141 | 					value: `${rgb[0]},${rgb[1]},${rgb[2]}${alpha}`,
142 | 				},
143 | 				...alts,
144 | 			];
145 | 		}
146 | 		case 'rgb-split': {
147 | 			const rgb = parsedColor.rgb();
148 | 			const out = [
149 | 				{
150 | 					key: `${key}-r`,
151 | 					value: rgb[0].toString(),
152 | 				},
153 | 				{
154 | 					key: `${key}-g`,
155 | 					value: rgb[1].toString(),
156 | 				},
157 | 				{
158 | 					key: `${key}-b`,
159 | 					value: rgb[2].toString(),
160 | 				},
161 | 				...alts,
162 | 			];
163 | 
164 | 			if (opacity)
165 | 				out.push({
166 | 					key: `${key}-a`,
167 | 					value: parsedColor.alpha().toString(),
168 | 				});
169 | 
170 | 			return out;
171 | 		}
172 | 	}
173 | }
174 | 
175 | function pushColors(
176 | 	arr: VariableKV,
177 | 	id: string,
178 | 	from: string,
179 | 	to: string,
180 | 	format: 'hsl' | 'rgb' | 'hex',
181 | 	step: number,
182 | 	pad: number
183 | ) {
184 | 	const scale = chroma.scale([from.trim(), to.trim()]).domain([0, 100]);
185 | 	for (let i = 0; i <= 100; i++) {
186 | 		if (i % step === 0) {
187 | 			const c = scale(i);
188 | 			arr.push(
189 | 				...generateColorVariables(
190 | 					`${id}-${i.toString().padStart(pad, '0')}`,
191 | 					format,
192 | 					c.css(),
193 | 					c.alpha() !== 1
194 | 				)
195 | 			);
196 | 		}
197 | 	}
198 | }
199 | 
200 | function getCSSVariables(
201 | 	settings: CSSSettings,
202 | 	config: MappedSettings,
203 | 	gradients: Record<string, ColorGradient[]>,
204 | 	settingsManager: CSSSettingsManager
205 | ): [VariableKV, VariableKV, VariableKV] {
206 | 	const vars: VariableKV = [];
207 | 	const themedLight: VariableKV = [];
208 | 	const themedDark: VariableKV = [];
209 | 
210 | 	const gradientCandidates: Record<string, string> = {};
211 | 	const gradientCandidatesLight: Record<string, string> = {};
212 | 	const gradientCandidatesDark: Record<string, string> = {};
213 | 
214 | 	const seenGradientSections: Set<string> = new Set();
215 | 
216 | 	for (const key in settings) {
217 | 		const [sectionId, settingId, modifier] = key.split('@@');
218 | 		const section = config[sectionId];
219 | 
220 | 		if (!section) continue;
221 | 
222 | 		const setting: CSSSetting = config[sectionId][settingId];
223 | 
224 | 		if (!setting) continue;
225 | 
226 | 		const value: SettingValue = settings[key];
227 | 
228 | 		switch (setting.type) {
229 | 			case SettingType.VARIABLE_NUMBER:
230 | 			case SettingType.VARIABLE_NUMBER_SLIDER: {
231 | 				const format = (setting as VariableNumber | VariableNumberSlider)
232 | 					.format;
233 | 				const val =
234 | 					value !== undefined
235 | 						? value
236 | 						: (setting as VariableNumber | VariableNumberSlider).default;
237 | 				vars.push({
238 | 					key: setting.id,
239 | 					value: `${val}${format || ''}`,
240 | 				});
241 | 				continue;
242 | 			}
243 | 			case SettingType.VARIABLE_TEXT:
244 | 			case SettingType.VARIABLE_SELECT: {
245 | 				const format_text = setting as VariableText | VariableSelect;
246 | 				let text =
247 | 					value !== undefined
248 | 						? value.toString()
249 | 						: format_text.default.toString();
250 | 				if (format_text.quotes) {
251 | 					if (text !== `""`) {
252 | 						text = `'${text}'`;
253 | 					} else {
254 | 						text = ``;
255 | 					}
256 | 				}
257 | 				vars.push({
258 | 					key: setting.id,
259 | 					value: text,
260 | 				});
261 | 				continue;
262 | 			}
263 | 			case SettingType.VARIABLE_COLOR: {
264 | 				if (!seenGradientSections.has(sectionId))
265 | 					seenGradientSections.add(sectionId);
266 | 
267 | 				const colorSetting = setting as VariableColor;
268 | 				const color =
269 | 					value !== undefined ? value.toString() : colorSetting.default;
270 | 
271 | 				if (color) {
272 | 					vars.push(
273 | 						...generateColorVariables(
274 | 							setting.id,
275 | 							colorSetting.format,
276 | 							color,
277 | 							colorSetting.opacity,
278 | 							colorSetting['alt-format']
279 | 						)
280 | 					);
281 | 
282 | 					generateColorVariables(
283 | 						setting.id,
284 | 						'rgb',
285 | 						color,
286 | 						colorSetting.opacity
287 | 					).forEach((kv) => {
288 | 						gradientCandidates[kv.key] = kv.value;
289 | 					});
290 | 				}
291 | 
292 | 				continue;
293 | 			}
294 | 			case SettingType.VARIABLE_THEMED_COLOR: {
295 | 				if (!seenGradientSections.has(sectionId))
296 | 					seenGradientSections.add(sectionId);
297 | 
298 | 				const colorSetting = setting as VariableThemedColor;
299 | 				const colorKey =
300 | 					modifier === 'light' ? 'default-light' : 'default-dark';
301 | 				const color =
302 | 					value !== undefined ? value.toString() : colorSetting[colorKey];
303 | 
304 | 				(modifier === 'light' ? themedLight : themedDark).push(
305 | 					...generateColorVariables(
306 | 						setting.id,
307 | 						colorSetting.format,
308 | 						color,
309 | 						colorSetting.opacity,
310 | 						colorSetting['alt-format']
311 | 					)
312 | 				);
313 | 
314 | 				generateColorVariables(
315 | 					setting.id,
316 | 					'rgb',
317 | 					color,
318 | 					colorSetting.opacity
319 | 				).forEach((kv) => {
320 | 					if (modifier === 'light') {
321 | 						gradientCandidatesLight[kv.key] = kv.value;
322 | 					} else {
323 | 						gradientCandidatesDark[kv.key] = kv.value;
324 | 					}
325 | 				});
326 | 				continue;
327 | 			}
328 | 		}
329 | 	}
330 | 
331 | 	seenGradientSections.forEach((sectionId) => {
332 | 		const g = gradients[sectionId];
333 | 		if (!g) return;
334 | 
335 | 		g.forEach((def) => {
336 | 			const { from, to, format, step, id, pad = 0 } = def;
337 | 
338 | 			if (gradientCandidatesLight[from]) {
339 | 				const fromColor = gradientCandidatesLight[from];
340 | 				const toColor =
341 | 					gradientCandidatesLight[to] ||
342 | 					settingsManager.plugin.getCSSVar(to).light?.trim();
343 | 
344 | 				if (toColor) {
345 | 					pushColors(themedLight, id, fromColor, toColor, format, step, pad);
346 | 				}
347 | 			}
348 | 
349 | 			if (gradientCandidatesDark[from]) {
350 | 				const fromColor = gradientCandidatesDark[from];
351 | 				const toColor =
352 | 					gradientCandidatesDark[to] ||
353 | 					settingsManager.plugin.getCSSVar(to).dark?.trim();
354 | 
355 | 				if (toColor) {
356 | 					pushColors(themedDark, id, fromColor, toColor, format, step, pad);
357 | 				}
358 | 			}
359 | 
360 | 			if (gradientCandidates[from]) {
361 | 				const fromColor = gradientCandidates[from];
362 | 				const toColor =
363 | 					gradientCandidates[to] ||
364 | 					settingsManager.plugin.getCSSVar(to).current?.trim();
365 | 
366 | 				if (toColor) {
367 | 					pushColors(vars, id, fromColor, toColor, format, step, pad);
368 | 				}
369 | 			}
370 | 		});
371 | 	});
372 | 
373 | 	return [vars, themedLight, themedDark];
374 | }
375 | 
376 | export class CSSSettingsManager {
377 | 	settings: CSSSettings;
378 | 	plugin: CSSSettingsPlugin;
379 | 	styleTag: HTMLStyleElement;
380 | 	config: MappedSettings = {};
381 | 	gradients: Record<string, ColorGradient[]> = {};
382 | 
383 | 	constructor(plugin: CSSSettingsPlugin) {
384 | 		this.plugin = plugin;
385 | 		this.settings = {};
386 | 		this.styleTag = document.createElement('style');
387 | 		this.styleTag.id = 'css-settings-manager';
388 | 
389 | 		document.getElementsByTagName('head')[0].appendChild(this.styleTag);
390 | 	}
391 | 
392 | 	cleanup() {
393 | 		this.styleTag.remove();
394 | 		this.removeClasses();
395 | 	}
396 | 
397 | 	async save() {
398 | 		await this.plugin.saveData(this.settings);
399 | 		this.setCSSVariables();
400 | 	}
401 | 
402 | 	async load() {
403 | 		this.settings = Object.assign({}, await this.plugin.loadData());
404 | 	}
405 | 
406 | 	initClasses() {
407 | 		Object.keys(this.config).forEach((section) => {
408 | 			const config = this.config[section];
409 | 
410 | 			Object.keys(config).forEach((settingId) => {
411 | 				const setting = config[settingId];
412 | 
413 | 				if (setting.type === SettingType.CLASS_TOGGLE) {
414 | 					const classToggle = setting as ClassToggle;
415 | 					const value = this.getSetting(section, settingId) as
416 | 						| boolean
417 | 						| undefined;
418 | 					if (
419 | 						value === true ||
420 | 						(value === undefined && classToggle.default === true)
421 | 					) {
422 | 						document.body.classList.add(setting.id);
423 | 					}
424 | 				} else if (setting.type === SettingType.CLASS_SELECT) {
425 | 					const multiToggle = setting as ClassMultiToggle;
426 | 					let value = this.getSetting(section, settingId) as string | undefined;
427 | 
428 | 					if (value === undefined && !!multiToggle.default) {
429 | 						value = multiToggle.default;
430 | 					} else if (value === undefined) {
431 | 						value = 'none';
432 | 					}
433 | 
434 | 					if (value !== 'none') {
435 | 						document.body.classList.add(value);
436 | 					}
437 | 				}
438 | 			});
439 | 		});
440 | 	}
441 | 
442 | 	removeClasses() {
443 | 		Object.keys(this.config).forEach((section) => {
444 | 			const config = this.config[section];
445 | 
446 | 			Object.keys(config).forEach((settingId) => {
447 | 				const setting = config[settingId];
448 | 
449 | 				if (setting.type === SettingType.CLASS_TOGGLE) {
450 | 					document.body.classList.remove(setting.id);
451 | 				} else if (setting.type === SettingType.CLASS_SELECT) {
452 | 					const multiToggle = setting as ClassMultiToggle;
453 | 					multiToggle.options.forEach((v) => {
454 | 						if (typeof v === 'string') {
455 | 							document.body.classList.remove(v);
456 | 						} else {
457 | 							document.body.classList.remove(v.value);
458 | 						}
459 | 					});
460 | 				}
461 | 			});
462 | 		});
463 | 	}
464 | 
465 | 	setCSSVariables() {
466 | 		const [vars, themedLight, themedDark] = getCSSVariables(
467 | 			this.settings,
468 | 			this.config,
469 | 			this.gradients,
470 | 			this
471 | 		);
472 | 
473 | 		this.styleTag.innerText = `
474 | 			body.css-settings-manager {
475 | 				${vars.reduce((combined, current) => {
476 | 					return combined + `--${current.key}: ${current.value}; `;
477 | 				}, '')}
478 | 			}
479 | 
480 | 			body.theme-light.css-settings-manager {
481 | 				${themedLight.reduce((combined, current) => {
482 | 					return combined + `--${current.key}: ${current.value}; `;
483 | 				}, '')}
484 | 			}
485 | 
486 | 			body.theme-dark.css-settings-manager {
487 | 				${themedDark.reduce((combined, current) => {
488 | 					return combined + `--${current.key}: ${current.value}; `;
489 | 				}, '')}
490 | 			}
491 | 			`
492 | 			.trim()
493 | 			.replace(/[\r\n\s]+/g, ' ');
494 | 
495 | 		this.plugin.app.workspace.trigger('css-change', {
496 | 			source: 'style-settings',
497 | 		});
498 | 	}
499 | 
500 | 	setConfig(settings: ParsedCSSSettings[]) {
501 | 		this.config = {};
502 | 		this.gradients = {};
503 | 
504 | 		settings.forEach((s) => {
505 | 			this.config[s.id] = {};
506 | 			s.settings.forEach((setting) => {
507 | 				this.config[s.id][setting.id] = setting;
508 | 
509 | 				if (setting.type === SettingType.COLOR_GRADIENT) {
510 | 					if (!this.gradients[s.id]) this.gradients[s.id] = [];
511 | 					this.gradients[s.id].push(setting as ColorGradient);
512 | 				}
513 | 			});
514 | 		});
515 | 
516 | 		let pruned = false;
517 | 
518 | 		for (const key in this.settings) {
519 | 			const [sectionId, settingId] = key.split('@@');
520 | 
521 | 			if (this.config[sectionId] && !this.config[sectionId][settingId]) {
522 | 				delete this.settings[key];
523 | 				pruned = true;
524 | 			}
525 | 		}
526 | 
527 | 		if (pruned) {
528 | 			this.save();
529 | 		} else {
530 | 			this.setCSSVariables();
531 | 		}
532 | 	}
533 | 
534 | 	getSetting(sectionId: string, settingId: string): SettingValue | undefined {
535 | 		return this.settings[`${sectionId}@@${settingId}`];
536 | 	}
537 | 
538 | 	getSettings(sectionId: string, ids: string[]) {
539 | 		return ids.reduce<Record<string, SettingValue>>((settings, id) => {
540 | 			const fullId = `${sectionId}@@${id}`;
541 | 			const alts = ['dark', 'light'];
542 | 
543 | 			if (this.settings[fullId]) {
544 | 				settings[fullId] = this.settings[fullId];
545 | 			}
546 | 
547 | 			alts.forEach((alt) => {
548 | 				const id = `${fullId}@@${alt}`;
549 | 
550 | 				if (this.settings[id]) {
551 | 					settings[id] = this.settings[id];
552 | 				}
553 | 			});
554 | 
555 | 			return settings;
556 | 		}, {});
557 | 	}
558 | 
559 | 	setSetting(sectionId: string, settingId: string, value: SettingValue) {
560 | 		this.settings[`${sectionId}@@${settingId}`] = value;
561 | 		this.save();
562 | 		this.removeClasses();
563 | 		this.initClasses();
564 | 	}
565 | 
566 | 	setSettings(settings: Record<string, SettingValue>) {
567 | 		Object.keys(settings).forEach((id) => {
568 | 			this.settings[id] = settings[id];
569 | 		});
570 | 
571 | 		this.removeClasses();
572 | 		this.initClasses();
573 | 
574 | 		return this.save();
575 | 	}
576 | 
577 | 	clearSetting(sectionId: string, settingId: string) {
578 | 		delete this.settings[`${sectionId}@@${settingId}`];
579 | 		this.save();
580 | 		this.removeClasses();
581 | 		this.initClasses();
582 | 	}
583 | 
584 | 	clearSection(sectionId: string) {
585 | 		Object.keys(this.settings).forEach((key) => {
586 | 			const [section] = key.split('@@');
587 | 			if (section === sectionId) {
588 | 				delete this.settings[key];
589 | 			}
590 | 		});
591 | 		this.save();
592 | 		this.removeClasses();
593 | 		this.initClasses();
594 | 	}
595 | 
596 | 	export(section: string, config: Record<string, SettingValue>) {
597 | 		new ExportModal(this.plugin.app, this.plugin, section, config).open();
598 | 	}
599 | 
600 | 	import() {
601 | 		new ImportModal(this.plugin.app, this.plugin).open();
602 | 	}
603 | }
604 | 


--------------------------------------------------------------------------------
/src/Utils.ts:
--------------------------------------------------------------------------------
  1 | import { Meta, WithDescription, WithTitle } from './SettingHandlers';
  2 | import { lang, t } from './lang/helpers';
  3 | import Pickr from '@simonwep/pickr';
  4 | 
  5 | export const settingRegExp = /\/\*!?\s*@settings[\r\n]+?([\s\S]+?)\*\//g;
  6 | export const nameRegExp = /^name:\s*(.+)$/m;
  7 | export type ErrorList = Array<{ name: string; error: string }>;
  8 | 
  9 | export function getTitle<T extends Meta>(config: T): string {
 10 | 	if (lang) {
 11 | 		return config[`title.${lang}` as keyof WithTitle] || config.title;
 12 | 	}
 13 | 
 14 | 	return config.title;
 15 | }
 16 | 
 17 | export function getDescription<T extends Meta>(config: T): string | undefined {
 18 | 	if (lang) {
 19 | 		return (
 20 | 			config[`description.${lang}` as keyof WithDescription] ||
 21 | 			config.description
 22 | 		);
 23 | 	}
 24 | 
 25 | 	return config.description;
 26 | }
 27 | 
 28 | export function isValidDefaultColor(color: string) {
 29 | 	return /^(#|rgb|hsl)/.test(color);
 30 | }
 31 | 
 32 | export function getPickrSettings(opts: {
 33 | 	isView: boolean;
 34 | 	el: HTMLElement;
 35 | 	containerEl: HTMLElement;
 36 | 	swatches: string[];
 37 | 	opacity: boolean | undefined;
 38 | 	defaultColor: string;
 39 | }): Pickr.Options {
 40 | 	const { el, isView, containerEl, swatches, opacity, defaultColor } = opts;
 41 | 
 42 | 	return {
 43 | 		el,
 44 | 		container: isView ? document.body : containerEl,
 45 | 		theme: 'nano',
 46 | 		swatches,
 47 | 		lockOpacity: !opacity,
 48 | 		default: defaultColor,
 49 | 		position: 'left-middle',
 50 | 		components: {
 51 | 			preview: true,
 52 | 			hue: true,
 53 | 			opacity: !!opacity,
 54 | 			interaction: {
 55 | 				hex: true,
 56 | 				rgba: true,
 57 | 				hsla: true,
 58 | 				input: true,
 59 | 				cancel: true,
 60 | 				save: true,
 61 | 			},
 62 | 		},
 63 | 	};
 64 | }
 65 | 
 66 | export function onPickrCancel(instance: Pickr) {
 67 | 	instance.hide();
 68 | }
 69 | 
 70 | export function sanitizeText(str: string): string {
 71 | 	if (str === '') {
 72 | 		return `""`;
 73 | 	}
 74 | 
 75 | 	return str.replace(/[;<>]/g, '');
 76 | }
 77 | 
 78 | export function createDescription(
 79 | 	description: string | undefined,
 80 | 	def: string,
 81 | 	defLabel?: string
 82 | ): DocumentFragment {
 83 | 	const fragment = createFragment();
 84 | 
 85 | 	if (description) {
 86 | 		fragment.appendChild(document.createTextNode(description));
 87 | 	}
 88 | 
 89 | 	if (def) {
 90 | 		const small = createEl('small');
 91 | 		small.appendChild(createEl('strong', { text: `${t('Default:')} ` }));
 92 | 		small.appendChild(document.createTextNode(defLabel || def));
 93 | 
 94 | 		const div = createEl('div');
 95 | 
 96 | 		div.appendChild(small);
 97 | 
 98 | 		fragment.appendChild(div);
 99 | 	}
100 | 
101 | 	return fragment;
102 | }
103 | 
104 | /*
105 |  * compatability with Settings Search Plugin
106 |  */
107 | export interface SettingsSeachResource {
108 | 	//Id of your settings tab. This is usually the ID of your plugin as defined in the manifest.
109 | 	tab: string;
110 | 	//Name of your settings tab. This is usually the name of your plugin as defined in the manifest. This is used to organize the settings under headers when searching.
111 | 	name: string;
112 | 	//The name of the setting to add.
113 | 	text: string;
114 | 	//An optional description string to add to the setting.
115 | 	desc: string;
116 | }
117 | 


--------------------------------------------------------------------------------
/src/css/pickerOverrides.css:
--------------------------------------------------------------------------------
 1 | .style-settings-container .pcr-app {
 2 |     display: none;
 3 | }
 4 | 
 5 | .style-settings-container .pcr-app.visible {
 6 |     display: flex;
 7 | }
 8 | 
 9 | .pcr-app .pcr-swatches > button {
10 |     padding: 0;
11 | }
12 | 
13 | .pickr .pcr-button {
14 |     margin-right: 0;
15 | }
16 | 
17 | .themed-color-wrapper > div {
18 |     background: var(--background-primary);
19 |     padding: 10px;
20 |     display: flex;
21 |     align-items: center;
22 |     border-radius: 4px;
23 | }
24 | 
25 | .themed-color-wrapper > div + div {
26 |     margin-top: 6px;
27 | }
28 | 
29 | .themed-color-wrapper button {
30 |     display: block;
31 | }
32 | 
33 | .themed-color-wrapper .pickr-reset > button {
34 |     margin: 0 0 0 10px;
35 |     padding: 9px;
36 |     line-height: 1;
37 | }
38 | 
39 | .themed-color-wrapper .pickr-reset > button > svg {
40 |     display: block;
41 | }
42 | 


--------------------------------------------------------------------------------
/src/css/settings.css:
--------------------------------------------------------------------------------
  1 | .style-settings-heading {
  2 |     cursor: pointer;
  3 |     margin-bottom: 18px;
  4 |     padding-bottom: 6px;
  5 |     border-bottom: 1px solid var(--background-modifier-border);
  6 | }
  7 | 
  8 | .style-settings-heading[data-level="0"] {
  9 |     margin-bottom: 26px;
 10 | }
 11 | 
 12 | .style-settings-container {
 13 |     padding-bottom: 16px;
 14 | }
 15 | 
 16 | .style-settings-heading[data-level="0"] + .style-settings-container {
 17 |     padding-left: 34px;
 18 | }
 19 | 
 20 | .style-settings-heading.is-collapsed {
 21 |     margin-bottom: 0;
 22 | }
 23 | 
 24 | .style-settings-heading.is-collapsed + .style-settings-container {
 25 |     display: none;
 26 | }
 27 | 
 28 | .style-settings-collapse-indicator {
 29 |     color: var(--text-faint);
 30 |     display: inline-block;
 31 |     margin-right: 8px;
 32 |     position: relative;
 33 |     top: -1px;
 34 | }
 35 | 
 36 | .style-settings-heading[data-level="0"]
 37 | + .style-settings-container
 38 | .style-settings-collapse-indicator {
 39 |     margin-left: -17px;
 40 | }
 41 | 
 42 | .style-settings-collapse-indicator > svg {
 43 |     height: 9px;
 44 |     width: 9px;
 45 | }
 46 | 
 47 | .style-settings-heading.is-collapsed .style-settings-collapse-indicator > svg {
 48 |     transform: rotate(-90deg);
 49 | }
 50 | 
 51 | .style-settings-filter-result-count {
 52 |     color: var(--text-faint);
 53 |     line-height: var(--line-height-tight);
 54 |     margin-inline: var(--size-4-2);
 55 | }
 56 | 
 57 | .style-settings-error {
 58 |     font-size: 14px;
 59 |     border-radius: 6px;
 60 |     background: rgba(var(--background-modifier-error-rgb), 0.2);
 61 |     color: var(--text-error);
 62 |     padding: 10px;
 63 |     margin-bottom: 1rem;
 64 | }
 65 | 
 66 | .style-settings-error-name {
 67 |     font-weight: bold;
 68 |     margin-bottom: 5px;
 69 | }
 70 | 
 71 | .style-settings-error-desc {
 72 |     white-space: pre;
 73 | }
 74 | 
 75 | .style-settings-empty {
 76 |     font-size: 14px;
 77 |     background: var(--background-secondary);
 78 |     padding: 10px;
 79 | }
 80 | 
 81 | .style-settings-empty-name {
 82 |     font-weight: bold;
 83 |     margin-bottom: 5px;
 84 | }
 85 | 
 86 | .style-settings-import-input {
 87 |     width: 0.1px;
 88 |     height: 0.1px;
 89 |     opacity: 0;
 90 |     overflow: hidden;
 91 |     position: absolute;
 92 |     z-index: -1;
 93 | }
 94 | 
 95 | .style-settings-import-label {
 96 |     cursor: pointer;
 97 |     color: var(--text-accent);
 98 |     text-decoration: underline;
 99 | }
100 | 
101 | .style-settings-import-label:hover {
102 |     color: var(--text-accent-hover);
103 | }
104 | 
105 | .style-settings-export,
106 | .style-settings-import {
107 |     display: inline-block;
108 |     margin-right: 10px;
109 | }
110 | 
111 | .style-settings-copy,
112 | .style-settings-download {
113 |     position: relative;
114 |     display: inline-block;
115 |     margin-left: 10px;
116 | }
117 | 
118 | .style-settings-copy:before {
119 |     color: var(--interactive-success);
120 |     content: "✓";
121 |     position: absolute;
122 |     left: -18px;
123 |     font-weight: bold;
124 |     opacity: 0;
125 |     transition: 150ms opacity ease-in-out;
126 | }
127 | 
128 | .style-settings-copy.success:before {
129 |     opacity: 1;
130 | }
131 | 
132 | .modal-style-settings {
133 |     height: 70vh;
134 |     display: flex;
135 |     flex-direction: column;
136 | }
137 | 
138 | .modal-style-settings .modal-content {
139 |     flex-grow: 1;
140 |     margin: 0;
141 |     display: flex;
142 |     flex-direction: column;
143 | }
144 | 
145 | .modal-style-settings textarea {
146 |     display: block;
147 |     width: 100%;
148 |     height: 100%;
149 |     font-family: var(--font-monospace) !important;
150 |     font-size: 12px;
151 |     white-space: pre;
152 |     overflow-wrap: normal;
153 |     overflow-x: scroll;
154 |     margin-bottom: 5px;
155 | }
156 | 
157 | .modal-style-settings .setting-item {
158 |     align-items: flex-start;
159 | }
160 | 
161 | .modal-style-settings button {
162 |     margin: 10px 0 0;
163 | }
164 | 
165 | .style-settings-import-error {
166 |     display: none;
167 |     color: var(--text-error);
168 | }
169 | 
170 | .style-settings-import-error.active {
171 |     display: block;
172 | }
173 | 
174 | .view-content .style-settings-container .setting-item:not(.setting-item-heading) {
175 |     flex-direction: column;
176 |     align-items: flex-start;
177 | }
178 | 
179 | .view-content .style-settings-container .setting-item:not(.setting-item-heading) .setting-item-control {
180 |     padding-top: 0.5em;
181 | }
182 | 
183 | .view-content .style-settings-container .setting-item:not(.setting-item-heading) .themed-color-wrapper {
184 |     display: flex;
185 | }
186 | 
187 | .style-settings-ref {
188 |     position: absolute;
189 |     width: 0 !important;
190 |     height: 0 !important;
191 |     pointer-events: none;
192 | }
193 | 
194 | .style-settings-info-text .style-settings-markdown :first-child {
195 |     margin-top: 0;
196 | }
197 | 
198 | .style-settings-info-text .style-settings-markdown :last-child {
199 |     margin-bottom: 0;
200 | }


--------------------------------------------------------------------------------
/src/lang/helpers.ts:
--------------------------------------------------------------------------------
 1 | import { ar } from './locale/ar';
 2 | import { cz } from './locale/cz';
 3 | import { da } from './locale/da';
 4 | import { de } from './locale/de';
 5 | import { en } from './locale/en';
 6 | import { es } from './locale/es';
 7 | import { fr } from './locale/fr';
 8 | import { hi } from './locale/hi';
 9 | import { id } from './locale/id';
10 | import { it } from './locale/it';
11 | import { ja } from './locale/ja';
12 | import { ko } from './locale/ko';
13 | import { nl } from './locale/nl';
14 | import { no } from './locale/no';
15 | import { pl } from './locale/pl';
16 | import { pt } from './locale/pt';
17 | import { ptBr } from './locale/ptBr';
18 | import { ro } from './locale/ro';
19 | import { ru } from './locale/ru';
20 | import { sq } from './locale/sq';
21 | import { tr } from './locale/tr';
22 | import { uk } from './locale/uk';
23 | import { zh } from './locale/zh';
24 | import { zhTw } from './locale/zhTw';
25 | 
26 | export const lang: string | null = window.localStorage.getItem('language');
27 | 
28 | const localeMap: { [k: string]: Partial<typeof en> } = {
29 | 	ar,
30 | 	cz,
31 | 	da,
32 | 	de,
33 | 	en,
34 | 	es,
35 | 	fr,
36 | 	hi,
37 | 	id,
38 | 	it,
39 | 	ja,
40 | 	ko,
41 | 	nl,
42 | 	no,
43 | 	pl,
44 | 	'pt-BR': ptBr,
45 | 	pt,
46 | 	ro,
47 | 	ru,
48 | 	sq,
49 | 	tr,
50 | 	uk,
51 | 	'zh-TW': zhTw,
52 | 	zh,
53 | };
54 | 
55 | const locale = localeMap[lang || 'en'];
56 | 
57 | export function t(str: keyof typeof en): string {
58 | 	if (!locale) {
59 | 		console.error('Error: Style Settings locale not found', lang);
60 | 	}
61 | 
62 | 	return (locale && locale[str]) || en[str];
63 | }
64 | 


--------------------------------------------------------------------------------
/src/lang/locale/ar.ts:
--------------------------------------------------------------------------------
1 | export const ar = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/cz.ts:
--------------------------------------------------------------------------------
1 | export const cz = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/da.ts:
--------------------------------------------------------------------------------
1 | export const da = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/de.ts:
--------------------------------------------------------------------------------
 1 | export const de = {
 2 | 	'Default:': 'Standard:',
 3 | 	'Error:': 'Fehler:',
 4 | 	'missing default light value, or value is not in a valid color format':
 5 | 		'Fehlender heller standard Wert oder Wert ist in keinem validen Farb-Format',
 6 | 	'missing default dark value, or value is not in a valid color format':
 7 | 		'Fehlender dunkler standard Wert oder Wert ist in keinem validen Farb-Format',
 8 | 	'missing default value, or value is not in a valid color format':
 9 | 		'Fehlender standard Wert oder Wert ist in keinem validen Farb-Format',
10 | 	'missing default value': 'Fehlender standard Wert',
11 | };
12 | 


--------------------------------------------------------------------------------
/src/lang/locale/en.ts:
--------------------------------------------------------------------------------
 1 | export const en = {
 2 | 	'Default:': 'Default:',
 3 | 	'Error:': 'Error:',
 4 | 	'missing default light value, or value is not in a valid color format':
 5 | 		'missing default light value, or value is not in a valid color format',
 6 | 	'missing default dark value, or value is not in a valid color format':
 7 | 		'missing default dark value, or value is not in a valid color format',
 8 | 	'missing default value, or value is not in a valid color format':
 9 | 		'missing default value, or value is not in a valid color format',
10 | 	'missing default value': 'missing default value',
11 | };
12 | 


--------------------------------------------------------------------------------
/src/lang/locale/es.ts:
--------------------------------------------------------------------------------
1 | export const es = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/fr.ts:
--------------------------------------------------------------------------------
1 | export const fr = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/hi.ts:
--------------------------------------------------------------------------------
1 | export const hi = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/id.ts:
--------------------------------------------------------------------------------
1 | export const id = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/it.ts:
--------------------------------------------------------------------------------
1 | export const it = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/ja.ts:
--------------------------------------------------------------------------------
1 | export const ja = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/ko.ts:
--------------------------------------------------------------------------------
1 | export const ko = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/nl.ts:
--------------------------------------------------------------------------------
 1 | export const nl = {
 2 | 	'Default:': 'Standaard:',
 3 | 	'Error:': 'Error:',
 4 | 	'missing default light value, or value is not in a valid color format':
 5 | 		'Geen standaard waarde voor het lichte thema, of de waarde is niet in het goede formaat',
 6 | 	'missing default dark value, or value is not in a valid color format':
 7 | 		'Geen standaard waarde voor het donkere thema, of de waarde is niet in het goede formaat',
 8 | 	'missing default value, or value is not in a valid color format':
 9 | 		'Geen standaard waarde, of de waarde is niet in het goede formaat',
10 | 	'missing default value': 'Geen standaard waarde',
11 | };
12 | 


--------------------------------------------------------------------------------
/src/lang/locale/no.ts:
--------------------------------------------------------------------------------
1 | export const no = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/pl.ts:
--------------------------------------------------------------------------------
1 | export const pl = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/pt.ts:
--------------------------------------------------------------------------------
1 | export const pt = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/ptBr.ts:
--------------------------------------------------------------------------------
1 | export const ptBr = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/ro.ts:
--------------------------------------------------------------------------------
1 | export const ro = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/ru.ts:
--------------------------------------------------------------------------------
1 | export const ru = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/sq.ts:
--------------------------------------------------------------------------------
1 | export const sq = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/tr.ts:
--------------------------------------------------------------------------------
1 | export const tr = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/uk.ts:
--------------------------------------------------------------------------------
1 | export const uk = {};
2 | 


--------------------------------------------------------------------------------
/src/lang/locale/zh.ts:
--------------------------------------------------------------------------------
 1 | export const zh = {
 2 | 	'Default:': '默认：',
 3 | 	'Error:': '错误：',
 4 | 	'missing default light value, or value is not in a valid color format':
 5 | 		'缺少默认的浅色模式色值，或该色值没有采用一个有效的颜色格式',
 6 | 	'missing default dark value, or value is not in a valid color format':
 7 | 		'缺少默认的深色模式色值，或该色值没有采用一个有效的颜色格式',
 8 | 	'missing default value, or value is not in a valid color format':
 9 | 		'缺少默认色值，或该色值没有采用一个有效的颜色格式',
10 | 	'missing default value': '缺少默认色值',
11 | };
12 | 


--------------------------------------------------------------------------------
/src/lang/locale/zhTw.ts:
--------------------------------------------------------------------------------
1 | export const zhTw = {};
2 | 


--------------------------------------------------------------------------------
/src/main.ts:
--------------------------------------------------------------------------------
  1 | import { ClassToggle, ParsedCSSSettings } from './SettingHandlers';
  2 | import { CSSSettingsManager } from './SettingsManager';
  3 | import {
  4 | 	ErrorList,
  5 | 	getDescription,
  6 | 	getTitle,
  7 | 	nameRegExp,
  8 | 	settingRegExp,
  9 | 	SettingsSeachResource,
 10 | } from './Utils';
 11 | import './css/pickerOverrides.css';
 12 | import './css/settings.css';
 13 | import { CSSSettingsTab } from './settingsView/CSSSettingsTab';
 14 | import { SettingType } from './settingsView/SettingComponents/types';
 15 | import { SettingsView, viewType } from './settingsView/SettingsView';
 16 | import '@simonwep/pickr/dist/themes/nano.min.css';
 17 | import detectIndent from 'detect-indent';
 18 | import yaml from 'js-yaml';
 19 | import { Command, Plugin } from 'obsidian';
 20 | 
 21 | export default class CSSSettingsPlugin extends Plugin {
 22 | 	settingsManager: CSSSettingsManager;
 23 | 	settingsTab: CSSSettingsTab;
 24 | 	settingsList: ParsedCSSSettings[] = [];
 25 | 	errorList: ErrorList = [];
 26 | 	commandList: Command[] = [];
 27 | 	lightEl: HTMLElement;
 28 | 	darkEl: HTMLElement;
 29 | 
 30 | 	async onload() {
 31 | 		this.settingsManager = new CSSSettingsManager(this);
 32 | 
 33 | 		await this.settingsManager.load();
 34 | 
 35 | 		this.settingsTab = new CSSSettingsTab(this.app, this);
 36 | 
 37 | 		this.addSettingTab(this.settingsTab);
 38 | 
 39 | 		this.registerView(viewType, (leaf) => new SettingsView(this, leaf));
 40 | 
 41 | 		this.addCommand({
 42 | 			id: 'show-style-settings-leaf',
 43 | 			name: 'Show style settings view',
 44 | 			callback: () => {
 45 | 				this.activateView();
 46 | 			},
 47 | 		});
 48 | 
 49 | 		this.registerEvent(
 50 | 			(this.app.workspace as any).on(
 51 | 				'css-change',
 52 | 				(data?: { source: string }) => {
 53 | 					if (data?.source !== 'style-settings') {
 54 | 						this.parseCSS();
 55 | 					}
 56 | 				}
 57 | 			)
 58 | 		);
 59 | 
 60 | 		this.registerEvent(
 61 | 			(this.app.workspace as any).on('parse-style-settings', () => {
 62 | 				this.parseCSS();
 63 | 			})
 64 | 		);
 65 | 
 66 | 		this.lightEl = document.body.createDiv('theme-light style-settings-ref');
 67 | 		this.darkEl = document.body.createDiv('theme-dark style-settings-ref');
 68 | 
 69 | 		document.body.classList.add('css-settings-manager');
 70 | 
 71 | 		this.parseCSS();
 72 | 
 73 | 		this.app.workspace.onLayoutReady(() => {
 74 | 			if (this.settingsList) {
 75 | 				this.app.workspace.getLeavesOfType(viewType).forEach((leaf) => {
 76 | 					(leaf.view as SettingsView).setSettings(
 77 | 						this.settingsList,
 78 | 						this.errorList
 79 | 					);
 80 | 				});
 81 | 			}
 82 | 		});
 83 | 	}
 84 | 
 85 | 	getCSSVar(id: string) {
 86 | 		const light = getComputedStyle(this.lightEl).getPropertyValue(`--${id}`);
 87 | 		const dark = getComputedStyle(this.darkEl).getPropertyValue(`--${id}`);
 88 | 		const current = getComputedStyle(document.body).getPropertyValue(`--${id}`);
 89 | 		return { light, dark, current };
 90 | 	}
 91 | 
 92 | 	debounceTimer = 0;
 93 | 
 94 | 	parseCSS() {
 95 | 		clearTimeout(this.debounceTimer);
 96 | 		this.debounceTimer = activeWindow.setTimeout(() => {
 97 | 			this.settingsList = [];
 98 | 			this.errorList = [];
 99 | 
100 | 			// remove registered theme commands (sadly undocumented API)
101 | 			for (const command of this.commandList) {
102 | 				// @ts-ignore
103 | 				this.app.commands.removeCommand(command.id);
104 | 			}
105 | 
106 | 			this.commandList = [];
107 | 			this.settingsManager.removeClasses();
108 | 
109 | 			const styleSheets = document.styleSheets;
110 | 
111 | 			for (let i = 0, len = styleSheets.length; i < len; i++) {
112 | 				const sheet = styleSheets.item(i);
113 | 				if (!sheet) continue;
114 | 				this.parseCSSStyleSheet(sheet);
115 | 			}
116 | 
117 | 			// compatability with Settings Search Plugin
118 | 			this.registerSettingsToSettingsSearch();
119 | 
120 | 			this.settingsTab.setSettings(this.settingsList, this.errorList);
121 | 			this.app.workspace.getLeavesOfType(viewType).forEach((leaf) => {
122 | 				(leaf.view as SettingsView).setSettings(
123 | 					this.settingsList,
124 | 					this.errorList
125 | 				);
126 | 			});
127 | 			this.settingsManager.setConfig(this.settingsList);
128 | 			this.settingsManager.initClasses();
129 | 			this.registerSettingCommands();
130 | 		}, 100);
131 | 	}
132 | 
133 | 	/**
134 | 	 * Registers the current settings to the settings search plugin.
135 | 	 * It also unregisters the old settings.
136 | 	 *
137 | 	 * @private
138 | 	 */
139 | 	private registerSettingsToSettingsSearch() {
140 | 		const onSettingsSearchLoaded = () => {
141 | 			if ((window as any).SettingsSearch) {
142 | 				const settingsSearch: any = (window as any).SettingsSearch;
143 | 
144 | 				settingsSearch.removeTabResources('obsidian-style-settings');
145 | 
146 | 				for (const parsedCSSSetting of this.settingsList) {
147 | 					settingsSearch.addResources(
148 | 						...parsedCSSSetting.settings.map((x) => {
149 | 							const settingsSearchResource: SettingsSeachResource = {
150 | 								tab: 'obsidian-style-settings',
151 | 								name: 'Style Settings',
152 | 								text: getTitle(x) ?? '',
153 | 								desc: getDescription(x) ?? '',
154 | 							};
155 | 							return settingsSearchResource;
156 | 						})
157 | 					);
158 | 				}
159 | 			}
160 | 		};
161 | 
162 | 		// @ts-ignore TODO: expand obsidian types, so that the ts-ignore is not needed
163 | 		if (this.app.plugins.plugins['settings-search']?.loaded) {
164 | 			onSettingsSearchLoaded();
165 | 		} else {
166 | 			// @ts-ignore
167 | 			this.app.workspace.on('settings-search-loaded', () => {
168 | 				onSettingsSearchLoaded();
169 | 			});
170 | 		}
171 | 	}
172 | 
173 | 	/**
174 | 	 * Remove any settings from settings search if settings search is loaded.
175 | 	 *
176 | 	 * @private
177 | 	 */
178 | 	private unregisterSettingsFromSettingsSearch() {
179 | 		// @ts-ignore TODO: expand obsidian types, so that the ts-ignore is not needed
180 | 		if (this.app.plugins.plugins['settings-search']?.loaded) {
181 | 			// @ts-ignore
182 | 			window.SettingsSearch.removeTabResources('obsidian-style-settings');
183 | 		}
184 | 	}
185 | 
186 | 	/**
187 | 	 * Parses the settings from a css style sheet.
188 | 	 * Adds the parsed settings to `settingsList` and any errors to `errorList`.
189 | 	 *
190 | 	 * @param sheet the stylesheet to parse
191 | 	 * @private
192 | 	 */
193 | 	private parseCSSStyleSheet(sheet: CSSStyleSheet): void {
194 | 		const text = sheet?.ownerNode?.textContent?.trim();
195 | 		if (!text) return;
196 | 
197 | 		let match = settingRegExp.exec(text);
198 | 
199 | 		if (match?.length) {
200 | 			do {
201 | 				const nameMatch = text.match(nameRegExp);
202 | 				if (!nameMatch) continue;
203 | 
204 | 				const name = nameMatch[1];
205 | 
206 | 				try {
207 | 					const str = match[1].trim();
208 | 					const settings = this.parseCSSSettings(str, name);
209 | 
210 | 					if (
211 | 						settings &&
212 | 						typeof settings === 'object' &&
213 | 						settings.name &&
214 | 						settings.id &&
215 | 						settings.settings &&
216 | 						settings.settings.length
217 | 					) {
218 | 						this.settingsList.push(settings);
219 | 					}
220 | 				} catch (e) {
221 | 					this.errorList.push({ name, error: `${e}` });
222 | 				}
223 | 			} while ((match = settingRegExp.exec(text)) !== null);
224 | 		}
225 | 	}
226 | 
227 | 	/**
228 | 	 * Parse css settings from a string.
229 | 	 *
230 | 	 * @param str the stringified settings to parse
231 | 	 * @param name the name of the file
232 | 	 * @private
233 | 	 */
234 | 	private parseCSSSettings(
235 | 		str: string,
236 | 		name: string
237 | 	): ParsedCSSSettings | undefined {
238 | 		const indent = detectIndent(str);
239 | 
240 | 		const settings: ParsedCSSSettings = yaml.load(
241 | 			str.replace(/\t/g, indent.type === 'space' ? indent.indent : '    '),
242 | 			{
243 | 				filename: name,
244 | 			}
245 | 		) as ParsedCSSSettings;
246 | 
247 | 		if (!settings.settings) return undefined;
248 | 
249 | 		settings.settings = settings.settings.filter((setting) => setting);
250 | 		return settings;
251 | 	}
252 | 
253 | 	private registerSettingCommands(): void {
254 | 		for (const section of this.settingsList) {
255 | 			for (const setting of section.settings) {
256 | 				if (
257 | 					setting.type === SettingType.CLASS_TOGGLE &&
258 | 					(setting as ClassToggle).addCommand
259 | 				) {
260 | 					this.addClassToggleCommand(section, setting as ClassToggle);
261 | 				}
262 | 			}
263 | 		}
264 | 	}
265 | 
266 | 	private addClassToggleCommand(
267 | 		section: ParsedCSSSettings,
268 | 		setting: ClassToggle
269 | 	): void {
270 | 		this.commandList.push(
271 | 			this.addCommand({
272 | 				id: `style-settings-class-toggle-${section.id}-${setting.id}`,
273 | 				name: `Toggle ${setting.title}`,
274 | 				callback: () => {
275 | 					const value = !(this.settingsManager.getSetting(
276 | 						section.id,
277 | 						setting.id
278 | 					) as boolean);
279 | 					this.settingsManager.setSetting(section.id, setting.id, value);
280 | 					this.settingsTab.rerender();
281 | 					for (const leaf of this.app.workspace.getLeavesOfType(viewType)) {
282 | 						(leaf.view as SettingsView).rerender();
283 | 					}
284 | 				},
285 | 			})
286 | 		);
287 | 	}
288 | 
289 | 	onunload() {
290 | 		this.lightEl.remove();
291 | 		this.darkEl.remove();
292 | 
293 | 		document.body.classList.remove('css-settings-manager');
294 | 
295 | 		this.settingsManager.cleanup();
296 | 		this.deactivateView();
297 | 		this.unregisterSettingsFromSettingsSearch();
298 | 	}
299 | 
300 | 	deactivateView() {
301 | 		this.app.workspace.detachLeavesOfType(viewType);
302 | 	}
303 | 
304 | 	async activateView() {
305 | 		this.deactivateView();
306 | 		const leaf = this.app.workspace.getLeaf('tab');
307 | 
308 | 		await leaf.setViewState({
309 | 			type: viewType,
310 | 			active: true,
311 | 		});
312 | 
313 | 		(leaf.view as SettingsView).setSettings(this.settingsList, this.errorList);
314 | 	}
315 | }
316 | 


--------------------------------------------------------------------------------
/src/settingsView/CSSSettingsTab.ts:
--------------------------------------------------------------------------------
 1 | import CSSSettingsPlugin from '../main';
 2 | import { SettingsMarkup } from './SettingsMarkup';
 3 | import { App, PluginSettingTab } from 'obsidian';
 4 | import { ParsedCSSSettings } from 'src/SettingHandlers';
 5 | import { ErrorList } from 'src/Utils';
 6 | 
 7 | export class CSSSettingsTab extends PluginSettingTab {
 8 | 	settingsMarkup: SettingsMarkup | null;
 9 | 	plugin: CSSSettingsPlugin;
10 | 	settings: ParsedCSSSettings[];
11 | 	errorList: ErrorList;
12 | 
13 | 	constructor(app: App, plugin: CSSSettingsPlugin) {
14 | 		super(app, plugin);
15 | 		this.plugin = plugin;
16 | 	}
17 | 
18 | 	rerender() {
19 | 		this.settingsMarkup?.rerender();
20 | 	}
21 | 
22 | 	setSettings(settings: ParsedCSSSettings[], errorList: ErrorList) {
23 | 		this.settings = settings;
24 | 		this.errorList = errorList;
25 | 		if (this.settingsMarkup) {
26 | 			this.settingsMarkup.setSettings(settings, errorList);
27 | 		}
28 | 	}
29 | 
30 | 	display(): void {
31 | 		this.settingsMarkup = this.plugin.addChild(
32 | 			new SettingsMarkup(this.app, this.plugin, this.containerEl)
33 | 		);
34 | 		if (this.settings) {
35 | 			this.settingsMarkup.setSettings(this.settings, this.errorList);
36 | 		}
37 | 	}
38 | 
39 | 	hide(): void {
40 | 		if (this.settingsMarkup) {
41 | 			this.plugin.removeChild(this.settingsMarkup);
42 | 		}
43 | 		this.settingsMarkup = null;
44 | 	}
45 | }
46 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/AbstractSettingComponent.ts:
--------------------------------------------------------------------------------
 1 | import { CSSSetting } from '../../SettingHandlers';
 2 | import { CSSSettingsManager } from '../../SettingsManager';
 3 | import { getDescription, getTitle } from '../../Utils';
 4 | import fuzzysort from 'fuzzysort';
 5 | import { Component } from 'obsidian';
 6 | 
 7 | export abstract class AbstractSettingComponent extends Component {
 8 | 	parent: AbstractSettingComponent | HTMLElement;
 9 | 	childEl: HTMLElement | null = null;
10 | 	sectionId: string;
11 | 	sectionName: string;
12 | 	setting: CSSSetting;
13 | 	settingsManager: CSSSettingsManager;
14 | 	isView: boolean;
15 | 
16 | 	constructor(
17 | 		parent: AbstractSettingComponent | HTMLElement,
18 | 		sectionId: string,
19 | 		sectionName: string,
20 | 		setting: CSSSetting,
21 | 		settingsManager: CSSSettingsManager,
22 | 		isView: boolean
23 | 	) {
24 | 		super();
25 | 		this.parent = parent;
26 | 		this.sectionId = sectionId;
27 | 		this.sectionName = sectionName;
28 | 		this.setting = setting;
29 | 		this.settingsManager = settingsManager;
30 | 		this.isView = isView;
31 | 	}
32 | 
33 | 	get containerEl() {
34 | 		return this.parent instanceof HTMLElement
35 | 			? this.parent
36 | 			: this.parent.childEl;
37 | 	}
38 | 
39 | 	onload(): void {
40 | 		this.render();
41 | 	}
42 | 
43 | 	onunload(): void {
44 | 		this.destroy();
45 | 	}
46 | 
47 | 	/**
48 | 	 * Matches the Component against `str`. A perfect match returns 0, no match returns negative infinity.
49 | 	 *
50 | 	 * @param str the string to match this Component against.
51 | 	 */
52 | 	match(str: string): number {
53 | 		if (!str) {
54 | 			return Number.NEGATIVE_INFINITY;
55 | 		}
56 | 
57 | 		const title = getTitle(this.setting);
58 | 		const description = getDescription(this.setting) || '';
59 | 
60 | 		return Math.max(
61 | 			fuzzysort.single(str, title)?.score ?? Number.NEGATIVE_INFINITY,
62 | 			fuzzysort.single(str, description)?.score ?? Number.NEGATIVE_INFINITY
63 | 		);
64 | 	}
65 | 
66 | 	/**
67 | 	 * Matches the Component against `str`. A match returns true, no match  or a bad match returns false.
68 | 	 *
69 | 	 * @param str the string to match this Component against.
70 | 	 */
71 | 	decisiveMatch(str: string): boolean {
72 | 		return this.match(str) > -100000;
73 | 	}
74 | 
75 | 	/**
76 | 	 * Renders the Component and all it's children into `containerEl`.
77 | 	 */
78 | 	abstract render(): void;
79 | 
80 | 	/**
81 | 	 * Destroys the component and all it's children.
82 | 	 */
83 | 	abstract destroy(): void;
84 | }
85 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/ClassMultiToggleSettingComponent.ts:
--------------------------------------------------------------------------------
  1 | import {
  2 | 	ClassMultiToggle,
  3 | 	resetTooltip,
  4 | 	SelectOption,
  5 | } from '../../SettingHandlers';
  6 | import { createDescription, getDescription, getTitle } from '../../Utils';
  7 | import { t } from '../../lang/helpers';
  8 | import { AbstractSettingComponent } from './AbstractSettingComponent';
  9 | import { DropdownComponent, Setting } from 'obsidian';
 10 | 
 11 | export class ClassMultiToggleSettingComponent extends AbstractSettingComponent {
 12 | 	settingEl: Setting;
 13 | 	dropdownComponent: DropdownComponent;
 14 | 	setting: ClassMultiToggle;
 15 | 
 16 | 	render(): void {
 17 | 		if (!this.containerEl) return;
 18 | 
 19 | 		const title = getTitle(this.setting);
 20 | 		const description = getDescription(this.setting);
 21 | 
 22 | 		if (typeof this.setting.default !== 'string') {
 23 | 			return console.error(
 24 | 				`${t('Error:')} ${title} ${t('missing default value')}`
 25 | 			);
 26 | 		}
 27 | 
 28 | 		let prevValue = this.getPreviousValue();
 29 | 
 30 | 		const defaultLabel = this.getDefaultOptionLabel();
 31 | 
 32 | 		this.settingEl = new Setting(this.containerEl);
 33 | 		this.settingEl.setName(title);
 34 | 		this.settingEl.setDesc(
 35 | 			createDescription(description, this.setting.default, defaultLabel)
 36 | 		);
 37 | 
 38 | 		this.settingEl.addDropdown((dropdown) => {
 39 | 			if (this.setting.allowEmpty) {
 40 | 				dropdown.addOption('none', '');
 41 | 			}
 42 | 
 43 | 			for (const o of this.setting.options) {
 44 | 				if (typeof o === 'string') {
 45 | 					dropdown.addOption(o, o);
 46 | 				} else {
 47 | 					dropdown.addOption(o.value, o.label);
 48 | 				}
 49 | 			}
 50 | 
 51 | 			dropdown.setValue(prevValue);
 52 | 
 53 | 			dropdown.onChange((value) => {
 54 | 				this.settingsManager.setSetting(this.sectionId, this.setting.id, value);
 55 | 				prevValue = value;
 56 | 			});
 57 | 
 58 | 			this.dropdownComponent = dropdown;
 59 | 		});
 60 | 
 61 | 		this.settingEl.addExtraButton((b) => {
 62 | 			b.setIcon('reset');
 63 | 			b.onClick(() => {
 64 | 				this.dropdownComponent.setValue(this.setting.default || 'none');
 65 | 				this.settingsManager.clearSetting(this.sectionId, this.setting.id);
 66 | 			});
 67 | 			b.setTooltip(resetTooltip);
 68 | 		});
 69 | 
 70 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
 71 | 	}
 72 | 
 73 | 	destroy(): void {
 74 | 		this.settingEl?.settingEl.remove();
 75 | 	}
 76 | 
 77 | 	private getDefaultOption(): string | SelectOption | undefined {
 78 | 		if (this.setting.default) {
 79 | 			return this.setting.options.find((o) => {
 80 | 				if (typeof o === 'string') {
 81 | 					return o === this.setting.default;
 82 | 				}
 83 | 
 84 | 				return o.value === this.setting.default;
 85 | 			});
 86 | 		}
 87 | 
 88 | 		return undefined;
 89 | 	}
 90 | 
 91 | 	private getDefaultOptionLabel() {
 92 | 		const defaultOption = this.getDefaultOption();
 93 | 
 94 | 		if (defaultOption) {
 95 | 			if (typeof defaultOption === 'string') {
 96 | 				return defaultOption;
 97 | 			}
 98 | 			return defaultOption.label;
 99 | 		}
100 | 
101 | 		return undefined;
102 | 	}
103 | 
104 | 	private getPreviousValue() {
105 | 		const prevValue = this.settingsManager.getSetting(
106 | 			this.sectionId,
107 | 			this.setting.id
108 | 		) as string | undefined;
109 | 
110 | 		if (prevValue === undefined) {
111 | 			if (this.setting.default) {
112 | 				return this.setting.default;
113 | 			}
114 | 			return 'none';
115 | 		}
116 | 		return prevValue;
117 | 	}
118 | }
119 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/ClassToggleSettingComponent.ts:
--------------------------------------------------------------------------------
 1 | import { ClassToggle, resetTooltip } from '../../SettingHandlers';
 2 | import { getDescription, getTitle } from '../../Utils';
 3 | import { AbstractSettingComponent } from './AbstractSettingComponent';
 4 | import { Setting, ToggleComponent } from 'obsidian';
 5 | 
 6 | export class ClassToggleSettingComponent extends AbstractSettingComponent {
 7 | 	settingEl: Setting;
 8 | 	toggleComponent: ToggleComponent;
 9 | 	setting: ClassToggle;
10 | 
11 | 	render(): void {
12 | 		if (!this.containerEl) return;
13 | 		const title = getTitle(this.setting);
14 | 		const description = getDescription(this.setting);
15 | 
16 | 		this.settingEl = new Setting(this.containerEl);
17 | 		this.settingEl.setName(title);
18 | 		this.settingEl.setDesc(description ?? '');
19 | 
20 | 		this.settingEl.addToggle((toggle) => {
21 | 			const value = this.settingsManager.getSetting(
22 | 				this.sectionId,
23 | 				this.setting.id
24 | 			);
25 | 
26 | 			toggle.setValue(value !== undefined ? !!value : !!this.setting.default);
27 | 			toggle.onChange((value) => {
28 | 				this.settingsManager.setSetting(this.sectionId, this.setting.id, value);
29 | 			});
30 | 
31 | 			this.toggleComponent = toggle;
32 | 		});
33 | 
34 | 		this.settingEl.addExtraButton((b) => {
35 | 			b.setIcon('reset');
36 | 			b.onClick(() => {
37 | 				const value = !!this.setting.default;
38 | 
39 | 				this.toggleComponent.setValue(value);
40 | 				this.settingsManager.clearSetting(this.sectionId, this.setting.id);
41 | 			});
42 | 			b.setTooltip(resetTooltip);
43 | 		});
44 | 
45 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
46 | 	}
47 | 
48 | 	destroy(): void {
49 | 		this.settingEl?.settingEl.remove();
50 | 	}
51 | }
52 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/HeadingSettingComponent.ts:
--------------------------------------------------------------------------------
  1 | import { CSSSetting, Heading } from '../../SettingHandlers';
  2 | import { getDescription, getTitle } from '../../Utils';
  3 | import { AbstractSettingComponent } from './AbstractSettingComponent';
  4 | import { ClassMultiToggleSettingComponent } from './ClassMultiToggleSettingComponent';
  5 | import { ClassToggleSettingComponent } from './ClassToggleSettingComponent';
  6 | import { InfoTextSettingComponent } from './InfoTextSettingComponent';
  7 | import { VariableColorSettingComponent } from './VariableColorSettingComponent';
  8 | import { VariableNumberSettingComponent } from './VariableNumberSettingComponent';
  9 | import { VariableNumberSliderSettingComponent } from './VariableNumberSliderSettingComponent';
 10 | import { VariableSelectSettingComponent } from './VariableSelectSettingComponent';
 11 | import { VariableTextSettingComponent } from './VariableTextSettingComponent';
 12 | import { VariableThemedColorSettingComponent } from './VariableThemedColorSettingComponent';
 13 | import { SettingType } from './types';
 14 | import { setIcon, Setting } from 'obsidian';
 15 | import { CSSSettingsManager } from 'src/SettingsManager';
 16 | 
 17 | export function createSettingComponent(
 18 | 	parent: AbstractSettingComponent,
 19 | 	sectionId: string,
 20 | 	sectionName: string,
 21 | 	setting: CSSSetting,
 22 | 	settingsManager: CSSSettingsManager,
 23 | 	isView: boolean
 24 | ): AbstractSettingComponent | undefined {
 25 | 	if (setting.type === SettingType.HEADING) {
 26 | 		return new HeadingSettingComponent(
 27 | 			parent,
 28 | 			sectionId,
 29 | 			sectionName,
 30 | 			setting,
 31 | 			settingsManager,
 32 | 			isView
 33 | 		);
 34 | 	} else if (setting.type === SettingType.INFO_TEXT) {
 35 | 		return new InfoTextSettingComponent(
 36 | 			parent,
 37 | 			sectionId,
 38 | 			sectionName,
 39 | 			setting,
 40 | 			settingsManager,
 41 | 			isView
 42 | 		);
 43 | 	} else if (setting.type === SettingType.CLASS_TOGGLE) {
 44 | 		return new ClassToggleSettingComponent(
 45 | 			parent,
 46 | 			sectionId,
 47 | 			sectionName,
 48 | 			setting,
 49 | 			settingsManager,
 50 | 			isView
 51 | 		);
 52 | 	} else if (setting.type === SettingType.CLASS_SELECT) {
 53 | 		return new ClassMultiToggleSettingComponent(
 54 | 			parent,
 55 | 			sectionId,
 56 | 			sectionName,
 57 | 			setting,
 58 | 			settingsManager,
 59 | 			isView
 60 | 		);
 61 | 	} else if (setting.type === SettingType.VARIABLE_TEXT) {
 62 | 		return new VariableTextSettingComponent(
 63 | 			parent,
 64 | 			sectionId,
 65 | 			sectionName,
 66 | 			setting,
 67 | 			settingsManager,
 68 | 			isView
 69 | 		);
 70 | 	} else if (setting.type === SettingType.VARIABLE_NUMBER) {
 71 | 		return new VariableNumberSettingComponent(
 72 | 			parent,
 73 | 			sectionId,
 74 | 			sectionName,
 75 | 			setting,
 76 | 			settingsManager,
 77 | 			isView
 78 | 		);
 79 | 	} else if (setting.type === SettingType.VARIABLE_NUMBER_SLIDER) {
 80 | 		return new VariableNumberSliderSettingComponent(
 81 | 			parent,
 82 | 			sectionId,
 83 | 			sectionName,
 84 | 			setting,
 85 | 			settingsManager,
 86 | 			isView
 87 | 		);
 88 | 	} else if (setting.type === SettingType.VARIABLE_SELECT) {
 89 | 		return new VariableSelectSettingComponent(
 90 | 			parent,
 91 | 			sectionId,
 92 | 			sectionName,
 93 | 			setting,
 94 | 			settingsManager,
 95 | 			isView
 96 | 		);
 97 | 	} else if (setting.type === SettingType.VARIABLE_COLOR) {
 98 | 		return new VariableColorSettingComponent(
 99 | 			parent,
100 | 			sectionId,
101 | 			sectionName,
102 | 			setting,
103 | 			settingsManager,
104 | 			isView
105 | 		);
106 | 	} else if (setting.type === SettingType.VARIABLE_THEMED_COLOR) {
107 | 		return new VariableThemedColorSettingComponent(
108 | 			parent,
109 | 			sectionId,
110 | 			sectionName,
111 | 			setting,
112 | 			settingsManager,
113 | 			isView
114 | 		);
115 | 	} else {
116 | 		return undefined;
117 | 	}
118 | }
119 | 
120 | export function buildSettingComponentTree(opts: {
121 | 	containerEl: HTMLElement;
122 | 	isView: boolean;
123 | 	sectionId: string;
124 | 	sectionName: string;
125 | 	settings: CSSSetting[];
126 | 	settingsManager: CSSSettingsManager;
127 | }): HeadingSettingComponent {
128 | 	const {
129 | 		containerEl,
130 | 		isView,
131 | 		sectionId,
132 | 		settings,
133 | 		settingsManager,
134 | 		sectionName,
135 | 	} = opts;
136 | 
137 | 	const root: HeadingSettingComponent = new HeadingSettingComponent(
138 | 		containerEl,
139 | 		sectionId,
140 | 		sectionName,
141 | 		settings[0],
142 | 		settingsManager,
143 | 		isView
144 | 	);
145 | 
146 | 	let currentHeading: HeadingSettingComponent = root;
147 | 
148 | 	for (const setting of settings.splice(1)) {
149 | 		if (setting.type === 'heading') {
150 | 			const newHeading: Heading = setting as Heading;
151 | 
152 | 			if (newHeading.level < currentHeading.setting.level) {
153 | 				while (newHeading.level < currentHeading.setting.level) {
154 | 					currentHeading = currentHeading.parent;
155 | 				}
156 | 
157 | 				if (currentHeading.setting.id === root.setting.id) {
158 | 					currentHeading = currentHeading.addSettingChild(
159 | 						newHeading
160 | 					) as HeadingSettingComponent;
161 | 				} else {
162 | 					currentHeading = currentHeading.parent.addSettingChild(
163 | 						newHeading
164 | 					) as HeadingSettingComponent;
165 | 				}
166 | 			} else if (newHeading.level === currentHeading.setting.level) {
167 | 				currentHeading = currentHeading.parent.addSettingChild(
168 | 					newHeading
169 | 				) as HeadingSettingComponent;
170 | 			} else {
171 | 				currentHeading = currentHeading.addSettingChild(
172 | 					newHeading
173 | 				) as HeadingSettingComponent;
174 | 			}
175 | 		} else {
176 | 			currentHeading.addSettingChild(setting);
177 | 		}
178 | 	}
179 | 
180 | 	return root;
181 | }
182 | 
183 | export class HeadingSettingComponent extends AbstractSettingComponent {
184 | 	setting: Heading;
185 | 	settingEl: Setting;
186 | 	parent: HeadingSettingComponent;
187 | 	children: AbstractSettingComponent[] = [];
188 | 	filteredChildren: AbstractSettingComponent[] = [];
189 | 	filterMode: boolean = false;
190 | 	filterResultCount: number = 0;
191 | 	resultsEl: HTMLElement;
192 | 
193 | 	render(): void {
194 | 		if (!this.containerEl) return;
195 | 		const title = getTitle(this.setting);
196 | 		const description = getDescription(this.setting);
197 | 
198 | 		this.settingEl = new Setting(this.containerEl);
199 | 		this.settingEl.setHeading();
200 | 		this.settingEl.setClass('style-settings-heading');
201 | 		this.settingEl.setName(title);
202 | 		this.settingEl.setDesc(description ?? '');
203 | 
204 | 		this.settingEl.settingEl.dataset.level = this.setting.level.toString();
205 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
206 | 
207 | 		const iconContainer = createSpan({
208 | 			cls: 'style-settings-collapse-indicator',
209 | 		});
210 | 
211 | 		setIcon(iconContainer, 'right-triangle');
212 | 
213 | 		this.settingEl.nameEl.prepend(iconContainer);
214 | 
215 | 		this.resultsEl = this.settingEl.nameEl.createSpan({
216 | 			cls: 'style-settings-filter-result-count',
217 | 			text: this.filterMode ? `${this.filterResultCount} Results` : undefined,
218 | 		});
219 | 
220 | 		this.settingEl.settingEl.addEventListener('click', () => {
221 | 			this.toggleVisible();
222 | 		});
223 | 
224 | 		this.addResetButton();
225 | 		this.addExportButton();
226 | 
227 | 		this.childEl = this.containerEl.createDiv({
228 | 			cls: 'style-settings-container',
229 | 		});
230 | 		this.setCollapsed(!!this.setting.collapsed);
231 | 	}
232 | 
233 | 	destroy(): void {
234 | 		this.removeChildren();
235 | 		this.settingEl?.settingEl.remove();
236 | 		this.childEl?.remove();
237 | 	}
238 | 
239 | 	filter(filterString: string): number {
240 | 		this.filteredChildren = [];
241 | 		this.filterResultCount = 0;
242 | 
243 | 		for (const child of this.children) {
244 | 			if (child.setting.type === SettingType.HEADING) {
245 | 				const childResultCount = (child as HeadingSettingComponent).filter(
246 | 					filterString
247 | 				);
248 | 				if (childResultCount > 0) {
249 | 					this.filterResultCount += childResultCount;
250 | 					this.filteredChildren.push(child);
251 | 				}
252 | 			} else {
253 | 				if (child.decisiveMatch(filterString)) {
254 | 					this.filteredChildren.push(child);
255 | 					this.filterResultCount += 1;
256 | 				}
257 | 			}
258 | 		}
259 | 
260 | 		this.filterMode = true;
261 | 		if (this.filterResultCount) {
262 | 			this.setCollapsed(false);
263 | 		} else {
264 | 			this.setCollapsed(true);
265 | 		}
266 | 		this.renderChildren();
267 | 		this.resultsEl?.setText(`${this.filterResultCount} Results`);
268 | 
269 | 		return this.filterResultCount;
270 | 	}
271 | 
272 | 	clearFilter(): void {
273 | 		this.filteredChildren = [];
274 | 
275 | 		for (const child of this.children) {
276 | 			if (child.setting.type === SettingType.HEADING) {
277 | 				(child as HeadingSettingComponent).clearFilter();
278 | 			}
279 | 		}
280 | 
281 | 		this.filterMode = false;
282 | 		this.setCollapsed(true);
283 | 		this.renderChildren();
284 | 		this.resultsEl?.empty();
285 | 	}
286 | 
287 | 	private renderChildren() {
288 | 		this.removeChildren();
289 | 		if (this.filterMode) {
290 | 			for (const child of this.filteredChildren) {
291 | 				this.addChild(child);
292 | 			}
293 | 		} else {
294 | 			for (const child of this.children) {
295 | 				this.addChild(child);
296 | 			}
297 | 		}
298 | 	}
299 | 
300 | 	private removeChildren() {
301 | 		for (const child of this.children) {
302 | 			this.removeChild(child);
303 | 		}
304 | 	}
305 | 
306 | 	private toggleVisible() {
307 | 		this.setCollapsed(!this.setting.collapsed);
308 | 	}
309 | 
310 | 	private setCollapsed(collapsed: boolean) {
311 | 		this.setting.collapsed = collapsed;
312 | 		this.settingEl?.settingEl.toggleClass('is-collapsed', collapsed);
313 | 
314 | 		if (collapsed) {
315 | 			this.removeChildren();
316 | 		} else {
317 | 			this.renderChildren();
318 | 		}
319 | 	}
320 | 
321 | 	private addResetButton() {
322 | 		const { resetFn } = this.setting;
323 | 		if (resetFn) {
324 | 			this.settingEl.addExtraButton((b) => {
325 | 				b.setIcon('reset')
326 | 					.setTooltip('Reset all settings to default')
327 | 					.onClick(resetFn);
328 | 			});
329 | 		}
330 | 	}
331 | 
332 | 	private addExportButton() {
333 | 		this.settingEl.addExtraButton((b) => {
334 | 			b.setIcon('install');
335 | 			b.setTooltip('Export settings');
336 | 			b.extraSettingsEl.onClickEvent((e) => {
337 | 				e.stopPropagation();
338 | 				let title = getTitle(this.setting);
339 | 				title =
340 | 					this.sectionName === title ? title : `${this.sectionName} > ${title}`;
341 | 				this.settingsManager.export(
342 | 					title,
343 | 					this.settingsManager.getSettings(
344 | 						this.sectionId,
345 | 						this.getAllChildrenIds()
346 | 					)
347 | 				);
348 | 			});
349 | 		});
350 | 	}
351 | 
352 | 	addSettingChild(child: CSSSetting): AbstractSettingComponent | undefined {
353 | 		const newSettingComponent = createSettingComponent(
354 | 			this,
355 | 			this.sectionId,
356 | 			this.sectionName,
357 | 			child,
358 | 			this.settingsManager,
359 | 			this.isView
360 | 		);
361 | 		if (!newSettingComponent) {
362 | 			return undefined;
363 | 		}
364 | 
365 | 		this.children.push(newSettingComponent);
366 | 		return newSettingComponent;
367 | 	}
368 | 
369 | 	getAllChildrenIds(): string[] {
370 | 		const children: string[] = [];
371 | 		for (const child of this.children) {
372 | 			children.push(child.setting.id);
373 | 			if (child.setting.type === 'heading') {
374 | 				children.push(
375 | 					...(child as HeadingSettingComponent).getAllChildrenIds()
376 | 				);
377 | 			}
378 | 		}
379 | 		return children;
380 | 	}
381 | }
382 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/InfoTextSettingComponent.ts:
--------------------------------------------------------------------------------
 1 | import { InfoText } from '../../SettingHandlers';
 2 | import { getDescription, getTitle } from '../../Utils';
 3 | import { AbstractSettingComponent } from './AbstractSettingComponent';
 4 | import { MarkdownRenderer, Setting } from 'obsidian';
 5 | 
 6 | export class InfoTextSettingComponent extends AbstractSettingComponent {
 7 | 	settingEl: Setting;
 8 | 
 9 | 	setting: InfoText;
10 | 
11 | 	render(): void {
12 | 		if (!this.containerEl) return;
13 | 		const title = getTitle(this.setting);
14 | 		const description = getDescription(this.setting);
15 | 
16 | 		this.settingEl = new Setting(this.containerEl);
17 | 		this.settingEl.setClass('style-settings-info-text');
18 | 		if (title) {
19 | 			this.settingEl.setName(title);
20 | 		}
21 | 		if (description) {
22 | 			if (this.setting.markdown) {
23 | 				MarkdownRenderer.renderMarkdown(
24 | 					description,
25 | 					this.settingEl.descEl,
26 | 					'',
27 | 					this
28 | 				);
29 | 				this.settingEl.descEl.addClass('style-settings-markdown');
30 | 			} else {
31 | 				this.settingEl.setDesc(description);
32 | 			}
33 | 		}
34 | 
35 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
36 | 	}
37 | 
38 | 	destroy(): void {
39 | 		this.settingEl?.settingEl.remove();
40 | 	}
41 | }
42 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/VariableColorSettingComponent.ts:
--------------------------------------------------------------------------------
  1 | import { resetTooltip, VariableColor } from '../../SettingHandlers';
  2 | import {
  3 | 	createDescription,
  4 | 	getDescription,
  5 | 	getPickrSettings,
  6 | 	getTitle,
  7 | 	isValidDefaultColor,
  8 | 	onPickrCancel,
  9 | } from '../../Utils';
 10 | import { t } from '../../lang/helpers';
 11 | import { AbstractSettingComponent } from './AbstractSettingComponent';
 12 | import Pickr from '@simonwep/pickr';
 13 | import { Setting } from 'obsidian';
 14 | 
 15 | export class VariableColorSettingComponent extends AbstractSettingComponent {
 16 | 	settingEl: Setting;
 17 | 	setting: VariableColor;
 18 | 	pickr: Pickr | null;
 19 | 
 20 | 	render(): void {
 21 | 		if (!this.containerEl) return;
 22 | 		const title = getTitle(this.setting);
 23 | 		const description = getDescription(this.setting);
 24 | 
 25 | 		if (
 26 | 			typeof this.setting.default !== 'string' ||
 27 | 			!isValidDefaultColor(this.setting.default)
 28 | 		) {
 29 | 			this.setting.default = this.settingsManager.plugin
 30 | 				.getCSSVar(this.setting.id)
 31 | 				.current?.trim();
 32 | 		}
 33 | 
 34 | 		if (
 35 | 			typeof this.setting.default !== 'string' ||
 36 | 			!isValidDefaultColor(this.setting.default)
 37 | 		) {
 38 | 			return console.error(
 39 | 				`${t('Error:')} ${title} ${t(
 40 | 					'missing default value, or value is not in a valid color format'
 41 | 				)}`
 42 | 			);
 43 | 		}
 44 | 
 45 | 		const value = this.settingsManager.getSetting(
 46 | 			this.sectionId,
 47 | 			this.setting.id
 48 | 		);
 49 | 		const swatches: string[] = [];
 50 | 
 51 | 		if (this.setting.default) {
 52 | 			swatches.push(this.setting.default);
 53 | 		}
 54 | 
 55 | 		if (value !== undefined) {
 56 | 			swatches.push(value as string);
 57 | 		}
 58 | 
 59 | 		this.settingEl = new Setting(this.containerEl);
 60 | 		this.settingEl.setName(title);
 61 | 		this.settingEl.setDesc(
 62 | 			createDescription(description, this.setting.default)
 63 | 		);
 64 | 
 65 | 		// fix, so that the color is correctly shown before the color picker has been opened
 66 | 		const defaultColor =
 67 | 			value !== undefined ? (value as string) : this.setting.default;
 68 | 		this.containerEl.style.setProperty('--pcr-color', defaultColor);
 69 | 
 70 | 		const pickr = (this.pickr = Pickr.create(
 71 | 			getPickrSettings({
 72 | 				isView: this.isView,
 73 | 				el: this.settingEl.controlEl.createDiv({ cls: 'picker' }),
 74 | 				containerEl: this.containerEl,
 75 | 				swatches: swatches,
 76 | 				opacity: this.setting.opacity,
 77 | 				defaultColor: defaultColor,
 78 | 			})
 79 | 		));
 80 | 
 81 | 		pickr.on('save', (color: Pickr.HSVaColor, instance: Pickr) => {
 82 | 			if (!color) return;
 83 | 
 84 | 			this.settingsManager.setSetting(
 85 | 				this.sectionId,
 86 | 				this.setting.id,
 87 | 				color.toHEXA().toString()
 88 | 			);
 89 | 
 90 | 			instance.hide();
 91 | 			instance.addSwatch(color.toHEXA().toString());
 92 | 		});
 93 | 
 94 | 		pickr.on('show', () => {
 95 | 			const { result } = (pickr.getRoot() as any).interaction;
 96 | 			activeWindow.requestAnimationFrame(() => {
 97 | 				activeWindow.requestAnimationFrame(() => result.select());
 98 | 			});
 99 | 		});
100 | 
101 | 		pickr.on('cancel', onPickrCancel);
102 | 
103 | 		this.settingEl.addExtraButton((b) => {
104 | 			b.setIcon('reset');
105 | 			b.onClick(() => {
106 | 				pickr.setColor(this.setting.default || null);
107 | 				this.settingsManager.clearSetting(this.sectionId, this.setting.id);
108 | 			});
109 | 			b.setTooltip(resetTooltip);
110 | 		});
111 | 
112 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
113 | 	}
114 | 
115 | 	destroy(): void {
116 | 		this.pickr?.destroyAndRemove();
117 | 		this.pickr = null;
118 | 		this.settingEl?.settingEl.remove();
119 | 	}
120 | }
121 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/VariableNumberSettingComponent.ts:
--------------------------------------------------------------------------------
 1 | import { resetTooltip, VariableNumber } from '../../SettingHandlers';
 2 | import { createDescription, getDescription, getTitle } from '../../Utils';
 3 | import { t } from '../../lang/helpers';
 4 | import { AbstractSettingComponent } from './AbstractSettingComponent';
 5 | import { debounce, Setting, TextComponent } from 'obsidian';
 6 | 
 7 | export class VariableNumberSettingComponent extends AbstractSettingComponent {
 8 | 	settingEl: Setting;
 9 | 	textComponent: TextComponent;
10 | 	setting: VariableNumber;
11 | 
12 | 	render(): void {
13 | 		if (!this.containerEl) return;
14 | 		const title = getTitle(this.setting);
15 | 		const description = getDescription(this.setting);
16 | 
17 | 		if (typeof this.setting.default !== 'number') {
18 | 			return console.error(
19 | 				`${t('Error:')} ${title} ${t('missing default value')}`
20 | 			);
21 | 		}
22 | 
23 | 		this.settingEl = new Setting(this.containerEl);
24 | 		this.settingEl.setName(title);
25 | 		this.settingEl.setDesc(
26 | 			createDescription(description, this.setting.default.toString(10))
27 | 		);
28 | 
29 | 		this.settingEl.addText((text) => {
30 | 			const value = this.settingsManager.getSetting(
31 | 				this.sectionId,
32 | 				this.setting.id
33 | 			);
34 | 			const onChange = debounce(
35 | 				(value: string) => {
36 | 					const isFloat = /\./.test(value);
37 | 					this.settingsManager.setSetting(
38 | 						this.sectionId,
39 | 						this.setting.id,
40 | 						isFloat ? parseFloat(value) : parseInt(value, 10)
41 | 					);
42 | 				},
43 | 				250,
44 | 				true
45 | 			);
46 | 
47 | 			text.setValue(
48 | 				value !== undefined ? value.toString() : this.setting.default.toString()
49 | 			);
50 | 			text.onChange(onChange);
51 | 
52 | 			this.textComponent = text;
53 | 		});
54 | 
55 | 		this.settingEl.addExtraButton((b) => {
56 | 			b.setIcon('reset');
57 | 			b.onClick(() => {
58 | 				this.textComponent.setValue(this.setting.default.toString());
59 | 				this.settingsManager.clearSetting(this.sectionId, this.setting.id);
60 | 			});
61 | 			b.setTooltip(resetTooltip);
62 | 		});
63 | 
64 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
65 | 	}
66 | 
67 | 	destroy(): void {
68 | 		this.settingEl?.settingEl.remove();
69 | 	}
70 | }
71 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/VariableNumberSliderSettingComponent.ts:
--------------------------------------------------------------------------------
 1 | import { resetTooltip, VariableNumberSlider } from '../../SettingHandlers';
 2 | import { createDescription, getDescription, getTitle } from '../../Utils';
 3 | import { t } from '../../lang/helpers';
 4 | import { AbstractSettingComponent } from './AbstractSettingComponent';
 5 | import { debounce, Setting, SliderComponent } from 'obsidian';
 6 | 
 7 | export class VariableNumberSliderSettingComponent extends AbstractSettingComponent {
 8 | 	settingEl: Setting;
 9 | 	sliderComponent: SliderComponent;
10 | 	setting: VariableNumberSlider;
11 | 
12 | 	render(): void {
13 | 		if (!this.containerEl) return;
14 | 		const title = getTitle(this.setting);
15 | 		const description = getDescription(this.setting);
16 | 
17 | 		if (typeof this.setting.default !== 'number') {
18 | 			return console.error(
19 | 				`${t('Error:')} ${title} ${t('missing default value')}`
20 | 			);
21 | 		}
22 | 
23 | 		this.settingEl = new Setting(this.containerEl);
24 | 		this.settingEl.setName(title);
25 | 		this.settingEl.setDesc(
26 | 			createDescription(description, this.setting.default.toString(10))
27 | 		);
28 | 
29 | 		this.settingEl.addSlider((slider) => {
30 | 			const value = this.settingsManager.getSetting(
31 | 				this.sectionId,
32 | 				this.setting.id
33 | 			);
34 | 			const onChange = debounce(
35 | 				(value: number) => {
36 | 					this.settingsManager.setSetting(
37 | 						this.sectionId,
38 | 						this.setting.id,
39 | 						value
40 | 					);
41 | 				},
42 | 				250,
43 | 				true
44 | 			);
45 | 
46 | 			slider.setDynamicTooltip();
47 | 			slider.setLimits(this.setting.min, this.setting.max, this.setting.step);
48 | 			slider.setValue(
49 | 				value !== undefined ? (value as number) : this.setting.default
50 | 			);
51 | 			slider.onChange(onChange);
52 | 
53 | 			this.sliderComponent = slider;
54 | 		});
55 | 
56 | 		this.settingEl.addExtraButton((b) => {
57 | 			b.setIcon('reset');
58 | 			b.onClick(() => {
59 | 				this.sliderComponent.setValue(this.setting.default);
60 | 				this.settingsManager.clearSetting(this.sectionId, this.setting.id);
61 | 			});
62 | 			b.setTooltip(resetTooltip);
63 | 		});
64 | 
65 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
66 | 	}
67 | 
68 | 	destroy(): void {
69 | 		this.settingEl?.settingEl.remove();
70 | 	}
71 | }
72 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/VariableSelectSettingComponent.ts:
--------------------------------------------------------------------------------
  1 | import {
  2 | 	resetTooltip,
  3 | 	SelectOption,
  4 | 	VariableSelect,
  5 | } from '../../SettingHandlers';
  6 | import { createDescription, getDescription, getTitle } from '../../Utils';
  7 | import { t } from '../../lang/helpers';
  8 | import { AbstractSettingComponent } from './AbstractSettingComponent';
  9 | import { DropdownComponent, Setting } from 'obsidian';
 10 | 
 11 | export class VariableSelectSettingComponent extends AbstractSettingComponent {
 12 | 	settingEl: Setting;
 13 | 	dropdownComponent: DropdownComponent;
 14 | 	setting: VariableSelect;
 15 | 
 16 | 	render(): void {
 17 | 		if (!this.containerEl) return;
 18 | 		const title = getTitle(this.setting);
 19 | 		const description = getDescription(this.setting);
 20 | 
 21 | 		if (typeof this.setting.default !== 'string') {
 22 | 			return console.error(
 23 | 				`${t('Error:')} ${title} ${t('missing default value')}`
 24 | 			);
 25 | 		}
 26 | 
 27 | 		const defaultLabel = this.getDefaultOptionLabel();
 28 | 
 29 | 		this.settingEl = new Setting(this.containerEl);
 30 | 		this.settingEl.setName(title);
 31 | 		this.settingEl.setDesc(
 32 | 			createDescription(description, this.setting.default, defaultLabel)
 33 | 		);
 34 | 
 35 | 		this.settingEl.addDropdown((dropdown) => {
 36 | 			const value = this.settingsManager.getSetting(
 37 | 				this.sectionId,
 38 | 				this.setting.id
 39 | 			);
 40 | 
 41 | 			for (const o of this.setting.options) {
 42 | 				if (typeof o === 'string') {
 43 | 					dropdown.addOption(o, o);
 44 | 				} else {
 45 | 					dropdown.addOption(o.value, o.label);
 46 | 				}
 47 | 			}
 48 | 
 49 | 			dropdown.setValue(
 50 | 				value !== undefined ? (value as string) : this.setting.default
 51 | 			);
 52 | 			dropdown.onChange((value) => {
 53 | 				this.settingsManager.setSetting(this.sectionId, this.setting.id, value);
 54 | 			});
 55 | 
 56 | 			this.dropdownComponent = dropdown;
 57 | 		});
 58 | 
 59 | 		this.settingEl.addExtraButton((b) => {
 60 | 			b.setIcon('reset');
 61 | 			b.onClick(() => {
 62 | 				this.dropdownComponent.setValue(this.setting.default);
 63 | 				this.settingsManager.clearSetting(this.sectionId, this.setting.id);
 64 | 			});
 65 | 			b.setTooltip(resetTooltip);
 66 | 		});
 67 | 
 68 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
 69 | 	}
 70 | 
 71 | 	destroy(): void {
 72 | 		this.settingEl?.settingEl.remove();
 73 | 	}
 74 | 
 75 | 	private getDefaultOption(): string | SelectOption | undefined {
 76 | 		if (this.setting.default) {
 77 | 			return this.setting.options.find((o) => {
 78 | 				if (typeof o === 'string') {
 79 | 					return o === this.setting.default;
 80 | 				}
 81 | 
 82 | 				return o.value === this.setting.default;
 83 | 			});
 84 | 		}
 85 | 
 86 | 		return undefined;
 87 | 	}
 88 | 
 89 | 	private getDefaultOptionLabel() {
 90 | 		const defaultOption = this.getDefaultOption();
 91 | 
 92 | 		if (defaultOption) {
 93 | 			if (typeof defaultOption === 'string') {
 94 | 				return defaultOption;
 95 | 			}
 96 | 			return defaultOption.label;
 97 | 		}
 98 | 
 99 | 		return undefined;
100 | 	}
101 | }
102 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/VariableTextSettingComponent.ts:
--------------------------------------------------------------------------------
 1 | import { resetTooltip, VariableText } from '../../SettingHandlers';
 2 | import {
 3 | 	createDescription,
 4 | 	getDescription,
 5 | 	getTitle,
 6 | 	sanitizeText,
 7 | } from '../../Utils';
 8 | import { t } from '../../lang/helpers';
 9 | import { AbstractSettingComponent } from './AbstractSettingComponent';
10 | import { debounce, Setting, TextComponent } from 'obsidian';
11 | 
12 | export class VariableTextSettingComponent extends AbstractSettingComponent {
13 | 	settingEl: Setting;
14 | 	textComponent: TextComponent;
15 | 	setting: VariableText;
16 | 
17 | 	render(): void {
18 | 		if (!this.containerEl) return;
19 | 		const title = getTitle(this.setting);
20 | 		const description = getDescription(this.setting);
21 | 
22 | 		if (typeof this.setting.default !== 'string') {
23 | 			return console.error(
24 | 				`${t('Error:')} ${title} ${t('missing default value')}`
25 | 			);
26 | 		}
27 | 
28 | 		this.settingEl = new Setting(this.containerEl);
29 | 		this.settingEl.setName(title);
30 | 		this.settingEl.setDesc(
31 | 			createDescription(description, this.setting.default)
32 | 		);
33 | 
34 | 		this.settingEl.addText((text) => {
35 | 			let value = this.settingsManager.getSetting(
36 | 				this.sectionId,
37 | 				this.setting.id
38 | 			);
39 | 
40 | 			const onChange = debounce(
41 | 				(value: string) => {
42 | 					this.settingsManager.setSetting(
43 | 						this.sectionId,
44 | 						this.setting.id,
45 | 						sanitizeText(value)
46 | 					);
47 | 				},
48 | 				250,
49 | 				true
50 | 			);
51 | 
52 | 			if (this.setting.quotes && value === `""`) {
53 | 				value = ``;
54 | 			}
55 | 
56 | 			text.setValue(value ? value.toString() : this.setting.default);
57 | 			text.onChange(onChange);
58 | 
59 | 			this.textComponent = text;
60 | 		});
61 | 
62 | 		this.settingEl.addExtraButton((b) => {
63 | 			b.setIcon('reset');
64 | 			b.onClick(() => {
65 | 				this.textComponent.setValue(this.setting.default);
66 | 				this.settingsManager.clearSetting(this.sectionId, this.setting.id);
67 | 			});
68 | 			b.setTooltip(resetTooltip);
69 | 		});
70 | 
71 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
72 | 	}
73 | 
74 | 	destroy(): void {
75 | 		this.settingEl?.settingEl.remove();
76 | 	}
77 | }
78 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/VariableThemedColorSettingComponent.ts:
--------------------------------------------------------------------------------
  1 | import { resetTooltip, VariableThemedColor } from '../../SettingHandlers';
  2 | import {
  3 | 	getDescription,
  4 | 	getPickrSettings,
  5 | 	getTitle,
  6 | 	isValidDefaultColor,
  7 | 	onPickrCancel,
  8 | } from '../../Utils';
  9 | import { t } from '../../lang/helpers';
 10 | import { AbstractSettingComponent } from './AbstractSettingComponent';
 11 | import Pickr from '@simonwep/pickr';
 12 | import { ButtonComponent, Setting } from 'obsidian';
 13 | 
 14 | export class VariableThemedColorSettingComponent extends AbstractSettingComponent {
 15 | 	settingEl: Setting;
 16 | 	setting: VariableThemedColor;
 17 | 	pickrLight: Pickr | null;
 18 | 	pickrDark: Pickr | null;
 19 | 
 20 | 	render(): void {
 21 | 		if (!this.containerEl) return;
 22 | 		const title = getTitle(this.setting);
 23 | 		const description = getDescription(this.setting);
 24 | 
 25 | 		if (
 26 | 			typeof this.setting['default-light'] !== 'string' ||
 27 | 			!isValidDefaultColor(this.setting['default-light'])
 28 | 		) {
 29 | 			return console.error(
 30 | 				`${t('Error:')} ${title} ${t(
 31 | 					'missing default light value, or value is not in a valid color format'
 32 | 				)}`
 33 | 			);
 34 | 		}
 35 | 
 36 | 		if (
 37 | 			typeof this.setting['default-dark'] !== 'string' ||
 38 | 			!isValidDefaultColor(this.setting['default-dark'])
 39 | 		) {
 40 | 			return console.error(
 41 | 				`${t('Error:')} ${title} ${t(
 42 | 					'missing default dark value, or value is not in a valid color format'
 43 | 				)}`
 44 | 			);
 45 | 		}
 46 | 
 47 | 		const idLight = `${this.setting.id}@@light`;
 48 | 		const idDark = `${this.setting.id}@@dark`;
 49 | 		const valueLight = this.settingsManager.getSetting(this.sectionId, idLight);
 50 | 		const valueDark = this.settingsManager.getSetting(this.sectionId, idDark);
 51 | 		const swatchesLight: string[] = [];
 52 | 		const swatchesDark: string[] = [];
 53 | 
 54 | 		if (this.setting['default-light']) {
 55 | 			swatchesLight.push(this.setting['default-light']);
 56 | 		}
 57 | 
 58 | 		if (valueLight !== undefined) {
 59 | 			swatchesLight.push(valueLight as string);
 60 | 		}
 61 | 
 62 | 		if (this.setting['default-dark']) {
 63 | 			swatchesDark.push(this.setting['default-dark']);
 64 | 		}
 65 | 
 66 | 		if (valueDark !== undefined) {
 67 | 			swatchesDark.push(valueDark as string);
 68 | 		}
 69 | 
 70 | 		this.settingEl = new Setting(this.containerEl);
 71 | 		this.settingEl.setName(title);
 72 | 
 73 | 		// Construct description
 74 | 		this.settingEl.descEl.createSpan({}, (span) => {
 75 | 			if (description) {
 76 | 				span.appendChild(document.createTextNode(description));
 77 | 			}
 78 | 		});
 79 | 
 80 | 		this.settingEl.descEl.createDiv({}, (div) => {
 81 | 			div.createEl('small', {}, (sm) => {
 82 | 				sm.appendChild(createEl('strong', { text: 'Default (light): ' }));
 83 | 				sm.appendChild(document.createTextNode(this.setting['default-light']));
 84 | 			});
 85 | 			div.createEl('br');
 86 | 			div.createEl('small', {}, (sm) => {
 87 | 				sm.appendChild(createEl('strong', { text: 'Default (dark): ' }));
 88 | 				sm.appendChild(document.createTextNode(this.setting['default-dark']));
 89 | 			});
 90 | 		});
 91 | 
 92 | 		const wrapper = this.settingEl.controlEl.createDiv({
 93 | 			cls: 'themed-color-wrapper',
 94 | 		});
 95 | 
 96 | 		// Create light color picker
 97 | 		this.createColorPickerLight(
 98 | 			wrapper,
 99 | 			this.containerEl,
100 | 			swatchesLight,
101 | 			valueLight || '',
102 | 			idLight
103 | 		);
104 | 
105 | 		// Create dark color picker
106 | 		this.createColorPickerDark(
107 | 			wrapper,
108 | 			this.containerEl,
109 | 			swatchesDark,
110 | 			valueDark || '',
111 | 			idDark
112 | 		);
113 | 
114 | 		this.settingEl.settingEl.dataset.id = this.setting.id;
115 | 	}
116 | 
117 | 	destroy(): void {
118 | 		this.pickrLight?.destroyAndRemove();
119 | 		this.pickrDark?.destroyAndRemove();
120 | 		this.pickrLight = null;
121 | 		this.pickrDark = null;
122 | 		this.settingEl?.settingEl.remove();
123 | 	}
124 | 
125 | 	private createColorPickerLight(
126 | 		wrapper: HTMLDivElement,
127 | 		containerEl: HTMLElement,
128 | 		swatchesLight: string[],
129 | 		valueLight: number | string | boolean,
130 | 		idLight: string
131 | 	) {
132 | 		const themeLightWrapper = wrapper.createDiv({ cls: 'theme-light' });
133 | 
134 | 		// fix, so that the color is correctly shown before the color picker has been opened
135 | 		const defaultColor =
136 | 			valueLight !== undefined
137 | 				? (valueLight as string)
138 | 				: this.setting['default-light'];
139 | 		themeLightWrapper.style.setProperty('--pcr-color', defaultColor);
140 | 
141 | 		const pickrLight = (this.pickrLight = Pickr.create(
142 | 			getPickrSettings({
143 | 				isView: this.isView,
144 | 				el: themeLightWrapper.createDiv({ cls: 'picker' }),
145 | 				containerEl,
146 | 				swatches: swatchesLight,
147 | 				opacity: this.setting.opacity,
148 | 				defaultColor: defaultColor,
149 | 			})
150 | 		));
151 | 
152 | 		pickrLight.on('show', () => {
153 | 			const { result } = (pickrLight.getRoot() as any).interaction;
154 | 			activeWindow.requestAnimationFrame(() =>
155 | 				activeWindow.requestAnimationFrame(() => result.select())
156 | 			);
157 | 		});
158 | 
159 | 		pickrLight.on('save', (color: Pickr.HSVaColor, instance: Pickr) =>
160 | 			this.onSave(idLight, color, instance)
161 | 		);
162 | 
163 | 		pickrLight.on('cancel', onPickrCancel);
164 | 
165 | 		const themeLightReset = new ButtonComponent(
166 | 			themeLightWrapper.createDiv({ cls: 'pickr-reset' })
167 | 		);
168 | 		themeLightReset.setIcon('reset');
169 | 		themeLightReset.onClick(() => {
170 | 			pickrLight.setColor(this.setting['default-light']);
171 | 			this.settingsManager.clearSetting(this.sectionId, idLight);
172 | 		});
173 | 		themeLightReset.setTooltip(resetTooltip);
174 | 	}
175 | 
176 | 	private createColorPickerDark(
177 | 		wrapper: HTMLDivElement,
178 | 		containerEl: HTMLElement,
179 | 		swatchesDark: string[],
180 | 		valueDark: number | string | boolean,
181 | 		idDark: string
182 | 	) {
183 | 		const themeDarkWrapper = wrapper.createDiv({ cls: 'theme-dark' });
184 | 
185 | 		// fix, so that the color is correctly shown before the color picker has been opened
186 | 		const defaultColor =
187 | 			valueDark !== undefined
188 | 				? (valueDark as string)
189 | 				: this.setting['default-dark'];
190 | 		themeDarkWrapper.style.setProperty('--pcr-color', defaultColor);
191 | 
192 | 		const pickrDark = (this.pickrDark = Pickr.create(
193 | 			getPickrSettings({
194 | 				isView: this.isView,
195 | 				el: themeDarkWrapper.createDiv({ cls: 'picker' }),
196 | 				containerEl,
197 | 				swatches: swatchesDark,
198 | 				opacity: this.setting.opacity,
199 | 				defaultColor: defaultColor,
200 | 			})
201 | 		));
202 | 
203 | 		pickrDark.on('show', () => {
204 | 			const { result } = (pickrDark.getRoot() as any).interaction;
205 | 			activeWindow.requestAnimationFrame(() =>
206 | 				activeWindow.requestAnimationFrame(() => result.select())
207 | 			);
208 | 		});
209 | 
210 | 		pickrDark.on('save', (color: Pickr.HSVaColor, instance: Pickr) =>
211 | 			this.onSave(idDark, color, instance)
212 | 		);
213 | 
214 | 		pickrDark.on('cancel', onPickrCancel);
215 | 
216 | 		const themeDarkReset = new ButtonComponent(
217 | 			themeDarkWrapper.createDiv({ cls: 'pickr-reset' })
218 | 		);
219 | 		themeDarkReset.setIcon('reset');
220 | 		themeDarkReset.onClick(() => {
221 | 			pickrDark.setColor(this.setting['default-dark']);
222 | 			this.settingsManager.clearSetting(this.sectionId, idDark);
223 | 		});
224 | 		themeDarkReset.setTooltip(resetTooltip);
225 | 	}
226 | 
227 | 	private onSave(id: string, color: Pickr.HSVaColor, instance: Pickr) {
228 | 		if (!color) return;
229 | 
230 | 		this.settingsManager.setSetting(
231 | 			this.sectionId,
232 | 			id,
233 | 			color.toHEXA().toString()
234 | 		);
235 | 
236 | 		instance.hide();
237 | 		instance.addSwatch(color.toHEXA().toString());
238 | 	}
239 | }
240 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingComponents/types.ts:
--------------------------------------------------------------------------------
 1 | export const SettingType = {
 2 | 	HEADING: 'heading',
 3 | 	INFO_TEXT: 'info-text',
 4 | 	CLASS_TOGGLE: 'class-toggle',
 5 | 	CLASS_SELECT: 'class-select',
 6 | 	VARIABLE_TEXT: 'variable-text',
 7 | 	VARIABLE_NUMBER: 'variable-number',
 8 | 	VARIABLE_NUMBER_SLIDER: 'variable-number-slider',
 9 | 	VARIABLE_SELECT: 'variable-select',
10 | 	VARIABLE_COLOR: 'variable-color',
11 | 	VARIABLE_THEMED_COLOR: 'variable-themed-color',
12 | 	COLOR_GRADIENT: 'color-gradient',
13 | } as const;
14 | 
15 | export type SettingType = (typeof SettingType)[keyof typeof SettingType];
16 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingsMarkup.ts:
--------------------------------------------------------------------------------
  1 | import { CSSSetting, ParsedCSSSettings } from '../SettingHandlers';
  2 | import { ErrorList } from '../Utils';
  3 | import CSSSettingsPlugin from '../main';
  4 | import {
  5 | 	buildSettingComponentTree,
  6 | 	HeadingSettingComponent,
  7 | } from './SettingComponents/HeadingSettingComponent';
  8 | import { App, Component, Setting, debounce } from 'obsidian';
  9 | 
 10 | export class SettingsMarkup extends Component {
 11 | 	app: App;
 12 | 	plugin: CSSSettingsPlugin;
 13 | 	settingsComponentTrees: HeadingSettingComponent[] = [];
 14 | 	filterString: string = '';
 15 | 	settings: ParsedCSSSettings[] = [];
 16 | 	errorList: ErrorList = [];
 17 | 	containerEl: HTMLElement;
 18 | 	settingsContainerEl: HTMLElement;
 19 | 	isView: boolean;
 20 | 
 21 | 	constructor(
 22 | 		app: App,
 23 | 		plugin: CSSSettingsPlugin,
 24 | 		containerEl: HTMLElement,
 25 | 		isView?: boolean
 26 | 	) {
 27 | 		super();
 28 | 		this.app = app;
 29 | 		this.plugin = plugin;
 30 | 		this.containerEl = containerEl;
 31 | 		this.isView = !!isView;
 32 | 	}
 33 | 
 34 | 	onload(): void {
 35 | 		this.display();
 36 | 	}
 37 | 
 38 | 	onunload(): void {
 39 | 		this.settingsComponentTrees = [];
 40 | 	}
 41 | 
 42 | 	display(): void {
 43 | 		this.generate(this.settings);
 44 | 	}
 45 | 
 46 | 	removeChildren() {
 47 | 		for (const settingsComponentTree of this.settingsComponentTrees) {
 48 | 			this.removeChild(settingsComponentTree);
 49 | 		}
 50 | 	}
 51 | 
 52 | 	/**
 53 | 	 * Recursively destroys all setting elements.
 54 | 	 */
 55 | 	cleanup() {
 56 | 		this.removeChildren();
 57 | 		this.settingsContainerEl?.empty();
 58 | 	}
 59 | 
 60 | 	setSettings(settings: ParsedCSSSettings[], errorList: ErrorList) {
 61 | 		this.settings = settings;
 62 | 		this.errorList = errorList;
 63 | 
 64 | 		if (this.containerEl.parentNode) {
 65 | 			this.generate(settings);
 66 | 		}
 67 | 	}
 68 | 
 69 | 	displayErrors() {
 70 | 		const { containerEl, errorList } = this;
 71 | 
 72 | 		errorList.forEach((err) => {
 73 | 			containerEl.createDiv({ cls: 'style-settings-error' }, (wrapper) => {
 74 | 				wrapper.createDiv({
 75 | 					cls: 'style-settings-error-name',
 76 | 					text: `Error: ${err.name}`,
 77 | 				});
 78 | 				wrapper.createDiv({
 79 | 					cls: 'style-settings-error-desc',
 80 | 					text: err.error,
 81 | 				});
 82 | 			});
 83 | 		});
 84 | 	}
 85 | 
 86 | 	displayEmpty() {
 87 | 		const { containerEl } = this;
 88 | 
 89 | 		containerEl.createDiv({ cls: 'style-settings-empty' }, (wrapper) => {
 90 | 			wrapper.createDiv({
 91 | 				cls: 'style-settings-empty-name',
 92 | 				text: 'No style settings found',
 93 | 			});
 94 | 			wrapper.createDiv({ cls: 'style-settings-empty-desc' }).appendChild(
 95 | 				createFragment((frag) => {
 96 | 					frag.appendText(
 97 | 						'Style settings configured by theme and plugin authors will show up here. You can also create your own configuration by creating a CSS snippet in your vault. '
 98 | 					);
 99 | 					frag.createEl('a', {
100 | 						text: 'Click here for details and examples.',
101 | 						href: 'https://github.com/mgmeyers/obsidian-style-settings#obsidian-style-settings-plugin',
102 | 					});
103 | 				})
104 | 			);
105 | 		});
106 | 	}
107 | 
108 | 	generate(settings: ParsedCSSSettings[]) {
109 | 		const { containerEl, plugin } = this;
110 | 
111 | 		containerEl.empty();
112 | 
113 | 		this.cleanup();
114 | 		this.displayErrors();
115 | 
116 | 		if (settings.length === 0) {
117 | 			return this.displayEmpty();
118 | 		}
119 | 
120 | 		new Setting(containerEl).then((setting) => {
121 | 			// Build and import link to open the import modal
122 | 			setting.controlEl.createEl(
123 | 				'a',
124 | 				{
125 | 					cls: 'style-settings-import',
126 | 					text: 'Import',
127 | 					href: '#',
128 | 				},
129 | 				(el) => {
130 | 					el.addEventListener('click', (e) => {
131 | 						e.preventDefault();
132 | 						this.plugin.settingsManager.import();
133 | 					});
134 | 				}
135 | 			);
136 | 
137 | 			// Build and export link to open the export modal
138 | 			setting.controlEl.createEl(
139 | 				'a',
140 | 				{
141 | 					cls: 'style-settings-export',
142 | 					text: 'Export',
143 | 					href: '#',
144 | 				},
145 | 				(el) => {
146 | 					el.addEventListener('click', (e) => {
147 | 						e.preventDefault();
148 | 						this.plugin.settingsManager.export(
149 | 							'All settings',
150 | 							this.plugin.settingsManager.settings
151 | 						);
152 | 					});
153 | 				}
154 | 			);
155 | 
156 | 			// Searchbar
157 | 			setting.addSearch((searchComponent) => {
158 | 				searchComponent.setValue(this.filterString);
159 | 				searchComponent.onChange(
160 | 					debounce(
161 | 						(value) => {
162 | 							this.filterString = value;
163 | 							if (value) {
164 | 								this.filter();
165 | 							} else {
166 | 								this.clearFilter();
167 | 							}
168 | 						},
169 | 						250,
170 | 						true
171 | 					)
172 | 				);
173 | 				searchComponent.setPlaceholder('Search Style Settings...');
174 | 				// move the search component from the back to the front
175 | 				if (setting.controlEl.lastChild) {
176 | 					setting.nameEl.appendChild(setting.controlEl.lastChild);
177 | 				}
178 | 			});
179 | 		});
180 | 
181 | 		this.settingsContainerEl = containerEl.createDiv();
182 | 		this.settingsComponentTrees = [];
183 | 
184 | 		for (const s of settings) {
185 | 			const options: CSSSetting[] = [
186 | 				{
187 | 					id: s.id,
188 | 					type: 'heading',
189 | 					title: s.name,
190 | 					level: 0,
191 | 					collapsed: s.collapsed ?? true,
192 | 					resetFn: () => {
193 | 						plugin.settingsManager.clearSection(s.id);
194 | 						this.rerender();
195 | 					},
196 | 				},
197 | 				...s.settings,
198 | 			];
199 | 
200 | 			try {
201 | 				const settingsComponentTree = buildSettingComponentTree({
202 | 					containerEl: this.settingsContainerEl,
203 | 					isView: this.isView,
204 | 					sectionId: s.id,
205 | 					sectionName: s.name,
206 | 					settings: options,
207 | 					settingsManager: plugin.settingsManager,
208 | 				});
209 | 
210 | 				this.addChild(settingsComponentTree);
211 | 				this.settingsComponentTrees.push(settingsComponentTree);
212 | 			} catch (e) {
213 | 				console.error('Style Settings | Failed to render section', e);
214 | 			}
215 | 		}
216 | 	}
217 | 
218 | 	/**
219 | 	 * Recursively filter all setting elements based on `filterString` and then re-renders.
220 | 	 */
221 | 	filter() {
222 | 		for (const settingsComponentTree of this.settingsComponentTrees) {
223 | 			settingsComponentTree.filter(this.filterString);
224 | 		}
225 | 	}
226 | 
227 | 	/**
228 | 	 * Recursively clears the filter and then re-renders.
229 | 	 */
230 | 	clearFilter() {
231 | 		for (const settingsComponentTree of this.settingsComponentTrees) {
232 | 			settingsComponentTree.clearFilter();
233 | 		}
234 | 	}
235 | 
236 | 	rerender() {
237 | 		this.cleanup();
238 | 		this.display();
239 | 	}
240 | }
241 | 


--------------------------------------------------------------------------------
/src/settingsView/SettingsView.ts:
--------------------------------------------------------------------------------
 1 | import CSSSettingsPlugin from '../main';
 2 | import { SettingsMarkup } from './SettingsMarkup';
 3 | import { ItemView, WorkspaceLeaf } from 'obsidian';
 4 | import { ParsedCSSSettings } from 'src/SettingHandlers';
 5 | import { ErrorList } from 'src/Utils';
 6 | 
 7 | export const viewType = 'style-settings';
 8 | 
 9 | export class SettingsView extends ItemView {
10 | 	settingsMarkup: SettingsMarkup | null;
11 | 	plugin: CSSSettingsPlugin;
12 | 
13 | 	constructor(plugin: CSSSettingsPlugin, leaf: WorkspaceLeaf) {
14 | 		super(leaf);
15 | 		this.plugin = plugin;
16 | 	}
17 | 
18 | 	rerender() {
19 | 		this.settingsMarkup?.rerender();
20 | 	}
21 | 
22 | 	settings: ParsedCSSSettings[];
23 | 	errorList: ErrorList;
24 | 	setSettings(settings: ParsedCSSSettings[], errorList: ErrorList) {
25 | 		this.settings = settings;
26 | 		this.errorList = errorList;
27 | 		if (this.settingsMarkup) {
28 | 			this.settingsMarkup.setSettings(settings, errorList);
29 | 		}
30 | 	}
31 | 
32 | 	onload(): void {
33 | 		this.settingsMarkup = this.addChild(
34 | 			new SettingsMarkup(this.plugin.app, this.plugin, this.contentEl, true)
35 | 		);
36 | 		if (this.settings) {
37 | 			this.settingsMarkup.setSettings(this.settings, this.errorList);
38 | 		}
39 | 	}
40 | 
41 | 	onunload(): void {
42 | 		this.settingsMarkup = null;
43 | 	}
44 | 
45 | 	getViewType() {
46 | 		return viewType;
47 | 	}
48 | 
49 | 	getIcon() {
50 | 		return 'gear';
51 | 	}
52 | 
53 | 	getDisplayText() {
54 | 		return 'Style Settings';
55 | 	}
56 | }
57 | 


--------------------------------------------------------------------------------
/styles.css:
--------------------------------------------------------------------------------
  1 | .style-settings-heading {
  2 |     cursor: pointer;
  3 |     margin-bottom: 18px;
  4 |     padding-bottom: 6px;
  5 |     border-bottom: 1px solid var(--background-modifier-border);
  6 | }
  7 | 
  8 | .style-settings-heading[data-level="0"] {
  9 |     margin-bottom: 26px;
 10 | }
 11 | 
 12 | .style-settings-container {
 13 |     padding-bottom: 16px;
 14 | }
 15 | 
 16 | .style-settings-heading[data-level="0"] + .style-settings-container {
 17 |     padding-left: 34px;
 18 | }
 19 | 
 20 | .style-settings-heading.is-collapsed {
 21 |     margin-bottom: 0;
 22 | }
 23 | 
 24 | .style-settings-heading.is-collapsed + .style-settings-container {
 25 |     display: none;
 26 | }
 27 | 
 28 | .style-settings-collapse-indicator {
 29 |     color: var(--text-faint);
 30 |     display: inline-block;
 31 |     margin-right: 8px;
 32 |     position: relative;
 33 |     top: -1px;
 34 | }
 35 | 
 36 | .style-settings-heading[data-level="0"]
 37 | + .style-settings-container
 38 | .style-settings-collapse-indicator {
 39 |     margin-left: -17px;
 40 | }
 41 | 
 42 | .style-settings-collapse-indicator > svg {
 43 |     height: 9px;
 44 |     width: 9px;
 45 | }
 46 | 
 47 | .style-settings-heading.is-collapsed .style-settings-collapse-indicator > svg {
 48 |     transform: rotate(-90deg);
 49 | }
 50 | 
 51 | .style-settings-filter-result-count {
 52 |     color: var(--text-faint);
 53 |     line-height: var(--line-height-tight);
 54 |     margin-inline: var(--size-4-2);
 55 | }
 56 | 
 57 | .style-settings-error {
 58 |     font-size: 14px;
 59 |     border-radius: 6px;
 60 |     background: rgba(var(--background-modifier-error-rgb), 0.2);
 61 |     color: var(--text-error);
 62 |     padding: 10px;
 63 |     margin-bottom: 1rem;
 64 | }
 65 | 
 66 | .style-settings-error-name {
 67 |     font-weight: bold;
 68 |     margin-bottom: 5px;
 69 | }
 70 | 
 71 | .style-settings-error-desc {
 72 |     white-space: pre;
 73 | }
 74 | 
 75 | .style-settings-empty {
 76 |     font-size: 14px;
 77 |     background: var(--background-secondary);
 78 |     padding: 10px;
 79 | }
 80 | 
 81 | .style-settings-empty-name {
 82 |     font-weight: bold;
 83 |     margin-bottom: 5px;
 84 | }
 85 | 
 86 | .style-settings-import-input {
 87 |     width: 0.1px;
 88 |     height: 0.1px;
 89 |     opacity: 0;
 90 |     overflow: hidden;
 91 |     position: absolute;
 92 |     z-index: -1;
 93 | }
 94 | 
 95 | .style-settings-import-label {
 96 |     cursor: pointer;
 97 |     color: var(--text-accent);
 98 |     text-decoration: underline;
 99 | }
100 | 
101 | .style-settings-import-label:hover {
102 |     color: var(--text-accent-hover);
103 | }
104 | 
105 | .style-settings-export,
106 | .style-settings-import {
107 |     display: inline-block;
108 |     margin-right: 10px;
109 | }
110 | 
111 | .style-settings-copy,
112 | .style-settings-download {
113 |     position: relative;
114 |     display: inline-block;
115 |     margin-left: 10px;
116 | }
117 | 
118 | .style-settings-copy:before {
119 |     color: var(--interactive-success);
120 |     content: "✓";
121 |     position: absolute;
122 |     left: -18px;
123 |     font-weight: bold;
124 |     opacity: 0;
125 |     transition: 150ms opacity ease-in-out;
126 | }
127 | 
128 | .style-settings-copy.success:before {
129 |     opacity: 1;
130 | }
131 | 
132 | .modal-style-settings {
133 |     height: 70vh;
134 |     display: flex;
135 |     flex-direction: column;
136 | }
137 | 
138 | .modal-style-settings .modal-content {
139 |     flex-grow: 1;
140 |     margin: 0;
141 |     display: flex;
142 |     flex-direction: column;
143 | }
144 | 
145 | .modal-style-settings textarea {
146 |     display: block;
147 |     width: 100%;
148 |     height: 100%;
149 |     font-family: var(--font-monospace) !important;
150 |     font-size: 12px;
151 |     white-space: pre;
152 |     overflow-wrap: normal;
153 |     overflow-x: scroll;
154 |     margin-bottom: 5px;
155 | }
156 | 
157 | .modal-style-settings .setting-item {
158 |     align-items: flex-start;
159 | }
160 | 
161 | .modal-style-settings button {
162 |     margin: 10px 0 0;
163 | }
164 | 
165 | .style-settings-import-error {
166 |     display: none;
167 |     color: var(--text-error);
168 | }
169 | 
170 | .style-settings-import-error.active {
171 |     display: block;
172 | }
173 | 
174 | .view-content .style-settings-container .setting-item:not(.setting-item-heading) {
175 |     flex-direction: column;
176 |     align-items: flex-start;
177 | }
178 | 
179 | .view-content .style-settings-container .setting-item:not(.setting-item-heading) .setting-item-control {
180 |     padding-top: 0.5em;
181 | }
182 | 
183 | .view-content .style-settings-container .setting-item:not(.setting-item-heading) .themed-color-wrapper {
184 |     display: flex;
185 | }
186 | 
187 | .style-settings-ref {
188 |     position: absolute;
189 |     width: 0 !important;
190 |     height: 0 !important;
191 |     pointer-events: none;
192 | }
193 | 
194 | .style-settings-info-text .style-settings-markdown :first-child {
195 |     margin-top: 0;
196 | }
197 | 
198 | .style-settings-info-text .style-settings-markdown :last-child {
199 |     margin-bottom: 0;
200 | }.style-settings-container .pcr-app {
201 |     display: none;
202 | }
203 | 
204 | .style-settings-container .pcr-app.visible {
205 |     display: flex;
206 | }
207 | 
208 | .pcr-app .pcr-swatches > button {
209 |     padding: 0;
210 | }
211 | 
212 | .pickr .pcr-button {
213 |     margin-right: 0;
214 | }
215 | 
216 | .themed-color-wrapper > div {
217 |     background: var(--background-primary);
218 |     padding: 10px;
219 |     display: flex;
220 |     align-items: center;
221 |     border-radius: 4px;
222 | }
223 | 
224 | .themed-color-wrapper > div + div {
225 |     margin-top: 6px;
226 | }
227 | 
228 | .themed-color-wrapper button {
229 |     display: block;
230 | }
231 | 
232 | .themed-color-wrapper .pickr-reset > button {
233 |     margin: 0 0 0 10px;
234 |     padding: 9px;
235 |     line-height: 1;
236 | }
237 | 
238 | .themed-color-wrapper .pickr-reset > button > svg {
239 |     display: block;
240 | }
241 | /*! Pickr 1.8.4 MIT | https://github.com/Simonwep/pickr */
242 | .pickr{position:relative;overflow:visible;transform:translateY(0)}.pickr *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pickr .pcr-button{position:relative;height:2em;width:2em;padding:0.5em;cursor:pointer;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI","Roboto","Helvetica Neue",Arial,sans-serif;border-radius:.15em;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50" stroke="%2342445A" stroke-width="5px" stroke-linecap="round"><path d="M45,45L5,5"></path><path d="M45,5L5,45"></path></svg>') no-repeat center;background-size:0;transition:all 0.3s}.pickr .pcr-button::before{position:absolute;content:'';top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pickr .pcr-button::before{z-index:initial}.pickr .pcr-button::after{position:absolute;content:'';top:0;left:0;height:100%;width:100%;transition:background 0.3s;background:var(--pcr-color);border-radius:.15em}.pickr .pcr-button.clear{background-size:70%}.pickr .pcr-button.clear::before{opacity:0}.pickr .pcr-button.clear:focus{box-shadow:0 0 0 1px rgba(255,255,255,0.85),0 0 0 3px var(--pcr-color)}.pickr .pcr-button.disabled{cursor:not-allowed}.pickr *,.pcr-app *{box-sizing:border-box;outline:none;border:none;-webkit-appearance:none}.pickr input:focus,.pickr input.pcr-active,.pickr button:focus,.pickr button.pcr-active,.pcr-app input:focus,.pcr-app input.pcr-active,.pcr-app button:focus,.pcr-app button.pcr-active{box-shadow:0 0 0 1px rgba(255,255,255,0.85),0 0 0 3px var(--pcr-color)}.pickr .pcr-palette,.pickr .pcr-slider,.pcr-app .pcr-palette,.pcr-app .pcr-slider{transition:box-shadow 0.3s}.pickr .pcr-palette:focus,.pickr .pcr-slider:focus,.pcr-app .pcr-palette:focus,.pcr-app .pcr-slider:focus{box-shadow:0 0 0 1px rgba(255,255,255,0.85),0 0 0 3px rgba(0,0,0,0.25)}.pcr-app{position:fixed;display:flex;flex-direction:column;z-index:10000;border-radius:0.1em;background:#fff;opacity:0;visibility:hidden;transition:opacity 0.3s, visibility 0s 0.3s;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI","Roboto","Helvetica Neue",Arial,sans-serif;box-shadow:0 0.15em 1.5em 0 rgba(0,0,0,0.1),0 0 1em 0 rgba(0,0,0,0.03);left:0;top:0}.pcr-app.visible{transition:opacity 0.3s;visibility:visible;opacity:1}.pcr-app .pcr-swatches{display:flex;flex-wrap:wrap;margin-top:0.75em}.pcr-app .pcr-swatches.pcr-last{margin:0}@supports (display: grid){.pcr-app .pcr-swatches{display:grid;align-items:center;grid-template-columns:repeat(auto-fit, 1.75em)}}.pcr-app .pcr-swatches>button{font-size:1em;position:relative;width:calc(1.75em - 5px);height:calc(1.75em - 5px);border-radius:0.15em;cursor:pointer;margin:2.5px;flex-shrink:0;justify-self:center;transition:all 0.15s;overflow:hidden;background:transparent;z-index:1}.pcr-app .pcr-swatches>button::before{position:absolute;content:'';top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:6px;border-radius:.15em;z-index:-1}.pcr-app .pcr-swatches>button::after{content:'';position:absolute;top:0;left:0;width:100%;height:100%;background:var(--pcr-color);border:1px solid rgba(0,0,0,0.05);border-radius:0.15em;box-sizing:border-box}.pcr-app .pcr-swatches>button:hover{filter:brightness(1.05)}.pcr-app .pcr-swatches>button:not(.pcr-active){box-shadow:none}.pcr-app .pcr-interaction{display:flex;flex-wrap:wrap;align-items:center;margin:0 -0.2em 0 -0.2em}.pcr-app .pcr-interaction>*{margin:0 0.2em}.pcr-app .pcr-interaction input{letter-spacing:0.07em;font-size:0.75em;text-align:center;cursor:pointer;color:#75797e;background:#f1f3f4;border-radius:.15em;transition:all 0.15s;padding:0.45em 0.5em;margin-top:0.75em}.pcr-app .pcr-interaction input:hover{filter:brightness(0.975)}.pcr-app .pcr-interaction input:focus{box-shadow:0 0 0 1px rgba(255,255,255,0.85),0 0 0 3px rgba(66,133,244,0.75)}.pcr-app .pcr-interaction .pcr-result{color:#75797e;text-align:left;flex:1 1 8em;min-width:8em;transition:all 0.2s;border-radius:.15em;background:#f1f3f4;cursor:text}.pcr-app .pcr-interaction .pcr-result::-moz-selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-result::selection{background:#4285f4;color:#fff}.pcr-app .pcr-interaction .pcr-type.active{color:#fff;background:#4285f4}.pcr-app .pcr-interaction .pcr-save,.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear{color:#fff;width:auto}.pcr-app .pcr-interaction .pcr-save,.pcr-app .pcr-interaction .pcr-cancel,.pcr-app .pcr-interaction .pcr-clear{color:#fff}.pcr-app .pcr-interaction .pcr-save:hover,.pcr-app .pcr-interaction .pcr-cancel:hover,.pcr-app .pcr-interaction .pcr-clear:hover{filter:brightness(0.925)}.pcr-app .pcr-interaction .pcr-save{background:#4285f4}.pcr-app .pcr-interaction .pcr-clear,.pcr-app .pcr-interaction .pcr-cancel{background:#f44250}.pcr-app .pcr-interaction .pcr-clear:focus,.pcr-app .pcr-interaction .pcr-cancel:focus{box-shadow:0 0 0 1px rgba(255,255,255,0.85),0 0 0 3px rgba(244,66,80,0.75)}.pcr-app .pcr-selection .pcr-picker{position:absolute;height:18px;width:18px;border:2px solid #fff;border-radius:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.pcr-app .pcr-selection .pcr-color-palette,.pcr-app .pcr-selection .pcr-color-chooser,.pcr-app .pcr-selection .pcr-color-opacity{position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-direction:column;cursor:grab;cursor:-webkit-grab}.pcr-app .pcr-selection .pcr-color-palette:active,.pcr-app .pcr-selection .pcr-color-chooser:active,.pcr-app .pcr-selection .pcr-color-opacity:active{cursor:grabbing;cursor:-webkit-grabbing}.pcr-app[data-theme='nano']{width:14.25em;max-width:95vw}.pcr-app[data-theme='nano'] .pcr-swatches{margin-top:.6em;padding:0 .6em}.pcr-app[data-theme='nano'] .pcr-interaction{padding:0 .6em .6em .6em}.pcr-app[data-theme='nano'] .pcr-selection{display:grid;grid-gap:.6em;grid-template-columns:1fr 4fr;grid-template-rows:5fr auto auto;align-items:center;height:10.5em;width:100%;align-self:flex-start}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-preview{grid-area:2 / 1 / 4 / 1;height:100%;width:100%;display:flex;flex-direction:row;justify-content:center;margin-left:.6em}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-preview .pcr-last-color{display:none}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-preview .pcr-current-color{position:relative;background:var(--pcr-color);width:2em;height:2em;border-radius:50em;overflow:hidden}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-preview .pcr-current-color::before{position:absolute;content:'';top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-palette{grid-area:1 / 1 / 2 / 3;width:100%;height:100%;z-index:1}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-palette .pcr-palette{border-radius:.15em;width:100%;height:100%}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-palette .pcr-palette::before{position:absolute;content:'';top:0;left:0;width:100%;height:100%;background:url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:.5em;border-radius:.15em;z-index:-1}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-chooser{grid-area:2 / 2 / 2 / 2}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-opacity{grid-area:3 / 2 / 3 / 2}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-chooser,.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-opacity{height:0.5em;margin:0 .6em}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-chooser .pcr-picker,.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-opacity .pcr-picker{top:50%;transform:translateY(-50%)}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-chooser .pcr-slider,.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-opacity .pcr-slider{flex-grow:1;border-radius:50em}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-chooser .pcr-slider{background:linear-gradient(to right, red, #ff0, lime, cyan, blue, #f0f, red)}.pcr-app[data-theme='nano'] .pcr-selection .pcr-color-opacity .pcr-slider{background:linear-gradient(to right, transparent, black),url('data:image/svg+xml;utf8, <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2 2"><path fill="white" d="M1,0H2V1H1V0ZM0,1H1V2H0V1Z"/><path fill="gray" d="M0,0H1V1H0V0ZM1,1H2V2H1V1Z"/></svg>');background-size:100%, 0.25em}
243 | 
244 | 


--------------------------------------------------------------------------------
/tsconfig.json:
--------------------------------------------------------------------------------
 1 | {
 2 | 	"compilerOptions": {
 3 | 		"allowSyntheticDefaultImports": true,
 4 | 		"baseUrl": ".",
 5 | 		"inlineSourceMap": true,
 6 | 		"inlineSources": true,
 7 | 		"module": "ESNext",
 8 | 		"target": "es2018",
 9 | 		"allowJs": true,
10 | 		"noImplicitAny": true,
11 | 		"moduleResolution": "node",
12 | 		"importHelpers": true,
13 | 		"isolatedModules": true,
14 | 		"strictNullChecks": true,
15 | 		"skipLibCheck": true,
16 | 		"lib": ["dom", "es6", "scripthost", "es2018"],
17 | 	},
18 |   	"include": ["src/*.ts", "src/*.tsx"]
19 | }
20 | 


--------------------------------------------------------------------------------
/version-bump.mjs:
--------------------------------------------------------------------------------
 1 | import { readFileSync, writeFileSync } from "fs";
 2 | 
 3 | const targetVersion = process.env.npm_package_version;
 4 | 
 5 | // read minAppVersion from manifest.json and bump version to target version
 6 | let manifest = JSON.parse(readFileSync("manifest.json", "utf8"));
 7 | const { minAppVersion } = manifest;
 8 | manifest.version = targetVersion;
 9 | writeFileSync("manifest.json", JSON.stringify(manifest, null, "\t") + '\n');
10 | 
11 | // update versions.json with target version and minAppVersion from manifest.json
12 | let versions = JSON.parse(readFileSync("versions.json", "utf8"));
13 | versions[targetVersion] = minAppVersion;
14 | writeFileSync("versions.json", JSON.stringify(versions, null, "\t") + '\n');
15 | 


--------------------------------------------------------------------------------
/versions.json:
--------------------------------------------------------------------------------
 1 | {
 2 | 	"0.2.5": "0.11.5",
 3 | 	"0.2.4": "0.11.5",
 4 | 	"0.2.3": "0.11.5",
 5 | 	"0.2.2": "0.11.5",
 6 | 	"0.2.1": "0.11.5",
 7 | 	"0.2.0": "0.11.5",
 8 | 	"0.1.1": "0.11.5",
 9 | 	"0.1.0": "0.11.5",
10 | 	"0.0.7": "0.11.5",
11 | 	"0.0.6": "0.11.5",
12 | 	"0.0.5": "0.11.5",
13 | 	"0.0.4": "0.11.5",
14 | 	"0.0.3": "0.11.5",
15 | 	"0.0.2": "0.11.5",
16 | 	"0.0.1": "0.11.5",
17 | 	"1.0.7": "0.11.5",
18 | 	"1.0.8": "0.11.5",
19 | 	"1.0.9": "0.11.5"
20 | }
21 | 


--------------------------------------------------------------------------------
/yarn.lock:
--------------------------------------------------------------------------------
   1 | # THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
   2 | # yarn lockfile v1
   3 | 
   4 | 
   5 | "@babel/code-frame@^7.16.7", "@babel/code-frame@^7.22.13":
   6 |   version "7.22.13"
   7 |   resolved "https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.22.13.tgz#e3c1c099402598483b7a8c46a721d1038803755e"
   8 |   integrity sha512-XktuhWlJ5g+3TJXc5upd9Ks1HutSArik6jf2eAjYFyIOf4ej3RN+184cZbzDvbPnuTJIUhPKKJE3cIsYTiAT3w==
   9 |   dependencies:
  10 |     "@babel/highlight" "^7.22.13"
  11 |     chalk "^2.4.2"
  12 | 
  13 | "@babel/generator@7.17.7":
  14 |   version "7.17.7"
  15 |   resolved "https://registry.yarnpkg.com/@babel/generator/-/generator-7.17.7.tgz#8da2599beb4a86194a3b24df6c085931d9ee45ad"
  16 |   integrity sha512-oLcVCTeIFadUoArDTwpluncplrYBmTCCZZgXCbgNGvOBBiSDDK3eWO4b/+eOTli5tKv1lg+a5/NAXg+nTcei1w==
  17 |   dependencies:
  18 |     "@babel/types" "^7.17.0"
  19 |     jsesc "^2.5.1"
  20 |     source-map "^0.5.0"
  21 | 
  22 | "@babel/generator@^7.17.3":
  23 |   version "7.22.15"
  24 |   resolved "https://registry.yarnpkg.com/@babel/generator/-/generator-7.22.15.tgz#1564189c7ec94cb8f77b5e8a90c4d200d21b2339"
  25 |   integrity sha512-Zu9oWARBqeVOW0dZOjXc3JObrzuqothQ3y/n1kUtrjCoCPLkXUwMvOo/F/TCfoHMbWIFlWwpZtkZVb9ga4U2pA==
  26 |   dependencies:
  27 |     "@babel/types" "^7.22.15"
  28 |     "@jridgewell/gen-mapping" "^0.3.2"
  29 |     "@jridgewell/trace-mapping" "^0.3.17"
  30 |     jsesc "^2.5.1"
  31 | 
  32 | "@babel/helper-environment-visitor@^7.16.7":
  33 |   version "7.22.5"
  34 |   resolved "https://registry.yarnpkg.com/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.5.tgz#f06dd41b7c1f44e1f8da6c4055b41ab3a09a7e98"
  35 |   integrity sha512-XGmhECfVA/5sAt+H+xpSg0mfrHq6FzNr9Oxh7PSEBBRUb/mL7Kz3NICXb194rCqAEdxkhPT1a88teizAFyvk8Q==
  36 | 
  37 | "@babel/helper-function-name@^7.16.7":
  38 |   version "7.22.5"
  39 |   resolved "https://registry.yarnpkg.com/@babel/helper-function-name/-/helper-function-name-7.22.5.tgz#ede300828905bb15e582c037162f99d5183af1be"
  40 |   integrity sha512-wtHSq6jMRE3uF2otvfuD3DIvVhOsSNshQl0Qrd7qC9oQJzHvOL4qQXlQn2916+CXGywIjpGuIkoyZRRxHPiNQQ==
  41 |   dependencies:
  42 |     "@babel/template" "^7.22.5"
  43 |     "@babel/types" "^7.22.5"
  44 | 
  45 | "@babel/helper-hoist-variables@^7.16.7":
  46 |   version "7.22.5"
  47 |   resolved "https://registry.yarnpkg.com/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz#c01a007dac05c085914e8fb652b339db50d823bb"
  48 |   integrity sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw==
  49 |   dependencies:
  50 |     "@babel/types" "^7.22.5"
  51 | 
  52 | "@babel/helper-split-export-declaration@^7.16.7":
  53 |   version "7.22.6"
  54 |   resolved "https://registry.yarnpkg.com/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.6.tgz#322c61b7310c0997fe4c323955667f18fcefb91c"
  55 |   integrity sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g==
  56 |   dependencies:
  57 |     "@babel/types" "^7.22.5"
  58 | 
  59 | "@babel/helper-string-parser@^7.22.5":
  60 |   version "7.22.5"
  61 |   resolved "https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.22.5.tgz#533f36457a25814cf1df6488523ad547d784a99f"
  62 |   integrity sha512-mM4COjgZox8U+JcXQwPijIZLElkgEpO5rsERVDJTc2qfCDfERyob6k5WegS14SX18IIjv+XD+GrqNumY5JRCDw==
  63 | 
  64 | "@babel/helper-validator-identifier@^7.16.7", "@babel/helper-validator-identifier@^7.22.15", "@babel/helper-validator-identifier@^7.22.5":
  65 |   version "7.22.15"
  66 |   resolved "https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.15.tgz#601fa28e4cc06786c18912dca138cec73b882044"
  67 |   integrity sha512-4E/F9IIEi8WR94324mbDUMo074YTheJmd7eZF5vITTeYchqAi6sYXRLHUVsmkdmY4QjfKTcB2jB7dVP3NaBElQ==
  68 | 
  69 | "@babel/highlight@^7.22.13":
  70 |   version "7.22.13"
  71 |   resolved "https://registry.yarnpkg.com/@babel/highlight/-/highlight-7.22.13.tgz#9cda839e5d3be9ca9e8c26b6dd69e7548f0cbf16"
  72 |   integrity sha512-C/BaXcnnvBCmHTpz/VGZ8jgtE2aYlW4hxDhseJAWZb7gqGM/qtCK6iZUb0TyKFf7BOUsBH7Q7fkRsDRhg1XklQ==
  73 |   dependencies:
  74 |     "@babel/helper-validator-identifier" "^7.22.5"
  75 |     chalk "^2.4.2"
  76 |     js-tokens "^4.0.0"
  77 | 
  78 | "@babel/parser@^7.17.3", "@babel/parser@^7.20.5", "@babel/parser@^7.22.15":
  79 |   version "7.22.15"
  80 |   resolved "https://registry.yarnpkg.com/@babel/parser/-/parser-7.22.15.tgz#d34592bfe288a32e741aa0663dbc4829fcd55160"
  81 |   integrity sha512-RWmQ/sklUN9BvGGpCDgSubhHWfAx24XDTDObup4ffvxaYsptOg2P3KG0j+1eWKLxpkX0j0uHxmpq2Z1SP/VhxA==
  82 | 
  83 | "@babel/template@^7.22.5":
  84 |   version "7.22.15"
  85 |   resolved "https://registry.yarnpkg.com/@babel/template/-/template-7.22.15.tgz#09576efc3830f0430f4548ef971dde1350ef2f38"
  86 |   integrity sha512-QPErUVm4uyJa60rkI73qneDacvdvzxshT3kksGqlGWYdOTIUOwJ7RDUL8sGqslY1uXWSL6xMFKEXDS3ox2uF0w==
  87 |   dependencies:
  88 |     "@babel/code-frame" "^7.22.13"
  89 |     "@babel/parser" "^7.22.15"
  90 |     "@babel/types" "^7.22.15"
  91 | 
  92 | "@babel/traverse@7.17.3":
  93 |   version "7.17.3"
  94 |   resolved "https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.17.3.tgz#0ae0f15b27d9a92ba1f2263358ea7c4e7db47b57"
  95 |   integrity sha512-5irClVky7TxRWIRtxlh2WPUUOLhcPN06AGgaQSB8AEwuyEBgJVuJ5imdHm5zxk8w0QS5T+tDfnDxAlhWjpb7cw==
  96 |   dependencies:
  97 |     "@babel/code-frame" "^7.16.7"
  98 |     "@babel/generator" "^7.17.3"
  99 |     "@babel/helper-environment-visitor" "^7.16.7"
 100 |     "@babel/helper-function-name" "^7.16.7"
 101 |     "@babel/helper-hoist-variables" "^7.16.7"
 102 |     "@babel/helper-split-export-declaration" "^7.16.7"
 103 |     "@babel/parser" "^7.17.3"
 104 |     "@babel/types" "^7.17.0"
 105 |     debug "^4.1.0"
 106 |     globals "^11.1.0"
 107 | 
 108 | "@babel/types@7.17.0":
 109 |   version "7.17.0"
 110 |   resolved "https://registry.yarnpkg.com/@babel/types/-/types-7.17.0.tgz#a826e368bccb6b3d84acd76acad5c0d87342390b"
 111 |   integrity sha512-TmKSNO4D5rzhL5bjWFcVHHLETzfQ/AmbKpKPOSjlP0WoHZ6L911fgoOKY4Alp/emzG4cHJdyN49zpgkbXFEHHw==
 112 |   dependencies:
 113 |     "@babel/helper-validator-identifier" "^7.16.7"
 114 |     to-fast-properties "^2.0.0"
 115 | 
 116 | "@babel/types@^7.17.0", "@babel/types@^7.22.15", "@babel/types@^7.22.5":
 117 |   version "7.22.15"
 118 |   resolved "https://registry.yarnpkg.com/@babel/types/-/types-7.22.15.tgz#266cb21d2c5fd0b3931e7a91b6dd72d2f617d282"
 119 |   integrity sha512-X+NLXr0N8XXmN5ZsaQdm9U2SSC3UbIYq/doL++sueHOTisgZHoKaQtZxGuV2cUPQHMfjKEfg/g6oy7Hm6SKFtA==
 120 |   dependencies:
 121 |     "@babel/helper-string-parser" "^7.22.5"
 122 |     "@babel/helper-validator-identifier" "^7.22.15"
 123 |     to-fast-properties "^2.0.0"
 124 | 
 125 | "@esbuild/android-arm64@0.17.3":
 126 |   version "0.17.3"
 127 |   resolved "https://registry.yarnpkg.com/@esbuild/android-arm64/-/android-arm64-0.17.3.tgz#35d045f69c9b4cf3f8efcd1ced24a560213d3346"
 128 |   integrity sha512-XvJsYo3dO3Pi4kpalkyMvfQsjxPWHYjoX4MDiB/FUM4YMfWcXa5l4VCwFWVYI1+92yxqjuqrhNg0CZg3gSouyQ==
 129 | 
 130 | "@esbuild/android-arm@0.17.3":
 131 |   version "0.17.3"
 132 |   resolved "https://registry.yarnpkg.com/@esbuild/android-arm/-/android-arm-0.17.3.tgz#4986d26306a7440078d42b3bf580d186ef714286"
 133 |   integrity sha512-1Mlz934GvbgdDmt26rTLmf03cAgLg5HyOgJN+ZGCeP3Q9ynYTNMn2/LQxIl7Uy+o4K6Rfi2OuLsr12JQQR8gNg==
 134 | 
 135 | "@esbuild/android-x64@0.17.3":
 136 |   version "0.17.3"
 137 |   resolved "https://registry.yarnpkg.com/@esbuild/android-x64/-/android-x64-0.17.3.tgz#a1928cd681e4055103384103c8bd34df7b9c7b19"
 138 |   integrity sha512-nuV2CmLS07Gqh5/GrZLuqkU9Bm6H6vcCspM+zjp9TdQlxJtIe+qqEXQChmfc7nWdyr/yz3h45Utk1tUn8Cz5+A==
 139 | 
 140 | "@esbuild/darwin-arm64@0.17.3":
 141 |   version "0.17.3"
 142 |   resolved "https://registry.yarnpkg.com/@esbuild/darwin-arm64/-/darwin-arm64-0.17.3.tgz#e4af2b392e5606a4808d3a78a99d38c27af39f1d"
 143 |   integrity sha512-01Hxaaat6m0Xp9AXGM8mjFtqqwDjzlMP0eQq9zll9U85ttVALGCGDuEvra5Feu/NbP5AEP1MaopPwzsTcUq1cw==
 144 | 
 145 | "@esbuild/darwin-x64@0.17.3":
 146 |   version "0.17.3"
 147 |   resolved "https://registry.yarnpkg.com/@esbuild/darwin-x64/-/darwin-x64-0.17.3.tgz#cbcbfb32c8d5c86953f215b48384287530c5a38e"
 148 |   integrity sha512-Eo2gq0Q/er2muf8Z83X21UFoB7EU6/m3GNKvrhACJkjVThd0uA+8RfKpfNhuMCl1bKRfBzKOk6xaYKQZ4lZqvA==
 149 | 
 150 | "@esbuild/freebsd-arm64@0.17.3":
 151 |   version "0.17.3"
 152 |   resolved "https://registry.yarnpkg.com/@esbuild/freebsd-arm64/-/freebsd-arm64-0.17.3.tgz#90ec1755abca4c3ffe1ad10819cd9d31deddcb89"
 153 |   integrity sha512-CN62ESxaquP61n1ZjQP/jZte8CE09M6kNn3baos2SeUfdVBkWN5n6vGp2iKyb/bm/x4JQzEvJgRHLGd5F5b81w==
 154 | 
 155 | "@esbuild/freebsd-x64@0.17.3":
 156 |   version "0.17.3"
 157 |   resolved "https://registry.yarnpkg.com/@esbuild/freebsd-x64/-/freebsd-x64-0.17.3.tgz#8760eedc466af253c3ed0dfa2940d0e59b8b0895"
 158 |   integrity sha512-feq+K8TxIznZE+zhdVurF3WNJ/Sa35dQNYbaqM/wsCbWdzXr5lyq+AaTUSER2cUR+SXPnd/EY75EPRjf4s1SLg==
 159 | 
 160 | "@esbuild/linux-arm64@0.17.3":
 161 |   version "0.17.3"
 162 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-arm64/-/linux-arm64-0.17.3.tgz#13916fc8873115d7d546656e19037267b12d4567"
 163 |   integrity sha512-JHeZXD4auLYBnrKn6JYJ0o5nWJI9PhChA/Nt0G4MvLaMrvXuWnY93R3a7PiXeJQphpL1nYsaMcoV2QtuvRnF/g==
 164 | 
 165 | "@esbuild/linux-arm@0.17.3":
 166 |   version "0.17.3"
 167 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-arm/-/linux-arm-0.17.3.tgz#15f876d127b244635ddc09eaaa65ae97bc472a63"
 168 |   integrity sha512-CLP3EgyNuPcg2cshbwkqYy5bbAgK+VhyfMU7oIYyn+x4Y67xb5C5ylxsNUjRmr8BX+MW3YhVNm6Lq6FKtRTWHQ==
 169 | 
 170 | "@esbuild/linux-ia32@0.17.3":
 171 |   version "0.17.3"
 172 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-ia32/-/linux-ia32-0.17.3.tgz#6691f02555d45b698195c81c9070ab4e521ef005"
 173 |   integrity sha512-FyXlD2ZjZqTFh0sOQxFDiWG1uQUEOLbEh9gKN/7pFxck5Vw0qjWSDqbn6C10GAa1rXJpwsntHcmLqydY9ST9ZA==
 174 | 
 175 | "@esbuild/linux-loong64@0.17.3":
 176 |   version "0.17.3"
 177 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-loong64/-/linux-loong64-0.17.3.tgz#f77ef657f222d8b3a8fbd530a09e40976c458d48"
 178 |   integrity sha512-OrDGMvDBI2g7s04J8dh8/I7eSO+/E7nMDT2Z5IruBfUO/RiigF1OF6xoH33Dn4W/OwAWSUf1s2nXamb28ZklTA==
 179 | 
 180 | "@esbuild/linux-mips64el@0.17.3":
 181 |   version "0.17.3"
 182 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-mips64el/-/linux-mips64el-0.17.3.tgz#fa38833cfc8bfaadaa12b243257fe6d19d0f6f79"
 183 |   integrity sha512-DcnUpXnVCJvmv0TzuLwKBC2nsQHle8EIiAJiJ+PipEVC16wHXaPEKP0EqN8WnBe0TPvMITOUlP2aiL5YMld+CQ==
 184 | 
 185 | "@esbuild/linux-ppc64@0.17.3":
 186 |   version "0.17.3"
 187 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-ppc64/-/linux-ppc64-0.17.3.tgz#c157a602b627c90d174743e4b0dfb7630b101dbf"
 188 |   integrity sha512-BDYf/l1WVhWE+FHAW3FzZPtVlk9QsrwsxGzABmN4g8bTjmhazsId3h127pliDRRu5674k1Y2RWejbpN46N9ZhQ==
 189 | 
 190 | "@esbuild/linux-riscv64@0.17.3":
 191 |   version "0.17.3"
 192 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-riscv64/-/linux-riscv64-0.17.3.tgz#7bf79614bd544bd932839b1fcff6cf1f8f6bdf1a"
 193 |   integrity sha512-WViAxWYMRIi+prTJTyV1wnqd2mS2cPqJlN85oscVhXdb/ZTFJdrpaqm/uDsZPGKHtbg5TuRX/ymKdOSk41YZow==
 194 | 
 195 | "@esbuild/linux-s390x@0.17.3":
 196 |   version "0.17.3"
 197 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-s390x/-/linux-s390x-0.17.3.tgz#6bb50c5a2613d31ce1137fe5c249ecadbecccdea"
 198 |   integrity sha512-Iw8lkNHUC4oGP1O/KhumcVy77u2s6+KUjieUqzEU3XuWJqZ+AY7uVMrrCbAiwWTkpQHkr00BuXH5RpC6Sb/7Ug==
 199 | 
 200 | "@esbuild/linux-x64@0.17.3":
 201 |   version "0.17.3"
 202 |   resolved "https://registry.yarnpkg.com/@esbuild/linux-x64/-/linux-x64-0.17.3.tgz#aa140d99f0d9e0af388024823bfe4558d73fbbf9"
 203 |   integrity sha512-0AGkWQMzeoeAtXQRNB3s4J1/T2XbigM2/Mn2yU1tQSmQRmHIZdkGbVq2A3aDdNslPyhb9/lH0S5GMTZ4xsjBqg==
 204 | 
 205 | "@esbuild/netbsd-x64@0.17.3":
 206 |   version "0.17.3"
 207 |   resolved "https://registry.yarnpkg.com/@esbuild/netbsd-x64/-/netbsd-x64-0.17.3.tgz#b6ae9948b03e4c95dc581c68358fb61d9d12a625"
 208 |   integrity sha512-4+rR/WHOxIVh53UIQIICryjdoKdHsFZFD4zLSonJ9RRw7bhKzVyXbnRPsWSfwybYqw9sB7ots/SYyufL1mBpEg==
 209 | 
 210 | "@esbuild/openbsd-x64@0.17.3":
 211 |   version "0.17.3"
 212 |   resolved "https://registry.yarnpkg.com/@esbuild/openbsd-x64/-/openbsd-x64-0.17.3.tgz#cda007233e211fc9154324bfa460540cfc469408"
 213 |   integrity sha512-cVpWnkx9IYg99EjGxa5Gc0XmqumtAwK3aoz7O4Dii2vko+qXbkHoujWA68cqXjhh6TsLaQelfDO4MVnyr+ODeA==
 214 | 
 215 | "@esbuild/sunos-x64@0.17.3":
 216 |   version "0.17.3"
 217 |   resolved "https://registry.yarnpkg.com/@esbuild/sunos-x64/-/sunos-x64-0.17.3.tgz#f1385b092000c662d360775f3fad80943d2169c4"
 218 |   integrity sha512-RxmhKLbTCDAY2xOfrww6ieIZkZF+KBqG7S2Ako2SljKXRFi+0863PspK74QQ7JpmWwncChY25JTJSbVBYGQk2Q==
 219 | 
 220 | "@esbuild/win32-arm64@0.17.3":
 221 |   version "0.17.3"
 222 |   resolved "https://registry.yarnpkg.com/@esbuild/win32-arm64/-/win32-arm64-0.17.3.tgz#14e9dd9b1b55aa991f80c120fef0c4492d918801"
 223 |   integrity sha512-0r36VeEJ4efwmofxVJRXDjVRP2jTmv877zc+i+Pc7MNsIr38NfsjkQj23AfF7l0WbB+RQ7VUb+LDiqC/KY/M/A==
 224 | 
 225 | "@esbuild/win32-ia32@0.17.3":
 226 |   version "0.17.3"
 227 |   resolved "https://registry.yarnpkg.com/@esbuild/win32-ia32/-/win32-ia32-0.17.3.tgz#de584423513d13304a6925e01233499a37a4e075"
 228 |   integrity sha512-wgO6rc7uGStH22nur4aLFcq7Wh86bE9cOFmfTr/yxN3BXvDEdCSXyKkO+U5JIt53eTOgC47v9k/C1bITWL/Teg==
 229 | 
 230 | "@esbuild/win32-x64@0.17.3":
 231 |   version "0.17.3"
 232 |   resolved "https://registry.yarnpkg.com/@esbuild/win32-x64/-/win32-x64-0.17.3.tgz#2f69ea6b37031b0d1715dd2da832a8ae5eb36e74"
 233 |   integrity sha512-FdVl64OIuiKjgXBjwZaJLKp0eaEckifbhn10dXWhysMJkWblg3OEEGKSIyhiD5RSgAya8WzP3DNkngtIg3Nt7g==
 234 | 
 235 | "@eslint-community/eslint-utils@^4.2.0":
 236 |   version "4.4.0"
 237 |   resolved "https://registry.yarnpkg.com/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz#a23514e8fb9af1269d5f7788aa556798d61c6b59"
 238 |   integrity sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==
 239 |   dependencies:
 240 |     eslint-visitor-keys "^3.3.0"
 241 | 
 242 | "@eslint-community/regexpp@^4.6.1":
 243 |   version "4.11.0"
 244 |   resolved "https://registry.yarnpkg.com/@eslint-community/regexpp/-/regexpp-4.11.0.tgz#b0ffd0312b4a3fd2d6f77237e7248a5ad3a680ae"
 245 |   integrity sha512-G/M/tIiMrTAxEWRfLfQJMmGNX28IxBg4PBz8XqQhqUHLFI6TL2htpIB1iQCj144V5ee/JaKyT9/WZ0MGZWfA7A==
 246 | 
 247 | "@eslint/eslintrc@^2.1.2":
 248 |   version "2.1.4"
 249 |   resolved "https://registry.yarnpkg.com/@eslint/eslintrc/-/eslintrc-2.1.4.tgz#388a269f0f25c1b6adc317b5a2c55714894c70ad"
 250 |   integrity sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==
 251 |   dependencies:
 252 |     ajv "^6.12.4"
 253 |     debug "^4.3.2"
 254 |     espree "^9.6.0"
 255 |     globals "^13.19.0"
 256 |     ignore "^5.2.0"
 257 |     import-fresh "^3.2.1"
 258 |     js-yaml "^4.1.0"
 259 |     minimatch "^3.1.2"
 260 |     strip-json-comments "^3.1.1"
 261 | 
 262 | "@eslint/js@^8.47.0":
 263 |   version "8.57.0"
 264 |   resolved "https://registry.yarnpkg.com/@eslint/js/-/js-8.57.0.tgz#a5417ae8427873f1dd08b70b3574b453e67b5f7f"
 265 |   integrity sha512-Ys+3g2TaW7gADOJzPt83SJtCDhMjndcDMFVQ/Tj9iA1BfJzFKD9mAUXT3OenpuPHbI6P/myECxRJrofUsDx/5g==
 266 | 
 267 | "@humanwhocodes/config-array@^0.11.10":
 268 |   version "0.11.14"
 269 |   resolved "https://registry.yarnpkg.com/@humanwhocodes/config-array/-/config-array-0.11.14.tgz#d78e481a039f7566ecc9660b4ea7fe6b1fec442b"
 270 |   integrity sha512-3T8LkOmg45BV5FICb15QQMsyUSWrQ8AygVfC7ZG32zOalnqrilm018ZVCw0eapXux8FtA33q8PSRSstjee3jSg==
 271 |   dependencies:
 272 |     "@humanwhocodes/object-schema" "^2.0.2"
 273 |     debug "^4.3.1"
 274 |     minimatch "^3.0.5"
 275 | 
 276 | "@humanwhocodes/module-importer@^1.0.1":
 277 |   version "1.0.1"
 278 |   resolved "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz"
 279 |   integrity sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==
 280 | 
 281 | "@humanwhocodes/object-schema@^2.0.2":
 282 |   version "2.0.3"
 283 |   resolved "https://registry.yarnpkg.com/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz#4a2868d75d6d6963e423bcf90b7fd1be343409d3"
 284 |   integrity sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==
 285 | 
 286 | "@jridgewell/gen-mapping@^0.3.2":
 287 |   version "0.3.3"
 288 |   resolved "https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.3.tgz#7e02e6eb5df901aaedb08514203b096614024098"
 289 |   integrity sha512-HLhSWOLRi875zjjMG/r+Nv0oCW8umGb0BgEhyX3dDX3egwZtB8PqLnjz3yedt8R5StBrzcg4aBpnh8UA9D1BoQ==
 290 |   dependencies:
 291 |     "@jridgewell/set-array" "^1.0.1"
 292 |     "@jridgewell/sourcemap-codec" "^1.4.10"
 293 |     "@jridgewell/trace-mapping" "^0.3.9"
 294 | 
 295 | "@jridgewell/resolve-uri@^3.1.0":
 296 |   version "3.1.1"
 297 |   resolved "https://registry.yarnpkg.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.1.tgz#c08679063f279615a3326583ba3a90d1d82cc721"
 298 |   integrity sha512-dSYZh7HhCDtCKm4QakX0xFpsRDqjjtZf/kjI/v3T3Nwt5r8/qz/M19F9ySyOqU94SXBmeG9ttTul+YnR4LOxFA==
 299 | 
 300 | "@jridgewell/set-array@^1.0.1":
 301 |   version "1.1.2"
 302 |   resolved "https://registry.yarnpkg.com/@jridgewell/set-array/-/set-array-1.1.2.tgz#7c6cf998d6d20b914c0a55a91ae928ff25965e72"
 303 |   integrity sha512-xnkseuNADM0gt2bs+BvhO0p78Mk762YnZdsuzFV018NoG1Sj1SCQvpSqa7XUaTam5vAGasABV9qXASMKnFMwMw==
 304 | 
 305 | "@jridgewell/sourcemap-codec@^1.4.10", "@jridgewell/sourcemap-codec@^1.4.14":
 306 |   version "1.4.15"
 307 |   resolved "https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.4.15.tgz#d7c6e6755c78567a951e04ab52ef0fd26de59f32"
 308 |   integrity sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==
 309 | 
 310 | "@jridgewell/trace-mapping@^0.3.17", "@jridgewell/trace-mapping@^0.3.9":
 311 |   version "0.3.19"
 312 |   resolved "https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.19.tgz#f8a3249862f91be48d3127c3cfe992f79b4b8811"
 313 |   integrity sha512-kf37QtfW+Hwx/buWGMPcR60iF9ziHa6r/CZJIHbmcm4+0qrXiVdxegAH0F6yddEVQ7zdkjcGCgCzUu+BcbhQxw==
 314 |   dependencies:
 315 |     "@jridgewell/resolve-uri" "^3.1.0"
 316 |     "@jridgewell/sourcemap-codec" "^1.4.14"
 317 | 
 318 | "@nodelib/fs.scandir@2.1.5":
 319 |   version "2.1.5"
 320 |   resolved "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz"
 321 |   integrity sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==
 322 |   dependencies:
 323 |     "@nodelib/fs.stat" "2.0.5"
 324 |     run-parallel "^1.1.9"
 325 | 
 326 | "@nodelib/fs.stat@2.0.5", "@nodelib/fs.stat@^2.0.2":
 327 |   version "2.0.5"
 328 |   resolved "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz"
 329 |   integrity sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==
 330 | 
 331 | "@nodelib/fs.walk@^1.2.3", "@nodelib/fs.walk@^1.2.8":
 332 |   version "1.2.8"
 333 |   resolved "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz"
 334 |   integrity sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==
 335 |   dependencies:
 336 |     "@nodelib/fs.scandir" "2.1.5"
 337 |     fastq "^1.6.0"
 338 | 
 339 | "@simonwep/pickr@https://github.com/nothingislost/pickr/archive/a17739f7aa1871b44da778cbb79ae76dae77d839.tar.gz":
 340 |   version "1.8.4"
 341 |   resolved "https://github.com/nothingislost/pickr/archive/a17739f7aa1871b44da778cbb79ae76dae77d839.tar.gz"
 342 |   integrity sha512-VOphUjenpUXHMrYo+uNREruBB/xhMsvqqnJMUShctn1pQXWMDp41a9NJ6XyhISwlyRNoubkuXEn/7/3MuvAhyg==
 343 |   dependencies:
 344 |     core-js "^3.15.1"
 345 |     nanopop "^2.1.0"
 346 | 
 347 | "@trivago/prettier-plugin-sort-imports@4.2.0":
 348 |   version "4.2.0"
 349 |   resolved "https://registry.yarnpkg.com/@trivago/prettier-plugin-sort-imports/-/prettier-plugin-sort-imports-4.2.0.tgz#b240366f9e2bda8e14edb18b14ea084e0ec25968"
 350 |   integrity sha512-YBepjbt+ZNBVmN3ev1amQH3lWCmHyt5qTbLCp/syXJRu/Kw2koXh44qayB1gMRxcL/gV8egmjN5xWSrYyfUtyw==
 351 |   dependencies:
 352 |     "@babel/generator" "7.17.7"
 353 |     "@babel/parser" "^7.20.5"
 354 |     "@babel/traverse" "7.17.3"
 355 |     "@babel/types" "7.17.0"
 356 |     javascript-natural-sort "0.7.1"
 357 |     lodash "^4.17.21"
 358 | 
 359 | "@types/chroma-js@^2.1.3":
 360 |   version "2.1.3"
 361 |   resolved "https://registry.npmjs.org/@types/chroma-js/-/chroma-js-2.1.3.tgz"
 362 |   integrity sha512-1xGPhoSGY1CPmXLCBcjVZSQinFjL26vlR8ZqprsBWiFyED4JacJJ9zHhh5aaUXqbY9B37mKQ73nlydVAXmr1+g==
 363 | 
 364 | "@types/codemirror@5.60.8":
 365 |   version "5.60.8"
 366 |   resolved "https://registry.yarnpkg.com/@types/codemirror/-/codemirror-5.60.8.tgz#b647d04b470e8e1836dd84b2879988fc55c9de68"
 367 |   integrity sha512-VjFgDF/eB+Aklcy15TtOTLQeMjTo07k7KAjql8OK5Dirr7a6sJY4T1uVBDuTVG9VEmn1uUsohOpYnVfgC6/jyw==
 368 |   dependencies:
 369 |     "@types/tern" "*"
 370 | 
 371 | "@types/estree@*":
 372 |   version "0.0.39"
 373 |   resolved "https://registry.npmjs.org/@types/estree/-/estree-0.0.39.tgz"
 374 |   integrity sha512-EYNwp3bU+98cpU4lAWYYL7Zz+2gryWH1qbdDTidVd6hkiR6weksdbMadyXKXNPEkQFhXM+hVO9ZygomHXp+AIw==
 375 | 
 376 | "@types/js-yaml@^4.0.3":
 377 |   version "4.0.3"
 378 |   resolved "https://registry.npmjs.org/@types/js-yaml/-/js-yaml-4.0.3.tgz"
 379 |   integrity sha512-5t9BhoORasuF5uCPr+d5/hdB++zRFUTMIZOzbNkr+jZh3yQht4HYbRDyj9fY8n2TZT30iW9huzav73x4NikqWg==
 380 | 
 381 | "@types/json-schema@^7.0.9":
 382 |   version "7.0.11"
 383 |   resolved "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.11.tgz"
 384 |   integrity sha512-wOuvG1SN4Us4rez+tylwwwCV1psiNVOkJeM3AUWUNWg/jDQY2+HE/444y5gc+jBmRqASOm2Oeh5c1axHobwRKQ==
 385 | 
 386 | "@types/node@16.11.6":
 387 |   version "16.11.6"
 388 |   resolved "https://registry.yarnpkg.com/@types/node/-/node-16.11.6.tgz#6bef7a2a0ad684cf6e90fcfe31cecabd9ce0a3ae"
 389 |   integrity sha512-ua7PgUoeQFjmWPcoo9khiPum3Pd60k4/2ZGXt18sm2Slk0W0xZTqt5Y0Ny1NyBiN1EVQ/+FaF9NcY4Qe6rwk5w==
 390 | 
 391 | "@types/tern@*":
 392 |   version "0.23.4"
 393 |   resolved "https://registry.npmjs.org/@types/tern/-/tern-0.23.4.tgz"
 394 |   integrity sha512-JAUw1iXGO1qaWwEOzxTKJZ/5JxVeON9kvGZ/osgZaJImBnyjyn0cjovPsf6FNLmyGY8Vw9DoXZCMlfMkMwHRWg==
 395 |   dependencies:
 396 |     "@types/estree" "*"
 397 | 
 398 | "@typescript-eslint/eslint-plugin@5.29.0":
 399 |   version "5.29.0"
 400 |   resolved "https://registry.yarnpkg.com/@typescript-eslint/eslint-plugin/-/eslint-plugin-5.29.0.tgz#c67794d2b0fd0b4a47f50266088acdc52a08aab6"
 401 |   integrity sha512-kgTsISt9pM53yRFQmLZ4npj99yGl3x3Pl7z4eA66OuTzAGC4bQB5H5fuLwPnqTKU3yyrrg4MIhjF17UYnL4c0w==
 402 |   dependencies:
 403 |     "@typescript-eslint/scope-manager" "5.29.0"
 404 |     "@typescript-eslint/type-utils" "5.29.0"
 405 |     "@typescript-eslint/utils" "5.29.0"
 406 |     debug "^4.3.4"
 407 |     functional-red-black-tree "^1.0.1"
 408 |     ignore "^5.2.0"
 409 |     regexpp "^3.2.0"
 410 |     semver "^7.3.7"
 411 |     tsutils "^3.21.0"
 412 | 
 413 | "@typescript-eslint/parser@5.29.0":
 414 |   version "5.29.0"
 415 |   resolved "https://registry.yarnpkg.com/@typescript-eslint/parser/-/parser-5.29.0.tgz#41314b195b34d44ff38220caa55f3f93cfca43cf"
 416 |   integrity sha512-ruKWTv+x0OOxbzIw9nW5oWlUopvP/IQDjB5ZqmTglLIoDTctLlAJpAQFpNPJP/ZI7hTT9sARBosEfaKbcFuECw==
 417 |   dependencies:
 418 |     "@typescript-eslint/scope-manager" "5.29.0"
 419 |     "@typescript-eslint/types" "5.29.0"
 420 |     "@typescript-eslint/typescript-estree" "5.29.0"
 421 |     debug "^4.3.4"
 422 | 
 423 | "@typescript-eslint/scope-manager@5.29.0":
 424 |   version "5.29.0"
 425 |   resolved "https://registry.yarnpkg.com/@typescript-eslint/scope-manager/-/scope-manager-5.29.0.tgz#2a6a32e3416cb133e9af8dcf54bf077a916aeed3"
 426 |   integrity sha512-etbXUT0FygFi2ihcxDZjz21LtC+Eps9V2xVx09zFoN44RRHPrkMflidGMI+2dUs821zR1tDS6Oc9IXxIjOUZwA==
 427 |   dependencies:
 428 |     "@typescript-eslint/types" "5.29.0"
 429 |     "@typescript-eslint/visitor-keys" "5.29.0"
 430 | 
 431 | "@typescript-eslint/type-utils@5.29.0":
 432 |   version "5.29.0"
 433 |   resolved "https://registry.yarnpkg.com/@typescript-eslint/type-utils/-/type-utils-5.29.0.tgz#241918001d164044020b37d26d5b9f4e37cc3d5d"
 434 |   integrity sha512-JK6bAaaiJozbox3K220VRfCzLa9n0ib/J+FHIwnaV3Enw/TO267qe0pM1b1QrrEuy6xun374XEAsRlA86JJnyg==
 435 |   dependencies:
 436 |     "@typescript-eslint/utils" "5.29.0"
 437 |     debug "^4.3.4"
 438 |     tsutils "^3.21.0"
 439 | 
 440 | "@typescript-eslint/types@5.29.0":
 441 |   version "5.29.0"
 442 |   resolved "https://registry.yarnpkg.com/@typescript-eslint/types/-/types-5.29.0.tgz#7861d3d288c031703b2d97bc113696b4d8c19aab"
 443 |   integrity sha512-X99VbqvAXOMdVyfFmksMy3u8p8yoRGITgU1joBJPzeYa0rhdf5ok9S56/itRoUSh99fiDoMtarSIJXo7H/SnOg==
 444 | 
 445 | "@typescript-eslint/typescript-estree@5.29.0":
 446 |   version "5.29.0"
 447 |   resolved "https://registry.yarnpkg.com/@typescript-eslint/typescript-estree/-/typescript-estree-5.29.0.tgz#e83d19aa7fd2e74616aab2f25dfbe4de4f0b5577"
 448 |   integrity sha512-mQvSUJ/JjGBdvo+1LwC+GY2XmSYjK1nAaVw2emp/E61wEVYEyibRHCqm1I1vEKbXCpUKuW4G7u9ZCaZhJbLoNQ==
 449 |   dependencies:
 450 |     "@typescript-eslint/types" "5.29.0"
 451 |     "@typescript-eslint/visitor-keys" "5.29.0"
 452 |     debug "^4.3.4"
 453 |     globby "^11.1.0"
 454 |     is-glob "^4.0.3"
 455 |     semver "^7.3.7"
 456 |     tsutils "^3.21.0"
 457 | 
 458 | "@typescript-eslint/utils@5.29.0":
 459 |   version "5.29.0"
 460 |   resolved "https://registry.yarnpkg.com/@typescript-eslint/utils/-/utils-5.29.0.tgz#775046effd5019667bd086bcf326acbe32cd0082"
 461 |   integrity sha512-3Eos6uP1nyLOBayc/VUdKZikV90HahXE5Dx9L5YlSd/7ylQPXhLk1BYb29SDgnBnTp+jmSZUU0QxUiyHgW4p7A==
 462 |   dependencies:
 463 |     "@types/json-schema" "^7.0.9"
 464 |     "@typescript-eslint/scope-manager" "5.29.0"
 465 |     "@typescript-eslint/types" "5.29.0"
 466 |     "@typescript-eslint/typescript-estree" "5.29.0"
 467 |     eslint-scope "^5.1.1"
 468 |     eslint-utils "^3.0.0"
 469 | 
 470 | "@typescript-eslint/visitor-keys@5.29.0":
 471 |   version "5.29.0"
 472 |   resolved "https://registry.yarnpkg.com/@typescript-eslint/visitor-keys/-/visitor-keys-5.29.0.tgz#7a4749fa7ef5160c44a451bf060ac1dc6dfb77ee"
 473 |   integrity sha512-Hpb/mCWsjILvikMQoZIE3voc9wtQcS0A9FUw3h8bhr9UxBdtI/tw1ZDZUOXHXLOVMedKCH5NxyzATwnU78bWCQ==
 474 |   dependencies:
 475 |     "@typescript-eslint/types" "5.29.0"
 476 |     eslint-visitor-keys "^3.3.0"
 477 | 
 478 | acorn-jsx@^5.3.2:
 479 |   version "5.3.2"
 480 |   resolved "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz"
 481 |   integrity sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==
 482 | 
 483 | acorn@^8.9.0:
 484 |   version "8.12.1"
 485 |   resolved "https://registry.yarnpkg.com/acorn/-/acorn-8.12.1.tgz#71616bdccbe25e27a54439e0046e89ca76df2248"
 486 |   integrity sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==
 487 | 
 488 | ajv@^6.12.4:
 489 |   version "6.12.6"
 490 |   resolved "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz"
 491 |   integrity sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==
 492 |   dependencies:
 493 |     fast-deep-equal "^3.1.1"
 494 |     fast-json-stable-stringify "^2.0.0"
 495 |     json-schema-traverse "^0.4.1"
 496 |     uri-js "^4.2.2"
 497 | 
 498 | ansi-regex@^5.0.1:
 499 |   version "5.0.1"
 500 |   resolved "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz"
 501 |   integrity sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==
 502 | 
 503 | ansi-styles@^3.2.1:
 504 |   version "3.2.1"
 505 |   resolved "https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-3.2.1.tgz#41fbb20243e50b12be0f04b8dedbf07520ce841d"
 506 |   integrity sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==
 507 |   dependencies:
 508 |     color-convert "^1.9.0"
 509 | 
 510 | ansi-styles@^4.1.0:
 511 |   version "4.3.0"
 512 |   resolved "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz"
 513 |   integrity sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==
 514 |   dependencies:
 515 |     color-convert "^2.0.1"
 516 | 
 517 | argparse@^2.0.1:
 518 |   version "2.0.1"
 519 |   resolved "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz"
 520 |   integrity sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==
 521 | 
 522 | array-union@^2.1.0:
 523 |   version "2.1.0"
 524 |   resolved "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz"
 525 |   integrity sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==
 526 | 
 527 | balanced-match@^1.0.0:
 528 |   version "1.0.2"
 529 |   resolved "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz"
 530 |   integrity sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==
 531 | 
 532 | brace-expansion@^1.1.7:
 533 |   version "1.1.11"
 534 |   resolved "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"
 535 |   integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==
 536 |   dependencies:
 537 |     balanced-match "^1.0.0"
 538 |     concat-map "0.0.1"
 539 | 
 540 | braces@^3.0.1:
 541 |   version "3.0.2"
 542 |   resolved "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz"
 543 |   integrity sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==
 544 |   dependencies:
 545 |     fill-range "^7.0.1"
 546 | 
 547 | builtin-modules@3.3.0:
 548 |   version "3.3.0"
 549 |   resolved "https://registry.yarnpkg.com/builtin-modules/-/builtin-modules-3.3.0.tgz#cae62812b89801e9656336e46223e030386be7b6"
 550 |   integrity sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==
 551 | 
 552 | callsites@^3.0.0:
 553 |   version "3.1.0"
 554 |   resolved "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz"
 555 |   integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
 556 | 
 557 | chalk@^2.4.2:
 558 |   version "2.4.2"
 559 |   resolved "https://registry.yarnpkg.com/chalk/-/chalk-2.4.2.tgz#cd42541677a54333cf541a49108c1432b44c9424"
 560 |   integrity sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==
 561 |   dependencies:
 562 |     ansi-styles "^3.2.1"
 563 |     escape-string-regexp "^1.0.5"
 564 |     supports-color "^5.3.0"
 565 | 
 566 | chalk@^4.0.0:
 567 |   version "4.1.2"
 568 |   resolved "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz"
 569 |   integrity sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==
 570 |   dependencies:
 571 |     ansi-styles "^4.1.0"
 572 |     supports-color "^7.1.0"
 573 | 
 574 | chroma-js@^2.1.2:
 575 |   version "2.1.2"
 576 |   resolved "https://registry.npmjs.org/chroma-js/-/chroma-js-2.1.2.tgz"
 577 |   integrity sha512-ri/ouYDWuxfus3UcaMxC1Tfp3IE9K5iQzxc2hSxbBRVNQFut1UuGAsZmiAf2mOUubzGJwgMSv9lHg+XqLaz1QQ==
 578 |   dependencies:
 579 |     cross-env "^6.0.3"
 580 | 
 581 | color-convert@^1.9.0:
 582 |   version "1.9.3"
 583 |   resolved "https://registry.yarnpkg.com/color-convert/-/color-convert-1.9.3.tgz#bb71850690e1f136567de629d2d5471deda4c1e8"
 584 |   integrity sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==
 585 |   dependencies:
 586 |     color-name "1.1.3"
 587 | 
 588 | color-convert@^2.0.1:
 589 |   version "2.0.1"
 590 |   resolved "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz"
 591 |   integrity sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==
 592 |   dependencies:
 593 |     color-name "~1.1.4"
 594 | 
 595 | color-name@1.1.3:
 596 |   version "1.1.3"
 597 |   resolved "https://registry.yarnpkg.com/color-name/-/color-name-1.1.3.tgz#a7d0558bd89c42f795dd42328f740831ca53bc25"
 598 |   integrity sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==
 599 | 
 600 | color-name@~1.1.4:
 601 |   version "1.1.4"
 602 |   resolved "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz"
 603 |   integrity sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==
 604 | 
 605 | concat-map@0.0.1:
 606 |   version "0.0.1"
 607 |   resolved "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz"
 608 |   integrity "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s= sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg=="
 609 | 
 610 | core-js@^3.15.1:
 611 |   version "3.18.2"
 612 |   resolved "https://registry.npmjs.org/core-js/-/core-js-3.18.2.tgz"
 613 |   integrity sha512-zNhPOUoSgoizoSQFdX1MeZO16ORRb9FFQLts8gSYbZU5FcgXhp24iMWMxnOQo5uIaIG7/6FA/IqJPwev1o9ZXQ==
 614 | 
 615 | cross-env@^6.0.3:
 616 |   version "6.0.3"
 617 |   resolved "https://registry.npmjs.org/cross-env/-/cross-env-6.0.3.tgz"
 618 |   integrity sha512-+KqxF6LCvfhWvADcDPqo64yVIB31gv/jQulX2NGzKS/g3GEVz6/pt4wjHFtFWsHMddebWD/sDthJemzM4MaAag==
 619 |   dependencies:
 620 |     cross-spawn "^7.0.0"
 621 | 
 622 | cross-spawn@^7.0.0, cross-spawn@^7.0.2:
 623 |   version "7.0.3"
 624 |   resolved "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz"
 625 |   integrity sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==
 626 |   dependencies:
 627 |     path-key "^3.1.0"
 628 |     shebang-command "^2.0.0"
 629 |     which "^2.0.1"
 630 | 
 631 | debug@^4.1.0, debug@^4.3.2, debug@^4.3.4:
 632 |   version "4.3.4"
 633 |   resolved "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz"
 634 |   integrity sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==
 635 |   dependencies:
 636 |     ms "2.1.2"
 637 | 
 638 | debug@^4.3.1:
 639 |   version "4.3.6"
 640 |   resolved "https://registry.yarnpkg.com/debug/-/debug-4.3.6.tgz#2ab2c38fbaffebf8aa95fdfe6d88438c7a13c52b"
 641 |   integrity sha512-O/09Bd4Z1fBrU4VzkhFqVgpPzaGbw6Sm9FEkBT1A/YBXQFGuuSxa1dN2nxgxS34JmKXqYx8CZAwEVoJFImUXIg==
 642 |   dependencies:
 643 |     ms "2.1.2"
 644 | 
 645 | deep-is@^0.1.3:
 646 |   version "0.1.4"
 647 |   resolved "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz"
 648 |   integrity sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==
 649 | 
 650 | detect-indent@^7.0.0:
 651 |   version "7.0.0"
 652 |   resolved "https://registry.npmjs.org/detect-indent/-/detect-indent-7.0.0.tgz"
 653 |   integrity sha512-/6kJlmVv6RDFPqaHC/ZDcU8bblYcoph2dUQ3kB47QqhkUEqXe3VZPELK9BaEMrC73qu+wn0AQ7iSteceN+yuMw==
 654 | 
 655 | dir-glob@^3.0.1:
 656 |   version "3.0.1"
 657 |   resolved "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz"
 658 |   integrity sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==
 659 |   dependencies:
 660 |     path-type "^4.0.0"
 661 | 
 662 | doctrine@^3.0.0:
 663 |   version "3.0.0"
 664 |   resolved "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz"
 665 |   integrity sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==
 666 |   dependencies:
 667 |     esutils "^2.0.2"
 668 | 
 669 | dotenv@^10.0.0:
 670 |   version "10.0.0"
 671 |   resolved "https://registry.npmjs.org/dotenv/-/dotenv-10.0.0.tgz"
 672 |   integrity sha512-rlBi9d8jpv9Sf1klPjNfFAuWDjKLwTIJJ/VxtoTwIR6hnZxcEOQCZg2oIL3MWBYw5GpUDKOEnND7LXTbIpQ03Q==
 673 | 
 674 | esbuild@0.17.3:
 675 |   version "0.17.3"
 676 |   resolved "https://registry.yarnpkg.com/esbuild/-/esbuild-0.17.3.tgz#d9aa02a3bc441ed35f9569cd9505812ae3fcae61"
 677 |   integrity sha512-9n3AsBRe6sIyOc6kmoXg2ypCLgf3eZSraWFRpnkto+svt8cZNuKTkb1bhQcitBcvIqjNiK7K0J3KPmwGSfkA8g==
 678 |   optionalDependencies:
 679 |     "@esbuild/android-arm" "0.17.3"
 680 |     "@esbuild/android-arm64" "0.17.3"
 681 |     "@esbuild/android-x64" "0.17.3"
 682 |     "@esbuild/darwin-arm64" "0.17.3"
 683 |     "@esbuild/darwin-x64" "0.17.3"
 684 |     "@esbuild/freebsd-arm64" "0.17.3"
 685 |     "@esbuild/freebsd-x64" "0.17.3"
 686 |     "@esbuild/linux-arm" "0.17.3"
 687 |     "@esbuild/linux-arm64" "0.17.3"
 688 |     "@esbuild/linux-ia32" "0.17.3"
 689 |     "@esbuild/linux-loong64" "0.17.3"
 690 |     "@esbuild/linux-mips64el" "0.17.3"
 691 |     "@esbuild/linux-ppc64" "0.17.3"
 692 |     "@esbuild/linux-riscv64" "0.17.3"
 693 |     "@esbuild/linux-s390x" "0.17.3"
 694 |     "@esbuild/linux-x64" "0.17.3"
 695 |     "@esbuild/netbsd-x64" "0.17.3"
 696 |     "@esbuild/openbsd-x64" "0.17.3"
 697 |     "@esbuild/sunos-x64" "0.17.3"
 698 |     "@esbuild/win32-arm64" "0.17.3"
 699 |     "@esbuild/win32-ia32" "0.17.3"
 700 |     "@esbuild/win32-x64" "0.17.3"
 701 | 
 702 | escape-string-regexp@^1.0.5:
 703 |   version "1.0.5"
 704 |   resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4"
 705 |   integrity sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==
 706 | 
 707 | escape-string-regexp@^4.0.0:
 708 |   version "4.0.0"
 709 |   resolved "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz"
 710 |   integrity sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==
 711 | 
 712 | eslint-scope@^5.1.1:
 713 |   version "5.1.1"
 714 |   resolved "https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz"
 715 |   integrity sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==
 716 |   dependencies:
 717 |     esrecurse "^4.3.0"
 718 |     estraverse "^4.1.1"
 719 | 
 720 | eslint-scope@^7.2.2:
 721 |   version "7.2.2"
 722 |   resolved "https://registry.yarnpkg.com/eslint-scope/-/eslint-scope-7.2.2.tgz#deb4f92563390f32006894af62a22dba1c46423f"
 723 |   integrity sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==
 724 |   dependencies:
 725 |     esrecurse "^4.3.0"
 726 |     estraverse "^5.2.0"
 727 | 
 728 | eslint-utils@^3.0.0:
 729 |   version "3.0.0"
 730 |   resolved "https://registry.npmjs.org/eslint-utils/-/eslint-utils-3.0.0.tgz"
 731 |   integrity sha512-uuQC43IGctw68pJA1RgbQS8/NP7rch6Cwd4j3ZBtgo4/8Flj4eGE7ZYSZRN3iq5pVUv6GPdW5Z1RFleo84uLDA==
 732 |   dependencies:
 733 |     eslint-visitor-keys "^2.0.0"
 734 | 
 735 | eslint-visitor-keys@^2.0.0:
 736 |   version "2.1.0"
 737 |   resolved "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-2.1.0.tgz"
 738 |   integrity sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw==
 739 | 
 740 | eslint-visitor-keys@^3.3.0:
 741 |   version "3.3.0"
 742 |   resolved "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.3.0.tgz"
 743 |   integrity sha512-mQ+suqKJVyeuwGYHAdjMFqjCyfl8+Ldnxuyp3ldiMBFKkvytrXUZWaiPCEav8qDHKty44bD+qV1IP4T+w+xXRA==
 744 | 
 745 | eslint-visitor-keys@^3.4.1, eslint-visitor-keys@^3.4.3:
 746 |   version "3.4.3"
 747 |   resolved "https://registry.yarnpkg.com/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz#0cd72fe8550e3c2eae156a96a4dddcd1c8ac5800"
 748 |   integrity sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==
 749 | 
 750 | eslint@8.47.0:
 751 |   version "8.47.0"
 752 |   resolved "https://registry.yarnpkg.com/eslint/-/eslint-8.47.0.tgz#c95f9b935463fb4fad7005e626c7621052e90806"
 753 |   integrity sha512-spUQWrdPt+pRVP1TTJLmfRNJJHHZryFmptzcafwSvHsceV81djHOdnEeDmkdotZyLNjDhrOasNK8nikkoG1O8Q==
 754 |   dependencies:
 755 |     "@eslint-community/eslint-utils" "^4.2.0"
 756 |     "@eslint-community/regexpp" "^4.6.1"
 757 |     "@eslint/eslintrc" "^2.1.2"
 758 |     "@eslint/js" "^8.47.0"
 759 |     "@humanwhocodes/config-array" "^0.11.10"
 760 |     "@humanwhocodes/module-importer" "^1.0.1"
 761 |     "@nodelib/fs.walk" "^1.2.8"
 762 |     ajv "^6.12.4"
 763 |     chalk "^4.0.0"
 764 |     cross-spawn "^7.0.2"
 765 |     debug "^4.3.2"
 766 |     doctrine "^3.0.0"
 767 |     escape-string-regexp "^4.0.0"
 768 |     eslint-scope "^7.2.2"
 769 |     eslint-visitor-keys "^3.4.3"
 770 |     espree "^9.6.1"
 771 |     esquery "^1.4.2"
 772 |     esutils "^2.0.2"
 773 |     fast-deep-equal "^3.1.3"
 774 |     file-entry-cache "^6.0.1"
 775 |     find-up "^5.0.0"
 776 |     glob-parent "^6.0.2"
 777 |     globals "^13.19.0"
 778 |     graphemer "^1.4.0"
 779 |     ignore "^5.2.0"
 780 |     imurmurhash "^0.1.4"
 781 |     is-glob "^4.0.0"
 782 |     is-path-inside "^3.0.3"
 783 |     js-yaml "^4.1.0"
 784 |     json-stable-stringify-without-jsonify "^1.0.1"
 785 |     levn "^0.4.1"
 786 |     lodash.merge "^4.6.2"
 787 |     minimatch "^3.1.2"
 788 |     natural-compare "^1.4.0"
 789 |     optionator "^0.9.3"
 790 |     strip-ansi "^6.0.1"
 791 |     text-table "^0.2.0"
 792 | 
 793 | espree@^9.6.0, espree@^9.6.1:
 794 |   version "9.6.1"
 795 |   resolved "https://registry.yarnpkg.com/espree/-/espree-9.6.1.tgz#a2a17b8e434690a5432f2f8018ce71d331a48c6f"
 796 |   integrity sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==
 797 |   dependencies:
 798 |     acorn "^8.9.0"
 799 |     acorn-jsx "^5.3.2"
 800 |     eslint-visitor-keys "^3.4.1"
 801 | 
 802 | esquery@^1.4.2:
 803 |   version "1.6.0"
 804 |   resolved "https://registry.yarnpkg.com/esquery/-/esquery-1.6.0.tgz#91419234f804d852a82dceec3e16cdc22cf9dae7"
 805 |   integrity sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==
 806 |   dependencies:
 807 |     estraverse "^5.1.0"
 808 | 
 809 | esrecurse@^4.3.0:
 810 |   version "4.3.0"
 811 |   resolved "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz"
 812 |   integrity sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==
 813 |   dependencies:
 814 |     estraverse "^5.2.0"
 815 | 
 816 | estraverse@^4.1.1:
 817 |   version "4.3.0"
 818 |   resolved "https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz"
 819 |   integrity sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==
 820 | 
 821 | estraverse@^5.1.0, estraverse@^5.2.0:
 822 |   version "5.3.0"
 823 |   resolved "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz"
 824 |   integrity sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==
 825 | 
 826 | esutils@^2.0.2:
 827 |   version "2.0.3"
 828 |   resolved "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz"
 829 |   integrity sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==
 830 | 
 831 | fast-deep-equal@^3.1.1, fast-deep-equal@^3.1.3:
 832 |   version "3.1.3"
 833 |   resolved "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz"
 834 |   integrity sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==
 835 | 
 836 | fast-glob@^3.2.9:
 837 |   version "3.2.12"
 838 |   resolved "https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.12.tgz"
 839 |   integrity sha512-DVj4CQIYYow0BlaelwK1pHl5n5cRSJfM60UA0zK891sVInoPri2Ekj7+e1CT3/3qxXenpI+nBBmQAcJPJgaj4w==
 840 |   dependencies:
 841 |     "@nodelib/fs.stat" "^2.0.2"
 842 |     "@nodelib/fs.walk" "^1.2.3"
 843 |     glob-parent "^5.1.2"
 844 |     merge2 "^1.3.0"
 845 |     micromatch "^4.0.4"
 846 | 
 847 | fast-json-stable-stringify@^2.0.0:
 848 |   version "2.1.0"
 849 |   resolved "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz"
 850 |   integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==
 851 | 
 852 | fast-levenshtein@^2.0.6:
 853 |   version "2.0.6"
 854 |   resolved "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz"
 855 |   integrity sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==
 856 | 
 857 | fastq@^1.6.0:
 858 |   version "1.13.0"
 859 |   resolved "https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz"
 860 |   integrity sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==
 861 |   dependencies:
 862 |     reusify "^1.0.4"
 863 | 
 864 | file-entry-cache@^6.0.1:
 865 |   version "6.0.1"
 866 |   resolved "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz"
 867 |   integrity sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==
 868 |   dependencies:
 869 |     flat-cache "^3.0.4"
 870 | 
 871 | fill-range@^7.0.1:
 872 |   version "7.0.1"
 873 |   resolved "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz"
 874 |   integrity sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==
 875 |   dependencies:
 876 |     to-regex-range "^5.0.1"
 877 | 
 878 | find-up@^5.0.0:
 879 |   version "5.0.0"
 880 |   resolved "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz"
 881 |   integrity sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==
 882 |   dependencies:
 883 |     locate-path "^6.0.0"
 884 |     path-exists "^4.0.0"
 885 | 
 886 | flat-cache@^3.0.4:
 887 |   version "3.0.4"
 888 |   resolved "https://registry.npmjs.org/flat-cache/-/flat-cache-3.0.4.tgz"
 889 |   integrity sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eDYZoZV5wdrev7P3Nwg==
 890 |   dependencies:
 891 |     flatted "^3.1.0"
 892 |     rimraf "^3.0.2"
 893 | 
 894 | flatted@^3.1.0:
 895 |   version "3.2.7"
 896 |   resolved "https://registry.npmjs.org/flatted/-/flatted-3.2.7.tgz"
 897 |   integrity sha512-5nqDSxl8nn5BSNxyR3n4I6eDmbolI6WT+QqR547RwxQapgjQBmtktdP+HTBb/a/zLsbzERTONyUB5pefh5TtjQ==
 898 | 
 899 | fs.realpath@^1.0.0:
 900 |   version "1.0.0"
 901 |   resolved "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz"
 902 |   integrity "sha1-FQStJSMVjKpA20onh8sBQRmU6k8= sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
 903 | 
 904 | functional-red-black-tree@^1.0.1:
 905 |   version "1.0.1"
 906 |   resolved "https://registry.yarnpkg.com/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz#1b0ab3bd553b2a0d6399d29c0e3ea0b252078327"
 907 |   integrity sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g==
 908 | 
 909 | fuzzysort@^2.0.4:
 910 |   version "2.0.4"
 911 |   resolved "https://registry.npmjs.org/fuzzysort/-/fuzzysort-2.0.4.tgz"
 912 |   integrity sha512-Api1mJL+Ad7W7vnDZnWq5pGaXJjyencT+iKGia2PlHUcSsSzWwIQ3S1isiMpwpavjYtGd2FzhUIhnnhOULZgDw==
 913 | 
 914 | glob-parent@^5.1.2:
 915 |   version "5.1.2"
 916 |   resolved "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz"
 917 |   integrity sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==
 918 |   dependencies:
 919 |     is-glob "^4.0.1"
 920 | 
 921 | glob-parent@^6.0.2:
 922 |   version "6.0.2"
 923 |   resolved "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz"
 924 |   integrity sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==
 925 |   dependencies:
 926 |     is-glob "^4.0.3"
 927 | 
 928 | glob@^7.1.3:
 929 |   version "7.2.0"
 930 |   resolved "https://registry.npmjs.org/glob/-/glob-7.2.0.tgz"
 931 |   integrity sha512-lmLf6gtyrPq8tTjSmrO94wBeQbFR3HbLHbuyD69wuyQkImp2hWqMGB47OX65FBkPffO641IP9jWa1z4ivqG26Q==
 932 |   dependencies:
 933 |     fs.realpath "^1.0.0"
 934 |     inflight "^1.0.4"
 935 |     inherits "2"
 936 |     minimatch "^3.0.4"
 937 |     once "^1.3.0"
 938 |     path-is-absolute "^1.0.0"
 939 | 
 940 | globals@^11.1.0:
 941 |   version "11.12.0"
 942 |   resolved "https://registry.yarnpkg.com/globals/-/globals-11.12.0.tgz#ab8795338868a0babd8525758018c2a7eb95c42e"
 943 |   integrity sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==
 944 | 
 945 | globals@^13.19.0:
 946 |   version "13.20.0"
 947 |   resolved "https://registry.npmjs.org/globals/-/globals-13.20.0.tgz"
 948 |   integrity sha512-Qg5QtVkCy/kv3FUSlu4ukeZDVf9ee0iXLAUYX13gbR17bnejFTzr4iS9bY7kwCf1NztRNm1t91fjOiyx4CSwPQ==
 949 |   dependencies:
 950 |     type-fest "^0.20.2"
 951 | 
 952 | globby@^11.1.0:
 953 |   version "11.1.0"
 954 |   resolved "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz"
 955 |   integrity sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==
 956 |   dependencies:
 957 |     array-union "^2.1.0"
 958 |     dir-glob "^3.0.1"
 959 |     fast-glob "^3.2.9"
 960 |     ignore "^5.2.0"
 961 |     merge2 "^1.4.1"
 962 |     slash "^3.0.0"
 963 | 
 964 | graphemer@^1.4.0:
 965 |   version "1.4.0"
 966 |   resolved "https://registry.yarnpkg.com/graphemer/-/graphemer-1.4.0.tgz#fb2f1d55e0e3a1849aeffc90c4fa0dd53a0e66c6"
 967 |   integrity sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==
 968 | 
 969 | has-flag@^3.0.0:
 970 |   version "3.0.0"
 971 |   resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-3.0.0.tgz#b5d454dc2199ae225699f3467e5a07f3b955bafd"
 972 |   integrity sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==
 973 | 
 974 | has-flag@^4.0.0:
 975 |   version "4.0.0"
 976 |   resolved "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz"
 977 |   integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
 978 | 
 979 | ignore@^5.2.0:
 980 |   version "5.2.4"
 981 |   resolved "https://registry.npmjs.org/ignore/-/ignore-5.2.4.tgz"
 982 |   integrity sha512-MAb38BcSbH0eHNBxn7ql2NH/kX33OkB3lZ1BNdh7ENeRChHTYsTvWrMubiIAMNS2llXEEgZ1MUOBtXChP3kaFQ==
 983 | 
 984 | import-fresh@^3.2.1:
 985 |   version "3.3.0"
 986 |   resolved "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz"
 987 |   integrity sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==
 988 |   dependencies:
 989 |     parent-module "^1.0.0"
 990 |     resolve-from "^4.0.0"
 991 | 
 992 | imurmurhash@^0.1.4:
 993 |   version "0.1.4"
 994 |   resolved "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz"
 995 |   integrity sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==
 996 | 
 997 | inflight@^1.0.4:
 998 |   version "1.0.6"
 999 |   resolved "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz"
1000 |   integrity "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk= sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA=="
1001 |   dependencies:
1002 |     once "^1.3.0"
1003 |     wrappy "1"
1004 | 
1005 | inherits@2:
1006 |   version "2.0.4"
1007 |   resolved "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz"
1008 |   integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==
1009 | 
1010 | is-extglob@^2.1.1:
1011 |   version "2.1.1"
1012 |   resolved "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz"
1013 |   integrity "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI= sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ=="
1014 | 
1015 | is-glob@^4.0.0, is-glob@^4.0.1, is-glob@^4.0.3:
1016 |   version "4.0.3"
1017 |   resolved "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz"
1018 |   integrity sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==
1019 |   dependencies:
1020 |     is-extglob "^2.1.1"
1021 | 
1022 | is-number@^7.0.0:
1023 |   version "7.0.0"
1024 |   resolved "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz"
1025 |   integrity sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==
1026 | 
1027 | is-path-inside@^3.0.3:
1028 |   version "3.0.3"
1029 |   resolved "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz"
1030 |   integrity sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==
1031 | 
1032 | isexe@^2.0.0:
1033 |   version "2.0.0"
1034 |   resolved "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz"
1035 |   integrity "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA= sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw=="
1036 | 
1037 | javascript-natural-sort@0.7.1:
1038 |   version "0.7.1"
1039 |   resolved "https://registry.yarnpkg.com/javascript-natural-sort/-/javascript-natural-sort-0.7.1.tgz#f9e2303d4507f6d74355a73664d1440fb5a0ef59"
1040 |   integrity sha512-nO6jcEfZWQXDhOiBtG2KvKyEptz7RVbpGP4vTD2hLBdmNQSsCiicO2Ioinv6UI4y9ukqnBpy+XZ9H6uLNgJTlw==
1041 | 
1042 | js-tokens@^4.0.0:
1043 |   version "4.0.0"
1044 |   resolved "https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499"
1045 |   integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==
1046 | 
1047 | js-yaml@^4.1.0:
1048 |   version "4.1.0"
1049 |   resolved "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz"
1050 |   integrity sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==
1051 |   dependencies:
1052 |     argparse "^2.0.1"
1053 | 
1054 | jsesc@^2.5.1:
1055 |   version "2.5.2"
1056 |   resolved "https://registry.yarnpkg.com/jsesc/-/jsesc-2.5.2.tgz#80564d2e483dacf6e8ef209650a67df3f0c283a4"
1057 |   integrity sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==
1058 | 
1059 | json-schema-traverse@^0.4.1:
1060 |   version "0.4.1"
1061 |   resolved "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz"
1062 |   integrity sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==
1063 | 
1064 | json-stable-stringify-without-jsonify@^1.0.1:
1065 |   version "1.0.1"
1066 |   resolved "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz"
1067 |   integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==
1068 | 
1069 | levn@^0.4.1:
1070 |   version "0.4.1"
1071 |   resolved "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz"
1072 |   integrity sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==
1073 |   dependencies:
1074 |     prelude-ls "^1.2.1"
1075 |     type-check "~0.4.0"
1076 | 
1077 | locate-path@^6.0.0:
1078 |   version "6.0.0"
1079 |   resolved "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz"
1080 |   integrity sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==
1081 |   dependencies:
1082 |     p-locate "^5.0.0"
1083 | 
1084 | lodash.merge@^4.6.2:
1085 |   version "4.6.2"
1086 |   resolved "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz"
1087 |   integrity sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==
1088 | 
1089 | lodash@^4.17.21:
1090 |   version "4.17.21"
1091 |   resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c"
1092 |   integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
1093 | 
1094 | lru-cache@^6.0.0:
1095 |   version "6.0.0"
1096 |   resolved "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"
1097 |   integrity sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==
1098 |   dependencies:
1099 |     yallist "^4.0.0"
1100 | 
1101 | merge2@^1.3.0, merge2@^1.4.1:
1102 |   version "1.4.1"
1103 |   resolved "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz"
1104 |   integrity sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==
1105 | 
1106 | micromatch@^4.0.4:
1107 |   version "4.0.4"
1108 |   resolved "https://registry.npmjs.org/micromatch/-/micromatch-4.0.4.tgz"
1109 |   integrity sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==
1110 |   dependencies:
1111 |     braces "^3.0.1"
1112 |     picomatch "^2.2.3"
1113 | 
1114 | minimatch@^3.0.4, minimatch@^3.0.5, minimatch@^3.1.2:
1115 |   version "3.1.2"
1116 |   resolved "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz"
1117 |   integrity sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==
1118 |   dependencies:
1119 |     brace-expansion "^1.1.7"
1120 | 
1121 | moment@2.29.4:
1122 |   version "2.29.4"
1123 |   resolved "https://registry.npmjs.org/moment/-/moment-2.29.4.tgz"
1124 |   integrity sha512-5LC9SOxjSc2HF6vO2CyuTDNivEdoz2IvyJJGj6X8DJ0eFyfszE0QiEd+iXmBvUP3WHxSjFH/vIsA0EN00cgr8w==
1125 | 
1126 | ms@2.1.2:
1127 |   version "2.1.2"
1128 |   resolved "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz"
1129 |   integrity sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==
1130 | 
1131 | nanopop@^2.1.0:
1132 |   version "2.1.0"
1133 |   resolved "https://registry.npmjs.org/nanopop/-/nanopop-2.1.0.tgz"
1134 |   integrity sha512-jGTwpFRexSH+fxappnGQtN9dspgE2ipa1aOjtR24igG0pv6JCxImIAmrLRHX+zUF5+1wtsFVbKyfP51kIGAVNw==
1135 | 
1136 | natural-compare@^1.4.0:
1137 |   version "1.4.0"
1138 |   resolved "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz"
1139 |   integrity sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==
1140 | 
1141 | obsidian@latest:
1142 |   version "1.6.6"
1143 |   resolved "https://registry.yarnpkg.com/obsidian/-/obsidian-1.6.6.tgz#d45c4021c291765e1b77ed4a1c645e562ff6e77f"
1144 |   integrity sha512-GZHzeOiwmw/wBjB5JwrsxAZBLqxGQmqtEKSvJJvT0LtTcqeOFnV8jv0ZK5kO7hBb44WxJc+LdS7mZgLXbb+qXQ==
1145 |   dependencies:
1146 |     "@types/codemirror" "5.60.8"
1147 |     moment "2.29.4"
1148 | 
1149 | once@^1.3.0:
1150 |   version "1.4.0"
1151 |   resolved "https://registry.npmjs.org/once/-/once-1.4.0.tgz"
1152 |   integrity "sha1-WDsap3WWHUsROsF9nFC6753Xa9E= sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w=="
1153 |   dependencies:
1154 |     wrappy "1"
1155 | 
1156 | optionator@^0.9.3:
1157 |   version "0.9.4"
1158 |   resolved "https://registry.yarnpkg.com/optionator/-/optionator-0.9.4.tgz#7ea1c1a5d91d764fb282139c88fe11e182a3a734"
1159 |   integrity sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==
1160 |   dependencies:
1161 |     deep-is "^0.1.3"
1162 |     fast-levenshtein "^2.0.6"
1163 |     levn "^0.4.1"
1164 |     prelude-ls "^1.2.1"
1165 |     type-check "^0.4.0"
1166 |     word-wrap "^1.2.5"
1167 | 
1168 | p-limit@^3.0.2:
1169 |   version "3.1.0"
1170 |   resolved "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz"
1171 |   integrity sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==
1172 |   dependencies:
1173 |     yocto-queue "^0.1.0"
1174 | 
1175 | p-locate@^5.0.0:
1176 |   version "5.0.0"
1177 |   resolved "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz"
1178 |   integrity sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==
1179 |   dependencies:
1180 |     p-limit "^3.0.2"
1181 | 
1182 | parent-module@^1.0.0:
1183 |   version "1.0.1"
1184 |   resolved "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz"
1185 |   integrity sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==
1186 |   dependencies:
1187 |     callsites "^3.0.0"
1188 | 
1189 | path-exists@^4.0.0:
1190 |   version "4.0.0"
1191 |   resolved "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz"
1192 |   integrity sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==
1193 | 
1194 | path-is-absolute@^1.0.0:
1195 |   version "1.0.1"
1196 |   resolved "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz"
1197 |   integrity "sha1-F0uSaHNVNP+8es5r9TpanhtcX18= sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg=="
1198 | 
1199 | path-key@^3.1.0:
1200 |   version "3.1.1"
1201 |   resolved "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz"
1202 |   integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
1203 | 
1204 | path-type@^4.0.0:
1205 |   version "4.0.0"
1206 |   resolved "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz"
1207 |   integrity sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==
1208 | 
1209 | picomatch@^2.2.3:
1210 |   version "2.3.0"
1211 |   resolved "https://registry.npmjs.org/picomatch/-/picomatch-2.3.0.tgz"
1212 |   integrity sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==
1213 | 
1214 | prelude-ls@^1.2.1:
1215 |   version "1.2.1"
1216 |   resolved "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz"
1217 |   integrity sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==
1218 | 
1219 | prettier@3.0.2:
1220 |   version "3.0.2"
1221 |   resolved "https://registry.yarnpkg.com/prettier/-/prettier-3.0.2.tgz#78fcecd6d870551aa5547437cdae39d4701dca5b"
1222 |   integrity sha512-o2YR9qtniXvwEZlOKbveKfDQVyqxbEIWn48Z8m3ZJjBjcCmUy3xZGIv+7AkaeuaTr6yPXJjwv07ZWlsWbEy1rQ==
1223 | 
1224 | punycode@^2.1.0:
1225 |   version "2.3.0"
1226 |   resolved "https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz"
1227 |   integrity sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==
1228 | 
1229 | queue-microtask@^1.2.2:
1230 |   version "1.2.3"
1231 |   resolved "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz"
1232 |   integrity sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==
1233 | 
1234 | regexpp@^3.2.0:
1235 |   version "3.2.0"
1236 |   resolved "https://registry.npmjs.org/regexpp/-/regexpp-3.2.0.tgz"
1237 |   integrity sha512-pq2bWo9mVD43nbts2wGv17XLiNLya+GklZ8kaDLV2Z08gDCsGpnKn9BFMepvWuHCbyVvY7J5o5+BVvoQbmlJLg==
1238 | 
1239 | resolve-from@^4.0.0:
1240 |   version "4.0.0"
1241 |   resolved "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz"
1242 |   integrity sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==
1243 | 
1244 | reusify@^1.0.4:
1245 |   version "1.0.4"
1246 |   resolved "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz"
1247 |   integrity sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==
1248 | 
1249 | rimraf@^3.0.2:
1250 |   version "3.0.2"
1251 |   resolved "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz"
1252 |   integrity sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==
1253 |   dependencies:
1254 |     glob "^7.1.3"
1255 | 
1256 | run-parallel@^1.1.9:
1257 |   version "1.2.0"
1258 |   resolved "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz"
1259 |   integrity sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==
1260 |   dependencies:
1261 |     queue-microtask "^1.2.2"
1262 | 
1263 | semver@^7.3.7:
1264 |   version "7.3.8"
1265 |   resolved "https://registry.npmjs.org/semver/-/semver-7.3.8.tgz"
1266 |   integrity sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==
1267 |   dependencies:
1268 |     lru-cache "^6.0.0"
1269 | 
1270 | shebang-command@^2.0.0:
1271 |   version "2.0.0"
1272 |   resolved "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz"
1273 |   integrity sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==
1274 |   dependencies:
1275 |     shebang-regex "^3.0.0"
1276 | 
1277 | shebang-regex@^3.0.0:
1278 |   version "3.0.0"
1279 |   resolved "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz"
1280 |   integrity sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==
1281 | 
1282 | slash@^3.0.0:
1283 |   version "3.0.0"
1284 |   resolved "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz"
1285 |   integrity sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==
1286 | 
1287 | source-map@^0.5.0:
1288 |   version "0.5.7"
1289 |   resolved "https://registry.yarnpkg.com/source-map/-/source-map-0.5.7.tgz#8a039d2d1021d22d1ea14c80d8ea468ba2ef3fcc"
1290 |   integrity sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==
1291 | 
1292 | strip-ansi@^6.0.1:
1293 |   version "6.0.1"
1294 |   resolved "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz"
1295 |   integrity sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==
1296 |   dependencies:
1297 |     ansi-regex "^5.0.1"
1298 | 
1299 | strip-json-comments@^3.1.1:
1300 |   version "3.1.1"
1301 |   resolved "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz"
1302 |   integrity sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==
1303 | 
1304 | supports-color@^5.3.0:
1305 |   version "5.5.0"
1306 |   resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-5.5.0.tgz#e2e69a44ac8772f78a1ec0b35b689df6530efc8f"
1307 |   integrity sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==
1308 |   dependencies:
1309 |     has-flag "^3.0.0"
1310 | 
1311 | supports-color@^7.1.0:
1312 |   version "7.2.0"
1313 |   resolved "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz"
1314 |   integrity sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==
1315 |   dependencies:
1316 |     has-flag "^4.0.0"
1317 | 
1318 | text-table@^0.2.0:
1319 |   version "0.2.0"
1320 |   resolved "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz"
1321 |   integrity sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==
1322 | 
1323 | to-fast-properties@^2.0.0:
1324 |   version "2.0.0"
1325 |   resolved "https://registry.yarnpkg.com/to-fast-properties/-/to-fast-properties-2.0.0.tgz#dc5e698cbd079265bc73e0377681a4e4e83f616e"
1326 |   integrity sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==
1327 | 
1328 | to-regex-range@^5.0.1:
1329 |   version "5.0.1"
1330 |   resolved "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz"
1331 |   integrity sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==
1332 |   dependencies:
1333 |     is-number "^7.0.0"
1334 | 
1335 | tslib@2.4.0:
1336 |   version "2.4.0"
1337 |   resolved "https://registry.yarnpkg.com/tslib/-/tslib-2.4.0.tgz#7cecaa7f073ce680a05847aa77be941098f36dc3"
1338 |   integrity sha512-d6xOpEDfsi2CZVlPQzGeux8XMwLT9hssAsaPYExaQMuYskwb+x1x7J371tWlbBdWHroy99KnVB6qIkUbs5X3UQ==
1339 | 
1340 | tslib@^1.8.1:
1341 |   version "1.14.1"
1342 |   resolved "https://registry.npmjs.org/tslib/-/tslib-1.14.1.tgz"
1343 |   integrity sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV/0E4EyYn43P7/7qvQwPh9BGkHewbMulVntbigmcT7rdX3BNo9wRJg==
1344 | 
1345 | tsutils@^3.21.0:
1346 |   version "3.21.0"
1347 |   resolved "https://registry.npmjs.org/tsutils/-/tsutils-3.21.0.tgz"
1348 |   integrity sha512-mHKK3iUXL+3UF6xL5k0PEhKRUBKPBCv/+RkEOpjRWxxx27KKRBmmA60A9pgOUvMi8GKhRMPEmjBRPzs2W7O1OA==
1349 |   dependencies:
1350 |     tslib "^1.8.1"
1351 | 
1352 | type-check@^0.4.0, type-check@~0.4.0:
1353 |   version "0.4.0"
1354 |   resolved "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz"
1355 |   integrity sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==
1356 |   dependencies:
1357 |     prelude-ls "^1.2.1"
1358 | 
1359 | type-fest@^0.20.2:
1360 |   version "0.20.2"
1361 |   resolved "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz"
1362 |   integrity sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==
1363 | 
1364 | typescript@4.7.4:
1365 |   version "4.7.4"
1366 |   resolved "https://registry.yarnpkg.com/typescript/-/typescript-4.7.4.tgz#1a88596d1cf47d59507a1bcdfb5b9dfe4d488235"
1367 |   integrity sha512-C0WQT0gezHuw6AdY1M2jxUO83Rjf0HP7Sk1DtXj6j1EwkQNZrHAg2XPWlq62oqEhYvONq5pkC2Y9oPljWToLmQ==
1368 | 
1369 | uri-js@^4.2.2:
1370 |   version "4.4.1"
1371 |   resolved "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz"
1372 |   integrity sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==
1373 |   dependencies:
1374 |     punycode "^2.1.0"
1375 | 
1376 | which@^2.0.1:
1377 |   version "2.0.2"
1378 |   resolved "https://registry.npmjs.org/which/-/which-2.0.2.tgz"
1379 |   integrity sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==
1380 |   dependencies:
1381 |     isexe "^2.0.0"
1382 | 
1383 | word-wrap@^1.2.5:
1384 |   version "1.2.5"
1385 |   resolved "https://registry.yarnpkg.com/word-wrap/-/word-wrap-1.2.5.tgz#d2c45c6dd4fbce621a66f136cbe328afd0410b34"
1386 |   integrity sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==
1387 | 
1388 | wrappy@1:
1389 |   version "1.0.2"
1390 |   resolved "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz"
1391 |   integrity "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8= sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
1392 | 
1393 | yallist@^4.0.0:
1394 |   version "4.0.0"
1395 |   resolved "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"
1396 |   integrity sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==
1397 | 
1398 | yocto-queue@^0.1.0:
1399 |   version "0.1.0"
1400 |   resolved "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz"
1401 |   integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==
1402 | 


--------------------------------------------------------------------------------
